<codestructure version="5.14">
<phptree>
<treenode node="abitur-web;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\db_config.php;f21;28;31;28;;;;vpos;;v;;r&apos;abitur-web&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="abiturweb2;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\1c_config.php;f21;27;31;27;;;;vpos;;v;;r&apos;abiturweb2&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ac-admin;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\db_config.php;f21;20;29;20;;;;vpos;;v;;r&apos;ac-admin&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ACTION;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\bootstrap.php;f8;115;14;115;;;;vpos;;v;;r$actionName;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ADRREG;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_.php;f8;6;14;6;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f8;6;14;6;;;;vpos;;v;;rarray(&#10;     &apos;name&apos; =&gt; &apos;Адрес регистрации&apos;,&#10;     &apos;plc&apos; =&gt; &apos;Индекс, Область, Район, Город или Населённый пункт, Улица, Дом, Корпус, Квартира&apos;,&#10;     &apos;help&apos; =&gt; &apos;Адрес регистрации должно содержать &lt;strong&gt;&apos;.MSG_INFO_RUS.&apos;&lt;/strong&gt;, и быть не более &lt;strong&gt;255&lt;/strong&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ADRRES;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f8;10;14;10;;;;vpos;;v;;rarray(&#10;     &apos;name&apos; =&gt; &apos;Адрес проживания&apos;,&#10;     &apos;plc&apos; =&gt; &apos;Индекс, Область, Район, Город или Населённый пункт, Улица, Дом, Корпус, Квартира&apos;,&#10;     &apos;help&apos; =&gt; &apos;Адрес проживания должно содержать &lt;strong&gt;&apos;.MSG_INFO_RUS.&apos;&lt;/strong&gt;, и быть не более &lt;strong&gt;255&lt;/strong&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="APP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;60;11;60;;;;vpos;;v;;rarray(&apos;id&apos; =&gt; &apos;form_app&apos;,&#10;					&apos;hdr&apos; =&gt; &apos;Заявление&apos;,&#10;					&apos;ctr&apos; =&gt; &apos;Application&apos;,&#10;					&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="APP_CODE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\index_new.php;f8;3;16;3;;C:\wamp\wamp64\www\vhost_portalbsu\index_old.php;f8;3;16;3;;C:\wamp\wamp64\www\vhost_portalbsu\index.php;f8;3;16;3;;;;vpos;;v;;r&apos;portalbsu&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="APP_DATA;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\index_old.php;f8;5;16;5;;C:\wamp\wamp64\www\vhost_portalbsu\index.php;f8;5;16;5;;;;vpos;;v;;r&apos;main&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="APP_DEVELOPER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\index_new.php;f8;5;21;5;;;;vpos;;v;;r&apos;Никитин Олег Сергеевич&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="APP_DEVELOPER_EMAIL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\index_new.php;f8;7;27;7;;;;vpos;;v;;r&apos;nikitin_o@bsu.edu.ru&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="APP_DEVELOPER_PHONE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\index_new.php;f8;6;27;6;;;;vpos;;v;;r&apos;8(903) 578-31-62&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="APP_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\index_new.php;f8;2;16;2;;C:\wamp\wamp64\www\vhost_portalbsu\index_old.php;f8;2;16;2;;C:\wamp\wamp64\www\vhost_portalbsu\index.php;f8;2;16;2;;;;vpos;;v;;r&apos;Личный кабинет абитуриента&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="APP_VERSION;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\index_new.php;f8;4;19;4;;C:\wamp\wamp64\www\vhost_portalbsu\index_old.php;f8;4;19;4;;C:\wamp\wamp64\www\vhost_portalbsu\index.php;f8;4;19;4;;;;vpos;;v;;r&apos;0.5.3&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="avitsena159;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\1c_config.php;f25;22;36;22;;;;vpos;;v;;r&apos;avitsena159&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="BASEPATH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\index_new.php;f8;91;16;91;;C:\wamp\wamp64\www\vhost_portalbsu\index_old.php;f8;82;16;82;;C:\wamp\wamp64\www\vhost_portalbsu\index.php;f8;109;16;109;;;;vpos;;v;;r&apos;http://&apos;.$_SERVER[&apos;SERVER_NAME&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="BEHAVIOR;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\bootstrap.php;f8;59;16;59;;;;vpos;;v;;r$behavior;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="BIRTHPLACE_HELP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;9;23;9;;;;vpos;;v;;r&apos;Место рождения должно содержать &lt;strong&gt;&apos;.MSG_TEXT_RUS.&apos;&lt;/strong&gt;, и быть не более &lt;strong&gt;240&lt;/strong&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="BIRTHPLACE_PLC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;14;22;14;;;;vpos;;v;;r&apos;Место рождения&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="bsu-web03;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\db_config.php;f21;19;30;19;;;;vpos;;v;;r&apos;bsu-web03&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAPTCHA_LEN;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\captcha_helper.php;f8;4;19;4;;;;vpos;;v;;r6;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAS_CONTEXT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\cas_config.php;f8;14;19;14;;;;vpos;;v;;r&apos;/cas&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAS_DOMAIN;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\cas_config.php;f8;4;18;4;;;;vpos;;v;;r&apos;bsu.edu.ru&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAS_Exception;PHP:Interface Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Exception.php;f0;54;1;57;;;;vpos;;v;;r&#10;Definition&#10;    interface CAS_Exception&#10;&#10;Description&#10;     A root exception interface for all exceptions in phpCAS.;;d0,55;;b0,0;;m">
</treenode>
<treenode node="CAS_HOST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\cas_config.php;f8;11;16;11;;;;vpos;;v;;r&apos;auth.bsu.edu.ru&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAS_Languages_LanguageInterface;PHP:Interface Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\LanguageInterface.php;f0;43;1;94;;;;vpos;;v;;r&#10;Definition&#10;    interface CAS_Languages_LanguageInterface&#10;&#10;Description&#10;     Language Interface class for all internationalization files;;d0,44;;b0,0;;m">
<treenode node="getAuthenticationFailed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\LanguageInterface.php;f11;78;45;78;;;;vpos;;vstring;;r&#10;Description&#10;     Get authentication failed string&#10;&#10;Return:&#10;   authentication failed;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\LanguageInterface.php;f11;57;45;57;;;;vpos;;vstring;;r&#10;Description&#10;     Get authentication wanted string&#10;&#10;Return:&#10;   authentication wanted;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\LanguageInterface.php;f11;64;31;64;;;;vpos;;vstring;;r&#10;Description&#10;     Get logout string&#10;&#10;Return:&#10;   logout;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\LanguageInterface.php;f11;92;43;92;;;;vpos;;vstring;;r&#10;Description&#10;     Get the service unavailable string&#10;&#10;Return:&#10;   service unavailable;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\LanguageInterface.php;f11;71;49;71;;;;vpos;;vstring;;r&#10;Description&#10;     Get the should have been redirected string&#10;&#10;Return:&#10;   should habe been redirected;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\LanguageInterface.php;f11;50;36;50;;;;vpos;;vstring;;r&#10;Description&#10;     Get the using server string&#10;&#10;Return:&#10;   using server;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\LanguageInterface.php;f11;85;48;85;;;;vpos;;vstring;;r&#10;Description&#10;     Get the your were not authenticated string&#10;&#10;Return:&#10;   not authenticated;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_PGT_STORAGE_DB_DEFAULT_TABLE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f8;29;40;29;;;;vpos;;v;;r&#10;Description&#10;     Licensed to Jasig under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAS_PGT_STORAGE_FILE_DEFAULT_PATH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;154;41;154;;;;vpos;;v;;r&#10;Description&#10;     Default path used when storing PGT&apos;s to file;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAS_PORT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\cas_config.php;f8;17;16;17;;;;vpos;;v;;r443;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAS_ProxiedService;PHP:Interface Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService.php;f0;46;1;70;;;;vpos;;v;;r&#10;Definition&#10;    interface CAS_ProxiedService&#10;&#10;Description&#10;     This interface defines methods that allow proxy-authenticated service handlers to interact with phpCAS.;;d0,47;;b0,0;;m">
<treenode node="getServiceUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService.php;f11;55;36;55;;;;vpos;;vstring;;r&#10;Description&#10;     Answer a service identifier (URL) for whom we should fetch a proxy ticket.;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="setProxyTicket;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService.php;f11;68;49;68;;;;vpos;;vvoid;;r&#10;Description&#10;     Register a proxy ticket with the ProxiedService that it can use when making requests.&#10;&#10;Parameters:&#10;    string $proxyTicket - Proxy ticket string;;d-1,-1;;b1,0;;mstring $proxyTicket;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Http;PHP:Interface Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http.php;f0;40;1;89;;;;vpos;;v;;r&#10;Definition&#10;    interface CAS_ProxiedService_Http&#10;&#10;Description&#10;     This interface defines methods that clients should use for configuring, sending, and receiving proxied HTTP requests.;;d0,41;;b0,0;;m">
<treenode node="getResponseBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http.php;f11;87;38;87;;;;vpos;;vstring;;r&#10;Description&#10;     Answer the body of response.;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getResponseHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http.php;f11;79;41;79;;;;vpos;;varray;;r&#10;Description&#10;     Answer the headers of the response.&#10;&#10;Return:&#10;   An array of header strings;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http.php;f11;67;27;67;;;;vpos;;vbool;;r&#10;Description&#10;     Perform the request.&#10;&#10;Return:&#10;   TRUE on success, FALSE on failure;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="setUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http.php;f11;55;33;55;;;;vpos;;vvoid;;r&#10;Description&#10;     Set the URL of the Request&#10;&#10;Parameters:&#10;    string $url - Url to set;;d-1,-1;;b1,0;;mstring $url;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Testable;PHP:Interface Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Testable.php;f0;55;1;73;;;;vpos;;v;;r&#10;Definition&#10;    interface CAS_ProxiedService_Testable&#10;&#10;Description&#10;     This interface defines methods that allow proxy-authenticated service handlers to be tested in unit tests.;;d0,56;;b0,0;;m">
<treenode node="setCasClient;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Testable.php;f11;71;56;71;;;;vpos;;vvoid;;r&#10;Description&#10;     Use a particular CAS_Client-&gt;initializeProxiedService() rather than the static phpCAS::initializeProxiedService().&#10;&#10;Parameters:&#10;    CAS_Client $casClient - Cas client object;;d-1,-1;;b1,0;;mCAS_Client $casClient;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxyChain_Interface;PHP:Interface Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\Interface.php;f0;40;1;52;;;;vpos;;v;;r&#10;Definition&#10;    interface CAS_ProxyChain_Interface&#10;&#10;Description&#10;     An interface for classes that define a list of allowed proxies in front of the current application.;;d0,41;;b0,0;;m">
<treenode node="matches;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\Interface.php;f11;50;40;50;;;;vpos;;vbool;;r&#10;Description&#10;     Match a list of proxies.&#10;&#10;Parameters:&#10;    array $list - The list of proxies in front of this service;;d-1,-1;;b1,0;;marray $list;;p">
</treenode>
</treenode>
<treenode node="CAS_Request_MultiRequestInterface;PHP:Interface Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\MultiRequestInterface.php;f0;41;1;82;;;;vpos;;v;;r&#10;Definition&#10;    interface CAS_Request_MultiRequestInterface&#10;&#10;Description&#10;     This interface defines a class library for performing multiple web requests in batches. Implementations of this interface may perform requests serially or in parallel.;;d0,42;;b0,0;;m">
<treenode node="addRequest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\MultiRequestInterface.php;f11;61;70;61;;;;vpos;;vvoid;;r&#10;Description&#10;     Add a new Request to this batch. Note, implementations will likely restrict requests to their own concrete class hierarchy.&#10;&#10;Parameters:&#10;    CAS_Request_RequestInterface $request - request interface;;d-1,-1;;b1,0;;mCAS_Request_RequestInterface $request;;p">
</treenode>
<treenode node="getNumRequests;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\MultiRequestInterface.php;f11;68;37;68;;;;vpos;;vnumber;;r&#10;Description&#10;     Retrieve the number of requests added to this batch.&#10;&#10;Return:&#10;   of request elements;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\MultiRequestInterface.php;f11;81;27;81;;;;vpos;;vbool;;r&#10;Description&#10;     Perform the request. After sending, all requests will have their responses poulated.&#10;&#10;Return:&#10;   TRUE on success, FALSE on failure;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_Request_RequestInterface;PHP:Interface Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f0;39;1;178;;;;vpos;;v;;r&#10;Definition&#10;    interface CAS_Request_RequestInterface&#10;&#10;Description&#10;     This interface defines a class library for performing web requests.;;d0,40;;b0,0;;m">
<treenode node="addCookie;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;65;45;65;;;;vpos;;vvoid;;r&#10;Description&#10;     Add a cookie to the request.&#10;&#10;Parameters:&#10;    string $name - name of cookie&#10;    string $value - value of cookie;;d-1,-1;;b1,0;;mstring $name;;pstring $value;;p">
</treenode>
<treenode node="addCookies;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;77;47;77;;;;vpos;;vvoid;;r&#10;Description&#10;     Add an array of cookies to the request. The cookie array is of the form array(&apos;cookie_name&apos; =&gt; &apos;cookie_value&apos;, &apos;cookie_name2&apos; =&gt; cookie_value2&apos;)&#10;&#10;Parameters:&#10;    array $cookies - cookies to add;;d-1,-1;;b1,0;;marray $cookies;;p">
</treenode>
<treenode node="addHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;87;39;87;;;;vpos;;vvoid;;r&#10;Description&#10;     Add a header string to the request.&#10;&#10;Parameters:&#10;    string $header - header to add;;d-1,-1;;b1,0;;mstring $header;;p">
</treenode>
<treenode node="addHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;97;47;97;;;;vpos;;vvoid;;r&#10;Description&#10;     Add an array of header strings to the request.&#10;&#10;Parameters:&#10;    array $headers - headers to add;;d-1,-1;;b1,0;;marray $headers;;p">
</treenode>
<treenode node="getErrorMessage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;177;38;177;;;;vpos;;vstring;;r&#10;Description&#10;     Answer a message describing any errors if the request failed.;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getResponseBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;169;38;169;;;;vpos;;vstring;;r&#10;Description&#10;     Answer the body of response.;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getResponseHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;153;41;153;;;;vpos;;varray;;r&#10;Description&#10;     Answer the headers of the response.&#10;&#10;Return:&#10;   An array of header strings;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getResponseStatusCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;161;44;161;;;;vpos;;vint;;r&#10;Description&#10;     Answer HTTP status code of the response;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="makePost;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;105;31;105;;;;vpos;;vvoid;;r&#10;Description&#10;     Make the request a POST request rather than the default GET request.;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;141;27;141;;;;vpos;;vbool;;r&#10;Description&#10;     Perform the request.&#10;&#10;Return:&#10;   TRUE on success, FALSE on failure;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="setPostBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;115;39;115;;;;vpos;;vvoid;;r&#10;Description&#10;     Add a POST body to the request&#10;&#10;Parameters:&#10;    string $body - body to add;;d-1,-1;;b1,0;;mstring $body;;p">
</treenode>
<treenode node="setSslCaCert;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;127;67;127;;;;vpos;;vvoid;;r&#10;Description&#10;     Specify the path to an SSL CA certificate to validate the server with.&#10;&#10;Parameters:&#10;    string $caCertPath - path to cert file&#10;    boolean $validate_cn - validate CN of SSL certificate;;d-1,-1;;b1,0;;mstring $caCertPath;;pboolean $validate_cn;;p">
</treenode>
<treenode node="setUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;54;33;54;;;;vpos;;vvoid;;r&#10;Description&#10;     Set the URL of the Request&#10;&#10;Parameters:&#10;    string $url - url to set;;d-1,-1;;b1,0;;mstring $url;;p">
</treenode>
</treenode>
<treenode node="CAS_VERSION_1_0;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;73;23;73;;;;vpos;;v;;r&#10;Description&#10;     CAS version 1.0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAS_VERSION_2_0;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;77;23;77;;;;vpos;;v;;r&apos;2.0&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAS_VERSION_3_0;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;81;23;81;;;;vpos;;v;;r&#10;Description&#10;     CAS version 3.0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CONTACT_EMAIL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;6;21;6;;;;vpos;;v;;rarray(&#10;       &apos;name&apos; =&gt; &apos;Адрес эл. почты&apos;,&#10;       &apos;plc&apos; =&gt; &apos;user@domain&apos;,&#10;       &apos;help&apos; =&gt; &apos;Адрес электронной почты должен быть &lt;strong&gt;&apos;.MSG_EMAIL_LIGHT.&apos;&lt;/strong&gt;, содержать &lt;strong&gt;&apos;.MSG_ALPHA.&apos;&lt;/strong&gt; и не более &lt;b&gt;45&lt;/b&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CONTACT_PHONE_ADD;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;14;25;14;;;;vpos;;v;;rarray(&#10;         &apos;name&apos; =&gt; &apos;Номер дополнительного телефона&apos;,&#10;         &apos;plc&apos; =&gt; &apos;89031234567 Папа, 89101234567 Мама&apos;,&#10;         &apos;help&apos; =&gt; &apos;Номер дополнительного телефона должен содержать &lt;strong&gt;&apos;.MSG_PHONE_ADD.&apos;&lt;/strong&gt; и быть не более &lt;strong&gt;45&lt;/strong&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CONTACT_PHONE_HOME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;10;26;10;;;;vpos;;v;;rarray(&#10;         &apos;name&apos; =&gt; &apos;Номер домашнего телефона&apos;,&#10;         &apos;plc&apos; =&gt; &apos;код города12345&apos;,&#10;         &apos;help&apos; =&gt; &apos;Номер домашнего телефона должен содержать &lt;strong&gt;&apos;.MSG_NUMB.&apos;&lt;/strong&gt; и быть не более &lt;strong&gt;45&lt;/strong&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CONTROLLER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\bootstrap.php;f8;109;18;109;;;;vpos;;v;;r$controllerName;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DATAMATRIXDEFS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f9;51;23;51;;;;vpos;;v;;r&#10;Description&#10;     Indicate that definitions for this class are set;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DB_HOST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\db_config.php;f10;13;17;13;;;;vpos;;v;;r&apos;localhost&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DB_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\db_config.php;f10;16;17;16;;;;vpos;;v;;r&apos;portalbsu&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DB_PASSWORD;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\db_config.php;f10;15;21;15;;;;vpos;;v;;r&apos;&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DB_TABLES;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\db_config.php;f8;39;17;39;;;;vpos;;v;;rarray(&#10;						&apos;address&apos;,&#10;						&apos;admission_campaign&apos;,&#10;						&apos;application&apos;,&#10;						&apos;application_achievs&apos;,&#10;						&apos;application_places&apos;,&#10;						&apos;application_places_exams&apos;,&#10;						&apos;application_status&apos;,&#10;						&apos;contacts&apos;,&#10;						&apos;dict_countries&apos;,&#10;						&apos;dict_discipline&apos;,&#10;						&apos;dict_docships&apos;,&#10;						&apos;dict_doctypes&apos;,&#10;						&apos;dict_educforms&apos;,&#10;						&apos;dict_educlevels&apos;,&#10;						&apos;dict_eductypes&apos;,&#10;						&apos;dict_ege&apos;,&#10;						&apos;dict_entrance_exams&apos;,&#10;						&apos;dict_finances&apos;,&#10;						&apos;dict_foreign_langs&apos;,&#10;						&apos;dict_ind_achievs&apos;,&#10;						&apos;dict_ind_achievs_ac&apos;,&#10;						&apos;dictionary_manager&apos;,&#10;						&apos;dictionary_manager_log&apos;,&#10;						&apos;dict_scans&apos;,&#10;						&apos;dict_speciality&apos;,&#10;						&apos;dict_testing_scopes&apos;,&#10;						&apos;dict_university&apos;,&#10;						&apos;docs&apos;,&#10;						&apos;docs_educ&apos;,&#10;						&apos;educlevels_doctypes&apos;,&#10;						&apos;eductypes_doctypes&apos;,&#10;						&apos;ege&apos;,&#10;						&apos;ege_disciplines&apos;,&#10;						&apos;foreign_langs&apos;,&#10;						&apos;ind_achievs&apos;,&#10;						&apos;kladr&apos;,&#10;						&apos;kladr_abbrs&apos;,&#10;						&apos;passport&apos;,&#10;						&apos;personal&apos;,&#10;						&apos;resume&apos;,&#10;						&apos;scans&apos;,&#10;						&apos;translate_langs&apos;,&#10;						&apos;user&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DB_USER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\db_config.php;f10;14;17;14;;;;vpos;;v;;r&apos;root&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DEFAULT_DEBUG_DIR;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;253;25;253;;;;vpos;;v;;rgettmpdir(;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DEFAULT_ERROR;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;141;21;141;;;;vpos;;v;;r&#10;Description&#10;     SAML Attributes;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DICT_COUNTRIES;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;86;22;86;;;;vpos;;v;;rarray(&apos;id&apos; =&gt; &apos;form_dict_countries&apos;,&#10;								&apos;hdr&apos; =&gt; &apos;Страна мира&apos;,&#10;								&apos;ctr&apos; =&gt; &apos;DictCountries&apos;,&#10;								&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DICT_EGE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;107;16;107;;;;vpos;;v;;rarray(&#10;						&apos;id&apos; =&gt; &apos;form_dict_ege&apos;,&#10;						&apos;hdr&apos; =&gt; &apos;Дисциплина ЕГЭ&apos;,&#10;						&apos;ctr&apos; =&gt; &apos;DictEge&apos;,&#10;						&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DICT_MANAGER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;81;20;81;;;;vpos;;v;;rarray(&apos;id&apos; =&gt; &apos;form_dict_manager&apos;,&#10;							&apos;hdr&apos; =&gt; &apos;Управление справочниками&apos;,&#10;							&apos;ctr&apos; =&gt; &apos;DictionaryManager&apos;,&#10;							&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DICT_SCANS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;96;18;96;;;;vpos;;v;;rarray(&apos;id&apos; =&gt; &apos;form_dict_scans&apos;,&#10;							&apos;hdr&apos; =&gt; &apos;Скан-копия&apos;,&#10;							&apos;ctr&apos; =&gt; &apos;DictScans&apos;,&#10;							&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DICT_UNIVERSITY;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;101;23;101;;;;vpos;;v;;rarray(&#10;								&apos;id&apos; =&gt; &apos;form_dict_university&apos;,&#10;								&apos;hdr&apos; =&gt; &apos;Место поступления&apos;,&#10;								&apos;ctr&apos; =&gt; &apos;DictUniversity&apos;,&#10;								&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DOCS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;91;12;91;;;;vpos;;v;;rarray(&apos;id&apos; =&gt; &apos;form_docs&apos;,&#10;					&apos;hdr&apos; =&gt; &apos;Документ&apos;,&#10;					&apos;ctr&apos; =&gt; &apos;Docs&apos;,&#10;					&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DOCS_EDUC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;40;17;40;;;;vpos;;v;;rarray(&apos;id&apos; =&gt; &apos;form_docseduc&apos;,&#10;						&apos;hdr&apos; =&gt; &apos;Документ об образовании&apos;,&#10;						&apos;ctr&apos; =&gt; &apos;DocsEduc&apos;,&#10;						&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="E_USER_DEPRECATED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f12;48;29;48;;;;vpos;;v;;rE_USER_NOTICE;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="EDUCLEVELS_DOCTYPES;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;113;27;113;;;;vpos;;v;;rarray(&apos;id&apos; =&gt; &apos;form_educlevels_doctypes&apos;,&#10;									&apos;hdr&apos; =&gt; &apos;Связь документов с уровнями подготовки&apos;,&#10;									&apos;ctr&apos; =&gt; &apos;EduclevelsDoctypes&apos;,&#10;									&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="EDUCTYPES_DOCTYPES;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;118;26;118;;;;vpos;;v;;rarray(&apos;id&apos; =&gt; &apos;form_eductypes_doctypes&apos;,&#10;									&apos;hdr&apos; =&gt; &apos;Связь документов с видами образования&apos;,&#10;									&apos;ctr&apos; =&gt; &apos;EductypesDoctypes&apos;,&#10;									&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="EGE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;45;11;45;;;;vpos;;v;;rarray(&apos;id&apos; =&gt; &apos;form_ege&apos;,&#10;					&apos;hdr&apos; =&gt; &apos;Результаты ЕГЭ&apos;,&#10;					&apos;ctr&apos; =&gt; &apos;Ege&apos;,&#10;					&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="EGE_DSP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;50;15;50;;;;vpos;;v;;rarray(&apos;id&apos; =&gt; &apos;form_egedsp&apos;,&#10;						&apos;hdr&apos; =&gt; &apos;Дисциплина ЕГЭ&apos;,&#10;						&apos;ctr&apos; =&gt; &apos;EgeDisciplines&apos;,&#10;						&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="EMAIL_HELP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;7;18;7;;;;vpos;;v;;r&apos;Адрес электронной почты должен быть &lt;strong&gt;&apos;.MSG_EMAIL_LIGHT.&apos;&lt;/strong&gt;, содержать &lt;strong&gt;&apos;.MSG_ALPHA.&apos;&lt;/strong&gt; и не более &lt;strong&gt;45&lt;/strong&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="EMAIL_PLC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;12;17;12;;;;vpos;;v;;r&apos;user@domain&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ENC_ASCII;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f8;63;17;63;;;;vpos;;v;;r&#10;Description&#10;     ASCII encoding: ASCII character 0 to 127 (1 byte per CW);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ENC_ASCII_EXT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f8;93;21;93;;;;vpos;;v;;r&#10;Description&#10;     ASCII extended encoding: ASCII character 128 to 255 (1/2 byte per CW);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ENC_ASCII_NUM;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f8;98;21;98;;;;vpos;;v;;r&#10;Description&#10;     ASCII number encoding: ASCII digits (2 bytes per CW);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ENC_BASE256;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f8;88;19;88;;;;vpos;;v;;r&#10;Description&#10;     BASE 256 encoding: ASCII character 0 to 255 (1 byte per CW);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ENC_C40;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f8;68;15;68;;;;vpos;;v;;r&#10;Description&#10;     C40 encoding: Upper-case alphanumeric (3/2 bytes per CW);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ENC_EDF;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f8;83;15;83;;;;vpos;;v;;r&#10;Description&#10;     EDIFACT encoding: ASCII character 32 to 94 (4/3 bytes per CW);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ENC_TXT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f8;73;15;73;;;;vpos;;v;;r&#10;Description&#10;     TEXT encoding: Lower-case alphanumeric (3/2 bytes per CW);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ENC_X12;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f8;78;15;78;;;;vpos;;v;;r&#10;Description&#10;     X12 encoding: ANSI X12 (3/2 byte per CW);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ENVIRONMENT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\bootstrap.php;f8;67;19;67;;;;vpos;;v;;r$environment;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FILES_EXT_SCANS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\files_config.php;f8;16;23;16;;;;vpos;;v;;r[&#10;       &apos;jpg&apos; =&gt; &apos;image/jpeg&apos;,&#10;       &apos;png&apos; =&gt; &apos;image/png&apos;,&#10;       &apos;gif&apos; =&gt; &apos;image/gif&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FILES_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\files_config.php;f8;22;18;22;;;;vpos;;v;;r45;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FILES_SIZE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\files_config.php;f8;14;18;14;;;;vpos;;v;;r[&apos;size&apos; =&gt; &apos;MB&apos;, &apos;value&apos; =&gt; 2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FILES_TEMP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\file_config.php;f8;11;18;11;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\files_config.php;f8;12;18;12;;;;vpos;;v;;rROOT_DIR.&apos;/files/temp/&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FIRSTNAME_HELP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;6;22;6;;;;vpos;;v;;r&apos;Имя должно содержать &lt;strong&gt;&apos;.MSG_ALPHA_RUS.&apos;&lt;/strong&gt;, и быть не более &lt;strong&gt;50&lt;/strong&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FIRSTNAME_PLC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;11;21;11;;;;vpos;;v;;r&apos;Имя&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="fSIGNUP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;20;15;20;;;;vpos;;v;;rarray(&apos;id&apos; =&gt; &apos;form_signup&apos;,&#10;						&apos;hdr&apos; =&gt; &apos;Регистрация&apos;,&#10;						&apos;ctr&apos; =&gt; &apos;Signup&apos;,&#10;						&apos;act&apos; =&gt; &apos;Signup&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="HEAD_MAGNIFICATION;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f8;186;26;186;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f8;186;26;186;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f9;207;27;207;;;;vpos;;v;;r&#10;Description&#10;     Magnification factor for titles.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="http://s21.bsu.edu.ru/priem_test/odata/standard.odata;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\1c_config.php;f22;19;75;19;;;;vpos;;v;;r&apos;http://s21.bsu.edu.ru/priem_test/odata/standard.odata&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="http://s21.bsu.edu.ru/priem_test/ws/WebAbit.1cws?wsdl;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\1c_config.php;f21;20;74;20;;;;vpos;;v;;r&apos;http://s21.bsu.edu.ru/priem_test/ws/WebAbit.1cws?wsdl&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="https://info.bsu.edu.ru:8443/University_PK/odata/standard.odata;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\1c_config.php;f22;25;85;25;;;;vpos;;v;;r&apos;https://info.bsu.edu.ru:8443/University_PK/odata/standard.odata&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="https://info.bsu.edu.ru:8443/University_PK/ws/ws1.1cws?wsdl;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\1c_config.php;f21;26;80;26;;;;vpos;;v;;r&apos;https://info.bsu.edu.ru:8443/University_PK/ws/ws1.1cws?wsdl&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IND_ACHIEVS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;55;19;55;;;;vpos;;v;;rarray(&apos;id&apos; =&gt; &apos;form_indachievs&apos;,&#10;							&apos;hdr&apos; =&gt; &apos;Индивидуальное достижение&apos;,&#10;							&apos;ctr&apos; =&gt; &apos;IndAchievs&apos;,&#10;							&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="K_BLANK_IMAGE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;86;22;86;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;86;22;86;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;127;23;127;;;;vpos;;v;;r&#10;Description&#10;     Generic name for a blank image.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="K_CELL_HEIGHT_RATIO;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f8;191;27;191;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f8;191;27;191;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f9;211;28;211;;;;vpos;;v;;r&#10;Description&#10;     Height of cell respect font height.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="K_PATH_CACHE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;81;21;81;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;123;22;123;;;;vpos;;v;;r&#10;Description&#10;     Cache directory for temporary files (full path).;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="K_PATH_FONTS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;75;22;75;;;;vpos;;v;;rK_PATH_MAIN.&apos;fonts/&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="K_PATH_IMAGES;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;65;22;65;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f12;96;25;96;;;;vpos;;v;;r&#10;Description&#10;     Default images directory. By default it is automatically set but you can also set it as a fixed string to improve performances.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="K_PATH_MAIN;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;71;21;71;;;;vpos;;v;;rdirname(__FILE__;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="K_PATH_URL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;89;20;89;;;;vpos;;v;;r$k_path_url;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="K_SMALL_RATIO;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f8;201;21;201;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f8;201;21;201;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f9;219;22;219;;;;vpos;;v;;r&#10;Description&#10;     Reduction factor for small font.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="K_TCPDF_CALLS_IN_HTML;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f8;212;29;212;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f8;212;29;212;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f9;227;30;227;;;;vpos;;v;;r&#10;Description&#10;     If true allows to call TCPDF methods using HTML syntax IMPORTANT: For security reason, disable this feature if you are printing user HTML content.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="K_TCPDF_EXTERNAL_CONFIG;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;41;32;41;;;;vpos;;v;;r&#10;Description&#10;     Define the following constant to ignore the default configuration file.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="K_TCPDF_THROW_EXCEPTION_ERROR;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f8;217;37;217;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f8;217;37;217;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f9;231;38;231;;;;vpos;;v;;r&#10;Description&#10;     If true and PHP version is greater than 5, then the Error() method throw new exception instead of terminating the execution.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="K_THAI_TOPCHARS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f8;206;23;206;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f8;206;23;206;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f9;223;24;223;;;;vpos;;v;;r&#10;Description&#10;     Set to true to enable the special procedure used to avoid the overlappind of symbols on Thai language.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="K_TIMEZONE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f8;222;18;222;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f9;235;19;235;;;;vpos;;v;;r&#10;Description&#10;     Default timezone for datetime functions;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="K_TITLE_MAGNIFICATION;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f8;196;29;196;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f8;196;29;196;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f9;215;30;215;;;;vpos;;v;;r&#10;Description&#10;     Title magnification respect main font size.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LASTNAME_HELP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;8;21;8;;;;vpos;;v;;r&apos;Фамилия должна содержать &lt;strong&gt;&apos;.MSG_ALPHA_RUS.&apos;&lt;/strong&gt;, и быть не более &lt;strong&gt;50&lt;/strong&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LASTNAME_PLC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;13;20;13;;;;vpos;;v;;r&apos;Фамилия&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="localhost;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\db_config.php;f21;31;30;31;;;;vpos;;v;;r&apos;localhost&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LOGIN;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;13;13;13;;;;vpos;;v;;rarray(&apos;id&apos; =&gt; &apos;form_login&apos;,&#10;					&apos;hdr&apos; =&gt; &apos;Авторизация&apos;,&#10;					&apos;ctr&apos; =&gt; &apos;Login&apos;,&#10;					&apos;act&apos; =&gt; &apos;Login&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LOGON;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\bootstrap.php;f8;95;13;95;;;;vpos;;v;;r$logon;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAIL_DOMAIN;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;26;19;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAIL_FROM;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;15;17;15;;;;vpos;;v;;r&apos;nikitin_o@bsu.edu.ru&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAIL_FROM_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;16;22;16;;;;vpos;;v;;r&apos;Admin&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAIL_HOST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;11;17;11;;;;vpos;;v;;r&apos;mail.bsu.edu.ru&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAIL_PASSWORD;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;13;21;13;;;;vpos;;v;;r&apos;153043qaz&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAIL_PORT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;14;17;14;;;;vpos;;v;;r25;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAIL_REPLY;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;17;18;17;;;;vpos;;v;;r&apos;nikitin_o@bsu.edu.ru&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAIL_REPLY_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;18;23;18;;;;vpos;;v;;r&apos;Admin&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAIL_USER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;12;17;12;;;;vpos;;v;;r&apos;nikitin_o@bsu.edu.ru&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAX_STRUCTURED_SYMBOLS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;200;34;200;;;;vpos;;v;;r&#10;Description&#10;     Max number of symbols for structured mode;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MIDDLENAME_HELP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;7;23;7;;;;vpos;;v;;r&apos;Отчество должно содержать &lt;strong&gt;&apos;.MSG_ALPHA_RUS.&apos;&lt;/strong&gt;, и быть не более &lt;strong&gt;50&lt;/strong&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MIDDLENAME_PLC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;12;22;12;;;;vpos;;v;;r&apos;Отчество&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_ALPHA;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;15;17;15;;;;vpos;;v;;r&apos;только латинские буквы&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_ALPHA_NUMB;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;42;22;42;;;;vpos;;v;;r&apos;только латинские буквы и цифры&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_ALPHA_NUMB_ALL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;48;26;48;;;;vpos;;v;;r&apos;только буквы и цифры&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_ALPHA_NUMB_RUS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;45;26;45;;;;vpos;;v;;r&apos;только русские буквы и цифры&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_ALPHA_RUS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;18;21;18;;;;vpos;;v;;r&apos;только русские буквы&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_CODE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;21;16;21;;;;vpos;;v;;r&apos;только латинские буквы, цифры и символ _&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_DATE_LIGHT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;68;22;68;;;;vpos;;v;;r&apos;в формате ДД.ММ.ГГГГ&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_DATE_STRONG;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;71;23;71;;;;vpos;;v;;r&apos;в формате ДД.ММ.ГГГГ и только 20-го, 21-го вв&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_EMAIL_LIGHT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;57;23;57;;;;vpos;;v;;r&apos;в формате user@domain&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_FAMILY_RUS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;27;22;27;;;;vpos;;v;;r&apos;только русские буквы и тире&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_INFO;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;36;16;36;;;;vpos;;v;;r&apos;только русские буквы, цифры, знаки препинания, круглые скобки, символ # и пробелы&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_INFO_RUS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;39;20;39;;;;vpos;;v;;r&apos;только русские буквы, цифры, знаки препинания, круглые скобки, символ № и пробелы&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_INILA;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;12;17;12;;;;vpos;;v;;r&apos;только цифры и тире&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_NUMB;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;9;16;9;;;;vpos;;v;;r&apos;только цифры&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_PATH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;24;16;24;;;;vpos;;v;;r&apos;только латинские буквы и символ \\&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_PHONE_ADD;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;65;21;65;;;;vpos;;v;;r&apos;только русские буквы, цифры, запятые, точки с запятой и пробелы&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_PHONE_HOME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;62;22;62;;;;vpos;;v;;r&apos;только цифры и круглые скобки&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_SPEC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;51;16;51;;;;vpos;;v;;r&apos;только латинские буквы, цифры, знаки препинания и пробелы&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_SPEC_RUS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;54;20;54;;;;vpos;;v;;r&apos;только русские буквы, цифры, знаки препинания и пробелы&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_TEXT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;30;16;30;;;;vpos;;v;;r&apos;только латинские буквы, тире, точки, запятые, кавычки и пробелы&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MSG_TEXT_RUS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;33;20;33;;;;vpos;;v;;r&apos;только русские буквы, тире, точки, запятые, кавычки и пробелы&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="N1;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;209;14;209;;;;vpos;;v;;r&#10;Description&#10;     Down point base value for case 1 mask pattern (concatenation of same color in a line or a column);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="N2;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f9;214;11;214;;;;vpos;;v;;r&#10;Description&#10;     Down point base value for case 2 mask pattern (module block of same color);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="N3;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f9;219;11;219;;;;vpos;;v;;r&#10;Description&#10;     Down point base value for case 3 mask pattern (1:1:3:1:1(dark:bright:dark:bright:dark)pattern in a line or a column);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="N4;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f9;224;11;224;;;;vpos;;v;;r&#10;Description&#10;     Down point base value for case 4 mask pattern (ration of dark modules in whole);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="nikitin_o;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\1c_config.php;f21;21;30;21;;;;vpos;;v;;r&apos;nikitin_o&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ODATA_1C;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\1c_config.php;f10;13;18;13;;;;vpos;;v;;r&apos;http://s21.bsu.edu.ru/priem_test/odata/standard.odata&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PASSWORD_1C;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\1c_config.php;f10;16;21;16;;;;vpos;;v;;r&apos;avitsena159&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_ALPHA;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;14;21;14;;;;vpos;;v;;r&apos;/^[a-zA-Z]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_ALPHA_NUMB;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;41;26;41;;;;vpos;;v;;r&apos;/^[a-zA-Z0-9]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_ALPHA_NUMB_ALL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;47;30;47;;;;vpos;;v;;r&apos;/^[a-zA-ZёЁа-яА-Я0-9]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_ALPHA_NUMB_RUS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;44;30;44;;;;vpos;;v;;r&apos;/^[ёЁа-яА-Я0-9]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_ALPHA_RUS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;17;25;17;;;;vpos;;v;;r&apos;/^[ёЁа-яА-Я]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_CODE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;20;20;20;;;;vpos;;v;;r&apos;/^[a-zA-Z0-9_]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_DATE_LIGHT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;67;26;67;;;;vpos;;v;;r&apos;/^(0[1-9]|1[0-9]|2[0-9]|3[01]).(0[1-9]|1[012]).[0-9]{4}$/&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_DATE_STRONG;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;70;27;70;;;;vpos;;v;;r&apos;/^(?:(?:0[1-9]|1[0-9]|2[0-9]).(?:0[1-9]|1[0-2])|(?:(?:30).(?!02)(?:0[1-9]|1[0-2]))|(?:31.(?:0[13578]|1[02]))).(?:19|20)[0-9]{2}$/&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_EMAIL_LIGHT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;56;27;56;;;;vpos;;v;;r&apos;/^[a-zA-Z0-9_\-.]+@[a-zA-Z0-9_\-.]+$/&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_EMAIL_STRONG;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;59;28;59;;;;vpos;;v;;r&apos;/^[a-zA-Z0-9_\-.]+@[a-zA-Z0-9_\-]+\.[a-zA-Z0-9_\-]+$/&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_FAMILY_RUS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;26;26;26;;;;vpos;;v;;r&apos;/^[ёЁа-яА-Я-]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_INFO;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;35;20;35;;;;vpos;;v;;r&apos;/^[a-zA-Z0-9-.,():;s№_\«\»\&apos;\&amp;quot;s\/\s]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_INFO_RUS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;38;24;38;;;;vpos;;v;;r&apos;/^[ёЁа-яА-Я0-9-.,():;s№_\«\»\&apos;\&amp;quot;s\/\s]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_INILA;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;11;21;11;;;;vpos;;v;;r&apos;/^[0-9-]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_NUMB;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;8;20;8;;;;vpos;;v;;r&apos;/^[0-9]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_PATH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;23;20;23;;;;vpos;;v;;r&apos;/^[a-zA-Z0-9_\\\]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_PHONE_ADD;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;64;25;64;;;;vpos;;v;;r&apos;/^[ёЁа-яА-Я0-9,;s\s]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_PHONE_HOME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;61;26;61;;;;vpos;;v;;r&apos;/^[0-9-()]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_SPEC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;50;20;50;;;;vpos;;v;;r&apos;/^[a-zA-Z0-9-.,\«\»\&apos;\&amp;quot;s\s]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_SPEC_RUS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;53;24;53;;;;vpos;;v;;r&apos;/^[ёЁа-яА-Я0-9-.,\«\»\&apos;\&amp;quot;s\s]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_TEXT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;29;20;29;;;;vpos;;v;;r&apos;/^[a-zA-Z-.,\&amp;quot;s\s]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_TEXT_RUS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;32;24;32;;;;vpos;;v;;r&apos;/^[ёЁа-яА-Я-.,\&amp;quot;s\s]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_AUTHOR;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;106;19;106;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;106;19;106;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;143;20;143;;;;vpos;;v;;r&#10;Description&#10;     Document author.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_CREATOR;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;101;20;101;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;101;20;101;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;139;21;139;;;;vpos;;v;;r&#10;Description&#10;     Document creator.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_FONT_MONOSPACED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;176;28;176;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;176;28;176;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;199;29;199;;;;vpos;;v;;r&#10;Description&#10;     Default monospaced font name.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_FONT_NAME_DATA;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;166;27;166;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;166;27;166;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;191;28;191;;;;vpos;;v;;r&#10;Description&#10;     Default data font name.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_FONT_NAME_MAIN;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;156;27;156;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;156;27;156;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;183;28;183;;;;vpos;;v;;r&#10;Description&#10;     Default main font name.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_FONT_SIZE_DATA;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;171;27;171;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;171;27;171;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;195;28;195;;;;vpos;;v;;r&#10;Description&#10;     Default data font size.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_FONT_SIZE_MAIN;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;161;27;161;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;161;27;161;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;187;28;187;;;;vpos;;v;;r&#10;Description&#10;     Default main font size.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_HEADER_LOGO;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;71;24;71;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;107;25;107;;;;vpos;;v;;r&#10;Description&#10;     Deafult image logo used be the default Header() method. Please set here your own logo or an empty string to disable it.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_HEADER_LOGO_WIDTH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;76;30;76;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f11;112;32;112;;;;vpos;;v;;r&#10;Description&#10;     Header logo image width in user units.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_HEADER_STRING;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;116;26;116;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;116;26;116;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;151;27;151;;;;vpos;;v;;r&#10;Description&#10;     Header description string.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_HEADER_TITLE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;111;25;111;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;111;25;111;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;147;26;147;;;;vpos;;v;;r&#10;Description&#10;     Header title.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_IMAGE_SCALE_RATIO;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;181;30;181;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;181;30;181;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;203;31;203;;;;vpos;;v;;r&#10;Description&#10;     Ratio used to adjust the conversion of pixels to user units.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_MARGIN_BOTTOM;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;141;26;141;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;141;26;141;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;171;27;171;;;;vpos;;v;;r&#10;Description&#10;     Bottom margin.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_MARGIN_FOOTER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;131;26;131;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;131;26;131;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;163;27;163;;;;vpos;;v;;r&#10;Description&#10;     Footer margin.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_MARGIN_HEADER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;126;26;126;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;126;26;126;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;159;27;159;;;;vpos;;v;;r&#10;Description&#10;     Header margin.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_MARGIN_LEFT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;146;24;146;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;146;24;146;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;175;25;175;;;;vpos;;v;;r&#10;Description&#10;     Left margin.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_MARGIN_RIGHT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;151;25;151;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;151;25;151;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;179;26;179;;;;vpos;;v;;r&#10;Description&#10;     Right margin.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_MARGIN_TOP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;136;23;136;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;136;23;136;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;167;24;167;;;;vpos;;v;;r&#10;Description&#10;     Top margin.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_PAGE_FORMAT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;91;24;91;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;91;24;91;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;131;25;131;;;;vpos;;v;;r&#10;Description&#10;     Page format.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_PAGE_ORIENTATION;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;96;29;96;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;96;29;96;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;135;30;135;;;;vpos;;v;;r&#10;Description&#10;     Page orientation (P=portrait, L=landscape).;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_PDFTK;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\NewFile.php;f8;11;17;11;;;;vpos;;v;;r&apos;&quot;C:\Program Files (x86)\PDFtk\bin\pdftk&quot;&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_UNIT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\config\tcpdf_config_alt.php;f9;121;17;121;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\config\tcpdf_config.php;f9;121;17;121;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_autoconfig.php;f10;155;18;155;;;;vpos;;v;;r&#10;Description&#10;     Document unit of measure [pt=point, mm=millimeter, cm=centimeter, in=inch].;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF417DEFS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\pdf417.php;f9;61;19;61;;;;vpos;;v;;r&#10;Description&#10;     Indicate that definitions for this class are set;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_LANG_CATALAN;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;220;27;220;;;;vpos;;v;;r&apos;CAS_Languages_Catalan&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_LANG_CHINESE_SIMPLIFIED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;221;38;221;;;;vpos;;v;;r&apos;CAS_Languages_ChineseSimplified&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_LANG_DEFAULT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;233;27;233;;;;vpos;;v;;r&#10;Description&#10;     phpCAS default language (when phpCAS::setLang() is not used);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_LANG_ENGLISH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;214;27;214;;;;vpos;;v;;r&#10;Description&#10;      addtogroup publicLang;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_LANG_FRENCH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;215;26;215;;;;vpos;;v;;r&apos;CAS_Languages_French&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_LANG_GERMAN;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;217;26;217;;;;vpos;;v;;r&apos;CAS_Languages_German&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_LANG_GREEK;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;216;25;216;;;;vpos;;v;;r&apos;CAS_Languages_Greek&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_LANG_JAPANESE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;218;28;218;;;;vpos;;v;;r&apos;CAS_Languages_Japanese&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_LANG_SPANISH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;219;27;219;;;;vpos;;v;;r&apos;CAS_Languages_Spanish&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_PROXIED_SERVICE_HTTP_GET;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;194;39;194;;;;vpos;;v;;r&#10;Description&#10;     phpCAS::getProxiedService() type for HTTP GET;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_PROXIED_SERVICE_HTTP_POST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;198;40;198;;;;vpos;;v;;r&#10;Description&#10;     phpCAS::getProxiedService() type for HTTP POST;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_PROXIED_SERVICE_IMAP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;202;35;202;;;;vpos;;v;;r&#10;Description&#10;     phpCAS::getProxiedService() type for IMAP;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_SERVICE_NOT_AVAILABLE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;186;36;186;;;;vpos;;v;;r&#10;Description&#10;     phpCAS::service() error code when the service was not available.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_SERVICE_OK;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;167;25;167;;;;vpos;;v;;r&#10;Description&#10;     phpCAS::service() error code on success;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_SERVICE_PT_BAD_SERVER_RESPONSE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;177;45;177;;;;vpos;;v;;r&#10;Description&#10;     phpCAS::service() error code when the PT could not retrieve because the response of the CAS server was ill-formed.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_SERVICE_PT_FAILURE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;182;33;182;;;;vpos;;v;;r&#10;Description&#10;     phpCAS::service() error code when the PT could not retrieve because the CAS server did not want to.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_SERVICE_PT_NO_SERVER_RESPONSE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;172;44;172;;;;vpos;;v;;r&#10;Description&#10;     phpCAS::service() error code when the PT could not retrieve because the CAS server did not respond.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_VERSION;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;63;22;63;;;;vpos;;v;;r&#10;Description&#10;     phpCAS version. accessible for the user by phpCAS::getVersion().;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PnKDmaDpqAUVCGagjMyA;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\db_config.php;f25;21;45;21;;;;vpos;;v;;r&apos;PnKDmaDpqAUVCGagjMyA&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="portalbsu;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\db_config.php;f21;22;30;22;;;;vpos;;v;;r&apos;portalbsu&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PWD_CONFIRM_HELP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;9;24;9;;;;vpos;;v;;r&apos;Пароль должен содержать &lt;strong&gt;&apos;.MSG_ALPHA_NUMB.&apos;&lt;/strong&gt;, и быть &lt;strong&gt;6-10&lt;/strong&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PWD_CONFIRM_PLC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;14;23;14;;;;vpos;;v;;r&apos;Повторите пароль&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PWD_HELP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;8;16;8;;;;vpos;;v;;r&apos;Пароль должен содержать &lt;strong&gt;&apos;.MSG_ALPHA_NUMB.&apos;&lt;/strong&gt;, и быть &lt;strong&gt;6-10&lt;/strong&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PWD_PLC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;13;15;13;;;;vpos;;v;;r&apos;Пароль&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QR_DEFAULT_MASK;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f9;243;24;243;;;;vpos;;v;;r&#10;Description&#10;     when QR_FIND_BEST_MASK === false;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QR_ECLEVEL_H;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f9;147;21;147;;;;vpos;;v;;r&#10;Description&#10;     Error correction level H : About 30% or less errors can be corrected.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QR_ECLEVEL_L;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f9;132;21;132;;;;vpos;;v;;r&#10;Description&#10;     Error correction level L : About 7% or less errors can be corrected.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QR_ECLEVEL_M;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f9;137;21;137;;;;vpos;;v;;r&#10;Description&#10;     Error correction level M : About 15% or less errors can be corrected.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QR_ECLEVEL_Q;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f9;142;21;142;;;;vpos;;v;;r&#10;Description&#10;     Error correction level Q : About 25% or less errors can be corrected.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QR_FIND_BEST_MASK;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f9;233;26;233;;;;vpos;;v;;r&#10;Description&#10;     if true, estimates best mask (spec. default, but extremally slow;s set to false to significant performance boost but (propably) worst quality code;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QR_FIND_FROM_RANDOM;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f9;238;28;238;;;;vpos;;v;;r&#10;Description&#10;     if false, checks all masks available, otherwise value tells count of masks need to be checked, mask id are got randomly;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QR_MODE_8B;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f9;111;19;111;;;;vpos;;v;;r&#10;Description&#10;     Encoding mode 8bit byte data. In theory, 2953 characters or less can be stored in a QRcode.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QR_MODE_AN;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f9;106;19;106;;;;vpos;;v;;r&#10;Description&#10;     Encoding mode alphanumeric (0-9A-Z $%*+-./:) 45characters. 2 characters are encoded to 11bit length. In theory, 4296 characters or less can be stored in a QRcode.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QR_MODE_KJ;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f9;116;19;116;;;;vpos;;v;;r&#10;Description&#10;     Encoding mode KANJI. A KANJI character (multibyte character) is encoded to 13bit length. In theory, 1817 characters or less can be stored in a QRcode.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QR_MODE_NL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f9;96;19;96;;;;vpos;;v;;r&#10;Description&#10;     Encoding mode;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QR_MODE_NM;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f9;101;19;101;;;;vpos;;v;;r&#10;Description&#10;     Encoding mode numeric (0-9). 3 characters are encoded to 10bit length. In theory, 7089 characters or less can be stored in a QRcode.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QR_MODE_ST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f9;121;19;121;;;;vpos;;v;;r&#10;Description&#10;     Encoding mode STRUCTURED (currently unsupported);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QRCAP_EC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;186;20;186;;;;vpos;;v;;r&#10;Description&#10;     Matrix index to get error correction level from $capacity array.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QRCAP_REMINDER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;181;26;181;;;;vpos;;v;;r&#10;Description&#10;     Matrix index to get remainder from $capacity array.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QRCAP_WIDTH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;171;23;171;;;;vpos;;v;;r&#10;Description&#10;     Matrix index to get width from $capacity array.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QRCAP_WORDS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;176;23;176;;;;vpos;;v;;r&#10;Description&#10;     Matrix index to get number of words from $capacity array.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QRCODEDEFS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f9;87;19;87;;;;vpos;;v;;r&#10;Description&#10;     Indicate that definitions for this class are set;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QRSPEC_VERSION_MAX;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f9;159;27;159;;;;vpos;;v;;r&#10;Description&#10;     Maximum QR Code version.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QRSPEC_WIDTH_MAX;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;164;28;164;;;;vpos;;v;;r&#10;Description&#10;     Maximum matrix size for maximum version (version 40 is 177*177 matrix).;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QUIETH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\pdf417.php;f9;73;15;73;;;;vpos;;v;;r&#10;Description&#10;     Horizontal quiet zone in modules;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="QUIETV;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\pdf417.php;f9;78;15;78;;;;vpos;;v;;r&#10;Description&#10;     Vertical quiet zone in modules;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="RESET_PWD;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;30;17;30;;;;vpos;;v;;rarray(&apos;id&apos; =&gt; &apos;form_reset_pwd&apos;,&#10;						&apos;hdr&apos; =&gt; &apos;Изменение пароля&apos;,&#10;						&apos;ctr&apos; =&gt; &apos;ResetPwd&apos;,&#10;						&apos;act&apos; =&gt; &apos;ResetPwd&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="RESET_PWD_REQUEST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;25;25;25;;;;vpos;;v;;rarray(&apos;id&apos; =&gt; &apos;form_reset_pwd_request&apos;,&#10;								&apos;hdr&apos; =&gt; &apos;Запрос изменения пароля&apos;,&#10;								&apos;ctr&apos; =&gt; &apos;ResetPwdRequest&apos;,&#10;								&apos;act&apos; =&gt; &apos;SendEmail&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="RESUME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;35;14;35;;;;vpos;;v;;rarray(&apos;id&apos; =&gt; &apos;form_resume&apos;,&#10;						&apos;hdr&apos; =&gt; &apos;Анкета&apos;,&#10;						&apos;ctr&apos; =&gt; &apos;Resume&apos;,&#10;						&apos;act&apos; =&gt; &apos;Resume&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="root;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\db_config.php;f21;32;25;32;;;;vpos;;v;;r&apos;root&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ROOT_DIR;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\index_new.php;f8;97;16;97;;C:\wamp\wamp64\www\vhost_portalbsu\index_old.php;f8;88;16;88;;C:\wamp\wamp64\www\vhost_portalbsu\index.php;f8;115;16;115;;;;vpos;;v;;r$_SERVER[&apos;DOCUMENT_ROOT&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ROWHEIGHT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\pdf417.php;f9;68;18;68;;;;vpos;;v;;r&#10;Description&#10;     Row height respect X dimension of single module;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="s21.bsu.edu.ru/priem_test/odata/standard.odata;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\1c_config.php;f22;31;68;31;;;;vpos;;v;;r&apos;s21.bsu.edu.ru/priem_test/odata/standard.odata&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAML_ASSERTION_ARTIFACT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;116;31;116;;;;vpos;;v;;r&#10;Description&#10;     SAMLP artifact tag (for the ticket);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAML_ASSERTION_ARTIFACT_CLOSE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;121;37;121;;;;vpos;;v;;r&#10;Description&#10;     SAMLP close;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAML_ATTRIBUTES;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;136;23;136;;;;vpos;;v;;r&#10;Description&#10;     SAML Attributes;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAML_SOAP_BODY;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;105;22;105;;;;vpos;;v;;r&#10;Description&#10;     SOAP body for SAML POST;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAML_SOAP_BODY_CLOSE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;126;28;126;;;;vpos;;v;;r&#10;Description&#10;     SOAP body close;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAML_SOAP_ENV;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;100;21;100;;;;vpos;;v;;r&#10;Description&#10;     SOAP envelope for SAML POST;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAML_SOAP_ENV_CLOSE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;131;27;131;;;;vpos;;v;;r&#10;Description&#10;     SOAP envelope close;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAML_VERSION_1_1;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;90;24;90;;;;vpos;;v;;r&#10;Description&#10;     SAML protocol;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAML_XML_HEADER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;95;23;95;;;;vpos;;v;;r&#10;Description&#10;     XML header for SAML POST;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAMLP_REQUEST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;110;21;110;;;;vpos;;v;;r&#10;Description&#10;     SAMLP request;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAMLP_REQUEST_CLOSE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;111;27;111;;;;vpos;;v;;r&apos;&lt;/samlp:Request&gt;&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SIGNUP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\bootstrap.php;f8;103;14;103;;;;vpos;;v;;r$signup;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SMTP_DEBUG;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;25;18;25;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STRUCTURE_HEADER_BITS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;195;33;195;;;;vpos;;v;;r&#10;Description&#10;     Number of header bits for structured mode;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="tcpdf_include.php;PHP:PHP Include;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_065.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_064.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_063.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_062.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_061.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_060.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_059.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_058.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_057.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_056.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_055.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_054.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_053.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_052.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_051.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_050.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_049.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_048.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_047.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_046.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_045.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_044.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_043.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_042.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_041.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_040.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_039.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_038.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_037.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_036.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_035.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_034.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_033.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_032.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_031.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_030.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_029.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_028.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_027.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_026.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_025.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_024.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_023.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_022.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_021.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_020.php;f14;28;31;28;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_019.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_018.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_017.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_016.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_015.php;f14;28;31;28;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_014.php;f14;28;31;28;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_013.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_012.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_011.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_010.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_009.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_008.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_007.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_006.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_005.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_004.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_003.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_002.php;f14;27;31;27;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_001.php;f14;27;31;27;;;;vpos;;v;;r&#10;Description&#10;     Creates an example PDF/A-1b document using TCPDF;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="tO3wypyz;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\1c_config.php;f25;28;33;28;;;;vpos;;v;;r&apos;tO3wypyz&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TRANSLATE_LANGS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;123;23;123;;;;vpos;;v;;rarray(&apos;id&apos; =&gt; &apos;form_translate_langs&apos;,&#10;								&apos;hdr&apos; =&gt; &apos;Язык&apos;,&#10;								&apos;ctr&apos; =&gt; &apos;TranslateLangs&apos;,&#10;								&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="UNITNAME_HELP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f8;6;21;6;;;;vpos;;v;;r&apos;Наименование подразделения должно содержать &lt;strong&gt;только русские буквы, цифры  и пробелы&lt;/strong&gt; и быть не более &lt;b&gt;100&lt;/b&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="UNITNAME_PLC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f8;7;20;7;;;;vpos;;v;;r&apos;Наименование подразделения&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="USER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;67;12;67;;;;vpos;;v;;rarray(&apos;id&apos; =&gt; null,&#10;					&apos;hdr&apos; =&gt; &apos;Пользователи&apos;,&#10;					&apos;ctr&apos; =&gt; &apos;User&apos;,&#10;					&apos;act&apos; =&gt; &apos;Index&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="USER_1C;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\1c_config.php;f10;15;17;15;;;;vpos;;v;;r&apos;nikitin_o&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="USER_ADD;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;71;16;71;;;;vpos;;v;;rarray(&#10;						&apos;id&apos; =&gt; &apos;form_user_add&apos;,&#10;						&apos;hdr&apos; =&gt; &apos;Создание пользователя&apos;,&#10;						&apos;ctr&apos; =&gt; &apos;User&apos;,&#10;						&apos;act&apos; =&gt; &apos;Create&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="USER_EDIT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;76;17;76;;;;vpos;;v;;rarray(&apos;id&apos; =&gt; &apos;form_user_edit&apos;,&#10;						&apos;hdr&apos; =&gt; &apos;Изменение пользователя&apos;,&#10;						&apos;ctr&apos; =&gt; &apos;User&apos;,&#10;						&apos;act&apos; =&gt; &apos;Change&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="USERNAME_HELP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;6;21;6;;;;vpos;;v;;r&apos;Логин должен содержать &lt;strong&gt;&apos;.MSG_ALPHA.&apos;&lt;/strong&gt;, и быть не более &lt;strong&gt;45&lt;/strong&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="USERNAME_PLC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;11;20;11;;;;vpos;;v;;r&apos;Логин&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="WSDL_1C;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\1c_config.php;f10;14;17;14;;;;vpos;;v;;r&apos;http://s21.bsu.edu.ru/priem_test/ws/WebAbit.1cws?wsdl&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="Basic_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\basic_helper.php;f0;4;1;222;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="appUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\basic_helper.php;f15;29;2;32;;;;vpos;;vstring;;r&#10;Definition&#10;    appUrl($controller, $action)&#10;&#10;Description&#10;     Creates URL with behavior/controller/action.;;d1,30;;b1,5;;mcontroller;;paction;;p">
</treenode>
<treenode node="baseUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\basic_helper.php;f15;15;2;22;;;;vpos;;vstring;;r&#10;Definition&#10;    baseUrl($url = &apos;&apos;)&#10;&#10;Description&#10;     Creates URL with BASEPATH.;;d1,16;;b1,5;;murl;;p">
</treenode>
<treenode node="checkBrowser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\basic_helper.php;f15;197;2;221;;;;vpos;;vstring;;r&#10;Definition&#10;    checkBrowser($name, $version)&#10;&#10;Description&#10;     Checks user browser.;;d1,198;;b1,5;;mname;;pversion;;p">
</treenode>
<treenode node="getBrowser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\basic_helper.php;f15;108;2;190;;;;vpos;;varray;;r&#10;Definition&#10;    getBrowser()&#10;&#10;Description&#10;     Gets user browser.;;d1,109;;b1,5;;m">
</treenode>
<treenode node="msgError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\basic_helper.php;f15;97;2;101;;;;vpos;;vvoid;;r&#10;Definition&#10;    msgError($msg)&#10;&#10;Description&#10;     Sets global error message.;;d1,98;;b1,5;;mmsg;;p">
</treenode>
<treenode node="msgReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\basic_helper.php;f15;75;2;79;;;;vpos;;vvoid;;r&#10;Definition&#10;    msgReset()&#10;&#10;Description&#10;     Resets global messages.;;d1,76;;b1,5;;m">
</treenode>
<treenode node="msgSuccess;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\basic_helper.php;f15;86;2;90;;;;vpos;;vvoid;;r&#10;Definition&#10;    msgSuccess($msg)&#10;&#10;Description&#10;     Sets global success message.;;d1,87;;b1,5;;mmsg;;p">
</treenode>
<treenode node="redirect;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\basic_helper.php;f15;39;2;54;;;;vpos;;vvoid;;r&#10;Definition&#10;    redirect($header, $response_code, $controller, $action, $success = null, $error = null)&#10;&#10;Description&#10;     Redirects to page.;;d1,40;;b1,5;;mheader;;presponse_code;;pcontroller;;paction;;psuccess;;perror;;p">
</treenode>
<treenode node="redirectHome;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\basic_helper.php;f15;61;2;68;;;;vpos;;vvoid;;r&#10;Definition&#10;    redirectHome()&#10;&#10;Description&#10;     Redirects to page.;;d1,62;;b1,5;;m">
</treenode>
</treenode>
<treenode node="Calc_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\calc_helper.php;f0;4;1;22;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="getAge;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;15;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\calc_helper.php;f15;15;2;21;;;;vpos;;vint;;r&#10;Definition&#10;    getAge($dt, $format)&#10;&#10;Description&#10;     Gets age between date and today.;;d1,16;;b1,5;;mdt;;pformat;;p">
</treenode>
</treenode>
<treenode node="Captcha_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\captcha_helper.php;f0;6;1;37;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
<treenode node="create;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\captcha_helper.php;f19;17;2;36;;;;vpos;;vstring;;r&#10;Definition&#10;    create()&#10;&#10;Description&#10;     Creates CAPTCHA.;;d1,18;;b1,5;;m">
</treenode>
</treenode>
<treenode node="CAS_AuthenticationException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\AuthenticationException.php;f0;47;1;109;;;;vpos;;vRuntimeException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_AuthenticationException&#10;extends RuntimeException&#10;implements CAS_Exception&#10;&#10;Description&#10;     This interface defines methods that allow proxy-authenticated service handlers to interact with phpCAS.;;d0,50;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\AuthenticationException.php;f11;67;5;107;;;;vpos;;v;;r&#10;Definition&#10;    __construct($client,$failure,$cas_url,$no_response,&#10;        $bad_response=&apos;&apos;,$cas_response=&apos;&apos;,$err_code=&apos;&apos;,$err_msg=&apos;&apos;&#10;    )&#10;&#10;Description&#10;     This method is used to print the HTML output when the user was not authenticated.&#10;&#10;Parameters:&#10;    CAS_Client $client - phpcas client&#10;    string $failure - the failure that occured&#10;    string $cas_url - the URL the CAS server was asked for&#10;    bool $no_response - the response from the CAS server (other&#10;    bool $bad_response - bad response from the CAS server ($err_code&#10;    string $cas_response - the response of the CAS server&#10;    int $err_code - the error code given by the CAS server&#10;    string $err_msg - the error message given by the CAS server;;d6,69;;b1,0;;mCAS_Client $client;;pstring $failure;;pstring $cas_url;;pbool $no_response;;pbool $bad_response;;pstring $cas_response;;pint $err_code;;pstring $err_msg;;p">
</treenode>
</treenode>
<treenode node="CAS_Client;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f0;50;1;3967;;;;vpos;;v;;r&#10;Definition&#10;    class CAS_Client&#10;&#10;Description&#10;     The CAS_Client class is a client interface that provides CAS authentication to PHP applications.;;d0,51;;b0,0;;m">
<treenode node="HOSTNAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f9;3819;18;3819;;;;vpos;;v;;r&#10;Description&#10;     Constants used for determining rebroadcast node type.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f9;3820;12;3820;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LOGOUT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f9;3884;16;3884;;;;vpos;;v;;r&#10;Description&#10;     Constants used for determining rebroadcast type (logout or pgtIou/pgtId).;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PGTIOU;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f9;3885;16;3885;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;901;5;1032;;;;vpos;;va;;r&#10;Definition&#10;    __construct(&#10;        $server_version,&#10;        $proxy,&#10;        $server_hostname,&#10;        $server_port,&#10;        $server_uri,&#10;        $changeSessionID = true&#10;    )&#10;&#10;Description&#10;     CAS_Client constructor.&#10;&#10;Parameters:&#10;    string $server_version - the version of the CAS server&#10;    bool $proxy - true if the CAS client is a CAS proxy&#10;    string $server_hostname - the hostname of the CAS server&#10;    int $server_port - the port the CAS server is running on&#10;    string $server_uri - the URI the CAS server is responding on&#10;    bool $changeSessionID - Allow phpCAS to change the session_id&#10;&#10;Return:&#10;   newly created CAS_Client object;;d6,908;;b1,0;;mstring $server_version;;pbool $proxy;;pstring $server_hostname;;pint $server_port;;pstring $server_uri;;pbool $changeSessionID;;p">
</treenode>
<treenode node="_addAttributeToArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3460;5;3474;;;;vpos;;vvoid;;r&#10;Definition&#10;    _addAttributeToArray(array &amp;$attributeArray, $name, $value)&#10;&#10;Description&#10;     Add an attribute value to an array of attributes.&#10;&#10;Parameters:&#10;    array - &amp;$attributeArray reference to array&#10;    string $name - name of attribute&#10;    string $value - value of attribute;;d4,3461;;b3,0;;marray;;pstring $name;;pstring $value;;p">
</treenode>
<treenode node="_authError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3758;5;3803;;;;vpos;;vvoid;;r&#10;Definition&#10;    _authError(&#10;        $failure,&#10;        $cas_url,&#10;        $no_response,&#10;        $bad_response=&apos;&apos;,&#10;        $cas_response=&apos;&apos;,&#10;        $err_code=&apos;&apos;,&#10;        $err_msg=&apos;&apos;&#10;    )&#10;&#10;Description&#10;     This method is used to print the HTML output when the user was not authenticated.&#10;&#10;Parameters:&#10;    string $failure - the failure that occured&#10;    string $cas_url - the URL the CAS server was asked for&#10;    bool $no_response - the response from the CAS server (other&#10;    bool $bad_response - bad response from the CAS server ($err_code&#10;    string $cas_response - the response of the CAS server&#10;    int $err_code - the error code given by the CAS server&#10;    string $err_msg - the error message given by the CAS server;;d6,3766;;b3,0;;mstring $failure;;pstring $cas_url;;pbool $no_response;;pbool $bad_response;;pstring $cas_response;;pint $err_code;;pstring $err_msg;;p">
</treenode>
<treenode node="_buildQueryUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3661;5;3666;;;;vpos;;vurl;;r&#10;Definition&#10;    _buildQueryUrl($url, $query)&#10;&#10;Description&#10;     This method is used to append query parameters to an url. Since the url might already contain parameter it has to be detected and to build a proper URL&#10;&#10;Parameters:&#10;    string $url - base url to add the query params to&#10;    string $query - params in query form with &amp; separated&#10;&#10;Return:&#10;   with query params;;d4,3662;;b3,0;;mstring $url;;pstring $query;;p">
</treenode>
<treenode node="_buildSAMLPayload;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2844;5;2857;;;;vpos;;vthe;;r&#10;Definition&#10;    _buildSAMLPayload()&#10;&#10;Description&#10;     This method is used to build the SAML POST body sent to /samlValidate URL.&#10;&#10;Return:&#10;   SOAP-encased SAMLP artifact (the ticket);;d4,2845;;b3,0;;m">
</treenode>
<treenode node="_callback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2399;5;2426;;;;vpos;;vvoid;;r&#10;Definition&#10;    _callback()&#10;&#10;Description&#10;     This method is called by CAS_Client::CAS_Client() when running in callback mode. It stores the PGT and its PGT Iou, prints its output and halts.;;d4,2400;;b3,0;;m">
</treenode>
<treenode node="_ensureAuthenticationCalled;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;791;5;796;;;;vpos;;vvoid;;r&#10;Definition&#10;    _ensureAuthenticationCalled()&#10;&#10;Description&#10;     Ensure that authentication was checked. Terminate with exception if no authentication was performed;;d4,792;;b3,0;;m">
</treenode>
<treenode node="_getCallbackURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2359;5;2373;;;;vpos;;vThe;;r&#10;Definition&#10;    _getCallbackURL()&#10;&#10;Description&#10;     This method returns the URL that should be used for the PGT callback (in fact the URL of the current request without any CGI parameter, except if phpCAS::setFixedCallbackURL() was used).&#10;&#10;Return:&#10;   callback URL;;d4,2360;;b3,0;;m">
</treenode>
<treenode node="_getClientUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3576;5;3609;;;;vpos;;vstring;;r&#10;Definition&#10;    _getClientUrl()&#10;&#10;Description&#10;     Try to figure out the phpCas client URL with possible Proxys / Ports etc.&#10;&#10;Return:&#10;   Server URL with domain:port;;d4,3577;;b3,0;;m">
</treenode>
<treenode node="_getNodeType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3830;5;3840;;;;vpos;;vstring;;r&#10;Definition&#10;    _getNodeType($nodeURL)&#10;&#10;Description&#10;     Determine the node type from the URL.&#10;&#10;Parameters:&#10;    String $nodeURL - The node URL&#10;&#10;Return:&#10;   hostname;;d4,3831;;b3,0;;mString $nodeURL;;p">
</treenode>
<treenode node="_getPGT;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2270;5;2273;;;;vpos;;vstring;;r&#10;Definition&#10;    _getPGT()&#10;&#10;Description&#10;     This method returns the Proxy Granting Ticket given by the CAS server.&#10;&#10;Return:&#10;   the Proxy Granting Ticket;;d4,2271;;b3,0;;m">
</treenode>
<treenode node="_getServerBaseURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;312;5;324;;;;vpos;;vstring;;r&#10;Definition&#10;    _getServerBaseURL()&#10;&#10;Description&#10;     This method is used to retrieve the base URL of the CAS server.&#10;&#10;Return:&#10;   a URL;;d4,313;;b3,0;;m">
</treenode>
<treenode node="_getServerHostname;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;282;5;285;;;;vpos;;vstring;;r&#10;Definition&#10;    _getServerHostname()&#10;&#10;Description&#10;     This method is used to retrieve the hostname of the CAS server.&#10;&#10;Return:&#10;   the hostname of the CAS server;;d4,283;;b3,0;;m">
</treenode>
<treenode node="_getServerPort;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;292;5;295;;;;vpos;;vstring;;r&#10;Definition&#10;    _getServerPort()&#10;&#10;Description&#10;     This method is used to retrieve the port of the CAS server.&#10;&#10;Return:&#10;   the port of the CAS server;;d4,293;;b3,0;;m">
</treenode>
<treenode node="_getServerURI;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;302;5;305;;;;vpos;;vstring;;r&#10;Definition&#10;    _getServerURI()&#10;&#10;Description&#10;     This method is used to retrieve the URI of the CAS server.&#10;&#10;Return:&#10;   a URI;;d4,303;;b3,0;;m">
</treenode>
<treenode node="_getUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;1133;5;1143;;;;vpos;;vstring;;r&#10;Definition&#10;    _getUser()&#10;&#10;Description&#10;     This method returns the CAS user&apos;s login name.&#10;&#10;Return:&#10;   the login name of the authenticated user;;d4,1134;;b3,0;;m">
</treenode>
<treenode node="_hasAttribute;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;1220;5;1224;;;;vpos;;vbool;;r&#10;Definition&#10;    _hasAttribute($key)&#10;&#10;Description&#10;     Check whether a specific attribute with a name is available&#10;&#10;Parameters:&#10;    string $key - name of attribute&#10;&#10;Return:&#10;   is attribute available;;d4,1221;;b3,0;;mstring $key;;p">
</treenode>
<treenode node="_hasPGT;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2292;5;2295;;;;vpos;;vtrue;;r&#10;Definition&#10;    _hasPGT()&#10;&#10;Description&#10;     This method tells if a Proxy Granting Ticket was stored.&#10;&#10;Return:&#10;   if a Proxy Granting Ticket has been stored;;d4,2293;;b3,0;;m">
</treenode>
<treenode node="_htmlFilterOutput;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;74;5;80;;;;vpos;;vvoid;;r&#10;Definition&#10;    _htmlFilterOutput($str)&#10;&#10;Description&#10;     This method filters a string by replacing special tokens by appropriate values and prints it. The corresponding tokens are taken into account: - __CAS_VERSION__ - __PHPCAS_VERSION__ - __SERVER_BASE_URL__&#10;&#10;Parameters:&#10;    string $str - the string to filter and output;;d4,75;;b3,0;;mstring $str;;p">
</treenode>
<treenode node="_initPGTStorage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2454;5;2463;;;;vpos;;vvoid;;r&#10;Definition&#10;    _initPGTStorage()&#10;&#10;Description&#10;     This method is used to initialize the storage of PGT&apos;s. Halts on error.;;d4,2455;;b3,0;;m">
</treenode>
<treenode node="_isCallbackMode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2338;5;2341;;;;vpos;;vA;;r&#10;Definition&#10;    _isCallbackMode()&#10;&#10;Description&#10;     This method returns true when the CAs client is running i callback mode, false otherwise.&#10;&#10;Return:&#10;   boolean;;d4,2339;;b3,0;;m">
</treenode>
<treenode node="_isHttps;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3616;5;3630;;;;vpos;;vbool;;r&#10;Definition&#10;    _isHttps()&#10;&#10;Description&#10;     This method checks to see if the request is secured via HTTPS&#10;&#10;Return:&#10;   true if https, false otherwise;;d4,3617;;b3,0;;m">
</treenode>
<treenode node="_isLogoutRequest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;1719;5;1722;;;;vpos;;vbool;;r&#10;Definition&#10;    _isLogoutRequest()&#10;&#10;Description&#10;     Check of the current request is a logout request&#10;&#10;Return:&#10;   is logout request;;d4,1720;;b3,0;;m">
</treenode>
<treenode node="_loadPGT;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2489;5;2495;;;;vpos;;vmul;;r&#10;Definition&#10;    _loadPGT($pgt_iou)&#10;&#10;Description&#10;     This method reads a PGT from its Iou and deletes the corresponding storage entry.&#10;&#10;Parameters:&#10;    string $pgt_iou - the PGT Iou&#10;&#10;Return:&#10;   The PGT corresponding to the Iou, false when not found;;d4,2490;;b3,0;;mstring $pgt_iou;;p">
</treenode>
<treenode node="_readExtraAttributesCas20;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3310;5;3449;;;;vpos;;vbool;;r&#10;Definition&#10;    _readExtraAttributesCas20($success_elements)&#10;&#10;Description&#10;     This method will parse the DOM and pull out the attributes from the XML payload and put them into an array, then put the array into the session.&#10;&#10;Parameters:&#10;    string $success_elements - payload of the response&#10;&#10;Return:&#10;   true when successfull, halt otherwise by calling;;d4,3311;;b3,0;;mstring $success_elements;;p">
</treenode>
<treenode node="_readURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2789;5;2837;;;;vpos;;vtrue;;r&#10;Definition&#10;    _readURL($url, &amp;$headers, &amp;$body, &amp;$err_msg)&#10;&#10;Description&#10;     This method is used to acces a remote URL.&#10;&#10;Parameters:&#10;    string $url - the URL to access&#10;    string - &amp;$headers an array containing the HTTP header lines of the&#10;    string - &amp;$body    the body of the response, as a string (empty on&#10;    string - &amp;$err_msg an error message, filled on failure&#10;&#10;Return:&#10;   on success, false otherwise (in this later case, $err_msg;;d4,2790;;b3,0;;mstring $url;;pstring;;pstring;;pstring;;p">
</treenode>
<treenode node="_rebroadcast;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3894;5;3964;;;;vpos;;vvoid;;r&#10;Definition&#10;    _rebroadcast($type)&#10;&#10;Description&#10;     This method rebroadcasts logout/pgtIou requests. Can be LOGOUT,PGTIOU&#10;&#10;Parameters:&#10;    int $type - type of rebroadcasting;;d4,3895;;b3,0;;mint $type;;p">
</treenode>
<treenode node="_removeParameterFromQueryString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3642;5;3649;;;;vpos;;vstring;;r&#10;Definition&#10;    _removeParameterFromQueryString($parameterName, $queryString)&#10;&#10;Description&#10;     Removes a parameter from a query string&#10;&#10;Parameters:&#10;    string $parameterName - name of parameter&#10;    string $queryString - query string&#10;&#10;Return:&#10;   new query string;;d4,3643;;b3,0;;mstring $parameterName;;pstring $queryString;;p">
</treenode>
<treenode node="_renameSession;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3675;5;3701;;;;vpos;;vvoid;;r&#10;Definition&#10;    _renameSession($ticket)&#10;&#10;Description&#10;     Renaming the session&#10;&#10;Parameters:&#10;    string $ticket - name of the ticket;;d4,3676;;b3,0;;mstring $ticket;;p">
</treenode>
<treenode node="_sessionIdForTicket;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3714;5;3719;;;;vpos;;vstring;;r&#10;Definition&#10;    _sessionIdForTicket($ticket)&#10;&#10;Description&#10;     Answer a valid session-id given a CAS ticket.&#10;&#10;Parameters:&#10;    string $ticket - name of the ticket;;d4,3715;;b3,0;;mstring $ticket;;p">
</treenode>
<treenode node="_setCallbackMode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2327;5;2330;;;;vpos;;vvoid;;r&#10;Definition&#10;    _setCallbackMode($callback_mode)&#10;&#10;Description&#10;     This method sets/unsets callback mode.&#10;&#10;Parameters:&#10;    bool $callback_mode - true to set callback mode, false otherwise;;d4,2328;;b3,0;;mbool $callback_mode;;p">
</treenode>
<treenode node="_setChangeSessionID;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;1061;5;1064;;;;vpos;;vvoid;;r&#10;Definition&#10;    _setChangeSessionID($allowed)&#10;&#10;Description&#10;     Set a parameter whether to allow phpCas to change session_id&#10;&#10;Parameters:&#10;    bool $allowed - allow phpCas to change session_id;;d4,1062;;b3,0;;mbool $allowed;;p">
</treenode>
<treenode node="_setPGT;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2282;5;2285;;;;vpos;;vvoid;;r&#10;Definition&#10;    _setPGT($pgt)&#10;&#10;Description&#10;     This method stores the Proxy Granting Ticket.&#10;&#10;Parameters:&#10;    string $pgt - The Proxy Granting Ticket;;d4,2283;;b3,0;;mstring $pgt;;p">
</treenode>
<treenode node="_setProxies;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3109;5;3122;;;;vpos;;vvoid;;r&#10;Definition&#10;    _setProxies($proxies)&#10;&#10;Description&#10;     Set the Proxy array, probably from persistant storage.&#10;&#10;Parameters:&#10;    array $proxies - An array of proxies;;d4,3110;;b3,0;;marray $proxies;;p">
</treenode>
<treenode node="_setSessionAttributes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2161;5;2207;;;;vpos;;vbool;;r&#10;Definition&#10;    _setSessionAttributes($text_response)&#10;&#10;Description&#10;     This method will parse the DOM and pull out the attributes from the SAML payload and put them into an array, then put the array into the session.&#10;&#10;Parameters:&#10;    string $text_response - the SAML payload&#10;&#10;Return:&#10;   true when successfull and false if no attributes a found;;d4,2162;;b3,0;;mstring $text_response;;p">
</treenode>
<treenode node="_setUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;1104;5;1107;;;;vpos;;vvoid;;r&#10;Definition&#10;    _setUser($user)&#10;&#10;Description&#10;     This method sets the CAS user&apos;s login name.&#10;&#10;Parameters:&#10;    string $user - the login name of the authenticated user;;d4,1105;;b3,0;;mstring $user;;p">
</treenode>
<treenode node="_storePGT;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2473;5;2479;;;;vpos;;vvoid;;r&#10;Definition&#10;    _storePGT($pgt,$pgt_iou)&#10;&#10;Description&#10;     This method stores a PGT. Halts on error.&#10;&#10;Parameters:&#10;    string $pgt - the PGT to store&#10;    string $pgt_iou - its corresponding Iou;;d4,2474;;b3,0;;mstring $pgt;;pstring $pgt_iou;;p">
</treenode>
<treenode node="_validatePGT;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2603;5;2642;;;;vpos;;vbool;;r&#10;Definition&#10;    _validatePGT(&amp;$validate_url,$text_response,$tree_response)&#10;&#10;Description&#10;     This method is used to validate a PGT;s halt on failure.&#10;&#10;Parameters:&#10;    string - &amp;$validate_url the URL of the request to the CAS server&#10;    string $text_response - the response of the CAS server, as is&#10;    string $tree_response - the response of the CAS server, as a DOM XML&#10;&#10;Return:&#10;   true when successfull and issue a CAS_AuthenticationException;;d4,2604;;b3,0;;mstring;;pstring $text_response;;pstring $tree_response;;p">
</treenode>
<treenode node="_wasPreviouslyAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;1548;5;1640;;;;vpos;;vtrue;;r&#10;Definition&#10;    _wasPreviouslyAuthenticated()&#10;&#10;Description&#10;     This method tells if the user has already been (previously) authenticated by looking into the session variables.&#10;&#10;Return:&#10;   when the user has already been authenticated;s false otherwise;;d4,1549;;b3,0;;m">
</treenode>
<treenode node="addRebroadcastHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3873;5;3879;;;;vpos;;vvoid;;r&#10;Definition&#10;    addRebroadcastHeader($header)&#10;&#10;Description&#10;     This method is used to add header parameters when rebroadcasting pgtIou/pgtId or logoutRequest.&#10;&#10;Parameters:&#10;    string $header - Header to send when rebroadcasting;;d4,3874;;b1,0;;mstring $header;;p">
</treenode>
<treenode node="addRebroadcastNode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3849;5;3858;;;;vpos;;vvoid;;r&#10;Definition&#10;    addRebroadcastNode($rebroadcastNodeUrl)&#10;&#10;Description&#10;     Store the rebroadcast node for pgtIou/pgtId and logout requests.&#10;&#10;Parameters:&#10;    string $rebroadcastNodeUrl - The rebroadcast node URL;;d4,3850;;b1,0;;mstring $rebroadcastNodeUrl;;p">
</treenode>
<treenode node="checkAuthentication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1326;5;1376;;;;vpos;;vtrue;;r&#10;Definition&#10;    checkAuthentication()&#10;&#10;Description&#10;     This method is called to check whether the user is authenticated or not.&#10;&#10;Return:&#10;   when the user is authenticated, false when a previous;;d4,1327;;b1,0;;m">
</treenode>
<treenode node="ensureAuthenticationCallSuccessful;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;821;5;833;;;;vpos;;vvoid;;r&#10;Definition&#10;    ensureAuthenticationCallSuccessful()&#10;&#10;Description&#10;     Ensure that authentication was checked. Terminate with exception if no authentication was performed;;d4,822;;b1,0;;m">
</treenode>
<treenode node="ensureIsProxy;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;744;5;749;;;;vpos;;vvoid;;r&#10;Definition&#10;    ensureIsProxy()&#10;&#10;Description&#10;     Ensure that this is actually a proxy object or fail with an exception;;d4,745;;b1,0;;m">
</treenode>
<treenode node="forceAuthentication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1275;5;1294;;;;vpos;;vtrue;;r&#10;Definition&#10;    forceAuthentication()&#10;&#10;Description&#10;     This method is called to be sure that the user is authenticated. When not authenticated, halt by redirecting to the CAS server;s otherwise return true.&#10;&#10;Return:&#10;   when the user is authenticated;s otherwise halt;;d4,1276;;b1,0;;m">
</treenode>
<treenode node="getAllowedProxyChains;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3136;5;3142;;;;vpos;;vCAS_ProxyChain_AllowedList;;r&#10;Definition&#10;    getAllowedProxyChains ()&#10;&#10;Description&#10;     Answer the CAS_ProxyChain_AllowedList object for this client.;;d4,3137;;b1,0;;m">
</treenode>
<treenode node="getAttribute;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1233;5;1241;;;;vpos;;vstring;;r&#10;Definition&#10;    getAttribute($key)&#10;&#10;Description&#10;     Get a specific attribute by name&#10;&#10;Parameters:&#10;    string $key - name of attribute&#10;&#10;Return:&#10;   attribute values;;d4,1234;;b1,0;;mstring $key;;p">
</treenode>
<treenode node="getAttributes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1171;5;1184;;;;vpos;;varry;;r&#10;Definition&#10;    getAttributes()&#10;&#10;Description&#10;     Get an key values arry of attributes&#10;&#10;Return:&#10;   of attributes;;d4,1172;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationCallerFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;843;5;847;;;;vpos;;varray;;r&#10;Definition&#10;    getAuthenticationCallerFile ()&#10;&#10;Description&#10;     Answer information about the authentication caller.&#10;&#10;Return:&#10;   Keys are &apos;file&apos;, &apos;line&apos;, and &apos;method&apos;;;d4,844;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationCallerLine;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;857;5;861;;;;vpos;;varray;;r&#10;Definition&#10;    getAuthenticationCallerLine ()&#10;&#10;Description&#10;     Answer information about the authentication caller.&#10;&#10;Return:&#10;   Keys are &apos;file&apos;, &apos;line&apos;, and &apos;method&apos;;;d4,858;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationCallerMethod;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;871;5;875;;;;vpos;;varray;;r&#10;Definition&#10;    getAuthenticationCallerMethod ()&#10;&#10;Description&#10;     Answer information about the authentication caller.&#10;&#10;Return:&#10;   Keys are &apos;file&apos;, &apos;line&apos;, and &apos;method&apos;;;d4,872;;b1,0;;m">
</treenode>
<treenode node="getChangeSessionID;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1071;5;1074;;;;vpos;;vbool;;r&#10;Definition&#10;    getChangeSessionID()&#10;&#10;Description&#10;     Get whether phpCas is allowed to change session_id;;d4,1072;;b1,0;;m">
</treenode>
<treenode node="getLangObj;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;221;5;225;;;;vpos;;vCAS_Languages_LanguageInterface;;r&#10;Definition&#10;    getLangObj()&#10;&#10;Description&#10;     Create the language&#10;&#10;Return:&#10;   object implementing the class;;d4,222;;b1,0;;m">
</treenode>
<treenode node="getProxiedService;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2881;5;2915;;;;vpos;;vCAS_ProxiedService;;r&#10;Definition&#10;    getProxiedService ($type)&#10;&#10;Description&#10;     Answer a proxy-authenticated service handler.&#10;&#10;Parameters:&#10;    string $type - The service type;;d4,2882;;b1,0;;mstring $type;;p">
</treenode>
<treenode node="getProxies;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3096;5;3099;;;;vpos;;varray;;r&#10;Definition&#10;    getProxies()&#10;&#10;Description&#10;     Answer an array of proxies that are sitting in front of this application.;;d4,3097;;b1,0;;m">
</treenode>
<treenode node="getServerLoginURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;336;5;355;;;;vpos;;va;;r&#10;Definition&#10;    getServerLoginURL($gateway=false,$renew=false)&#10;&#10;Description&#10;     This method is used to retrieve the login URL of the CAS server.&#10;&#10;Parameters:&#10;    bool $gateway - true to check authentication, false to force it&#10;    bool $renew - true to force the authentication with the CAS server&#10;&#10;Return:&#10;   URL;;d4,337;;b1,0;;mbool $gateway;;pbool $renew;;p">
</treenode>
<treenode node="getServerLogoutURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;540;5;547;;;;vpos;;vstring;;r&#10;Definition&#10;    getServerLogoutURL()&#10;&#10;Description&#10;     This method is used to retrieve the logout URL of the CAS server.&#10;&#10;Return:&#10;   logout URL;;d4,541;;b1,0;;m">
</treenode>
<treenode node="getServerProxyURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;518;5;533;;;;vpos;;vstring;;r&#10;Definition&#10;    getServerProxyURL()&#10;&#10;Description&#10;     This method is used to retrieve the proxy URL of the CAS server.&#10;&#10;Return:&#10;   proxy URL;;d4,519;;b1,0;;m">
</treenode>
<treenode node="getServerProxyValidateURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;487;5;510;;;;vpos;;vstring;;r&#10;Definition&#10;    getServerProxyValidateURL()&#10;&#10;Description&#10;     This method is used to retrieve the proxy validating URL of the CAS server.&#10;&#10;Return:&#10;   proxyValidate URL;;d4,488;;b1,0;;m">
</treenode>
<treenode node="getServerSamlValidateURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;462;5;480;;;;vpos;;vstring;;r&#10;Definition&#10;    getServerSamlValidateURL()&#10;&#10;Description&#10;     This method is used to retrieve the SAML validating URL of the CAS server.&#10;&#10;Return:&#10;   samlValidate URL;;d4,463;;b1,0;;m">
</treenode>
<treenode node="getServerServiceValidateURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;430;5;456;;;;vpos;;vstring;;r&#10;Definition&#10;    getServerServiceValidateURL()&#10;&#10;Description&#10;     This method is used to retrieve the service validating URL of the CAS server.&#10;&#10;Return:&#10;   serviceValidate URL;;d4,431;;b1,0;;m">
</treenode>
<treenode node="getServerVersion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;272;5;275;;;;vpos;;vstring;;r&#10;Definition&#10;    getServerVersion()&#10;&#10;Description&#10;     This method is used to retrieve the version of the CAS server.&#10;&#10;Return:&#10;   the version of the CAS server;;d4,273;;b1,0;;m">
</treenode>
<treenode node="getTicket;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;1869;5;1872;;;;vpos;;vstring;;r&#10;Definition&#10;    getTicket()&#10;&#10;Description&#10;     This method returns the Service Ticket provided in the URL of the request.&#10;&#10;Return:&#10;   service ticket;;d4,1870;;b1,0;;m">
</treenode>
<treenode node="getURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3523;5;3552;;;;vpos;;vThe;;r&#10;Definition&#10;    getURL()&#10;&#10;Description&#10;     This method returns the URL of the current request (without any ticket CGI parameter).&#10;&#10;Return:&#10;   URL;;d4,3524;;b1,0;;m">
</treenode>
<treenode node="getUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1117;5;1123;;;;vpos;;vstring;;r&#10;Definition&#10;    getUser()&#10;&#10;Description&#10;     This method returns the CAS user&apos;s login name.&#10;&#10;Return:&#10;   the login name of the authenticated user;;d4,1118;;b1,0;;m">
</treenode>
<treenode node="handleLogoutRequests;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1734;5;1837;;;;vpos;;vvoid;;r&#10;Definition&#10;    handleLogoutRequests($check_client=true, $allowed_clients=false)&#10;&#10;Description&#10;     This method handles logout requests.&#10;&#10;Parameters:&#10;    bool $check_client - true to check the client bofore handling&#10;    bool $allowed_clients - an array of host names allowed to send;;d4,1735;;b1,0;;mbool $check_client;;pbool $allowed_clients;;p">
</treenode>
<treenode node="hasAttribute;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1205;5;1211;;;;vpos;;vbool;;r&#10;Definition&#10;    hasAttribute($key)&#10;&#10;Description&#10;     Check whether a specific attribute with a name is available&#10;&#10;Parameters:&#10;    string $key - name of attribute&#10;&#10;Return:&#10;   is attribute available;;d4,1206;;b1,0;;mstring $key;;p">
</treenode>
<treenode node="hasAttributes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1191;5;1197;;;;vpos;;vbool;;r&#10;Definition&#10;    hasAttributes()&#10;&#10;Description&#10;     Check whether attributes are available&#10;&#10;Return:&#10;   attributes available;;d4,1192;;b1,0;;m">
</treenode>
<treenode node="hasTicket;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1891;5;1894;;;;vpos;;vbool;;r&#10;Definition&#10;    hasTicket()&#10;&#10;Description&#10;     This method tells if a Service Ticket was stored.&#10;&#10;Return:&#10;   if a Service Ticket has been stored;;d4,1892;;b1,0;;m">
</treenode>
<treenode node="initializeProxiedService;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2932;5;2951;;;;vpos;;vvoid;;r&#10;Definition&#10;    initializeProxiedService (CAS_ProxiedService $proxiedService)&#10;&#10;Description&#10;     Initialize a proxied-service handler with the proxy-ticket it should use.&#10;&#10;Parameters:&#10;    CAS_ProxiedService $proxiedService - service handler;;d4,2933;;b1,0;;mCAS_ProxiedService $proxiedService;;p">
</treenode>
<treenode node="isAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1387;5;1528;;;;vpos;;vtrue;;r&#10;Definition&#10;    isAuthenticated($renew=false)&#10;&#10;Description&#10;     This method is called to check if the user is authenticated (previously or by tickets given in the URL).&#10;&#10;Parameters:&#10;    bool $renew - true to force the authentication with the CAS server&#10;&#10;Return:&#10;   when the user is authenticated;;d4,1388;;b1,0;;mbool $renew;;p">
</treenode>
<treenode node="isProxy;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2241;5;2244;;;;vpos;;vtrue;;r&#10;Definition&#10;    isProxy()&#10;&#10;Description&#10;     Tells if a CAS client is a CAS proxy or not&#10;&#10;Return:&#10;   when the CAS client is a CAs proxy, false otherwise;;d4,2242;;b1,0;;m">
</treenode>
<treenode node="isSessionAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1535;5;1538;;;;vpos;;vtrue;;r&#10;Definition&#10;    isSessionAuthenticated ()&#10;&#10;Description&#10;     This method tells if the current session is authenticated.&#10;&#10;Return:&#10;   if authenticated based soley on $_SESSION variable;;d4,1536;;b1,0;;m">
</treenode>
<treenode node="logout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1680;5;1712;;;;vpos;;vvoid;;r&#10;Definition&#10;    logout($params)&#10;&#10;Description&#10;     This method is used to logout from CAS.&#10;&#10;Parameters:&#10;    array $params - an array that contains the optional url and service;;d4,1681;;b1,0;;marray $params;;p">
</treenode>
<treenode node="markAuthenticationCall;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;760;5;770;;;;vpos;;vnull;;r&#10;Definition&#10;    markAuthenticationCall ($auth)&#10;&#10;Description&#10;     Mark the caller of authentication. This will help client integraters determine problems with their code flow if they call a function such as getUser() before authentication has occurred.&#10;&#10;Parameters:&#10;    bool $auth - True if authentication was successful, false otherwise;;d4,761;;b1,0;;mbool $auth;;p">
</treenode>
<treenode node="printHTMLFooter;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;128;5;140;;;;vpos;;vvoid;;r&#10;Definition&#10;    printHTMLFooter()&#10;&#10;Description&#10;     This method prints the footer of the HTML output (after filtering). If CAS_Client::setHTMLFooter() was not used, a default footer is output.;;d4,129;;b1,0;;m">
</treenode>
<treenode node="printHTMLHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;100;5;110;;;;vpos;;vvoid;;r&#10;Definition&#10;    printHTMLHeader($title)&#10;&#10;Description&#10;     This method prints the header of the HTML output (after filtering). If CAS_Client::setHTMLHeader() was not used, a default header is output.&#10;&#10;Parameters:&#10;    string $title - the title of the page;;d4,101;;b1,0;;mstring $title;;p">
</treenode>
<treenode node="redirectToCas;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1652;5;1669;;;;vpos;;vvoid;;r&#10;Definition&#10;    redirectToCas($gateway=false,$renew=false)&#10;&#10;Description&#10;     This method is used to redirect the client to the CAS server. It is used by CAS_Client::forceAuthentication() and CAS_Client::checkAuthentication().&#10;&#10;Parameters:&#10;    bool $gateway - true to check authentication, false to force it&#10;    bool $renew - true to force the authentication with the CAS server;;d4,1653;;b1,0;;mbool $gateway;;pbool $renew;;p">
</treenode>
<treenode node="renewAuthentication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1250;5;1267;;;;vpos;;vtrue;;r&#10;Definition&#10;    renewAuthentication()&#10;&#10;Description&#10;     This method is called to renew the authentication of the user If the user is authenticated, renew the connection If not, redirect to CAS&#10;&#10;Return:&#10;   when the user is authenticated;s otherwise halt;;d4,1251;;b1,0;;m">
</treenode>
<treenode node="retrievePT;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2657;5;2763;;;;vpos;;va;;r&#10;Definition&#10;    retrievePT($target_service,&amp;$err_code,&amp;$err_msg)&#10;&#10;Description&#10;     This method is used to retrieve PT&apos;s from the CAS server thanks to a PGT.&#10;&#10;Parameters:&#10;    string $target_service - the service to ask for with the PT&#10;    string - &amp;$err_code      an error code (PHPCAS_SERVICE_OK on success)&#10;    string - &amp;$err_msg       an error message (empty on success)&#10;&#10;Return:&#10;   Proxy Ticket, or false on error;;d4,2658;;b1,0;;mstring $target_service;;pstring;;pstring;;p">
</treenode>
<treenode node="serviceMail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3017;5;3057;;;;vpos;;vobject;;r&#10;Definition&#10;    serviceMail($url,$serviceUrl,$flags,&amp;$err_code,&amp;$err_msg,&amp;$pt)&#10;&#10;Description&#10;     This method is used to access an IMAP/POP3/NNTP service.&#10;&#10;Parameters:&#10;    string $url - a string giving the URL of the service, including&#10;    string $serviceUrl - a string giving for CAS retrieve Proxy ticket&#10;    string $flags - options given to imap_open()&#10;    int - &amp;$err_code  an error code Possible values are&#10;    string - &amp;$err_msg   an error message on failure&#10;    string - &amp;$pt        the Proxy Ticket (PT) retrieved from the CAS&#10;&#10;Return:&#10;   an IMAP stream on success, false otherwise (in this later;;d4,3018;;b1,0;;mstring $url;;pstring $serviceUrl;;pstring $flags;;pint;;pstring;;pstring;;p">
</treenode>
<treenode node="serviceWeb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2967;5;2996;;;;vpos;;vtrue;;r&#10;Definition&#10;    serviceWeb($url,&amp;$err_code,&amp;$output)&#10;&#10;Description&#10;     This method is used to access an HTTP[S] service.&#10;&#10;Parameters:&#10;    string $url - the service to access&#10;    int - &amp;$err_code an error code Possible values are&#10;    string - &amp;$output   the output of the service (also used to give an error&#10;&#10;Return:&#10;   on success, false otherwise (in this later case, $err_code;;d4,2968;;b1,0;;mstring $url;;pint;;pstring;;p">
</treenode>
<treenode node="setAttributes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1161;5;1164;;;;vpos;;vvoid;;r&#10;Definition&#10;    setAttributes($attributes)&#10;&#10;Description&#10;     Set an array of attributes&#10;&#10;Parameters:&#10;    array $attributes - a key value array of attributes;;d4,1162;;b1,0;;marray $attributes;;p">
</treenode>
<treenode node="setBaseURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3561;5;3568;;;;vpos;;vstring;;r&#10;Definition&#10;    setBaseURL($url)&#10;&#10;Description&#10;     This method sets the base URL of the CAS server.&#10;&#10;Parameters:&#10;    string $url - the base URL&#10;&#10;Return:&#10;   base url;;d4,3562;;b1,0;;mstring $url;;p">
</treenode>
<treenode node="setCacheTimesForAuthRecheck;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1311;5;1317;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCacheTimesForAuthRecheck($n)&#10;&#10;Description&#10;     Set the number of times authentication will be cached before rechecked.&#10;&#10;Parameters:&#10;    int $n - number of times to wait for a recheck;;d4,1312;;b1,0;;mint $n;;p">
</treenode>
<treenode node="setCallbackURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2382;5;2391;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCallbackURL($url)&#10;&#10;Description&#10;     This method sets the callback url.&#10;&#10;Parameters:&#10;    string $url - url to set callback;;d4,2383;;b1,0;;mstring $url;;p">
</treenode>
<treenode node="setCasAttributeParserCallback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;663;5;667;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCasAttributeParserCallback($function, array $additionalArgs = array())&#10;&#10;Description&#10;     Set a callback function to be run when parsing CAS attributes&#10;&#10;Parameters:&#10;    string $function - callback function to call&#10;    array $additionalArgs - optional array of arguments;;d4,664;;b1,0;;mstring $function;;parray $additionalArgs;;p">
</treenode>
<treenode node="setCasServerCACert;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1943;5;1957;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCasServerCACert($cert, $validate_cn)&#10;&#10;Description&#10;     Set the CA certificate of the CAS server.&#10;&#10;Parameters:&#10;    string $cert - the PEM certificate file name of the CA that emited&#10;    bool $validate_cn - valiate CN of the CAS server certificate;;d4,1944;;b1,0;;mstring $cert;;pbool $validate_cn;;p">
</treenode>
<treenode node="setExtraCurlOption;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;578;5;581;;;;vpos;;vvoid;;r&#10;Definition&#10;    setExtraCurlOption($key, $value)&#10;&#10;Description&#10;     This method is used to set additional user curl options.&#10;&#10;Parameters:&#10;    string $key - name of the curl option&#10;    string $value - value of the curl option;;d4,579;;b1,0;;mstring $key;;pstring $value;;p">
</treenode>
<treenode node="setHTMLFooter;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;165;5;172;;;;vpos;;vvoid;;r&#10;Definition&#10;    setHTMLFooter($footer)&#10;&#10;Description&#10;     This method set the HTML footer used for all outputs.&#10;&#10;Parameters:&#10;    string $footer - the HTML footer;;d4,166;;b1,0;;mstring $footer;;p">
</treenode>
<treenode node="setHTMLHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;149;5;156;;;;vpos;;vvoid;;r&#10;Definition&#10;    setHTMLHeader($header)&#10;&#10;Description&#10;     This method set the HTML header used for all outputs.&#10;&#10;Parameters:&#10;    string $header - the HTML header;;d4,150;;b1,0;;mstring $header;;p">
</treenode>
<treenode node="setLang;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;200;5;215;;;;vpos;;vvoid;;r&#10;Definition&#10;    setLang($lang)&#10;&#10;Description&#10;     This method is used to set the language used by phpCAS.&#10;&#10;Parameters:&#10;    string $lang - representing the language;;d4,201;;b1,0;;mstring $lang;;p">
</treenode>
<treenode node="setNoCasServerValidation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1964;5;1967;;;;vpos;;vvoid;;r&#10;Definition&#10;    setNoCasServerValidation()&#10;&#10;Description&#10;     Set no SSL validation for the CAS server.;;d4,1965;;b1,0;;m">
</treenode>
<treenode node="setNoClearTicketsFromUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;637;5;640;;;;vpos;;vvoid;;r&#10;Definition&#10;    setNoClearTicketsFromUrl ()&#10;&#10;Description&#10;     Configure the client to not send redirect headers and call exit() on authentication success. The normal redirect is used to remove the service ticket from the client&apos;s URL, but for running unit tests we need to continue without exiting.;;d4,638;;b1,0;;m">
</treenode>
<treenode node="setPGTStorage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2505;5;2521;;;;vpos;;vvoid;;r&#10;Definition&#10;    setPGTStorage($storage)&#10;&#10;Description&#10;     This method can be used to set a custom PGT storage object.&#10;&#10;Parameters:&#10;    CAS_PGTStorage_AbstractStorage $storage - a PGT storage object that;;d4,2506;;b1,0;;mCAS_PGTStorage_AbstractStorage $storage;;p">
</treenode>
<treenode node="setPGTStorageDb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2540;5;2562;;;;vpos;;vvoid;;r&#10;Definition&#10;    setPGTStorageDb(&#10;        $dsn_or_pdo, $username=&apos;&apos;, $password=&apos;&apos;, $table=&apos;&apos;, $driver_options=null&#10;    )&#10;&#10;Description&#10;     This method is used to tell phpCAS to store the response of the CAS server to PGT requests in a database.&#10;&#10;Parameters:&#10;    string $dsn_or_pdo - a dsn string to use for creating a PDO&#10;    string $username - the username to use when connecting to the&#10;    string $password - the password to use when connecting to the&#10;    string $table - the table to use for storing and retrieving&#10;    string $driver_options - any driver options to use when connecting;;d6,2542;;b1,0;;mstring $dsn_or_pdo;;pstring $username;;pstring $password;;pstring $table;;pstring $driver_options;;p">
</treenode>
<treenode node="setPGTStorageFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2572;5;2583;;;;vpos;;vvoid;;r&#10;Definition&#10;    setPGTStorageFile($path=&apos;&apos;)&#10;&#10;Description&#10;     This method is used to tell phpCAS to store the response of the CAS server to PGT requests onto the filesystem.&#10;&#10;Parameters:&#10;    string $path - the path where the PGT&apos;s should be stored;;d4,2573;;b1,0;;mstring $path;;p">
</treenode>
<treenode node="setPostAuthenticateCallback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;697;5;701;;;;vpos;;vvoid;;r&#10;Definition&#10;    setPostAuthenticateCallback ($function, array $additionalArgs = array())&#10;&#10;Description&#10;     Set a callback function to be run when a user authenticates.&#10;&#10;Parameters:&#10;    string $function - callback function to call&#10;    array $additionalArgs - optional array of arguments;;d4,698;;b1,0;;mstring $function;;parray $additionalArgs;;p">
</treenode>
<treenode node="setRequestImplementation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;610;5;619;;;;vpos;;vvoid;;r&#10;Definition&#10;    setRequestImplementation ($className)&#10;&#10;Description&#10;     Override the default implementation used to make web requests in readUrl(). This class must implement the CAS_Request_RequestInterface.&#10;&#10;Parameters:&#10;    string $className - name of the RequestImplementation class;;d4,611;;b1,0;;mstring $className;;p">
</treenode>
<treenode node="setServerLoginURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;364;5;371;;;;vpos;;vstring;;r&#10;Definition&#10;    setServerLoginURL($url)&#10;&#10;Description&#10;     This method sets the login URL of the CAS server.&#10;&#10;Parameters:&#10;    string $url - the login URL&#10;&#10;Return:&#10;   login url;;d4,365;;b1,0;;mstring $url;;p">
</treenode>
<treenode node="setServerLogoutURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;556;5;563;;;;vpos;;vstring;;r&#10;Definition&#10;    setServerLogoutURL($url)&#10;&#10;Description&#10;     This method sets the logout URL of the CAS server.&#10;&#10;Parameters:&#10;    string $url - the logout URL&#10;&#10;Return:&#10;   logout url;;d4,557;;b1,0;;mstring $url;;p">
</treenode>
<treenode node="setServerProxyValidateURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;398;5;405;;;;vpos;;vstring;;r&#10;Definition&#10;    setServerProxyValidateURL($url)&#10;&#10;Description&#10;     This method sets the proxyValidate URL of the CAS server.&#10;&#10;Parameters:&#10;    string $url - the proxyValidate URL&#10;&#10;Return:&#10;   proxyValidate URL;;d4,399;;b1,0;;mstring $url;;p">
</treenode>
<treenode node="setServerSamlValidateURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;415;5;422;;;;vpos;;vstring;;r&#10;Definition&#10;    setServerSamlValidateURL($url)&#10;&#10;Description&#10;     This method sets the samlValidate URL of the CAS server.&#10;&#10;Parameters:&#10;    string $url - the samlValidate URL&#10;&#10;Return:&#10;   samlValidate URL;;d4,416;;b1,0;;mstring $url;;p">
</treenode>
<treenode node="setServerServiceValidateURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;381;5;388;;;;vpos;;vstring;;r&#10;Definition&#10;    setServerServiceValidateURL($url)&#10;&#10;Description&#10;     This method sets the serviceValidate URL of the CAS server.&#10;&#10;Parameters:&#10;    string $url - the serviceValidate URL&#10;&#10;Return:&#10;   serviceValidate URL;;d4,382;;b1,0;;mstring $url;;p">
</treenode>
<treenode node="setSessionIdSalt;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3735;5;3737;;;;vpos;;vvoid;;r&#10;Definition&#10;    setSessionIdSalt($salt)&#10;&#10;Description&#10;     Set a salt/seed for the session-id hash to make it harder to guess.&#10;&#10;Parameters:&#10;    string $salt;;d44,3735;;b1,0;;mstring $salt;;p">
</treenode>
<treenode node="setSingleSignoutCallback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;727;5;731;;;;vpos;;vvoid;;r&#10;Definition&#10;    setSingleSignoutCallback ($function, array $additionalArgs = array())&#10;&#10;Description&#10;     Set a callback function to be run when a single-signout request is received.&#10;&#10;Parameters:&#10;    string $function - callback function to call&#10;    array $additionalArgs - optional array of arguments;;d4,728;;b1,0;;mstring $function;;parray $additionalArgs;;p">
</treenode>
<treenode node="setTicket;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1881;5;1884;;;;vpos;;vvoid;;r&#10;Definition&#10;    setTicket($st)&#10;&#10;Description&#10;     This method stores the Service Ticket.&#10;&#10;Parameters:&#10;    string $st - The Service Ticket;;d4,1882;;b1,0;;mstring $st;;p">
</treenode>
<treenode node="setURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3508;5;3515;;;;vpos;;vvoid;;r&#10;Definition&#10;    setURL($url)&#10;&#10;Description&#10;     This method sets the URL of the current request&#10;&#10;Parameters:&#10;    string $url - url to set for service;;d4,3509;;b1,0;;mstring $url;;p">
</treenode>
<treenode node="validateCAS10;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1984;5;2035;;;;vpos;;vbool;;r&#10;Definition&#10;    validateCAS10(&amp;$validate_url,&amp;$text_response,&amp;$tree_response,$renew=false)&#10;&#10;Description&#10;     This method is used to validate a CAS 1,0 ticket;s halt on failure, and sets $validate_url, $text_reponse and $tree_response on success.&#10;&#10;Parameters:&#10;    string - &amp;$validate_url  reference to the the URL of the request to&#10;    string - &amp;$text_response reference to the response of the CAS&#10;    string - &amp;$tree_response reference to the response of the CAS&#10;    bool $renew - true to force the authentication with the CAS server&#10;&#10;Return:&#10;   true when successfull and issue a CAS_AuthenticationException;;d4,1985;;b1,0;;mstring;;pstring;;pstring;;pbool $renew;;p">
</treenode>
<treenode node="validateCAS20;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3165;5;3298;;;;vpos;;vbool;;r&#10;Definition&#10;    validateCAS20(&amp;$validate_url,&amp;$text_response,&amp;$tree_response, $renew=false)&#10;&#10;Description&#10;     This method is used to validate a cas 2.0 ST or PT;s halt on failure Used for all CAS 2.0 validations&#10;&#10;Parameters:&#10;    string - &amp;$validate_url  the url of the reponse&#10;    string - &amp;$text_response the text of the repsones&#10;    string - &amp;$tree_response the domxml tree of the respones&#10;    bool $renew - true to force the authentication with the CAS server&#10;&#10;Return:&#10;   true when successfull and issue a CAS_AuthenticationException;;d4,3166;;b1,0;;mstring;;pstring;;pstring;;pbool $renew;;p">
</treenode>
<treenode node="validateSA;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2064;5;2151;;;;vpos;;vbool;;r&#10;Definition&#10;    validateSA(&amp;$validate_url,&amp;$text_response,&amp;$tree_response,$renew=false)&#10;&#10;Description&#10;     This method is used to validate a SAML TICKET;s halt on failure, and sets $validate_url, $text_reponse and $tree_response on success. These parameters are used later by CAS_Client::_validatePGT() for CAS proxies.&#10;&#10;Parameters:&#10;    string - &amp;$validate_url  reference to the the URL of the request to&#10;    string - &amp;$text_response reference to the response of the CAS&#10;    string - &amp;$tree_response reference to the response of the CAS&#10;    bool $renew - true to force the authentication with the CAS server&#10;&#10;Return:&#10;   true when successfull and issue a CAS_AuthenticationException;;d4,2065;;b1,0;;mstring;;pstring;;pstring;;pbool $renew;;p">
</treenode>
<treenode node="wasAuthenticationCalled;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;778;5;781;;;;vpos;;vbool;;r&#10;Definition&#10;    wasAuthenticationCalled ()&#10;&#10;Description&#10;     Answer true if authentication has been checked.;;d4,779;;b1,0;;m">
</treenode>
<treenode node="wasAuthenticationCallSuccessful;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;806;5;810;;;;vpos;;vbool;;r&#10;Definition&#10;    wasAuthenticationCallSuccessful ()&#10;&#10;Description&#10;     Answer the result of the authentication call.;;d4,807;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_CookieJar;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f0;40;1;382;;;;vpos;;v;;r&#10;Definition&#10;    class CAS_CookieJar&#10;&#10;Description&#10;     This class provides access to service cookies and handles parsing of response headers to pull out cookie values.;;d0,41;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f11;53;5;56;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct (array &amp;$storageArray)&#10;&#10;Description&#10;     Create a new cookie jar by passing it a reference to an array in which it should store cookies.&#10;&#10;Parameters:&#10;    array - &amp;$storageArray Array to store cookies;;d4,54;;b1,0;;marray;;p">
</treenode>
<treenode node="cookieMatchesTarget;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f14;316;5;380;;;;vpos;;vbool;;r&#10;Definition&#10;    cookieMatchesTarget ($cookie, $target)&#10;&#10;Description&#10;     Answer true if cookie is applicable to a target.&#10;&#10;Parameters:&#10;    array $cookie - An array of cookie attributes&#10;    array $target - An array of URL attributes as generated by parse_url();;d4,317;;b2,0;;marray $cookie;;parray $target;;p">
</treenode>
<treenode node="discardCookie;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f14;271;5;288;;;;vpos;;vvoid;;r&#10;Definition&#10;    discardCookie ($cookie)&#10;&#10;Description&#10;     Discard an existing cookie&#10;&#10;Parameters:&#10;    array $cookie - An cookie;;d4,272;;b2,0;;marray $cookie;;p">
</treenode>
<treenode node="expireCookies;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f14;297;5;304;;;;vpos;;vvoid;;r&#10;Definition&#10;    expireCookies ()&#10;&#10;Description&#10;     Go through our stored cookies and remove any that are expired.;;d4,298;;b2,0;;m">
</treenode>
<treenode node="getCookies;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f11;101;5;122;;;;vpos;;varray;;r&#10;Definition&#10;    getCookies ($request_url)&#10;&#10;Description&#10;     Retrieve cookies applicable for a web service request. Cookie applicability is based on RFC 2965: http://www.ietf.org/rfc/rfc2965.txt&#10;&#10;Parameters:&#10;    string $request_url - The url that the cookies will be for&#10;&#10;Return:&#10;   An array containing cookies;;d4,102;;b1,0;;mstring $request_url;;p">
</treenode>
<treenode node="parseCookieHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f14;160;5;243;;;;vpos;;varray;;r&#10;Definition&#10;    parseCookieHeader ($line, $defaultDomain)&#10;&#10;Description&#10;     Parse a single cookie header line.&#10;&#10;Parameters:&#10;    string $line - The header line&#10;    string $defaultDomain - The domain to use if none is specified in;;d4,161;;b2,0;;mstring $line;;pstring $defaultDomain;;p">
</treenode>
<treenode node="parseCookieHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f14;135;5;147;;;;vpos;;varray;;r&#10;Definition&#10;    parseCookieHeaders( $header, $defaultDomain )&#10;&#10;Description&#10;     Parse Cookies without PECL From the comments in http://php.net/manual/en/function.http-parse-cookie.php&#10;&#10;Parameters:&#10;    array $header - array of header lines&#10;    string $defaultDomain - The domain to use if none is specified in&#10;&#10;Return:&#10;   of cookies;;d4,136;;b2,0;;marray $header;;pstring $defaultDomain;;p">
</treenode>
<treenode node="storeCookie;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f14;254;5;260;;;;vpos;;vvoid;;r&#10;Definition&#10;    storeCookie ($cookie)&#10;&#10;Description&#10;     Add, update, or remove a cookie.&#10;&#10;Parameters:&#10;    array $cookie - A cookie array as created by parseCookieHeaders();;d4,255;;b2,0;;marray $cookie;;p">
</treenode>
<treenode node="storeCookies;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f11;69;5;89;;;;vpos;;vvoid;;r&#10;Definition&#10;    storeCookies ($request_url, $response_headers)&#10;&#10;Description&#10;     Store cookies for a web service request. Cookie storage is based on RFC 2965: http://www.ietf.org/rfc/rfc2965.txt&#10;&#10;Parameters:&#10;    string $request_url - The URL that generated the response headers&#10;    array $response_headers - An array of the HTTP response header strings;;d4,70;;b1,0;;mstring $request_url;;parray $response_headers;;p">
</treenode>
</treenode>
<treenode node="CAS_GracefullTerminationException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\GracefullTerminationException.php;f0;42;1;84;;;;vpos;;vRuntimeException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_GracefullTerminationException&#10;extends RuntimeException&#10;implements CAS_Exception&#10;&#10;Description&#10;     An exception for terminatinating execution or to throw for unit testing;;d0,45;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\GracefullTerminationException.php;f11;59;5;68;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct ($message = &apos;Terminate Gracefully&apos;, $code = 0)&#10;&#10;Description&#10;     Test if exceptions should be thrown or if we should just exit. In production usage we want to just exit cleanly when prompting the user for a redirect without filling the error logs with uncaught exceptions. In unit testing scenarios we cannot exit or we won&apos;t be able to continue with our tests.&#10;&#10;Parameters:&#10;    string $message - Message Text&#10;    string $code - Error code;;d4,60;;b1,0;;mstring $message;;pstring $code;;p">
</treenode>
<treenode node="throwInsteadOfExiting;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\GracefullTerminationException.php;f18;79;5;82;;;;vpos;;vvoid;;r&#10;Definition&#10;    throwInsteadOfExiting()&#10;&#10;Description&#10;     Force phpcas to thow Exceptions instead of calling exit() Needed for unit testing. Generally shouldn&apos;t be used in production due to an increase in Apache error logging if CAS_GracefulTerminiationExceptions are not caught and handled.;;d4,80;;b1,5;;m">
</treenode>
</treenode>
<treenode node="CAS_InvalidArgumentException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\InvalidArgumentException.php;f0;39;1;44;;;;vpos;;vInvalidArgumentException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_InvalidArgumentException&#10;extends InvalidArgumentException&#10;implements CAS_Exception&#10;&#10;Description&#10;     Exception that denotes invalid arguments were passed.;;d0,42;;b0,0;;m">
</treenode>
<treenode node="CAS_Languages_Catalan;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Catalan.php;f0;42;1;113;;;;vpos;;vCAS_Languages_LanguageInterface;;c;;r&#10;Definition&#10;    class CAS_Languages_Catalan implements CAS_Languages_LanguageInterface&#10;&#10;Description&#10;     Catalan language class;;d0,43;;b0,0;;m">
<treenode node="getAuthenticationFailed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Catalan.php;f11;89;5;92;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationFailed()&#10;&#10;Description&#10;     Get authentication failed string&#10;&#10;Return:&#10;   authentication failed;;d4,90;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Catalan.php;f11;59;5;62;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationWanted()&#10;&#10;Description&#10;     Get authentication wanted string&#10;&#10;Return:&#10;   authentication wanted;;d4,60;;b1,0;;m">
</treenode>
<treenode node="getLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Catalan.php;f11;69;5;72;;;;vpos;;vstring;;r&#10;Definition&#10;    getLogout()&#10;&#10;Description&#10;     Get logout string&#10;&#10;Return:&#10;   logout;;d4,70;;b1,0;;m">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Catalan.php;f11;109;5;112;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUnavailable()&#10;&#10;Description&#10;     Get the service unavailable string&#10;&#10;Return:&#10;   service unavailable;;d4,110;;b1,0;;m">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Catalan.php;f11;79;5;82;;;;vpos;;vstring;;r&#10;Definition&#10;    getShouldHaveBeenRedirected()&#10;&#10;Description&#10;     Get the should have been redirected string&#10;&#10;Return:&#10;   should habe been redirected;;d4,80;;b1,0;;m">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Catalan.php;f11;49;5;52;;;;vpos;;vstring;;r&#10;Definition&#10;    getUsingServer()&#10;&#10;Description&#10;     Get the using server string&#10;&#10;Return:&#10;   using server;;d4,50;;b1,0;;m">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Catalan.php;f11;99;5;102;;;;vpos;;vstring;;r&#10;Definition&#10;    getYouWereNotAuthenticated()&#10;&#10;Description&#10;     Get the your were not authenticated string&#10;&#10;Return:&#10;   not authenticated;;d4,100;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_Languages_ChineseSimplified;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\ChineseSimplified.php;f0;42;1;113;;;;vpos;;vCAS_Languages_LanguageInterface;;c;;r&#10;Definition&#10;    class CAS_Languages_ChineseSimplified implements CAS_Languages_LanguageInterface&#10;&#10;Description&#10;     Chinese Simplified language class;;d0,43;;b0,0;;m">
<treenode node="getAuthenticationFailed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\ChineseSimplified.php;f11;89;5;92;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationFailed()&#10;&#10;Description&#10;     Get authentication failed string&#10;&#10;Return:&#10;   authentication failed;;d4,90;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\ChineseSimplified.php;f11;59;5;62;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationWanted()&#10;&#10;Description&#10;     Get authentication wanted string&#10;&#10;Return:&#10;   authentication wanted;;d4,60;;b1,0;;m">
</treenode>
<treenode node="getLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\ChineseSimplified.php;f11;69;5;72;;;;vpos;;vstring;;r&#10;Definition&#10;    getLogout()&#10;&#10;Description&#10;     Get logout string&#10;&#10;Return:&#10;   logout;;d4,70;;b1,0;;m">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\ChineseSimplified.php;f11;109;5;112;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUnavailable()&#10;&#10;Description&#10;     Get the service unavailable string&#10;&#10;Return:&#10;   service unavailable;;d4,110;;b1,0;;m">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\ChineseSimplified.php;f11;79;5;82;;;;vpos;;vstring;;r&#10;Definition&#10;    getShouldHaveBeenRedirected()&#10;&#10;Description&#10;     Get the should have been redirected string&#10;&#10;Return:&#10;   should habe been redirected;;d4,80;;b1,0;;m">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\ChineseSimplified.php;f11;49;5;52;;;;vpos;;vstring;;r&#10;Definition&#10;    getUsingServer()&#10;&#10;Description&#10;     Get the using server string&#10;&#10;Return:&#10;   using server;;d4,50;;b1,0;;m">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\ChineseSimplified.php;f11;99;5;102;;;;vpos;;vstring;;r&#10;Definition&#10;    getYouWereNotAuthenticated()&#10;&#10;Description&#10;     Get the your were not authenticated string&#10;&#10;Return:&#10;   not authenticated;;d4,100;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_Languages_English;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\English.php;f0;42;1;113;;;;vpos;;vCAS_Languages_LanguageInterface;;c;;r&#10;Definition&#10;    class CAS_Languages_English implements CAS_Languages_LanguageInterface&#10;&#10;Description&#10;     English language class;;d0,43;;b0,0;;m">
<treenode node="getAuthenticationFailed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\English.php;f11;89;5;92;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationFailed()&#10;&#10;Description&#10;     Get authentication failed string&#10;&#10;Return:&#10;   authentication failed;;d4,90;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\English.php;f11;59;5;62;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationWanted()&#10;&#10;Description&#10;     Get authentication wanted string&#10;&#10;Return:&#10;   authentication wanted;;d4,60;;b1,0;;m">
</treenode>
<treenode node="getLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\English.php;f11;69;5;72;;;;vpos;;vstring;;r&#10;Definition&#10;    getLogout()&#10;&#10;Description&#10;     Get logout string&#10;&#10;Return:&#10;   logout;;d4,70;;b1,0;;m">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\English.php;f11;109;5;112;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUnavailable()&#10;&#10;Description&#10;     Get the service unavailable string&#10;&#10;Return:&#10;   service unavailable;;d4,110;;b1,0;;m">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\English.php;f11;79;5;82;;;;vpos;;vstring;;r&#10;Definition&#10;    getShouldHaveBeenRedirected()&#10;&#10;Description&#10;     Get the should have been redirected string&#10;&#10;Return:&#10;   should habe been redirected;;d4,80;;b1,0;;m">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\English.php;f11;49;5;52;;;;vpos;;vstring;;r&#10;Definition&#10;    getUsingServer()&#10;&#10;Description&#10;     Get the using server string&#10;&#10;Return:&#10;   using server;;d4,50;;b1,0;;m">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\English.php;f11;99;5;102;;;;vpos;;vstring;;r&#10;Definition&#10;    getYouWereNotAuthenticated()&#10;&#10;Description&#10;     Get the your were not authenticated string&#10;&#10;Return:&#10;   not authenticated;;d4,100;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_Languages_French;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\French.php;f0;42;1;113;;;;vpos;;vCAS_Languages_LanguageInterface;;c;;r&#10;Definition&#10;    class CAS_Languages_French implements CAS_Languages_LanguageInterface&#10;&#10;Description&#10;     French language class;;d0,43;;b0,0;;m">
<treenode node="getAuthenticationFailed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\French.php;f11;89;5;92;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationFailed()&#10;&#10;Description&#10;     Get authentication failed string&#10;&#10;Return:&#10;   authentication failed;;d4,90;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\French.php;f11;59;5;62;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationWanted()&#10;&#10;Description&#10;     Get authentication wanted string&#10;&#10;Return:&#10;   authentication wanted;;d4,60;;b1,0;;m">
</treenode>
<treenode node="getLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\French.php;f11;69;5;72;;;;vpos;;vstring;;r&#10;Definition&#10;    getLogout()&#10;&#10;Description&#10;     Get logout string&#10;&#10;Return:&#10;   logout;;d4,70;;b1,0;;m">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\French.php;f11;109;5;112;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUnavailable()&#10;&#10;Description&#10;     Get the service unavailable string&#10;&#10;Return:&#10;   service unavailable;;d4,110;;b1,0;;m">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\French.php;f11;79;5;82;;;;vpos;;vstring;;r&#10;Definition&#10;    getShouldHaveBeenRedirected()&#10;&#10;Description&#10;     Get the should have been redirected string&#10;&#10;Return:&#10;   should habe been redirected;;d4,80;;b1,0;;m">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\French.php;f11;49;5;52;;;;vpos;;vstring;;r&#10;Definition&#10;    getUsingServer()&#10;&#10;Description&#10;     Get the using server string&#10;&#10;Return:&#10;   using server;;d4,50;;b1,0;;m">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\French.php;f11;99;5;102;;;;vpos;;vstring;;r&#10;Definition&#10;    getYouWereNotAuthenticated()&#10;&#10;Description&#10;     Get the your were not authenticated string&#10;&#10;Return:&#10;   not authenticated;;d4,100;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_Languages_German;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\German.php;f0;42;1;113;;;;vpos;;vCAS_Languages_LanguageInterface;;c;;r&#10;Definition&#10;    class CAS_Languages_German implements CAS_Languages_LanguageInterface&#10;&#10;Description&#10;     German language class;;d0,43;;b0,0;;m">
<treenode node="getAuthenticationFailed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\German.php;f11;89;5;92;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationFailed()&#10;&#10;Description&#10;     Get authentication failed string&#10;&#10;Return:&#10;   authentication failed;;d4,90;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\German.php;f11;59;5;62;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationWanted()&#10;&#10;Description&#10;     Get authentication wanted string&#10;&#10;Return:&#10;   authentication wanted;;d4,60;;b1,0;;m">
</treenode>
<treenode node="getLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\German.php;f11;69;5;72;;;;vpos;;vstring;;r&#10;Definition&#10;    getLogout()&#10;&#10;Description&#10;     Get logout string&#10;&#10;Return:&#10;   logout;;d4,70;;b1,0;;m">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\German.php;f11;109;5;112;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUnavailable()&#10;&#10;Description&#10;     Get the service unavailable string&#10;&#10;Return:&#10;   service unavailable;;d4,110;;b1,0;;m">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\German.php;f11;79;5;82;;;;vpos;;vstring;;r&#10;Definition&#10;    getShouldHaveBeenRedirected()&#10;&#10;Description&#10;     Get the should have been redirected string&#10;&#10;Return:&#10;   should habe been redirected;;d4,80;;b1,0;;m">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\German.php;f11;49;5;52;;;;vpos;;vstring;;r&#10;Definition&#10;    getUsingServer()&#10;&#10;Description&#10;     Get the using server string&#10;&#10;Return:&#10;   using server;;d4,50;;b1,0;;m">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\German.php;f11;99;5;102;;;;vpos;;vstring;;r&#10;Definition&#10;    getYouWereNotAuthenticated()&#10;&#10;Description&#10;     Get the your were not authenticated string&#10;&#10;Return:&#10;   not authenticated;;d4,100;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_Languages_Greek;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Greek.php;f0;42;1;113;;;;vpos;;vCAS_Languages_LanguageInterface;;c;;r&#10;Definition&#10;    class CAS_Languages_Greek implements CAS_Languages_LanguageInterface&#10;&#10;Description&#10;     Greek language class;;d0,43;;b0,0;;m">
<treenode node="getAuthenticationFailed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Greek.php;f11;89;5;92;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationFailed()&#10;&#10;Description&#10;     Get authentication failed string&#10;&#10;Return:&#10;   authentication failed;;d4,90;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Greek.php;f11;59;5;62;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationWanted()&#10;&#10;Description&#10;     Get authentication wanted string&#10;&#10;Return:&#10;   authentication wanted;;d4,60;;b1,0;;m">
</treenode>
<treenode node="getLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Greek.php;f11;69;5;72;;;;vpos;;vstring;;r&#10;Definition&#10;    getLogout()&#10;&#10;Description&#10;     Get logout string&#10;&#10;Return:&#10;   logout;;d4,70;;b1,0;;m">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Greek.php;f11;109;5;112;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUnavailable()&#10;&#10;Description&#10;     Get the service unavailable string&#10;&#10;Return:&#10;   service unavailable;;d4,110;;b1,0;;m">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Greek.php;f11;79;5;82;;;;vpos;;vstring;;r&#10;Definition&#10;    getShouldHaveBeenRedirected()&#10;&#10;Description&#10;     Get the should have been redirected string&#10;&#10;Return:&#10;   should habe been redirected;;d4,80;;b1,0;;m">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Greek.php;f11;49;5;52;;;;vpos;;vstring;;r&#10;Definition&#10;    getUsingServer()&#10;&#10;Description&#10;     Get the using server string&#10;&#10;Return:&#10;   using server;;d4,50;;b1,0;;m">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Greek.php;f11;99;5;102;;;;vpos;;vstring;;r&#10;Definition&#10;    getYouWereNotAuthenticated()&#10;&#10;Description&#10;     Get the your were not authenticated string&#10;&#10;Return:&#10;   not authenticated;;d4,100;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_Languages_Japanese;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Japanese.php;f0;40;1;111;;;;vpos;;vCAS_Languages_LanguageInterface;;c;;r&#10;Definition&#10;    class CAS_Languages_Japanese implements CAS_Languages_LanguageInterface&#10;&#10;Description&#10;     Japanese language class. Now Encoding is UTF-8.;;d0,41;;b0,0;;m">
<treenode node="getAuthenticationFailed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Japanese.php;f11;87;5;90;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationFailed()&#10;&#10;Description&#10;     Get authentication failed string&#10;&#10;Return:&#10;   authentication failed;;d4,88;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Japanese.php;f11;57;5;60;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationWanted()&#10;&#10;Description&#10;     Get authentication wanted string&#10;&#10;Return:&#10;   authentication wanted;;d4,58;;b1,0;;m">
</treenode>
<treenode node="getLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Japanese.php;f11;67;5;70;;;;vpos;;vstring;;r&#10;Definition&#10;    getLogout()&#10;&#10;Description&#10;     Get logout string&#10;&#10;Return:&#10;   logout;;d4,68;;b1,0;;m">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Japanese.php;f11;107;5;110;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUnavailable()&#10;&#10;Description&#10;     Get the service unavailable string&#10;&#10;Return:&#10;   service unavailable;;d4,108;;b1,0;;m">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Japanese.php;f11;77;5;80;;;;vpos;;vstring;;r&#10;Definition&#10;    getShouldHaveBeenRedirected()&#10;&#10;Description&#10;     Get the should have been redirected string&#10;&#10;Return:&#10;   should habe been redirected;;d4,78;;b1,0;;m">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Japanese.php;f11;47;5;50;;;;vpos;;vstring;;r&#10;Definition&#10;    getUsingServer()&#10;&#10;Description&#10;     Get the using server string&#10;&#10;Return:&#10;   using server;;d4,48;;b1,0;;m">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Japanese.php;f11;97;5;100;;;;vpos;;vstring;;r&#10;Definition&#10;    getYouWereNotAuthenticated()&#10;&#10;Description&#10;     Get the your were not authenticated string&#10;&#10;Return:&#10;   not authenticated;;d4,98;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_Languages_Spanish;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Spanish.php;f0;43;1;115;;;;vpos;;vCAS_Languages_LanguageInterface;;c;;r&#10;Definition&#10;    class CAS_Languages_Spanish implements CAS_Languages_LanguageInterface&#10;&#10;Description&#10;     Spanish language class;;d0,44;;b0,0;;m">
<treenode node="getAuthenticationFailed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Spanish.php;f11;91;5;94;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationFailed()&#10;&#10;Description&#10;     Get authentication failed string&#10;&#10;Return:&#10;   authentication failed;;d4,92;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Spanish.php;f11;61;5;64;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationWanted()&#10;&#10;Description&#10;     Get authentication wanted string&#10;&#10;Return:&#10;   authentication wanted;;d4,62;;b1,0;;m">
</treenode>
<treenode node="getLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Spanish.php;f11;71;5;74;;;;vpos;;vstring;;r&#10;Definition&#10;    getLogout()&#10;&#10;Description&#10;     Get logout string&#10;&#10;Return:&#10;   logout;;d4,72;;b1,0;;m">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Spanish.php;f11;111;5;114;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUnavailable()&#10;&#10;Description&#10;     Get the service unavailable string&#10;&#10;Return:&#10;   service unavailable;;d4,112;;b1,0;;m">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Spanish.php;f11;81;5;84;;;;vpos;;vstring;;r&#10;Definition&#10;    getShouldHaveBeenRedirected()&#10;&#10;Description&#10;     Get the should have been redirected string&#10;&#10;Return:&#10;   should habe been redirected;;d4,82;;b1,0;;m">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Spanish.php;f11;51;5;54;;;;vpos;;vstring;;r&#10;Definition&#10;    getUsingServer()&#10;&#10;Description&#10;     Get the using server string&#10;&#10;Return:&#10;   using server;;d4,52;;b1,0;;m">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Spanish.php;f11;101;5;104;;;;vpos;;vstring;;r&#10;Definition&#10;    getYouWereNotAuthenticated()&#10;&#10;Description&#10;     Get the your were not authenticated string&#10;&#10;Return:&#10;   not authenticated;;d4,102;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_OutOfSequenceBeforeAuthenticationCallException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\OutOfSequenceBeforeAuthenticationCallException.php;f0;42;1;55;;;;vpos;;vCAS_OutOfSequenceException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_OutOfSequenceBeforeAuthenticationCallException&#10;extends CAS_OutOfSequenceException&#10;implements CAS_Exception&#10;&#10;Description&#10;     This class defines Exceptions that should be thrown when the sequence of operations is invalid. In this case it should be thrown when an authentication call has not yet happened.;;d0,45;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\OutOfSequenceBeforeAuthenticationCallException.php;f11;51;5;54;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct ()&#10;&#10;Description&#10;     Return standard error meessage;;d4,52;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_OutOfSequenceBeforeClientException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\OutOfSequenceBeforeClientException.php;f0;42;1;57;;;;vpos;;vCAS_OutOfSequenceException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_OutOfSequenceBeforeClientException&#10;extends CAS_OutOfSequenceException&#10;implements CAS_Exception&#10;&#10;Description&#10;     This class defines Exceptions that should be thrown when the sequence of operations is invalid. In this case it should be thrown when the client() or proxy() call has not yet happened and no client or proxy object exists.;;d0,45;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\OutOfSequenceBeforeClientException.php;f11;51;5;56;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct ()&#10;&#10;Description&#10;     Return standard error message;;d4,52;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_OutOfSequenceBeforeProxyException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\OutOfSequenceBeforeProxyException.php;f0;42;1;58;;;;vpos;;vCAS_OutOfSequenceException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_OutOfSequenceBeforeProxyException&#10;extends CAS_OutOfSequenceException&#10;implements CAS_Exception&#10;&#10;Description&#10;     This class defines Exceptions that should be thrown when the sequence of operations is invalid. In this case it should be thrown when the proxy() call has not yet happened and no proxy object exists.;;d0,45;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\OutOfSequenceBeforeProxyException.php;f11;52;5;57;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct ()&#10;&#10;Description&#10;     Return standard error message;;d4,53;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_OutOfSequenceException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\OutOfSequenceException.php;f0;43;1;48;;;;vpos;;vBadMethodCallException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_OutOfSequenceException&#10;extends BadMethodCallException&#10;implements CAS_Exception&#10;&#10;Description&#10;     This class defines Exceptions that should be thrown when the sequence of operations is invalid. Examples are: - Requesting the response before executing a request. - Changing the URL of a request after executing the request.;;d0,46;;b0,0;;m">
</treenode>
<treenode node="CAS_PGTStorage_AbstractStorage;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f9;45;1;219;;;;vpos;;v;;r&#10;Definition&#10;    class CAS_PGTStorage_AbstractStorage&#10;&#10;Description&#10;     Basic class for PGT storage The CAS_PGTStorage_AbstractStorage class is a generic class for PGT storage. This class should not be instanciated itself but inherited by specific PGT storage classes.;;d0,46;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f4;66;5;75;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct($cas_parent)&#10;&#10;Description&#10;     The constructor of the class, should be called only by inherited classes.&#10;&#10;Parameters:&#10;    CAS_Client $cas_parent - the CAS _client instance that creates the;;d4,67;;b0,0;;mCAS_Client $cas_parent;;p">
</treenode>
<treenode node="getErrorMessage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f4;143;5;146;;;;vpos;;van;;r&#10;Definition&#10;    getErrorMessage()&#10;&#10;Description&#10;     This method returns an error message set by PGTStorage::setErrorMessage().&#10;&#10;Return:&#10;   error message when set by PGTStorage::setErrorMessage(), FALSE;;d4,144;;b0,0;;m">
</treenode>
<treenode node="getStorageInfo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f4;102;5;105;;;;vpos;;vvoid;;r&#10;Definition&#10;    getStorageInfo()&#10;&#10;Description&#10;     This virtual method returns an informational string giving informations on the parameters of the storage.(used for debugging purposes).;;d4,103;;b0,0;;m">
</treenode>
<treenode node="getStorageType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f4;89;5;92;;;;vpos;;vvoid;;r&#10;Definition&#10;    getStorageType()&#10;&#10;Description&#10;     This virtual method returns an informational string giving the type of storage used by the object (used for debugging purposes).;;d4,90;;b0,0;;m">
</treenode>
<treenode node="init;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f4;177;5;180;;;;vpos;;vvoid;;r&#10;Definition&#10;    init()&#10;&#10;Description&#10;     This virtual method initializes the object.;;d4,178;;b0,0;;m">
</treenode>
<treenode node="isInitialized;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f4;167;5;170;;;;vpos;;va;;r&#10;Definition&#10;    isInitialized()&#10;&#10;Description&#10;     This method tells if the storage has already been intialized.&#10;&#10;Return:&#10;   boolean;;d4,168;;b0,0;;m">
</treenode>
<treenode node="read;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f4;212;5;215;;;;vpos;;vvoid;;r&#10;Definition&#10;    read($pgt_iou)&#10;&#10;Description&#10;     This virtual method reads a PGT corresponding to a PGT Iou and deletes the corresponding storage entry.&#10;&#10;Parameters:&#10;    string $pgt_iou - the PGT iou;;d4,213;;b0,0;;mstring $pgt_iou;;p">
</treenode>
<treenode node="setErrorMessage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f4;130;5;133;;;;vpos;;vvoid;;r&#10;Definition&#10;    setErrorMessage($error_message)&#10;&#10;Description&#10;     This method sets en error message, which can be read later by PGTStorage::getErrorMessage().&#10;&#10;Parameters:&#10;    string $error_message - an error message;;d4,131;;b0,0;;mstring $error_message;;p">
</treenode>
<treenode node="write;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f4;197;5;200;;;;vpos;;vvoid;;r&#10;Definition&#10;    write($pgt,$pgt_iou)&#10;&#10;Description&#10;     This virtual method stores a PGT and its corresponding PGT Iuo.&#10;&#10;Parameters:&#10;    string $pgt - the PGT&#10;    string $pgt_iou - the PGT iou;;d4,198;;b0,0;;mstring $pgt;;pstring $pgt_iou;;p">
</treenode>
</treenode>
<treenode node="CAS_PGTStorage_Db;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f0;45;1;437;;;;vpos;;vCAS_PGTStorage_AbstractStorage;;c;;r&#10;Definition&#10;    class CAS_PGTStorage_Db extends CAS_PGTStorage_AbstractStorage&#10;&#10;Description&#10;     Basic class for PGT database storage The CAS_PGTStorage_Db class is a class for PGT database storage.;;d0,46;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f11;137;5;167;;;;vpos;;v;;r&#10;Definition&#10;    __construct(&#10;        $cas_parent, $dsn_or_pdo, $username=&apos;&apos;, $password=&apos;&apos;, $table=&apos;&apos;,&#10;        $driver_options=null&#10;    )&#10;&#10;Description&#10;     The class constructor.&#10;&#10;Parameters:&#10;    CAS_Client $cas_parent - the CAS_Client instance that creates&#10;    string $dsn_or_pdo - a dsn string to use for creating a PDO&#10;    string $username - the username to use when connecting to&#10;    string $password - the password to use when connecting to&#10;    string $table - the table to use for storing and&#10;    string $driver_options - any driver options to use when;;d6,140;;b1,0;;mCAS_Client $cas_parent;;pstring $dsn_or_pdo;;pstring $username;;pstring $password;;pstring $table;;pstring $driver_options;;p">
</treenode>
<treenode node="_getPdo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f12;62;5;65;;;;vpos;;vthe;;r&#10;Definition&#10;    _getPdo()&#10;&#10;Description&#10;     This method returns the PDO object to use for database interactions.&#10;&#10;Return:&#10;   PDO object;;d4,63;;b3,0;;m">
</treenode>
<treenode node="_getTable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f12;85;5;88;;;;vpos;;vthe;;r&#10;Definition&#10;    _getTable()&#10;&#10;Description&#10;     This method returns the table to use when storing/retrieving PGT&apos;s&#10;&#10;Return:&#10;   name of the pgt storage table;;d4,86;;b3,0;;m">
</treenode>
<treenode node="_resetErrorMode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f12;233;5;238;;;;vpos;;vvoid;;r&#10;Definition&#10;    _resetErrorMode()&#10;&#10;Description&#10;     this method will reset the error mode on the PDO object;;d4,234;;b3,0;;m">
</treenode>
<treenode node="_setErrorMode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f12;220;5;226;;;;vpos;;vvoid;;r&#10;Definition&#10;    _setErrorMode()&#10;&#10;Description&#10;     This method will enable the Exception error mode on the PDO object;;d4,221;;b3,0;;m">
</treenode>
<treenode node="createTable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f11;302;5;337;;;;vpos;;vvoid;;r&#10;Definition&#10;    createTable()&#10;&#10;Description&#10;     This method creates the database table used to store pgt&apos;s and pgtiou&apos;s;;d4,303;;b1,0;;m">
</treenode>
<treenode node="createTableSql;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f14;252;5;256;;;;vpos;;vthe;;r&#10;Definition&#10;    createTableSql()&#10;&#10;Description&#10;     This method returns the query used to create a pgt storage table&#10;&#10;Return:&#10;   create table SQL, no bind params in query;;d4,253;;b2,0;;m">
</treenode>
<treenode node="deletePgtSql;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f14;288;5;291;;;;vpos;;vthe;;r&#10;Definition&#10;    deletePgtSql()&#10;&#10;Description&#10;     This method returns the query used to delete a pgt.&#10;&#10;Return:&#10;   delete PGT SQL, :pgt_iou is the only bind param contained in;;d4,289;;b2,0;;m">
</treenode>
<treenode node="getStorageInfo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f11;112;5;115;;;;vpos;;van;;r&#10;Definition&#10;    getStorageInfo()&#10;&#10;Description&#10;     This method returns an informational string giving informations on the parameters of the storage.(used for debugging purposes).&#10;&#10;Return:&#10;   informational string;;d4,113;;b1,0;;m">
</treenode>
<treenode node="getStorageType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f11;100;5;103;;;;vpos;;van;;r&#10;Definition&#10;    getStorageType()&#10;&#10;Description&#10;     This method returns an informational string giving the type of storage used by the object (used for debugging purposes).&#10;&#10;Return:&#10;   informational string;;d4,101;;b1,0;;m">
</treenode>
<treenode node="init;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f11;178;5;203;;;;vpos;;vvoid;;r&#10;Definition&#10;    init()&#10;&#10;Description&#10;     This method is used to initialize the storage. Halts on error.;;d4,179;;b1,0;;m">
</treenode>
<treenode node="read;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f11;391;5;433;;;;vpos;;vthe;;r&#10;Definition&#10;    read($pgt_iou)&#10;&#10;Description&#10;     This method reads a PGT corresponding to a PGT Iou and deletes the corresponding db entry.&#10;&#10;Parameters:&#10;    string $pgt_iou - the PGT iou&#10;&#10;Return:&#10;   corresponding PGT, or FALSE on error;;d4,392;;b1,0;;mstring $pgt_iou;;p">
</treenode>
<treenode node="retrievePgtSql;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f14;277;5;280;;;;vpos;;vthe;;r&#10;Definition&#10;    retrievePgtSql()&#10;&#10;Description&#10;     This method returns the query used to retrieve a pgt. the first column of the first row should contain the pgt&#10;&#10;Return:&#10;   retrieve PGT SQL, :pgt_iou is the only bind param contained;;d4,278;;b2,0;;m">
</treenode>
<treenode node="storePgtSql;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f14;264;5;268;;;;vpos;;vthe;;r&#10;Definition&#10;    storePgtSql()&#10;&#10;Description&#10;     This method returns the query used to store a pgt&#10;&#10;Return:&#10;   store PGT SQL, :pgt and :pgt_iou are the bind params contained;;d4,265;;b2,0;;m">
</treenode>
<treenode node="write;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f11;348;5;381;;;;vpos;;vvoid;;r&#10;Definition&#10;    write($pgt, $pgt_iou)&#10;&#10;Description&#10;     This method stores a PGT and its corresponding PGT Iou in the database. Echoes a warning on error.&#10;&#10;Parameters:&#10;    string $pgt - the PGT&#10;    string $pgt_iou - the PGT iou;;d4,349;;b1,0;;mstring $pgt;;pstring $pgt_iou;;p">
</treenode>
</treenode>
<treenode node="CAS_PGTStorage_File;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\File.php;f0;44;1;259;;;;vpos;;vCAS_PGTStorage_AbstractStorage;;c;;r&#10;Definition&#10;    class CAS_PGTStorage_File extends CAS_PGTStorage_AbstractStorage&#10;&#10;Description&#10;     The CAS_PGTStorage_File class is a class for PGT file storage. An instance of this class is returned by CAS_Client::SetPGTStorageFile().;;d0,45;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\File.php;f4;114;5;143;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct($cas_parent,$path)&#10;&#10;Description&#10;     The class constructor, called by CAS_Client::SetPGTStorageFile().&#10;&#10;Parameters:&#10;    CAS_Client $cas_parent - the CAS_Client instance that creates the object&#10;    string $path - the path where the PGT&apos;s should be stored;;d4,115;;b0,0;;mCAS_Client $cas_parent;;pstring $path;;p">
</treenode>
<treenode node="getPath;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\File.php;f4;67;5;70;;;;vpos;;vthe;;r&#10;Definition&#10;    getPath()&#10;&#10;Description&#10;     This method returns the name of the directory where PGT&apos;s should be stored on the filesystem.&#10;&#10;Return:&#10;   name of a directory (with leading and trailing &apos;/&apos;);;d4,68;;b0,0;;m">
</treenode>
<treenode node="getPGTIouFilename;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\File.php;f4;179;5;187;;;;vpos;;va;;r&#10;Definition&#10;    getPGTIouFilename($pgt_iou)&#10;&#10;Description&#10;     This method returns the filename corresponding to a PGT Iou.&#10;&#10;Parameters:&#10;    string $pgt_iou - the PGT iou&#10;&#10;Return:&#10;   filename;;d4,180;;b0,0;;mstring $pgt_iou;;p">
</treenode>
<treenode node="getStorageInfo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\File.php;f4;95;5;98;;;;vpos;;van;;r&#10;Definition&#10;    getStorageInfo()&#10;&#10;Description&#10;     This method returns an informational string giving informations on the parameters of the storage.(used for debugging purposes).&#10;&#10;Return:&#10;   informational string;;d4,96;;b0,0;;m">
</treenode>
<treenode node="getStorageType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\File.php;f4;83;5;86;;;;vpos;;van;;r&#10;Definition&#10;    getStorageType()&#10;&#10;Description&#10;     This method returns an informational string giving the type of storage used by the object (used for debugging purposes).&#10;&#10;Return:&#10;   informational string;;d4,84;;b0,0;;m">
</treenode>
<treenode node="init;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\File.php;f4;155;5;165;;;;vpos;;vvoid;;r&#10;Definition&#10;    init()&#10;&#10;Description&#10;     This method is used to initialize the storage. Halts on error.;;d4,156;;b0,0;;m">
</treenode>
<treenode node="read;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\File.php;f4;233;5;255;;;;vpos;;vthe;;r&#10;Definition&#10;    read($pgt_iou)&#10;&#10;Description&#10;     This method reads a PGT corresponding to a PGT Iou and deletes the corresponding file.&#10;&#10;Parameters:&#10;    string $pgt_iou - the PGT iou&#10;&#10;Return:&#10;   corresponding PGT, or FALSE on error;;d4,234;;b0,0;;mstring $pgt_iou;;p">
</treenode>
<treenode node="write;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\File.php;f4;200;5;221;;;;vpos;;vvoid;;r&#10;Definition&#10;    write($pgt,$pgt_iou)&#10;&#10;Description&#10;     This method stores a PGT and its corresponding PGT Iou into a file. Echoes a warning on error.&#10;&#10;Parameters:&#10;    string $pgt - the PGT&#10;    string $pgt_iou - the PGT iou;;d4,201;;b0,0;;mstring $pgt;;pstring $pgt_iou;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Abstract;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Abstract.php;f9;40;1;147;;;;vpos;;vCAS_ProxiedService;;cCAS_ProxiedService_Testable;;c;;r&#10;Definition&#10;    class CAS_ProxiedService_Abstract&#10;implements CAS_ProxiedService, CAS_ProxiedService_Testable&#10;&#10;Description&#10;     This class implements common methods for ProxiedService implementations included with phpCAS.;;d0,42;;b0,0;;m">
<treenode node="getProxyTicket;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Abstract.php;f14;82;5;91;;;;vpos;;vstring;;r&#10;Definition&#10;    getProxyTicket ()&#10;&#10;Description&#10;     Answer the proxy ticket to be used when making requests.;;d4,83;;b2,0;;m">
</treenode>
<treenode node="initializeProxyTicket;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Abstract.php;f14;132;5;145;;;;vpos;;vvoid;;r&#10;Definition&#10;    initializeProxyTicket()&#10;&#10;Description&#10;     Fetch our proxy ticket.;;d4,133;;b2,0;;m">
</treenode>
<treenode node="setCasClient;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Abstract.php;f11;111;5;120;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCasClient (CAS_Client $casClient)&#10;&#10;Description&#10;     Use a particular CAS_Client-&gt;initializeProxiedService() rather than the static phpCAS::initializeProxiedService().&#10;&#10;Parameters:&#10;    CAS_Client $casClient - cas client;;d4,112;;b1,0;;mCAS_Client $casClient;;p">
</treenode>
<treenode node="setProxyTicket;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Abstract.php;f11;60;5;73;;;;vpos;;vvoid;;r&#10;Definition&#10;    setProxyTicket ($proxyTicket)&#10;&#10;Description&#10;     Register a proxy ticket with the Proxy that it can use when making requests.&#10;&#10;Parameters:&#10;    string $proxyTicket - proxy ticket;;d4,61;;b1,0;;mstring $proxyTicket;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Exception;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Exception.php;f0;39;1;44;;;;vpos;;vException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_ProxiedService_Exception&#10;extends Exception&#10;implements CAS_Exception&#10;&#10;Description&#10;     An Exception for problems communicating with a proxied service.;;d0,42;;b0,0;;m">
</treenode>
<treenode node="CAS_ProxiedService_Http_Abstract;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f9;40;1;358;;;;vpos;;vCAS_ProxiedService_Abstract;;cCAS_ProxiedService_Http;;c;;r&#10;Definition&#10;    class CAS_ProxiedService_Http_Abstract extends&#10;CAS_ProxiedService_Abstract implements CAS_ProxiedService_Http&#10;&#10;Description&#10;     This class implements common methods for ProxiedService implementations included with phpCAS.;;d0,42;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f11;65;5;70;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct(CAS_Request_RequestInterface $requestHandler,&#10;        CAS_CookieJar $cookieJar&#10;    )&#10;&#10;Description&#10;     Constructor.&#10;&#10;Parameters:&#10;    CAS_Request_RequestInterface $requestHandler - request handler object&#10;    CAS_CookieJar $cookieJar - cookieJar object;;d6,67;;b1,0;;mCAS_Request_RequestInterface $requestHandler;;pCAS_CookieJar $cookieJar;;p">
</treenode>
<treenode node="getCookies;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f11;353;5;356;;;;vpos;;varray;;r&#10;Definition&#10;    getCookies()&#10;&#10;Description&#10;     Answer the cookies from the response. This may include cookies set during redirect responses.&#10;&#10;Return:&#10;   An array containing cookies;;d4,354;;b1,0;;m">
</treenode>
<treenode node="getRedirectUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f14;270;5;280;;;;vpos;;vstring;;r&#10;Definition&#10;    getRedirectUrl(array $responseHeaders)&#10;&#10;Description&#10;     Answer a redirect URL if a redirect header is found, otherwise null.&#10;&#10;Parameters:&#10;    array $responseHeaders - response header to extract a redirect from&#10;&#10;Return:&#10;   or null;;d4,271;;b2,0;;marray $responseHeaders;;p">
</treenode>
<treenode node="getResponseBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f11;336;5;345;;;;vpos;;vstring;;r&#10;Definition&#10;    getResponseBody()&#10;&#10;Description&#10;     Answer the body of response.;;d4,337;;b1,0;;m">
</treenode>
<treenode node="getResponseHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f11;302;5;311;;;;vpos;;varray;;r&#10;Definition&#10;    getResponseHeaders()&#10;&#10;Description&#10;     Answer the headers of the response.&#10;&#10;Return:&#10;   An array of header strings;;d4,303;;b1,0;;m">
</treenode>
<treenode node="getResponseStatusCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f11;319;5;328;;;;vpos;;vint;;r&#10;Definition&#10;    getResponseStatusCode()&#10;&#10;Description&#10;     Answer HTTP status code of the response;;d4,320;;b1,0;;m">
</treenode>
<treenode node="getServiceUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f11;84;5;93;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUrl()&#10;&#10;Description&#10;     Answer a service identifier (URL) for whom we should fetch a proxy ticket.;;d4,85;;b1,0;;m">
</treenode>
<treenode node="hasBeenSent;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f14;291;5;294;;;;vpos;;vbool;;r&#10;Definition&#10;    hasBeenSent()&#10;&#10;Description&#10;     Answer true if our request has been sent yet.;;d4,292;;b2,0;;m">
</treenode>
<treenode node="makeRequest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f14;207;5;250;;;;vpos;;vvoid;;r&#10;Definition&#10;    makeRequest($url)&#10;&#10;Description&#10;     Build and perform a request, following redirects&#10;&#10;Parameters:&#10;    string $url - url for the request;;d4,208;;b2,0;;mstring $url;;p">
</treenode>
<treenode node="populateRequest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f23;259;5;261;;;;vpos;;vvoid;;r&#10;Description&#10;     Add any other parts of the request needed by concrete classes&#10;&#10;Parameters:&#10;    CAS_Request_RequestInterface $request - request interface object;;d-1,-1;;b2,0;;mCAS_Request_RequestInterface $request;;p">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f11;138;5;163;;;;vpos;;vvoid;;r&#10;Definition&#10;    send()&#10;&#10;Description&#10;     Perform the request.;;d4,139;;b1,0;;m">
</treenode>
<treenode node="setUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f11;107;5;119;;;;vpos;;vvoid;;r&#10;Definition&#10;    setUrl($url)&#10;&#10;Description&#10;     Set the URL of the Request&#10;&#10;Parameters:&#10;    string $url - url to set;;d4,108;;b1,0;;mstring $url;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Http_Get;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Get.php;f0;67;1;83;;;;vpos;;vCAS_ProxiedService_Http_Abstract;;c;;r&#10;Definition&#10;    class CAS_ProxiedService_Http_Get&#10;extends CAS_ProxiedService_Http_Abstract&#10;&#10;Description&#10;     This class is used to make proxied service requests via the HTTP GET method.;;d0,69;;b0,0;;m">
<treenode node="populateRequest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Get.php;f14;78;5;82;;;;vpos;;vvoid;;r&#10;Definition&#10;    populateRequest (CAS_Request_RequestInterface $request)&#10;&#10;Description&#10;     Add any other parts of the request needed by concrete classes&#10;&#10;Parameters:&#10;    CAS_Request_RequestInterface $request - request interface;;d4,79;;b2,0;;mCAS_Request_RequestInterface $request;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Http_Post;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Post.php;f0;69;1;150;;;;vpos;;vCAS_ProxiedService_Http_Abstract;;c;;r&#10;Definition&#10;    class CAS_ProxiedService_Http_Post&#10;extends CAS_ProxiedService_Http_Abstract&#10;&#10;Description&#10;     This class is used to make proxied service requests via the HTTP POST method.;;d0,71;;b0,0;;m">
<treenode node="populateRequest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Post.php;f14;132;5;147;;;;vpos;;vvoid;;r&#10;Definition&#10;    populateRequest (CAS_Request_RequestInterface $request)&#10;&#10;Description&#10;     Add any other parts of the request needed by concrete classes&#10;&#10;Parameters:&#10;    CAS_Request_RequestInterface $request - request interface class;;d4,133;;b2,0;;mCAS_Request_RequestInterface $request;;p">
</treenode>
<treenode node="setBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Post.php;f11;114;5;123;;;;vpos;;vvoid;;r&#10;Definition&#10;    setBody ($body)&#10;&#10;Description&#10;     Set the body of this POST request.&#10;&#10;Parameters:&#10;    string $body - body to set;;d4,115;;b1,0;;mstring $body;;p">
</treenode>
<treenode node="setContentType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Post.php;f11;95;5;104;;;;vpos;;vvoid;;r&#10;Definition&#10;    setContentType ($contentType)&#10;&#10;Description&#10;     Set the content type of this POST request.&#10;&#10;Parameters:&#10;    string $contentType - content type;;d4,96;;b1,0;;mstring $contentType;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Imap;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f0;39;1;278;;;;vpos;;vCAS_ProxiedService_Abstract;;c;;r&#10;Definition&#10;    class CAS_ProxiedService_Imap&#10;extends CAS_ProxiedService_Abstract&#10;&#10;Description&#10;     Provides access to a proxy-authenticated IMAP stream;;d0,41;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f11;57;5;64;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct ($username)&#10;&#10;Description&#10;     Constructor.&#10;&#10;Parameters:&#10;    string $username - Username;;d4,58;;b1,0;;mstring $username;;p">
</treenode>
<treenode node="getImapProxyTicket;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f11;269;5;277;;;;vpos;;vstring;;r&#10;Definition&#10;    getImapProxyTicket ()&#10;&#10;Description&#10;     CAS_Client::serviceMail() needs to return the proxy ticket for some reason, so this method provides access to it.;;d4,270;;b1,0;;m">
</treenode>
<treenode node="getServiceUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f11;78;5;87;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUrl ()&#10;&#10;Description&#10;     Answer a service identifier (URL) for whom we should fetch a proxy ticket.;;d4,79;;b1,0;;m">
</treenode>
<treenode node="getStream;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f11;251;5;259;;;;vpos;;vresource;;r&#10;Definition&#10;    getStream ()&#10;&#10;Description&#10;     Answer the IMAP stream;;d4,252;;b1,0;;m">
</treenode>
<treenode node="hasBeenOpened;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f14;231;5;234;;;;vpos;;vbool;;r&#10;Definition&#10;    hasBeenOpened ()&#10;&#10;Description&#10;     Answer true if our request has been sent yet.;;d4,232;;b2,0;;m">
</treenode>
<treenode node="open;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f11;191;5;224;;;;vpos;;vresource;;r&#10;Definition&#10;    open ()&#10;&#10;Description&#10;     Open the IMAP stream (similar to imap_open()).&#10;&#10;Return:&#10;   Returns an IMAP stream on success;;d4,192;;b1,0;;m">
</treenode>
<treenode node="setMailbox;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f11;130;5;142;;;;vpos;;vvoid;;r&#10;Definition&#10;    setMailbox ($mailbox)&#10;&#10;Description&#10;     Set the mailbox to open. See the $mailbox parameter of imap_open().&#10;&#10;Parameters:&#10;    string $mailbox - Mailbox to set;;d4,131;;b1,0;;mstring $mailbox;;p">
</treenode>
<treenode node="setOptions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f11;160;5;172;;;;vpos;;vvoid;;r&#10;Definition&#10;    setOptions ($options)&#10;&#10;Description&#10;     Set the options for opening the stream. See the $options parameter of imap_open().&#10;&#10;Parameters:&#10;    int $options - Options for the stream;;d4,161;;b1,0;;mint $options;;p">
</treenode>
<treenode node="setServiceUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f11;101;5;113;;;;vpos;;vvoid;;r&#10;Definition&#10;    setServiceUrl ($url)&#10;&#10;Description&#10;     Set the URL of the service to pass to CAS for proxy-ticket retrieval.&#10;&#10;Parameters:&#10;    string $url - Url to set;;d4,102;;b1,0;;mstring $url;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxyChain;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain.php;f0;41;1;126;;;;vpos;;vCAS_ProxyChain_Interface;;c;;r&#10;Definition&#10;    class CAS_ProxyChain&#10;implements CAS_ProxyChain_Interface&#10;&#10;Description&#10;     A normal proxy-chain definition that lists each level of the chain as either a string or regular expression.;;d0,43;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain.php;f11;59;5;63;;;;vpos;;v;;r&#10;Definition&#10;    __construct(array $chain)&#10;&#10;Description&#10;     A chain is an array of strings or regexp strings that will be matched against. Regexp will be matched with preg_match and strings will be matched from the beginning. A string must fully match the beginning of an proxy url. So you can define a full domain as acceptable or go further down. Proxies have to be defined in reverse from the service to the user. If a user hits service A get proxied via B to service C the list of acceptable proxies on C would be array(B,A);s&#10;&#10;Parameters:&#10;    array $chain - A chain of proxies;;d4,60;;b1,0;;marray $chain;;p">
</treenode>
<treenode node="isSizeValid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain.php;f14;122;5;125;;;;vpos;;vbool;;r&#10;Definition&#10;    isSizeValid (array $list)&#10;&#10;Description&#10;     Validate the size of the the list as compared to our chain.&#10;&#10;Parameters:&#10;    array $list - List of proxies;;d4,123;;b2,0;;marray $list;;p">
</treenode>
<treenode node="matches;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain.php;f11;72;5;113;;;;vpos;;vbool;;r&#10;Definition&#10;    matches(array $list)&#10;&#10;Description&#10;     Match a list of proxies.&#10;&#10;Parameters:&#10;    array $list - The list of proxies in front of this service;;d4,73;;b1,0;;marray $list;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxyChain_AllowedList;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\AllowedList.php;f0;42;1;117;;;;vpos;;v;;r&#10;Definition&#10;    class CAS_ProxyChain_AllowedList&#10;&#10;Description&#10;     ProxyChain is a container for storing chains of valid proxies that can be used to validate proxied requests to a service;;d0,43;;b0,0;;m">
<treenode node="allowProxyChain;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\AllowedList.php;f11;64;5;67;;;;vpos;;vvoid;;r&#10;Definition&#10;    allowProxyChain(CAS_ProxyChain_Interface $chain)&#10;&#10;Description&#10;     Add a chain of proxies to the list of possible chains&#10;&#10;Parameters:&#10;    CAS_ProxyChain_Interface $chain - A chain of proxies;;d4,65;;b1,0;;mCAS_ProxyChain_Interface $chain;;p">
</treenode>
<treenode node="contains;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\AllowedList.php;f11;102;5;116;;;;vpos;;vif;;r&#10;Definition&#10;    contains(array $list)&#10;&#10;Description&#10;     Validate the proxies from the proxy ticket validation against the chains that were definded.&#10;&#10;Parameters:&#10;    array $list - List of proxies from the proxy ticket validation&#10;&#10;Return:&#10;   any chain fully matches the supplied list;;d4,103;;b1,0;;marray $list;;p">
</treenode>
<treenode node="isProxyingAllowed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\AllowedList.php;f11;52;5;55;;;;vpos;;vbool;;r&#10;Definition&#10;    isProxyingAllowed()&#10;&#10;Description&#10;     Check whether proxies are allowed by configuration;;d4,53;;b1,0;;m">
</treenode>
<treenode node="isProxyListAllowed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\AllowedList.php;f11;76;5;92;;;;vpos;;vbool;;r&#10;Definition&#10;    isProxyListAllowed(array $proxies)&#10;&#10;Description&#10;     Check if the proxies found in the response match the allowed proxies&#10;&#10;Parameters:&#10;    array $proxies - list of proxies to check&#10;&#10;Return:&#10;   whether the proxies match the allowed proxies;;d4,77;;b1,0;;marray $proxies;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxyChain_Any;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\Any.php;f0;46;1;63;;;;vpos;;vCAS_ProxyChain_Interface;;c;;r&#10;Definition&#10;    class CAS_ProxyChain_Any&#10;implements CAS_ProxyChain_Interface&#10;&#10;Description&#10;     A proxy-chain definition that will match any list of proxies.;;d0,48;;b0,0;;m">
<treenode node="matches;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\Any.php;f11;57;5;61;;;;vpos;;vbool;;r&#10;Definition&#10;    matches(array $list)&#10;&#10;Description&#10;     Match a list of proxies.&#10;&#10;Parameters:&#10;    array $list - The list of proxies in front of this service;;d4,58;;b1,0;;marray $list;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxyChain_Trusted;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\Trusted.php;f0;41;1;58;;;;vpos;;vCAS_ProxyChain;;cCAS_ProxyChain_Interface;;c;;r&#10;Definition&#10;    class CAS_ProxyChain_Trusted&#10;extends CAS_ProxyChain&#10;implements CAS_ProxyChain_Interface&#10;&#10;Description&#10;     A proxy-chain definition that defines a chain up to a trusted proxy and delegates the resposibility of validating the rest of the chain to that trusted proxy.;;d0,44;;b0,0;;m">
<treenode node="isSizeValid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\Trusted.php;f14;53;5;56;;;;vpos;;vbool;;r&#10;Definition&#10;    isSizeValid (array $list)&#10;&#10;Description&#10;     Validate the size of the the list as compared to our chain.&#10;&#10;Parameters:&#10;    array $list - list of proxies;;d4,54;;b2,0;;marray $list;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxyTicketException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyTicketException.php;f0;40;1;70;;;;vpos;;vBadMethodCallException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_ProxyTicketException&#10;extends BadMethodCallException&#10;implements CAS_Exception&#10;&#10;Description&#10;     An Exception for errors related to fetching or validating proxy tickets.;;d0,43;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyTicketException.php;f11;53;5;69;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct ($message, $code = PHPCAS_SERVICE_PT_FAILURE)&#10;&#10;Description&#10;     Constructor&#10;&#10;Parameters:&#10;    string $message - Message text&#10;    int $code - Error code;;d4,54;;b1,0;;mstring $message;;pint $code;;p">
</treenode>
</treenode>
<treenode node="CAS_Request_AbstractRequest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f9;39;1;378;;;;vpos;;vCAS_Request_RequestInterface;;c;;r&#10;Definition&#10;    class CAS_Request_AbstractRequest&#10;implements CAS_Request_RequestInterface&#10;&#10;Description&#10;     Provides support for performing web-requests via curl;;d0,41;;b0,0;;m">
<treenode node="addCookie;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;87;5;96;;;;vpos;;vvoid;;r&#10;Definition&#10;    addCookie ($name, $value)&#10;&#10;Description&#10;     Add a cookie to the request.&#10;&#10;Parameters:&#10;    string $name - Name of entry&#10;    string $value - value of entry;;d4,88;;b1,0;;mstring $name;;pstring $value;;p">
</treenode>
<treenode node="addCookies;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;108;5;117;;;;vpos;;vvoid;;r&#10;Definition&#10;    addCookies (array $cookies)&#10;&#10;Description&#10;     Add an array of cookies to the request. The cookie array is of the form array(&apos;cookie_name&apos; =&gt; &apos;cookie_value&apos;, &apos;cookie_name2&apos; =&gt; cookie_value2&apos;)&#10;&#10;Parameters:&#10;    array $cookies - cookies to add;;d4,109;;b1,0;;marray $cookies;;p">
</treenode>
<treenode node="addHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;127;5;136;;;;vpos;;vvoid;;r&#10;Definition&#10;    addHeader ($header)&#10;&#10;Description&#10;     Add a header string to the request.&#10;&#10;Parameters:&#10;    string $header - Header to add;;d4,128;;b1,0;;mstring $header;;p">
</treenode>
<treenode node="addHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;146;5;155;;;;vpos;;vvoid;;r&#10;Definition&#10;    addHeaders (array $headers)&#10;&#10;Description&#10;     Add an array of header strings to the request.&#10;&#10;Parameters:&#10;    array $headers - headers to add;;d4,147;;b1,0;;marray $headers;;p">
</treenode>
<treenode node="getErrorMessage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;369;5;377;;;;vpos;;vstring;;r&#10;Definition&#10;    getErrorMessage ()&#10;&#10;Description&#10;     Answer a message describing any errors if the request failed.;;d4,370;;b1,0;;m">
</treenode>
<treenode node="getResponseBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;352;5;361;;;;vpos;;vstring;;r&#10;Definition&#10;    getResponseBody ()&#10;&#10;Description&#10;     Answer the body of response.;;d4,353;;b1,0;;m">
</treenode>
<treenode node="getResponseHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;309;5;317;;;;vpos;;varray;;r&#10;Definition&#10;    getResponseHeaders ()&#10;&#10;Description&#10;     Answer the headers of the response.&#10;&#10;Return:&#10;   An array of header strings;;d4,310;;b1,0;;m">
</treenode>
<treenode node="getResponseStatusCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;325;5;344;;;;vpos;;vint;;r&#10;Definition&#10;    getResponseStatusCode ()&#10;&#10;Description&#10;     Answer HTTP status code of the response;;d4,326;;b1,0;;m">
</treenode>
<treenode node="makePost;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;163;5;172;;;;vpos;;vvoid;;r&#10;Definition&#10;    makePost ()&#10;&#10;Description&#10;     Make the request a POST request rather than the default GET request.;;d4,164;;b1,0;;m">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;228;5;242;;;;vpos;;vbool;;r&#10;Definition&#10;    send ()&#10;&#10;Description&#10;     Perform the request.&#10;&#10;Return:&#10;   TRUE on success, FALSE on failure;;d4,229;;b1,0;;m">
</treenode>
<treenode node="sendRequest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f23;249;46;249;;;;vpos;;vbool;;r&#10;Description&#10;     Send the request and store the results.&#10;&#10;Return:&#10;   TRUE on success, FALSE on failure;;d-1,-1;;b2,0;;m">
</treenode>
<treenode node="setPostBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;182;5;196;;;;vpos;;vvoid;;r&#10;Definition&#10;    setPostBody ($body)&#10;&#10;Description&#10;     Add a POST body to the request&#10;&#10;Parameters:&#10;    string $body - body to add;;d4,183;;b1,0;;mstring $body;;p">
</treenode>
<treenode node="setSslCaCert;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;207;5;216;;;;vpos;;vvoid;;r&#10;Definition&#10;    setSslCaCert ($caCertPath,$validate_cn=true)&#10;&#10;Description&#10;     Specify the path to an SSL CA certificate to validate the server with.&#10;&#10;Parameters:&#10;    string $caCertPath - path to cert&#10;    bool $validate_cn - valdiate CN of certificate;;d4,208;;b1,0;;mstring $caCertPath;;pbool $validate_cn;;p">
</treenode>
<treenode node="setUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;67;5;76;;;;vpos;;vvoid;;r&#10;Definition&#10;    setUrl ($url)&#10;&#10;Description&#10;     Set the URL of the Request&#10;&#10;Parameters:&#10;    string $url - Url to set;;d4,68;;b1,0;;mstring $url;;p">
</treenode>
<treenode node="storeErrorMessage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f14;294;5;297;;;;vpos;;vvoid;;r&#10;Definition&#10;    storeErrorMessage ($message)&#10;&#10;Description&#10;     Add a string to our error message.&#10;&#10;Parameters:&#10;    string $message - message to add;;d4,295;;b2,0;;mstring $message;;p">
</treenode>
<treenode node="storeResponseBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f14;282;5;285;;;;vpos;;vvoid;;r&#10;Definition&#10;    storeResponseBody ($body)&#10;&#10;Description&#10;     Store the response body.&#10;&#10;Parameters:&#10;    string $body - body to store;;d4,283;;b2,0;;mstring $body;;p">
</treenode>
<treenode node="storeResponseHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f14;270;5;273;;;;vpos;;vvoid;;r&#10;Definition&#10;    storeResponseHeader ($header)&#10;&#10;Description&#10;     Store a single response header to our array.&#10;&#10;Parameters:&#10;    string $header - header to store;;d4,271;;b2,0;;mstring $header;;p">
</treenode>
<treenode node="storeResponseHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f14;258;5;261;;;;vpos;;vvoid;;r&#10;Definition&#10;    storeResponseHeaders (array $headers)&#10;&#10;Description&#10;     Store the response headers.&#10;&#10;Parameters:&#10;    array $headers - headers to store;;d4,259;;b2,0;;marray $headers;;p">
</treenode>
</treenode>
<treenode node="CAS_Request_CurlMultiRequest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlMultiRequest.php;f0;41;1;145;;;;vpos;;vCAS_Request_MultiRequestInterface;;c;;r&#10;Definition&#10;    class CAS_Request_CurlMultiRequest&#10;implements CAS_Request_MultiRequestInterface&#10;&#10;Description&#10;     This interface defines a class library for performing multiple web requests in batches. Implementations of this interface may perform requests serially or in parallel.;;d0,43;;b0,0;;m">
<treenode node="addRequest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlMultiRequest.php;f11;63;5;77;;;;vpos;;vvoid;;r&#10;Definition&#10;    addRequest (CAS_Request_RequestInterface $request)&#10;&#10;Description&#10;     Add a new Request to this batch. Note, implementations will likely restrict requests to their own concrete class hierarchy.&#10;&#10;Parameters:&#10;    CAS_Request_RequestInterface $request - reqest to add;;d4,64;;b1,0;;mCAS_Request_RequestInterface $request;;p">
</treenode>
<treenode node="getNumRequests;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlMultiRequest.php;f11;84;5;92;;;;vpos;;vnumber;;r&#10;Definition&#10;    getNumRequests()&#10;&#10;Description&#10;     Retrieve the number of requests added to this batch.&#10;&#10;Return:&#10;   of request elements;;d4,85;;b1,0;;m">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlMultiRequest.php;f11;105;5;144;;;;vpos;;vbool;;r&#10;Definition&#10;    send ()&#10;&#10;Description&#10;     Perform the request. After sending, all requests will have their responses poulated.&#10;&#10;Return:&#10;   TRUE on success, FALSE on failure;;d4,106;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_Request_CurlRequest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlRequest.php;f0;39;1;199;;;;vpos;;vCAS_Request_AbstractRequest;;cCAS_Request_RequestInterface;;c;;r&#10;Definition&#10;    class CAS_Request_CurlRequest&#10;extends CAS_Request_AbstractRequest&#10;implements CAS_Request_RequestInterface&#10;&#10;Description&#10;     Provides support for performing web-requests via curl;;d0,42;;b0,0;;m">
<treenode node="_curlReadHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlRequest.php;f12;194;5;198;;;;vpos;;vvoid;;r&#10;Definition&#10;    _curlReadHeaders ($ch, $header)&#10;&#10;Description&#10;     Internal method for capturing the headers from a curl request.&#10;&#10;Parameters:&#10;    handle $ch - handle of curl&#10;    string $header - header;;d4,195;;b3,0;;mhandle $ch;;pstring $header;;p">
</treenode>
<treenode node="_storeResponseBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlRequest.php;f12;181;5;184;;;;vpos;;vvoid;;r&#10;Definition&#10;    _storeResponseBody ($body)&#10;&#10;Description&#10;     Store the response body. This method should NOT be used outside of the CurlRequest or the CurlMultiRequest.&#10;&#10;Parameters:&#10;    string $body - body to stor;;d4,182;;b3,0;;mstring $body;;p">
</treenode>
<treenode node="initAndConfigure;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlRequest.php;f11;101;5;170;;;;vpos;;vresource;;r&#10;Definition&#10;    initAndConfigure()&#10;&#10;Description&#10;     Internal method to initialize our cURL handle and configure the request. This method should NOT be used outside of the CurlRequest or the CurlMultiRequest.&#10;&#10;Return:&#10;   The cURL handle on success, false on failure;;d4,102;;b1,0;;m">
</treenode>
<treenode node="sendRequest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlRequest.php;f14;62;5;92;;;;vpos;;vbool;;r&#10;Definition&#10;    sendRequest ()&#10;&#10;Description&#10;     Send the request and store the results.&#10;&#10;Return:&#10;   true on success, false on failure;;d4,63;;b2,0;;m">
</treenode>
<treenode node="setCurlOptions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlRequest.php;f11;51;5;54;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCurlOptions (array $options)&#10;&#10;Description&#10;     Set additional curl options&#10;&#10;Parameters:&#10;    array $options - option to set;;d4,52;;b1,0;;marray $options;;p">
</treenode>
</treenode>
<treenode node="CAS_Request_Exception;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\Exception.php;f0;39;1;44;;;;vpos;;vException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_Request_Exception&#10;extends Exception&#10;implements CAS_Exception&#10;&#10;Description&#10;     An Exception for problems performing requests;;d0,42;;b0,0;;m">
</treenode>
<treenode node="CAS_TypeMismatchException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\TypeMismatchException.php;f0;39;1;68;;;;vpos;;vCAS_InvalidArgumentException;;c;;r&#10;Definition&#10;    class CAS_TypeMismatchException&#10;extends CAS_InvalidArgumentException&#10;&#10;Description&#10;     Exception that denotes invalid arguments were passed.;;d0,41;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\TypeMismatchException.php;f11;53;5;67;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct (&#10;        $argument, $argumentName, $type, $message = &apos;&apos;, $code = 0&#10;    )&#10;&#10;Description&#10;     Constructor, provides a nice message.&#10;&#10;Parameters:&#10;    mixed $argument - Argument&#10;    string $argumentName - Argument Name&#10;    string $type - Type&#10;    string $message - Error Message&#10;    integer $code - Code;;d6,55;;b1,0;;mmixed $argument;;pstring $argumentName;;pstring $type;;pstring $message;;pinteger $code;;p">
</treenode>
</treenode>
<treenode node="ClassLoader;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f0;42;1;434;;;;vpos;;v;;r&#10;Definition&#10;    class ClassLoader&#10;&#10;Description&#10;     ClassLoader implements a PSR-0, PSR-4 and classmap class loader.;;d0,43;;b0,0;;m">
<treenode node="add;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;108;5;143;;;;vpos;;v;;r&#10;Definition&#10;    add($prefix, $paths, $prepend = false)&#10;&#10;Description&#10;     Registers a set of PSR-0 directories for a given prefix, either appending or prepending to the ones previously set for this prefix.&#10;&#10;Parameters:&#10;    string $prefix - The prefix&#10;    array|string $paths - The PSR-0 root directories&#10;    bool $prepend - Whether to prepend the directories;;d4,109;;b1,0;;mstring $prefix;;parray|string $paths;;pbool $prepend;;p">
</treenode>
<treenode node="addClassMap;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;91;5;98;;;;vpos;;v;;r&#10;Definition&#10;    addClassMap(array $classMap)&#10;&#10;Description&#10;      Class to filename map&#10;&#10;Parameters:&#10;    array $classMap - Class to filename map;;d4,92;;b1,0;;marray $classMap;;p">
</treenode>
<treenode node="addPsr4;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;155;5;191;;;;vpos;;v;;r&#10;Definition&#10;    addPsr4($prefix, $paths, $prepend = false)&#10;&#10;Description&#10;     Registers a set of PSR-4 directories for a given namespace, either appending or prepending to the ones previously set for this namespace.&#10;&#10;Parameters:&#10;    string $prefix - The prefix/namespace, with trailing &apos;\\&apos;&#10;    array|string $paths - The PSR-4 base directories&#10;    bool $prepend - Whether to prepend the directories;;d4,156;;b1,0;;mstring $prefix;;parray|string $paths;;pbool $prepend;;p">
</treenode>
<treenode node="findFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;334;5;367;;;;vpos;;vstring;;r&#10;Definition&#10;    findFile($class)&#10;&#10;Description&#10;     Finds the path to the file where the class is defined.&#10;&#10;Parameters:&#10;    string $class - The name of the class&#10;&#10;Return:&#10;   |false The path if found, false otherwise;;d4,335;;b1,0;;mstring $class;;p">
</treenode>
<treenode node="findFileWithExtension;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f12;369;5;433;;;;vpos;;v;;r;;d4,370;;b3,0;;mclass;;pext;;p">
</treenode>
<treenode node="getApcuPrefix;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;289;5;292;;;;vpos;;vstring;;r&#10;Definition&#10;    getApcuPrefix()&#10;&#10;Description&#10;     The APCu prefix in use, or null if APCu caching is not enabled.&#10;&#10;Return:&#10;   |null;;d4,290;;b1,0;;m">
</treenode>
<treenode node="getClassMap;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;83;5;86;;;;vpos;;v;;r;;d4,84;;b1,0;;m">
</treenode>
<treenode node="getFallbackDirs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;73;5;76;;;;vpos;;v;;r;;d4,74;;b1,0;;m">
</treenode>
<treenode node="getFallbackDirsPsr4;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;78;5;81;;;;vpos;;v;;r;;d4,79;;b1,0;;m">
</treenode>
<treenode node="getPrefixes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;59;5;66;;;;vpos;;v;;r;;d4,60;;b1,0;;m">
</treenode>
<treenode node="getPrefixesPsr4;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;68;5;71;;;;vpos;;v;;r;;d4,69;;b1,0;;m">
</treenode>
<treenode node="getUseIncludePath;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;248;5;251;;;;vpos;;vbool;;r&#10;Definition&#10;    getUseIncludePath()&#10;&#10;Description&#10;     Can be used to check if the autoloader uses the include path to check for classes.;;d4,249;;b1,0;;m">
</treenode>
<treenode node="isClassMapAuthoritative;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;269;5;272;;;;vpos;;vbool;;r&#10;Definition&#10;    isClassMapAuthoritative()&#10;&#10;Description&#10;     Should class lookup fail if not found in the current class map?;;d4,270;;b1,0;;m">
</treenode>
<treenode node="loadClass;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;318;5;325;;;;vpos;;vbool;;r&#10;Definition&#10;    loadClass($class)&#10;&#10;Description&#10;     Loads the given class or interface.&#10;&#10;Parameters:&#10;    string $class - The name of the class&#10;&#10;Return:&#10;   |null True if loaded, null otherwise;;d4,319;;b1,0;;mstring $class;;p">
</treenode>
<treenode node="register;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;299;5;302;;;;vpos;;v;;r&#10;Definition&#10;    register($prepend = false)&#10;&#10;Description&#10;     Registers this instance as an autoloader.&#10;&#10;Parameters:&#10;    bool $prepend - Whether to prepend the autoloader or not;;d4,300;;b1,0;;mbool $prepend;;p">
</treenode>
<treenode node="set;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;200;5;207;;;;vpos;;v;;r&#10;Definition&#10;    set($prefix, $paths)&#10;&#10;Description&#10;     Registers a set of PSR-0 directories for a given prefix, replacing any others previously set for this prefix.&#10;&#10;Parameters:&#10;    string $prefix - The prefix&#10;    array|string $paths - The PSR-0 base directories;;d4,201;;b1,0;;mstring $prefix;;parray|string $paths;;p">
</treenode>
<treenode node="setApcuPrefix;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;279;5;282;;;;vpos;;v;;r&#10;Definition&#10;    setApcuPrefix($apcuPrefix)&#10;&#10;Description&#10;     APCu prefix to use to cache found/not-found classes, if the extension is enabled.&#10;&#10;Parameters:&#10;    string|null $apcuPrefix;;d4,280;;b1,0;;mstring|null $apcuPrefix;;p">
</treenode>
<treenode node="setClassMapAuthoritative;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;259;5;262;;;;vpos;;v;;r&#10;Definition&#10;    setClassMapAuthoritative($classMapAuthoritative)&#10;&#10;Description&#10;     Turns off searching the prefix and fallback directories for classes that have not been registered with the class map.&#10;&#10;Parameters:&#10;    bool $classMapAuthoritative;;d4,260;;b1,0;;mbool $classMapAuthoritative;;p">
</treenode>
<treenode node="setPsr4;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;218;5;230;;;;vpos;;v;;r&#10;Definition&#10;    setPsr4($prefix, $paths)&#10;&#10;Description&#10;     Registers a set of PSR-4 directories for a given namespace, replacing any others previously set for this namespace.&#10;&#10;Parameters:&#10;    string $prefix - The prefix/namespace, with trailing &apos;\\&apos;&#10;    array|string $paths - The PSR-4 base directories;;d4,219;;b1,0;;mstring $prefix;;parray|string $paths;;p">
</treenode>
<treenode node="setUseIncludePath;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;237;5;240;;;;vpos;;v;;r&#10;Definition&#10;    setUseIncludePath($useIncludePath)&#10;&#10;Description&#10;     Turns on searching the include path for class files.&#10;&#10;Parameters:&#10;    bool $useIncludePath;;d4,238;;b1,0;;mbool $useIncludePath;;p">
</treenode>
<treenode node="unregister;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;307;5;310;;;;vpos;;v;;r&#10;Definition&#10;    unregister()&#10;&#10;Description&#10;     Unregisters this instance as an autoloader.;;d4,308;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Command;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f0;12;1;395;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f0;14;1;230;;;;vpos;;v;;r&#10;Definition&#10;    class Command&#10;&#10;Description&#10;     Command;;d0,13;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;109;5;116;;;;vpos;;v;;r&#10;Definition&#10;    __construct($options = null)&#10;&#10;Description&#10;      either a command string or an options array (see setOptions())&#10;&#10;Parameters:&#10;    string|array $options - either a command string or an options array (see setOptions());;d4,110;;b1,0;;mstring|array $options;;p">
</treenode>
<treenode node="__toString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;391;5;394;;;;vpos;;vstring;;r&#10;Definition&#10;    __toString()&#10;&#10;Description&#10;      the current command string to execute&#10;&#10;Return:&#10;   the current command string to execute;;d4,392;;b1,0;;m">
</treenode>
<treenode node="addArg;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;239;5;268;;;;vpos;;vstatic;;r&#10;Definition&#10;    addArg($key, $value = null, $escape = null)&#10;&#10;Description&#10;      the argument key to add e.g. `--feature` or `--name=`. If the key does not end with and `=`, the $value will be separated by a space, if any. Keys are not escaped unless $value is null and $escape is `true`.&#10;&#10;Parameters:&#10;    string $key - the argument key to add e&#10;    string|array|null $value - the optional argument value which will get escaped if $escapeArgs is true&#10;    bool|null $escape - if set, this overrides the $escapeArgs setting and enforces escaping/no escaping&#10;&#10;Return:&#10;   for method chaining;;d4,240;;b1,0;;mstring $key;;pstring|array|null $value;;pbool|null $escape;;p">
</treenode>
<treenode node="addFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f11;53;5;62;;;;vpos;;vCommand;;r&#10;Definition&#10;    addFile($name, $handle, $password = null)&#10;&#10;Description&#10;      the PDF file to add for processing&#10;&#10;Parameters:&#10;    string $name - the PDF file to add for processing&#10;    string $handle - one or more uppercase letters A&#10;    string|null $password - the owner (or user) password if any&#10;&#10;Return:&#10;   the command instance for method chaining;;d4,54;;b1,0;;mstring $name;;pstring $handle;;pstring|null $password;;p">
</treenode>
<treenode node="addOption;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f11;70;5;74;;;;vpos;;vCommand;;r&#10;Definition&#10;    addOption($option, $argument = null, $escape = null)&#10;&#10;Description&#10;      the pdftk option to add&#10;&#10;Parameters:&#10;    string $option - the pdftk option to add&#10;    string|File|null $argument - the argument to add, either string, File instance or null if none&#10;    null|bool - whether to escape the option&#10;&#10;Return:&#10;   the command instance for method chaining;;d4,71;;b1,0;;mstring $option;;pstring|File|null $argument;;pnull|bool;;p">
</treenode>
<treenode node="addPageRange;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f11;136;5;153;;;;vpos;;vCommand;;r&#10;Definition&#10;    addPageRange($start, $end = null, $handle = null, $qualifier = null, $rotation = null)&#10;&#10;Description&#10;     Add a page range as used by some operations&#10;&#10;Parameters:&#10;    int|string|array $start - the start page number or an array of page numbers&#10;    int|string|null $end - the end page number or null for single page (or list if $start is an array)&#10;    string|null $handle - the handle of the file to use&#10;    string|null $qualifier - the page number qualifier, either &apos;even&apos; or &apos;odd&apos; or null for none&#10;    string $rotation - the rotation to apply to the pages&#10;&#10;Return:&#10;   the command instance for method chaining;;d4,137;;b1,0;;mint|string|array $start;;pint|string|null $end;;pstring|null $handle;;pstring|null $qualifier;;pstring $rotation;;p">
</treenode>
<treenode node="checkExecutionStatus;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f14;224;5;229;;;;vpos;;v;;r&#10;Definition&#10;    checkExecutionStatus()&#10;&#10;Description&#10;     Ensure that the command was not exectued yet. Throws exception otherwise.;;d4,225;;b2,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;319;5;378;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f11;159;5;166;;;;vpos;;vbool;;r&#10;Definition&#10;    execute()&#10;&#10;Description&#10;     Execute the command&#10;&#10;Return:&#10;   whether execution was successful;;d4,320;;b1,0;;m">
</treenode>
<treenode node="getArgs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;224;5;227;;;;vpos;;vstring;;r&#10;Definition&#10;    getArgs()&#10;&#10;Description&#10;      the command args that where set through setArgs() or added with addArg() separated by spaces&#10;&#10;Return:&#10;   the command args that where set through setArgs() or added with addArg() separated by spaces;;d4,225;;b1,0;;m">
</treenode>
<treenode node="getCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;188;5;191;;;;vpos;;vstring;;r&#10;Definition&#10;    getCommand()&#10;&#10;Description&#10;      |null the command that was set through setCommand() or passed to the constructor. Null if none.&#10;&#10;Return:&#10;   |null the command that was set through setCommand() or passed to the constructor;;d4,189;;b1,0;;m">
</treenode>
<treenode node="getError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;283;5;286;;;;vpos;;vstring;;r&#10;Definition&#10;    getError($trim = true)&#10;&#10;Description&#10;      whether to `trim()` the return value. The default is `true`.&#10;&#10;Parameters:&#10;    bool $trim - whether to `trim()` the return value&#10;&#10;Return:&#10;   the error message, either stderr or internal message;;d4,284;;b1,0;;mbool $trim;;p">
</treenode>
<treenode node="getExecCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;197;5;209;;;;vpos;;vstring;;r&#10;Definition&#10;    getExecCommand()&#10;&#10;Description&#10;      |bool the full command string to execute. If no command was set with setCommand() or passed to the constructor it will return false.&#10;&#10;Return:&#10;   |bool the full command string to execute;;d4,198;;b1,0;;m">
</treenode>
<treenode node="getExecuted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;308;5;311;;;;vpos;;vstring;;r&#10;Definition&#10;    getExecuted()&#10;&#10;Description&#10;      whether the command was successfully executed&#10;&#10;Return:&#10;   whether the command was successfully executed;;d4,309;;b1,0;;m">
</treenode>
<treenode node="getExitCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;300;5;303;;;;vpos;;vint;;r&#10;Definition&#10;    getExitCode()&#10;&#10;Description&#10;      |null the exit code or null if command was not executed yet&#10;&#10;Return:&#10;   |null the exit code or null if command was not executed yet;;d4,301;;b1,0;;m">
</treenode>
<treenode node="getFileCount;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f11;120;5;123;;;;vpos;;vint;;r&#10;Definition&#10;    getFileCount()&#10;&#10;Description&#10;      the number of files added to the command&#10;&#10;Return:&#10;   the number of files added to the command;;d4,121;;b1,0;;m">
</treenode>
<treenode node="getIsWindows;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;383;5;386;;;;vpos;;vbool;;r&#10;Definition&#10;    getIsWindows()&#10;&#10;Description&#10;      whether we are on a Windows OS&#10;&#10;Return:&#10;   whether we are on a Windows OS;;d4,384;;b1,0;;m">
</treenode>
<treenode node="getOperation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f11;90;5;93;;;;vpos;;vstring;;r&#10;Definition&#10;    getOperation()&#10;&#10;Description&#10;      |null the current operation or null if none set&#10;&#10;Return:&#10;   |null the current operation or null if none set;;d4,91;;b1,0;;m">
</treenode>
<treenode node="getOperationArgument;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f11;111;5;115;;;;vpos;;vstring;;r&#10;Definition&#10;    getOperationArgument()&#10;&#10;Description&#10;      |array|null the current operation argument as string or array or null if none set&#10;&#10;Return:&#10;   |array|null the current operation argument as string or array or null if none set;;d4,112;;b1,0;;m">
</treenode>
<treenode node="getOutput;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;274;5;277;;;;vpos;;vstring;;r&#10;Definition&#10;    getOutput($trim = true)&#10;&#10;Description&#10;      whether to `trim()` the return value. The default is `true`.&#10;&#10;Parameters:&#10;    bool $trim - whether to `trim()` the return value&#10;&#10;Return:&#10;   the command output (stdout);;d4,275;;b1,0;;mbool $trim;;p">
</treenode>
<treenode node="getStdErr;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;292;5;295;;;;vpos;;vstring;;r&#10;Definition&#10;    getStdErr($trim = true)&#10;&#10;Description&#10;      whether to `trim()` the return value. The default is `true`.&#10;&#10;Parameters:&#10;    bool $trim - whether to `trim()` the return value&#10;&#10;Return:&#10;   the stderr output;;d4,293;;b1,0;;mbool $trim;;p">
</treenode>
<treenode node="processInputFiles;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f14;171;5;186;;;;vpos;;v;;r&#10;Definition&#10;    processInputFiles()&#10;&#10;Description&#10;     Process input PDF files and create respective command arguments;;d4,172;;b2,0;;m">
</treenode>
<treenode node="processOperation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f14;210;5;219;;;;vpos;;v;;r&#10;Definition&#10;    processOperation()&#10;&#10;Description&#10;     Process opearation and create respective command arguments;;d4,211;;b2,0;;m">
</treenode>
<treenode node="processOptions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f14;192;5;205;;;;vpos;;v;;r&#10;Definition&#10;    processOptions($filename = null)&#10;&#10;Description&#10;     Process options and create respective command arguments&#10;&#10;Parameters:&#10;    string|null $filename - if provided an &apos;output&apos; option will be added;;d4,193;;b2,0;;mstring|null $filename;;p">
</treenode>
<treenode node="setArgs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;215;5;219;;;;vpos;;vstatic;;r&#10;Definition&#10;    setArgs($args)&#10;&#10;Description&#10;      the command arguments as string. Note that these will not get escaped!&#10;&#10;Parameters:&#10;    string $args - the command arguments as string&#10;&#10;Return:&#10;   for method chaining;;d4,216;;b1,0;;mstring $args;;p">
</treenode>
<treenode node="setCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;148;5;171;;;;vpos;;vstatic;;r&#10;Definition&#10;    setCommand($command)&#10;&#10;Description&#10;      the command or full command string to execute, like &apos;gzip&apos; or &apos;gzip -d&apos;. You can still call addArg() to add more arguments to the command. If $escapeCommand was set to true, the command gets escaped through escapeshellcmd().&#10;&#10;Parameters:&#10;    string $command - the command or full command string to execute, like &apos;gzip&apos; or &apos;gzip -d&apos;&#10;&#10;Return:&#10;   for method chaining;;d4,149;;b1,0;;mstring $command;;p">
</treenode>
<treenode node="setOperation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f11;80;5;85;;;;vpos;;vCommand;;r&#10;Definition&#10;    setOperation($operation)&#10;&#10;Description&#10;      the operation to perform&#10;&#10;Parameters:&#10;    string $operation - the operation to perform&#10;&#10;Return:&#10;   the command instance for method chaining;;d4,81;;b1,0;;mstring $operation;;p">
</treenode>
<treenode node="setOperationArgument;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f11;100;5;106;;;;vpos;;vCommand;;r&#10;Definition&#10;    setOperationArgument($value, $escape = false)&#10;&#10;Description&#10;      the operation argument&#10;&#10;Parameters:&#10;    string $value - the operation argument&#10;    bool $escape - whether to escape the operation argument&#10;&#10;Return:&#10;   the command instance for method chaining;;d4,101;;b1,0;;mstring $value;;pbool $escape;;p">
</treenode>
<treenode node="setOptions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;125;5;140;;;;vpos;;vstatic;;r&#10;Definition&#10;    setOptions($options)&#10;&#10;Description&#10;      array of name =&gt; value options that should be applied to the object You can also pass options that use a setter, e.g. you can pass a `fileName` option which will be passed to `setFileName()`.&#10;&#10;Parameters:&#10;    array $options - array of name =&gt; value options that should be applied to the object&#10;&#10;Return:&#10;   for method chaining;;d4,126;;b1,0;;marray $options;;p">
</treenode>
<treenode node="setStdIn;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;180;5;183;;;;vpos;;vstatic;;r&#10;Definition&#10;    setStdIn($stdIn)&#10;&#10;Description&#10;      If set, the string will be piped to the command via standard input. This enables the same functionality as piping on the command line. It can also be a resource like a file handle or a stream in which case its content will be piped into the command like an input redirection.&#10;&#10;Parameters:&#10;    string|resource $stdIn - If set, the string will be piped to the command via standard input&#10;&#10;Return:&#10;   for method chaining;;d37,180;;b1,0;;mstring|resource $stdIn;;p">
</treenode>
</treenode>
<treenode node="CommandTest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f0;3;1;249;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f0;3;1;110;;;;vpos;;vTestCase;;c;;r;;d0,4;;b0,0;;m">
<treenode node="getDocument1;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f14;91;5;94;;;;vpos;;v;;r;;d4,92;;b2,0;;m">
</treenode>
<treenode node="getDocument2;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f14;96;5;99;;;;vpos;;v;;r;;d4,97;;b2,0;;m">
</treenode>
<treenode node="getForm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f14;101;5;104;;;;vpos;;v;;r;;d4,102;;b2,0;;m">
</treenode>
<treenode node="getOutFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f14;106;5;109;;;;vpos;;v;;r;;d4,107;;b2,0;;m">
</treenode>
<treenode node="setUp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;5;5;9;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f11;5;5;8;;;;vpos;;v;;r;;d4,6;;b1,0;;m">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f11;9;5;12;;;;vpos;;v;;r;;d4,10;;b1,0;;m">
</treenode>
<treenode node="testCanAddArguments;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;69;5;85;;;;vpos;;v;;r;;d4,70;;b1,0;;m">
</treenode>
<treenode node="testCanAddFiles;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f11;14;5;29;;;;vpos;;v;;r;;d4,15;;b1,0;;m">
</treenode>
<treenode node="testCanAddOptions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f11;31;5;45;;;;vpos;;v;;r;;d4,32;;b1,0;;m">
</treenode>
<treenode node="testCanAddPageRanges;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f11;64;5;89;;;;vpos;;v;;r;;d4,65;;b1,0;;m">
</treenode>
<treenode node="testCanCastToString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;160;5;166;;;;vpos;;v;;r;;d4,161;;b1,0;;m">
</treenode>
<treenode node="testCanDisableEscaping;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;94;5;105;;;;vpos;;v;;r;;d4,95;;b1,0;;m">
</treenode>
<treenode node="testCanNotRunEmptyCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;132;5;137;;;;vpos;;v;;r;;d4,133;;b1,0;;m">
</treenode>
<treenode node="testCanNotRunInvalidCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;149;5;159;;;;vpos;;v;;r;;d4,150;;b1,0;;m">
</treenode>
<treenode node="testCanNotRunInvalidCommandWithExec;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;195;5;206;;;;vpos;;v;;r;;d4,196;;b1,0;;m">
</treenode>
<treenode node="testCanNotRunNotExistantCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;138;5;148;;;;vpos;;v;;r;;d4,139;;b1,0;;m">
</treenode>
<treenode node="testCanNotRunNotExistantCommandWithExec;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;183;5;194;;;;vpos;;v;;r;;d4,184;;b1,0;;m">
</treenode>
<treenode node="testCanPassCommandOptionToConstructor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;18;5;25;;;;vpos;;v;;r;;d4,19;;b1,0;;m">
</treenode>
<treenode node="testCanPassCommandStringToConstructor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;12;5;17;;;;vpos;;v;;r;;d4,13;;b1,0;;m">
</treenode>
<treenode node="testCanPassOptionsToConstructor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;51;5;65;;;;vpos;;v;;r;;d4,52;;b1,0;;m">
</treenode>
<treenode node="testCanProvideProcDir;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;216;5;225;;;;vpos;;v;;r;;d4,217;;b1,0;;m">
</treenode>
<treenode node="testCanProvideProcEnvVars;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;209;5;215;;;;vpos;;v;;r;;d4,210;;b1,0;;m">
</treenode>
<treenode node="testCanResetArguments;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;86;5;93;;;;vpos;;v;;r;;d4,87;;b1,0;;m">
</treenode>
<treenode node="testCanRunCommandWithArguments;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;106;5;115;;;;vpos;;v;;r;;d4,107;;b1,0;;m">
</treenode>
<treenode node="testCanRunCommandWithStandardInput;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;226;5;234;;;;vpos;;v;;r;;d4,227;;b1,0;;m">
</treenode>
<treenode node="testCanRunCommandWithStandardInputStream;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;235;5;247;;;;vpos;;v;;r;;d4,236;;b1,0;;m">
</treenode>
<treenode node="testCanRunValidCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;118;5;131;;;;vpos;;v;;r;;d4,119;;b1,0;;m">
</treenode>
<treenode node="testCanRunValidCommandWithExec;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;169;5;182;;;;vpos;;v;;r;;d4,170;;b1,0;;m">
</treenode>
<treenode node="testCanSetAndGetOperationAndArgument;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f11;47;5;62;;;;vpos;;v;;r;;d4,48;;b1,0;;m">
</treenode>
<treenode node="testCanSetCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;26;5;32;;;;vpos;;v;;r;;d4,27;;b1,0;;m">
</treenode>
<treenode node="testCanSetOptions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;35;5;50;;;;vpos;;v;;r;;d4,36;;b1,0;;m">
</treenode>
</treenode>
<treenode node="ComposerAutoloaderInit92a4c7f5ed6ade7e92ea181e78dcaef2;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\autoload_real.php;f0;4;1;51;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="getLoader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\autoload_real.php;f18;15;5;50;;;;vpos;;v;;r;;d4,16;;b1,5;;m">
</treenode>
<treenode node="loadClassLoader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\autoload_real.php;f18;8;5;13;;;;vpos;;v;;r;;d4,9;;b1,5;;mclass;;p">
</treenode>
</treenode>
<treenode node="ComposerStaticInit92a4c7f5ed6ade7e92ea181e78dcaef2;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\autoload_static.php;f0;6;1;40;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
<treenode node="getInitializer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\autoload_static.php;f18;32;5;39;;;;vpos;;v;;r;;d4,33;;b1,5;;mloader;;p">
</treenode>
</treenode>
<treenode node="Controller;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\controller.php;f0;4;1;58;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\controller.php;f1;16;2;20;;;;vpos;;v;;r;;d1,17;;b0,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\controller.php;f8;53;2;57;;;;vpos;;v;;r;;d1,54;;b1,0;;m">
</treenode>
<treenode node="actionDelDocConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\controller.php;f1;27;2;51;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelDocConfirm($form, $get)&#10;&#10;Description&#10;     Displays document delete confirmation page.;;d1,28;;b0,0;;mform;;pget;;p">
</treenode>
</treenode>
<treenode node="Controller_AdmissionCampaign;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_AdmissionCampaign.php;f0;7;1;41;;;;vpos;;vController;;c;;r;;d0,8;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;15;2;25;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_AdmissionCampaign.php;f8;15;2;25;;;;vpos;;v;;r;;d1,16;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;37;2;40;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_AdmissionCampaign.php;f8;37;2;40;;;;vpos;;v;;r;;d1,38;;b1,0;;m">
</treenode>
<treenode node="actionAdmCampByUniversityJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;32;2;35;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_AdmissionCampaign.php;f8;32;2;35;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionAdmCampByUniversityJSON()&#10;&#10;Description&#10;     Prints admission campaigns by university JSON.;;d1,33;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_Application;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f0;9;1;80;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f0;14;1;151;;;;vpos;;vController;;c;;r;;d0,15;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;17;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f8;22;2;42;;;;vpos;;v;;r;;d1,23;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;75;2;79;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f8;146;2;150;;;;vpos;;v;;r;;d1,147;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;49;2;55;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f8;70;2;76;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays application add page.;;d1,71;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f8;112;2;122;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes application.;;d1,113;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f8;102;2;105;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to application delete confirm.;;d1,103;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f8;83;2;95;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows application specialities.;;d1,84;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;28;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f8;49;2;52;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays application page.;;d1,50;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;38;2;42;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f8;59;2;63;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets application page.;;d1,60;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;62;2;73;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f8;129;2;144;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves application.;;d1,130;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_ApplicationSpec;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationPlaces.php;f0;9;1;87;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f0;12;1;217;;;;vpos;;vController;;c;;r;;d0,13;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationPlaces.php;f8;17;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;20;2;24;;;;vpos;;v;;r;;d1,21;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationPlaces.php;f8;82;2;86;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;212;2;216;;;;vpos;;v;;r;;d1,213;;b1,0;;m">
</treenode>
<treenode node="actionAddPlaces;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationPlaces.php;f8;28;2;38;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;60;2;70;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAddPlaces()&#10;&#10;Description&#10;     Displays application places add page.;;d1,61;;b1,0;;m">
</treenode>
<treenode node="actionCancel;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;50;2;53;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionCancel()&#10;&#10;Description&#10;     Cancels application spec page.;;d1,51;;b1,0;;m">
</treenode>
<treenode node="actionCancelPlaces;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;77;2;85;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionCancelPlaces()&#10;&#10;Description&#10;     Cancels application places add page.;;d1,78;;b1,0;;m">
</treenode>
<treenode node="actionChange;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;154;2;166;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionChange()&#10;&#10;Description&#10;     Changes application.;;d1,155;;b1,0;;m">
</treenode>
<treenode node="actionRecall;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;173;2;185;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionRecall()&#10;&#10;Description&#10;     Recalls application.;;d1,174;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationPlaces.php;f8;60;2;80;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;107;2;128;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves application spec.;;d1,108;;b1,0;;m">
</treenode>
<treenode node="actionSavePdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;192;2;210;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSavePdf()&#10;&#10;Description&#10;     Saves application spec as PDF.;;d1,193;;b1,0;;m">
</treenode>
<treenode node="actionSavePlaces;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationPlaces.php;f8;45;2;53;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;92;2;100;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSavePlaces()&#10;&#10;Description&#10;     Saves application spec places.;;d1,93;;b1,0;;m">
</treenode>
<treenode node="actionSend;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;135;2;147;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSend()&#10;&#10;Description&#10;     Sends application.;;d1,136;;b1,0;;m">
</treenode>
<treenode node="actionSyncIa;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;31;2;43;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSyncIa()&#10;&#10;Description&#10;     Synchronizes individual achievments for application.;;d1,32;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_DictCountries;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictCountries.php;f0;9;1;115;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictCountries.php;f8;17;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictCountries.php;f8;110;2;114;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;110;2;114;;;;vpos;;v;;r;;d1,111;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictCountries.php;f8;38;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;38;2;44;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays country add page.;;d1,39;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictCountries.php;f8;78;2;89;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;78;2;89;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes country.;;d1,79;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictCountries.php;f8;68;2;71;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;68;2;71;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to country delete confirm.;;d1,69;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictCountries.php;f8;51;2;61;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;51;2;61;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows country.;;d1,52;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictCountries.php;f8;28;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;28;2;31;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays countries page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictCountries.php;f8;96;2;108;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;96;2;108;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves country.;;d1,97;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_DictDoctypes;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictDoctypes.php;f0;7;1;81;;;;vpos;;vController;;c;;r;;d0,8;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;15;2;25;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictDoctypes.php;f8;15;2;25;;;;vpos;;v;;r;;d1,16;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;37;2;40;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictDoctypes.php;f8;77;2;80;;;;vpos;;v;;r;;d1,78;;b1,0;;m">
</treenode>
<treenode node="actionDiplomasByEducCodeJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;32;2;35;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictDoctypes.php;f8;72;2;75;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionDiplomasByEducCodeJSON()&#10;&#10;Description&#10;     Prints education documents by education type code JSON.;;d1,73;;b1,0;;m">
</treenode>
<treenode node="actionPassportsBsuJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictDoctypes.php;f8;42;2;45;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionPassportsBsuJSON()&#10;&#10;Description&#10;     Prints passports BSU JSON.;;d1,43;;b1,0;;m">
</treenode>
<treenode node="actionPassportsForeignJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictDoctypes.php;f8;62;2;65;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionPassportsForeignJSON()&#10;&#10;Description&#10;     Prints foreign passports JSON.;;d1,63;;b1,0;;m">
</treenode>
<treenode node="actionPassportsJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictDoctypes.php;f8;32;2;35;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionPassportsJSON()&#10;&#10;Description&#10;     Prints passports JSON.;;d1,33;;b1,0;;m">
</treenode>
<treenode node="actionPassportsRussianJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictDoctypes.php;f8;52;2;55;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionPassportsRussianJSON()&#10;&#10;Description&#10;     Prints russian passports JSON.;;d1,53;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_DictEge;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictEge.php;f0;9;1;115;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;17;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictEge.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;110;2;114;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictEge.php;f8;110;2;114;;;;vpos;;v;;r;;d1,111;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;38;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictEge.php;f8;38;2;44;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays dictionary ege add page.;;d1,39;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;78;2;89;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictEge.php;f8;78;2;89;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes dictionary ege.;;d1,79;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;68;2;71;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictEge.php;f8;68;2;71;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to dictionary ege delete confirm.;;d1,69;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;51;2;61;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictEge.php;f8;51;2;61;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows dictionary ege.;;d1,52;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;28;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictEge.php;f8;28;2;31;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays dictionary ege page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;96;2;108;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictEge.php;f8;96;2;108;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves dictionary ege.;;d1,97;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_DictForeignLangs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictForeignLangs.php;f0;7;1;42;;;;vpos;;vController;;c;;r;;d0,8;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictForeignLangs.php;f8;13;2;16;;;;vpos;;v;;r;;d1,14;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictForeignLangs.php;f8;38;2;41;;;;vpos;;v;;r;;d1,39;;b1,0;;m">
</treenode>
<treenode node="actionForeignLangsBsuJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictForeignLangs.php;f8;33;2;36;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionForeignLangsBsuJSON()&#10;&#10;Description&#10;     Prints BSU foreign languages JSON.;;d1,34;;b1,0;;m">
</treenode>
<treenode node="actionForeignLangsJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictForeignLangs.php;f8;23;2;26;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionForeignLangsJSON()&#10;&#10;Description&#10;     Prints foreign languages JSON.;;d1,24;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_DictionaryManager;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictManager.php;f0;8;1;55;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictionaryManager.php;f0;9;1;161;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictManager.php;f8;16;2;20;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;16;2;20;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictionaryManager.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictManager.php;f8;50;2;54;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;35;2;39;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictionaryManager.php;f8;156;2;160;;;;vpos;;v;;r;;d1,157;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictionaryManager.php;f8;66;2;72;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays dictionary manager add page.;;d1,67;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictionaryManager.php;f8;124;2;135;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes dictionary.;;d1,125;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictionaryManager.php;f8;114;2;117;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to dictionary delete confirm.;;d1,115;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictionaryManager.php;f8;95;2;107;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows dictionary.;;d1,96;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictManager.php;f8;27;2;33;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;27;2;33;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictionaryManager.php;f8;28;2;31;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays dictionary manager page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionLog;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictionaryManager.php;f8;79;2;88;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionLog()&#10;&#10;Description&#10;     Shows dictionary log.;;d1,80;;b1,0;;m">
</treenode>
<treenode node="actionRenew;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictManager.php;f8;40;2;48;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictionaryManager.php;f8;51;2;59;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionRenew()&#10;&#10;Description&#10;     Renews dictionary.;;d1,52;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictionaryManager.php;f8;142;2;154;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves dictionary.;;d1,143;;b1,0;;m">
</treenode>
<treenode node="actionSync;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictionaryManager.php;f8;38;2;44;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSync()&#10;&#10;Description&#10;     Displays dictionary manager sync page.;;d1,39;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_DictScans;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictScans.php;f0;9;1;115;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;17;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictScans.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;110;2;114;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictScans.php;f8;110;2;114;;;;vpos;;v;;r;;d1,111;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;38;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictScans.php;f8;38;2;44;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays dictionary scans add page.;;d1,39;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;78;2;89;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictScans.php;f8;78;2;89;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes dictionary scans.;;d1,79;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;68;2;71;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictScans.php;f8;68;2;71;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to dictionary scans delete confirm.;;d1,69;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;51;2;61;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictScans.php;f8;51;2;61;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows dictionary scans.;;d1,52;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;28;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictScans.php;f8;28;2;31;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays dictionary scans page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;96;2;108;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictScans.php;f8;96;2;108;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves dictionary scans.;;d1,97;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_DictUniversity;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictUniversity.php;f0;9;1;115;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;17;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictUniversity.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;110;2;114;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictUniversity.php;f8;110;2;114;;;;vpos;;v;;r;;d1,111;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;38;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictUniversity.php;f8;38;2;44;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays dictionary university add page.;;d1,39;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;78;2;89;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictUniversity.php;f8;78;2;89;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes dictionary university.;;d1,79;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;68;2;71;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictUniversity.php;f8;68;2;71;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to dictionary university delete confirm.;;d1,69;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;51;2;61;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictUniversity.php;f8;51;2;61;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows dictionary university.;;d1,52;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;28;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictUniversity.php;f8;28;2;31;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays dictionary university page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;96;2;108;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictUniversity.php;f8;96;2;108;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves dictionary university.;;d1,97;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_Docs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Docs.php;f0;9;1;115;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Docs.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Docs.php;f8;110;2;114;;;;vpos;;v;;r;;d1,111;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Docs.php;f8;38;2;44;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays documents add page.;;d1,39;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Docs.php;f8;78;2;89;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes documents.;;d1,79;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Docs.php;f8;68;2;71;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to documents delete confirm.;;d1,69;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Docs.php;f8;51;2;61;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows documents.;;d1,52;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Docs.php;f8;28;2;31;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays documents page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Docs.php;f8;96;2;108;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves documents.;;d1,97;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_DocsEduc;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_.php;f0;8;1;40;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f0;12;1;181;;;;vpos;;vController;;c;;r;;d0,13;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_.php;f8;16;2;20;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;17;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;17;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;21;2;45;;;;vpos;;v;;r;;d1,22;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_.php;f8;35;2;39;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;121;2;125;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;121;2;125;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;176;2;180;;;;vpos;;v;;r;;d1,177;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;49;2;55;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;49;2;55;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;73;2;79;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays education documents add page.;;d1,74;;b1,0;;m">
</treenode>
<treenode node="actionCancel;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;161;2;164;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionCancel()&#10;&#10;Description&#10;     Cancels education document.;;d1,162;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;89;2;100;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;89;2;100;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;116;2;127;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes education document.;;d1,117;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;79;2;82;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;79;2;82;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;106;2;109;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to education document delete confirm.;;d1,107;;b1,0;;m">
</treenode>
<treenode node="actionDiplomasByUserCampaignJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;171;2;174;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionDiplomasByUserCampaignJSON()&#10;&#10;Description&#10;     Prints education documents by user campaign JSON.;;d1,172;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;62;2;72;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;62;2;72;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;86;2;99;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows education document.;;d1,87;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_.php;f8;27;2;33;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;28;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;28;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;52;2;55;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays education documents page.;;d1,53;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;38;2;42;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;38;2;42;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;62;2;66;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets education documents add page.;;d1,63;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;107;2;119;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;107;2;119;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;134;2;154;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves education document.;;d0,135;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_EduclevelsDoctypes;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EduclevelsDoctypes.php;f0;9;1;115;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;17;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EduclevelsDoctypes.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;110;2;114;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EduclevelsDoctypes.php;f8;110;2;114;;;;vpos;;v;;r;;d1,111;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;38;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EduclevelsDoctypes.php;f8;38;2;44;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays educlevels doctypes add page.;;d1,39;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;78;2;89;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EduclevelsDoctypes.php;f8;78;2;89;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes educlevels doctypes.;;d1,79;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;68;2;71;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EduclevelsDoctypes.php;f8;68;2;71;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to educlevels doctypes delete confirm.;;d1,69;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;51;2;61;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EduclevelsDoctypes.php;f8;51;2;61;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows educlevels doctypes.;;d1,52;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;28;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EduclevelsDoctypes.php;f8;28;2;31;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays educlevels doctypes page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;96;2;108;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EduclevelsDoctypes.php;f8;96;2;108;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves educlevels doctypes.;;d1,97;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_EductypesDoctypes;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EductypesDoctypes.php;f0;9;1;115;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;17;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EductypesDoctypes.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;110;2;114;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EductypesDoctypes.php;f8;110;2;114;;;;vpos;;v;;r;;d1,111;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;38;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EductypesDoctypes.php;f8;38;2;44;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays eductypes doctypes add page.;;d1,39;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;78;2;89;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EductypesDoctypes.php;f8;78;2;89;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes eductypes doctypes.;;d1,79;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;68;2;71;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EductypesDoctypes.php;f8;68;2;71;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to eductypes doctypes delete confirm.;;d1,69;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;51;2;61;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EductypesDoctypes.php;f8;51;2;61;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows eductypes doctypes.;;d1,52;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;28;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EductypesDoctypes.php;f8;28;2;31;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays eductypes doctypes page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;96;2;108;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EductypesDoctypes.php;f8;96;2;108;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves eductypes doctypes.;;d1,97;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_Ege;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f0;10;1;141;;;;vpos;;vController;;c;;r;;d0,11;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f8;18;2;32;;;;vpos;;v;;r;;d1,19;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f8;136;2;140;;;;vpos;;v;;r;;d1,137;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f8;60;2;66;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays ege add page.;;d1,61;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f8;100;2;111;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes ege.;;d1,101;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f8;90;2;93;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to ege document delete confirm.;;d1,91;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f8;73;2;83;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows ege disciplines.;;d1,74;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f8;39;2;42;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays ege page.;;d1,40;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f8;49;2;53;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets ege page.;;d1,50;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f8;118;2;134;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves ege.;;d1,119;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_EgeDisciplines;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f0;9;1;172;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;167;2;171;;;;vpos;;v;;r;;d1,168;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;61;2;70;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays ege disciplines add page.;;d1,62;;b1,0;;m">
</treenode>
<treenode node="actionCancel;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;157;2;165;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionCancel()&#10;&#10;Description&#10;     Cancels ege disciplines.;;d1,158;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;110;2;122;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes ege discipline.;;d1,111;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;100;2;103;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to ege discipline delete confirm.;;d1,101;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;77;2;93;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows ege discipline.;;d1,78;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;28;2;38;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays ege page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;45;2;54;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets ege disciplines page.;;d1,46;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;129;2;150;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves ege discipline.;;d1,130;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_IndAchiev;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f0;9;1;126;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;121;2;125;;;;vpos;;v;;r;;d1,122;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;49;2;55;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays education documents add page.;;d1,50;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;89;2;100;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes education document.;;d1,90;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;79;2;82;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to education document delete confirm.;;d1,80;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;62;2;72;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows education document.;;d1,63;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;28;2;31;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays education documents page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;38;2;42;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets education documents page.;;d1,39;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;107;2;119;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves education document.;;d1,108;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_IndAchievs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f0;9;1;126;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f0;10;1;152;;;;vpos;;vController;;c;;r;;d0,11;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f8;17;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;18;2;32;;;;vpos;;v;;r;;d1,19;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f8;121;2;125;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;147;2;151;;;;vpos;;v;;r;;d1,148;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f8;49;2;55;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;60;2;66;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays individual achievments add page.;;d1,61;;b1,0;;m">
</treenode>
<treenode node="actionCancel;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;142;2;145;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionCancel()&#10;&#10;Description&#10;     Cancels individual achievment.;;d1,143;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f8;89;2;100;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;100;2;111;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes education document.;;d1,101;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f8;79;2;82;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;90;2;93;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to individual achievment delete confirm.;;d1,91;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f8;62;2;72;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;73;2;83;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows individual achievment.;;d1,74;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f8;28;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;39;2;42;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays individual achievments page.;;d1,40;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f8;38;2;42;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;49;2;53;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets individual achievments add page.;;d1,50;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f8;107;2;119;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;118;2;135;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves individual achievment.;;d1,119;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_Kladr;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f0;7;1;162;;;;vpos;;vController;;c;;r;;d0,8;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;15;2;26;;;;vpos;;v;;r;;d1,16;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;158;2;161;;;;vpos;;v;;r;;d1,159;;b1,0;;m">
</treenode>
<treenode node="actionAreaAllJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;43;2;46;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionAreaAllJSON()&#10;&#10;Description&#10;     Prints all areas JSON.;;d1,44;;b1,0;;m">
</treenode>
<treenode node="actionAreaByRegionJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;53;2;56;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionAreaByRegionJSON()&#10;&#10;Description&#10;     Prints areas by region JSON.;;d1,54;;b1,0;;m">
</treenode>
<treenode node="actionCityByAreaJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;63;2;66;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionCityByAreaJSON()&#10;&#10;Description&#10;     Prints cities by area JSON.;;d1,64;;b1,0;;m">
</treenode>
<treenode node="actionCityByRegionJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;73;2;76;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionCityByRegionJSON()&#10;&#10;Description&#10;     Prints cities by region JSON.;;d1,74;;b1,0;;m">
</treenode>
<treenode node="actionHouseByStreetJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;143;2;146;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionHouseByStreetJSON()&#10;&#10;Description&#10;     Prints houses by street JSON.;;d1,144;;b1,0;;m">
</treenode>
<treenode node="actionLocationByAreaJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;93;2;96;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionLocationByAreaJSON()&#10;&#10;Description&#10;     Prints locations by area JSON.;;d1,94;;b1,0;;m">
</treenode>
<treenode node="actionLocationByCityJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;103;2;106;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionLocationByCityJSON()&#10;&#10;Description&#10;     Prints locations by city JSON.;;d1,104;;b1,0;;m">
</treenode>
<treenode node="actionLocationByRegionJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;83;2;86;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionLocationByRegionJSON()&#10;&#10;Description&#10;     Prints locations by region JSON.;;d1,84;;b1,0;;m">
</treenode>
<treenode node="actionPostcodeByCodeJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;153;2;156;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionPostcodeByCodeJSON()&#10;&#10;Description&#10;     Prints postcode by code JSON.;;d1,154;;b1,0;;m">
</treenode>
<treenode node="actionRegionAllJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;33;2;36;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionRegionAllJSON()&#10;&#10;Description&#10;     Prints all regions JSON.;;d1,34;;b1,0;;m">
</treenode>
<treenode node="actionStreetByCityJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;123;2;126;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionStreetByCityJSON()&#10;&#10;Description&#10;     Prints streets by city JSON.;;d1,124;;b1,0;;m">
</treenode>
<treenode node="actionStreetByLocationJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;133;2;136;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionStreetByLocationJSON()&#10;&#10;Description&#10;     Prints streets by location JSON.;;d1,134;;b1,0;;m">
</treenode>
<treenode node="actionStreetByRegionJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;113;2;116;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionStreetByRegionJSON()&#10;&#10;Description&#10;     Prints streets by region JSON.;;d1,114;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_Login;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Login.php;f0;8;1;70;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Login.php;f0;8;1;70;;;;vpos;;vController;;c;;r;;d0,9;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;16;2;20;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;16;2;20;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_.php;f8;16;2;20;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Login.php;f8;16;2;20;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Login.php;f8;16;2;20;;;;vpos;;v;;r;;d1,17;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;65;2;69;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;65;2;69;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_.php;f8;65;2;69;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Login.php;f8;65;2;69;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Login.php;f8;65;2;69;;;;vpos;;v;;r;;d1,66;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;27;2;33;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;27;2;33;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_.php;f8;27;2;33;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Login.php;f8;27;2;33;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Login.php;f8;27;2;33;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays login page.;;d1,28;;b1,0;;m">
</treenode>
<treenode node="actionLogin;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;51;2;63;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;51;2;63;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_.php;f8;51;2;63;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Login.php;f8;51;2;63;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Login.php;f8;51;2;63;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionLogin()&#10;&#10;Description&#10;     Logs user in.;;d1,52;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;40;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;40;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_.php;f8;40;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Login.php;f8;40;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Login.php;f8;40;2;44;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets login page.;;d1,41;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_Main;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f0;14;1;134;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f0;9;1;153;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f8;22;2;46;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f8;15;2;25;;;;vpos;;v;;r;;d1,16;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f8;129;2;133;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f8;148;2;152;;;;vpos;;v;;r;;d1,149;;b1,0;;m">
</treenode>
<treenode node="actionApplication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f1;114;2;117;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionApplication()&#10;&#10;Description&#10;     Calls to application.;;d1,115;;b0,0;;m">
</treenode>
<treenode node="actionDictCountries;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f1;63;2;66;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionDictCountries() : void&#10;&#10;Description&#10;     Calls to dictionary countries.;;d1,64;;b0,0;;m">
</treenode>
<treenode node="actionDictEge;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f1;103;2;106;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionDictEge() : void&#10;&#10;Description&#10;     Calls to dictionary ege.;;d1,104;;b0,0;;m">
</treenode>
<treenode node="actionDictionaryManager;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f1;53;2;56;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionDictionaryManager() : void&#10;&#10;Description&#10;     Calls to dictionary manager.;;d1,54;;b0,0;;m">
</treenode>
<treenode node="actionDictScans;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f1;83;2;86;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionDictScans() : void&#10;&#10;Description&#10;     Calls to dictionary scans.;;d1,84;;b0,0;;m">
</treenode>
<treenode node="actionDictUniversity;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f1;93;2;96;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionDictUniversity() : void&#10;&#10;Description&#10;     Calls to dictionary university.;;d1,94;;b0,0;;m">
</treenode>
<treenode node="actionDocs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f1;73;2;76;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionDocs() : void&#10;&#10;Description&#10;     Calls to documents.;;d1,74;;b0,0;;m">
</treenode>
<treenode node="actionDocseduc;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f1;84;2;87;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDocseduc()&#10;&#10;Description&#10;     Calls to education docs.;;d1,85;;b0,0;;m">
</treenode>
<treenode node="actionEduclevelsDoctypes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f1;113;2;116;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionEduclevelsDoctypes() : void&#10;&#10;Description&#10;     Calls to educlevels doctypes.;;d1,114;;b0,0;;m">
</treenode>
<treenode node="actionEductypesDoctypes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f1;123;2;126;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionEductypesDoctypes() : void&#10;&#10;Description&#10;     Calls to eductypes doctypes.;;d1,124;;b0,0;;m">
</treenode>
<treenode node="actionEge;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f1;94;2;97;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEge()&#10;&#10;Description&#10;     Calls to ege.;;d1,95;;b0,0;;m">
</treenode>
<treenode node="actionHome;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f1;64;2;67;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionHome()&#10;&#10;Description&#10;     Returns home.;;d1,65;;b0,0;;m">
</treenode>
<treenode node="actionIndAchievs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f1;104;2;107;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndAchievs()&#10;&#10;Description&#10;     Calls to individual achievments.;;d1,105;;b0,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f1;53;2;57;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f1;32;2;36;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays main page.;;d1,33;;b0,0;;m">
</treenode>
<treenode node="actionLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f8;124;2;127;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f8;143;2;146;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionLogout()&#10;&#10;Description&#10;     Logs user out.;;d1,144;;b1,0;;m">
</treenode>
<treenode node="actionResume;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f1;74;2;77;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionResume()&#10;&#10;Description&#10;     Calls to resume.;;d1,75;;b0,0;;m">
</treenode>
<treenode node="actionTranslateLangs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f1;133;2;136;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionTranslateLangs() : void&#10;&#10;Description&#10;     Calls to translate langs.;;d1,134;;b0,0;;m">
</treenode>
<treenode node="actionUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f1;43;2;46;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionUser() : void&#10;&#10;Description&#10;     Calls to users.;;d1,44;;b0,0;;m">
</treenode>
</treenode>
<treenode node="Controller_ResetPwd;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwd.php;f0;8;1;99;;;;vpos;;vController;;c;;r;;d0,9;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwd.php;f8;16;2;20;;;;vpos;;v;;r;;d1,17;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwd.php;f8;94;2;98;;;;vpos;;v;;r;;d1,95;;b1,0;;m">
</treenode>
<treenode node="actionCheckResetPwd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwd.php;f8;79;2;92;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionCheckResetPwd()&#10;&#10;Description&#10;     Check reset password token.;;d1,80;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwd.php;f8;27;2;36;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays reset password page.;;d1,28;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwd.php;f8;43;2;47;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets reset password page.;;d1,44;;b1,0;;m">
</treenode>
<treenode node="actionResetPwd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwd.php;f8;54;2;72;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionResetPwd()&#10;&#10;Description&#10;     Resets user password.;;d1,55;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_ResetPwdRequest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwdRequest.php;f0;9;1;71;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwdRequest.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwdRequest.php;f8;66;2;70;;;;vpos;;v;;r;;d1,67;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwdRequest.php;f8;28;2;34;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays reset password request page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwdRequest.php;f8;41;2;45;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets reset password request page.;;d1,42;;b1,0;;m">
</treenode>
<treenode node="actionSendEmail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwdRequest.php;f8;52;2;64;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSendEmail()&#10;&#10;Description&#10;     Sends email reset password request.;;d1,53;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_Resume;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Resume.php;f0;13;1;217;;;;vpos;;vController;;c;;r;;d0,14;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Resume.php;f8;22;2;40;;;;vpos;;v;;r;;d1,23;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Resume.php;f8;211;2;216;;;;vpos;;v;;r;;d1,212;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Resume.php;f8;47;2;85;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays resume page.;;d1,48;;b1,0;;m">
</treenode>
<treenode node="actionRecall;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Resume.php;f8;190;2;209;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionRecall()&#10;&#10;Description&#10;     Recalls resume.;;d1,191;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Resume.php;f8;92;2;108;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets resume page.;;d1,93;;b1,0;;m">
</treenode>
<treenode node="actionResume;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Resume.php;f8;115;2;157;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionResume()&#10;&#10;Description&#10;     Makes resume changes.;;d1,116;;b1,0;;m">
</treenode>
<treenode node="actionSend;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Resume.php;f8;164;2;183;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSend()&#10;&#10;Description&#10;     Sends resume.;;d1,165;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_Scans;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Scans.php;f0;9;1;114;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Scans.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Scans.php;f8;109;2;113;;;;vpos;;v;;r;;d1,110;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Scans.php;f8;90;2;107;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes scan.;;d1,91;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Scans.php;f8;56;2;83;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Displays scan delete confirmation page.;;d1,57;;b1,0;;m">
</treenode>
<treenode node="actionShow;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Scans.php;f8;28;2;49;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionShow()&#10;&#10;Description&#10;     Shows scan.;;d1,29;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_Signup;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Signup.php;f0;10;1;111;;;;vpos;;vController;;c;;r;;d0,11;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Signup.php;f8;18;2;22;;;;vpos;;v;;r;;d1,19;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Signup.php;f8;106;2;110;;;;vpos;;v;;r;;d1,107;;b1,0;;m">
</treenode>
<treenode node="actionActivation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Signup.php;f8;87;2;104;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionActivation()&#10;&#10;Description&#10;     Activates user account.;;d1,88;;b1,0;;m">
</treenode>
<treenode node="actionCaptcha;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Signup.php;f8;43;2;47;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionCaptcha()&#10;&#10;Description&#10;     Refreshes CAPTCHA.;;d1,44;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Signup.php;f8;29;2;36;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays signup page.;;d1,30;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Signup.php;f8;54;2;58;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets signup page.;;d1,55;;b1,0;;m">
</treenode>
<treenode node="actionSignup;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Signup.php;f8;65;2;80;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSignup()&#10;&#10;Description&#10;     Signs user up.;;d1,66;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_TranslateLangs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f0;9;1;115;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_TranslateLangs.php;f0;9;1;115;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;17;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_TranslateLangs.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;110;2;114;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_TranslateLangs.php;f8;110;2;114;;;;vpos;;v;;r;;d1,111;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;38;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_TranslateLangs.php;f8;38;2;44;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays country add page.;;d1,39;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;78;2;89;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_TranslateLangs.php;f8;78;2;89;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes country.;;d1,79;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;68;2;71;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_TranslateLangs.php;f8;68;2;71;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to country delete confirm.;;d1,69;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;51;2;61;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_TranslateLangs.php;f8;51;2;61;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows country.;;d1,52;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;28;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_TranslateLangs.php;f8;28;2;31;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays translate langs page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;96;2;108;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_TranslateLangs.php;f8;96;2;108;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves country.;;d1,97;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_User;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_User.php;f0;9;1;186;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_User.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_User.php;f8;181;2;185;;;;vpos;;v;;r;;d1,182;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_User.php;f8;55;2;62;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays user add page.;;d1,56;;b1,0;;m">
</treenode>
<treenode node="actionChange;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_User.php;f8;137;2;151;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionChange()&#10;&#10;Description&#10;     Changes user.;;d1,138;;b1,0;;m">
</treenode>
<treenode node="actionCreate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_User.php;f8;117;2;130;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionCreate()&#10;&#10;Description&#10;     Creates user.;;d1,118;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_User.php;f8;99;2;110;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes user.;;d1,100;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_User.php;f8;89;2;92;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to user delete confirm.;;d1,90;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_User.php;f8;69;2;82;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows user.;;d1,70;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_User.php;f8;28;2;48;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays users page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionMask;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_User.php;f8;174;2;179;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionMask()&#10;&#10;Description&#10;     Logins as user.;;d1,175;;b1,0;;m">
</treenode>
<treenode node="actionSearch;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_User.php;f8;158;2;167;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSearch()&#10;&#10;Description&#10;     Searches for user.;;d1,159;;b1,0;;m">
</treenode>
</treenode>
<treenode node="DataFields;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\DataFields.php;f0;14;1;165;;;;vpos;;vArrayObject;;c;;r&#10;Definition&#10;    class DataFields extends ArrayObject&#10;&#10;Description&#10;     This class is an array representation of the dump_data_fields output of pdftk.;;d0,15;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\DataFields.php;f11;26;5;32;;;;vpos;;v;;r&#10;Definition&#10;    __construct($input = null, $flags = 0, $iterator_class = &quot;ArrayIterator&quot;)&#10;&#10;Description&#10;     DataFields constructor.&#10;&#10;Parameters:&#10;    string $input&#10;    int $flags&#10;    string $iterator_class;;d4,27;;b1,0;;mstring $input;;pint $flags;;pstring $iterator_class;;p">
</treenode>
<treenode node="__toArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\DataFields.php;f11;45;5;48;;;;vpos;;varray;;r&#10;Definition&#10;    __toArray()&#10;&#10;Description&#10;     ;;d4,46;;b1,0;;m">
</treenode>
<treenode node="__toString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\DataFields.php;f11;37;5;40;;;;vpos;;vstring;;r&#10;Definition&#10;    __toString()&#10;&#10;Description&#10;     ;;d4,38;;b1,0;;m">
</treenode>
<treenode node="lineContinues;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\DataFields.php;f21;158;5;164;;;;vpos;;vbool;;r&#10;Definition&#10;    lineContinues($lines, $n, $key)&#10;&#10;Description&#10;     Checks whether the value for the given line number continues on the next line, i.e. is a multiline string.&#10;&#10;Parameters:&#10;    array $lines - all lines of the block&#10;    int $n - the 0-based index of the current line&#10;    string - the key for the value&#10;&#10;Return:&#10;   whether the value continues in line n + 1;;d4,159;;b2,5;;marray $lines;;pint $n;;pstring;;p">
</treenode>
<treenode node="parse;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\DataFields.php;f18;80;5;92;;;;vpos;;varray;;r&#10;Definition&#10;    parse($input)&#10;&#10;Description&#10;     Parse the output of dump_data_fields into an array.&#10;&#10;Parameters:&#10;     $input - the string to parse&#10;&#10;Return:&#10;   the parsed result;;d4,81;;b1,5;;m $input;;p">
</treenode>
<treenode node="parseBlock;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\DataFields.php;f18;107;5;135;;;;vpos;;varray;;r&#10;Definition&#10;    parseBlock($block)&#10;&#10;Description&#10;     Parses a block of this form:&#10;&#10;Parameters:&#10;    string $block - the block to parse&#10;&#10;Return:&#10;   the parsed block values indexed by respective names;;d4,108;;b1,5;;mstring $block;;p">
</treenode>
</treenode>
<treenode node="DataFieldsTest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\DataFieldsTest.php;f0;3;1;122;;;;vpos;;vTestCase;;c;;r;;d0,4;;b0,0;;m">
<treenode node="testDataFieldParsing;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\DataFieldsTest.php;f11;5;5;9;;;;vpos;;v;;r;;d4,6;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Datamatrix;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f0;109;1;1172;;;;vpos;;v;;r&#10;Definition&#10;    class Datamatrix&#10;&#10;Description&#10;      class Datamatrix Class to create DataMatrix ECC 200 barcode arrays for TCPDF class. DataMatrix (ISO/IEC 16022:2006) is a 2-dimensional bar code.;;d17,109;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f8;234;2;344;;;;vpos;;v;;r&#10;Definition&#10;    __construct($code)&#10;&#10;Description&#10;     This is the class constructor. Creates a datamatrix object&#10;&#10;Parameters:&#10;     $code - (string) Code to represent using Datamatrix;;d36,234;;b1,0;;m $code;;p">
</treenode>
<treenode node="get253StateCodeword;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f11;445;2;451;;;;vpos;;vpad;;r&#10;Definition&#10;    get253StateCodeword($cwpad, $cwpos)&#10;&#10;Description&#10;     Return the 253-state codeword&#10;&#10;Parameters:&#10;     $cwpad - (int) Pad codeword&#10;     $cwpos - (int) Number of data codewords from the beginning of encoded data&#10;&#10;Return:&#10;   codeword;;d56,445;;b2,0;;m $cwpad;;p $cwpos;;p">
</treenode>
<treenode node="get255StateCodeword;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f11;460;2;466;;;;vpos;;vpad;;r&#10;Definition&#10;    get255StateCodeword($cwpad, $cwpos)&#10;&#10;Description&#10;     Return the 255-state codeword&#10;&#10;Parameters:&#10;     $cwpad - (int) Pad codeword&#10;     $cwpos - (int) Number of data codewords from the beginning of encoded data&#10;&#10;Return:&#10;   codeword;;d56,460;;b2,0;;m $cwpad;;p $cwpos;;p">
</treenode>
<treenode node="getBarcodeArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f8;351;2;353;;;;vpos;;varray;;r&#10;Definition&#10;    getBarcodeArray()&#10;&#10;Description&#10;     Returns a barcode array which is readable by TCPDF&#10;&#10;Return:&#10;   barcode array readable by TCPDF;s;;d35,351;;b1,0;;m">
</treenode>
<treenode node="getErrorCorrection;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f11;383;2;436;;;;vpos;;varray;;r&#10;Definition&#10;    getErrorCorrection($wd, $nb, $nd, $nc, $gf=256, $pp=301)&#10;&#10;Description&#10;     Add error correction codewords to data codewords array (ANNEX E).&#10;&#10;Parameters:&#10;     $wd - (array) Array of datacodewords&#10;     $nb - (int) Number of blocks&#10;     $nd - (int) Number of data codewords per block&#10;     $nc - (int) Number of correction codewords per block&#10;     $gf - (int) numner of fields on log/antilog table (power of 2)&#10;     $pp - (int) The value of its prime modulus polynomial (301 for ECC200)&#10;&#10;Return:&#10;   data codewords + error codewords;;d77,383;;b2,0;;m $wd;;p $nb;;p $nd;;p $nc;;p $gf;;p $pp;;p">
</treenode>
<treenode node="getGFProduct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f11;365;2;370;;;;vpos;;vint;;r&#10;Definition&#10;    getGFProduct($a, $b, $log, $alog, $gf)&#10;&#10;Description&#10;     Product of two numbers in a Power-of-Two Galois Field&#10;&#10;Parameters:&#10;     $a - (int) first number to multiply&#10;     $b - (int) second number to multiply&#10;     $log - (array) Log table&#10;     $alog - (array) Anti-Log table&#10;     $gf - (array) Number of Factors of the Reed-Solomon polynomial&#10;&#10;Return:&#10;   product;;d59,365;;b2,0;;m $a;;p $b;;p $log;;p $alog;;p $gf;;p">
</treenode>
<treenode node="getHighLevelEncoding;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f11;706;2;967;;;;vpos;;varray;;r&#10;Definition&#10;    getHighLevelEncoding($data)&#10;&#10;Description&#10;     Get high level encoding using the minimum symbol data characters for ECC 200&#10;&#10;Parameters:&#10;     $data - (string) data to encode&#10;&#10;Return:&#10;   of codewords;;d48,706;;b2,0;;m $data;;p">
</treenode>
<treenode node="getMaxDataCodewords;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f11;691;2;698;;;;vpos;;vnumber;;r&#10;Definition&#10;    getMaxDataCodewords($numcw)&#10;&#10;Description&#10;     Choose the minimum matrix size and return the max number of data codewords.&#10;&#10;Parameters:&#10;     $numcw - (int) Number of current codewords&#10;&#10;Return:&#10;   of data codewords in matrix;;d48,691;;b2,0;;m $numcw;;p">
</treenode>
<treenode node="getPlacementMap;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f11;1115;2;1170;;;;vpos;;varray;;r&#10;Definition&#10;    getPlacementMap($nrow, $ncol)&#10;&#10;Description&#10;     Build a placement map. (Annex F - ECC 200 symbol character placement)&#10;&#10;Parameters:&#10;     $nrow - (int) Number of rows&#10;     $ncol - (int) Number of columns;;d50,1115;;b2,0;;m $nrow;;p $ncol;;p">
</treenode>
<treenode node="getSwitchEncodingCodeword;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f11;652;2;683;;;;vpos;;v;;r&#10;Definition&#10;    getSwitchEncodingCodeword($mode)&#10;&#10;Description&#10;     Get the switching codeword to a new encoding mode (latch codeword)&#10;&#10;Parameters:&#10;     $mode - (int) New encoding mode;;d53,652;;b2,0;;m $mode;;p">
</treenode>
<treenode node="isCharMode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f11;475;2;512;;;;vpos;;vboolean;;r&#10;Definition&#10;    isCharMode($chr, $mode)&#10;&#10;Description&#10;     Returns true if the char belongs to the selected mode&#10;&#10;Parameters:&#10;     $chr - (int) Character (byte) to check&#10;     $mode - (int) Current encoding mode&#10;&#10;Return:&#10;   true if the char is of the selected mode;;d44,475;;b2,0;;m $chr;;p $mode;;p">
</treenode>
<treenode node="lookAheadTest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f11;522;2;644;;;;vpos;;vint;;r&#10;Definition&#10;    lookAheadTest($data, $pos, $mode)&#10;&#10;Description&#10;     The look-ahead test scans the data to be encoded to find the best mode (Annex P - steps from J to S).&#10;&#10;Parameters:&#10;     $data - (string) data to encode&#10;     $pos - (int) current position&#10;     $mode - (int) current encoding mode&#10;&#10;Return:&#10;   encoding mode;;d54,522;;b2,0;;m $data;;p $pos;;p $mode;;p">
</treenode>
<treenode node="placeCornerA;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f11;1029;2;1039;;;;vpos;;varray;;r&#10;Definition&#10;    placeCornerA($marr, $nrow, $ncol, $chr)&#10;&#10;Description&#10;     Places the 8 bits of the first special corner case. (Annex F - ECC 200 symbol character placement)&#10;&#10;Parameters:&#10;     $marr - (array) Array of symbols&#10;     $nrow - (int) Number of rows&#10;     $ncol - (int) Number of columns&#10;     $chr - (int) Char byte;;d60,1029;;b2,0;;m $marr;;p $nrow;;p $ncol;;p $chr;;p">
</treenode>
<treenode node="placeCornerB;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f11;1051;2;1061;;;;vpos;;varray;;r&#10;Definition&#10;    placeCornerB($marr, $nrow, $ncol, $chr)&#10;&#10;Description&#10;     Places the 8 bits of the second special corner case. (Annex F - ECC 200 symbol character placement)&#10;&#10;Parameters:&#10;     $marr - (array) Array of symbols&#10;     $nrow - (int) Number of rows&#10;     $ncol - (int) Number of columns&#10;     $chr - (int) Char byte;;d60,1051;;b2,0;;m $marr;;p $nrow;;p $ncol;;p $chr;;p">
</treenode>
<treenode node="placeCornerC;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f11;1073;2;1083;;;;vpos;;varray;;r&#10;Definition&#10;    placeCornerC($marr, $nrow, $ncol, $chr)&#10;&#10;Description&#10;     Places the 8 bits of the third special corner case. (Annex F - ECC 200 symbol character placement)&#10;&#10;Parameters:&#10;     $marr - (array) Array of symbols&#10;     $nrow - (int) Number of rows&#10;     $ncol - (int) Number of columns&#10;     $chr - (int) Char byte;;d60,1073;;b2,0;;m $marr;;p $nrow;;p $ncol;;p $chr;;p">
</treenode>
<treenode node="placeCornerD;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f11;1095;2;1105;;;;vpos;;varray;;r&#10;Definition&#10;    placeCornerD($marr, $nrow, $ncol, $chr)&#10;&#10;Description&#10;     Places the 8 bits of the fourth special corner case. (Annex F - ECC 200 symbol character placement)&#10;&#10;Parameters:&#10;     $marr - (array) Array of symbols&#10;     $nrow - (int) Number of rows&#10;     $ncol - (int) Number of columns&#10;     $chr - (int) Char byte;;d60,1095;;b2,0;;m $marr;;p $nrow;;p $ncol;;p $chr;;p">
</treenode>
<treenode node="placeModule;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f11;982;2;993;;;;vpos;;varray;;r&#10;Definition&#10;    placeModule($marr, $nrow, $ncol, $row, $col, $chr, $bit)&#10;&#10;Description&#10;     Places &quot;chr+bit&quot; with appropriate wrapping within array[]. (Annex F - ECC 200 symbol character placement)&#10;&#10;Parameters:&#10;     $marr - (array) Array of symbols&#10;     $nrow - (int) Number of rows&#10;     $ncol - (int) Number of columns&#10;     $row - (int) Row number&#10;     $col - (int) Column number&#10;     $chr - (int) Char byte&#10;     $bit - (int) Bit;;d77,982;;b2,0;;m $marr;;p $nrow;;p $ncol;;p $row;;p $col;;p $chr;;p $bit;;p">
</treenode>
<treenode node="placeUtah;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\datamatrix.php;f11;1007;2;1017;;;;vpos;;varray;;r&#10;Definition&#10;    placeUtah($marr, $nrow, $ncol, $row, $col, $chr)&#10;&#10;Description&#10;     Places the 8 bits of a utah-shaped symbol character. (Annex F - ECC 200 symbol character placement)&#10;&#10;Parameters:&#10;     $marr - (array) Array of symbols&#10;     $nrow - (int) Number of rows&#10;     $ncol - (int) Number of columns&#10;     $row - (int) Row number&#10;     $col - (int) Column number&#10;     $chr - (int) Char byte;;d69,1007;;b2,0;;m $marr;;p $nrow;;p $ncol;;p $row;;p $col;;p $chr;;p">
</treenode>
</treenode>
<treenode node="Db_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f0;7;1;338;;;;vpos;;v;;r;;d0,8;;b0,0;;m">
<treenode node="__clone;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f12;44;5;46;;;;vpos;;vvoid;;r&#10;Definition&#10;    __clone()&#10;&#10;Description&#10;     Private clone method to prevent cloning of the instance of the Db_Helper instance.;;d4,45;;b3,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f11;21;2;36;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct()&#10;&#10;Description&#10;     Protected constructor to prevent creating a new instance of the Db_Helper via the &apos;new&apos; operator from outside of this class.;;d1,22;;b2,0;;m">
</treenode>
<treenode node="__wakeup;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f12;54;5;56;;;;vpos;;vvoid;;r&#10;Definition&#10;    __wakeup()&#10;&#10;Description&#10;     Private unserialize method to prevent unserializing of the Db_Helper instance.;;d4,55;;b3,0;;m">
</treenode>
<treenode node="checkHash;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f8;334;2;337;;;;vpos;;vboolean;;r&#10;Definition&#10;    checkHash($pwd, $hash)&#10;&#10;Description&#10;     Verifies string to HASH.;;d1,335;;b1,0;;mpwd;;phash;;p">
</treenode>
<treenode node="getHash;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f8;324;2;327;;;;vpos;;vstring;;r&#10;Definition&#10;    getHash($str)&#10;&#10;Description&#10;     Gets string HASH.;;d1,325;;b1,0;;mstr;;p">
</treenode>
<treenode node="getInstance;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f18;65;5;71;;;;vpos;;vDb_Helper;;r&#10;Definition&#10;    getInstance()&#10;&#10;Description&#10;     Returns the Db_Helper instance.&#10;&#10;Return:&#10;   instance;;d4,66;;b1,5;;m">
</treenode>
<treenode node="prepareInsert;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f8;78;2;121;;;;vpos;;varray;;r&#10;Definition&#10;    prepareInsert($table_name, $rules)&#10;&#10;Description&#10;     Prepares insert query.;;d1,79;;b1,0;;mtable_name;;prules;;p">
</treenode>
<treenode node="prepareUpdate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f8;128;2;155;;;;vpos;;varray;;r&#10;Definition&#10;    prepareUpdate($table_name, $rules)&#10;&#10;Description&#10;     Prepares update query.;;d1,129;;b1,0;;mtable_name;;prules;;p">
</treenode>
<treenode node="rowDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f8;298;2;317;;;;vpos;;vinteger;;r&#10;Definition&#10;    rowDelete($tables, $conds = null, $params = null)&#10;&#10;Description&#10;     Deletes table row.;;d1,299;;b1,0;;mtables;;pconds;;pparams;;p">
</treenode>
<treenode node="rowInsert;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f8;226;2;255;;;;vpos;;vinteger;;r&#10;Definition&#10;    rowInsert($fields, $tables, $conds, $params)&#10;&#10;Description&#10;     Inserts table row.;;d1,227;;b1,0;;mfields;;ptables;;pconds;;pparams;;p">
</treenode>
<treenode node="rowSelectAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f8;194;2;219;;;;vpos;;varray;;r&#10;Definition&#10;    rowSelectAll($fields, $tables, $conds = null, $params = null, $order = null, $limit = 0)&#10;&#10;Description&#10;     Gets table row.;;d1,195;;b1,0;;mfields;;ptables;;pconds;;pparams;;porder;;plimit;;p">
</treenode>
<treenode node="rowSelectOne;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f8;162;2;187;;;;vpos;;varray;;r&#10;Definition&#10;    rowSelectOne($fields, $tables, $conds = null, $params = null)&#10;&#10;Description&#10;     Gets table row.;;d1,163;;b1,0;;mfields;;ptables;;pconds;;pparams;;p">
</treenode>
<treenode node="rowUpdate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f8;262;2;291;;;;vpos;;vboolean;;r&#10;Definition&#10;    rowUpdate($tables, $fields, $params, $conds = null)&#10;&#10;Description&#10;     Updates table row.;;d1,263;;b1,0;;mtables;;pfields;;pparams;;pconds;;p">
</treenode>
</treenode>
<treenode node="Exception;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\Exception.php;f0;27;1;38;;;;vpos;;vException;;c;;r&#10;Definition&#10;    class Exception extends \Exception&#10;&#10;Description&#10;     PHPMailer exception handler.;;d0,28;;b0,0;;m">
<treenode node="errorMessage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\Exception.php;f11;34;5;37;;;;vpos;;vstring;;r&#10;Definition&#10;    errorMessage()&#10;&#10;Description&#10;     Prettify error message output.;;d4,35;;b1,0;;m">
</treenode>
</treenode>
<treenode node="FdfFile;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\FdfFile.php;f0;14;1;81;;;;vpos;;vFile;;c;;r&#10;Definition&#10;    class FdfFile extends File&#10;&#10;Description&#10;     FdfFile;;d0,15;;b0,0;;m">
<treenode node="FDF_FOOTER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\FdfFile.php;f9;23;20;23;;;;vpos;;v;;r&lt;&lt;&lt;FDF&#10;] &gt;&gt; &gt;&gt;&#10;endobj&#10;trailer&#10;&lt;&lt;/Root 1 0 R&gt;&gt;&#10;%%EOF&#10;FDF;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FDF_HEADER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\FdfFile.php;f9;17;20;17;;;;vpos;;v;;r&lt;&lt;&lt;FDF&#10;%FDF-1.2&#10;1 0 obj&lt;&lt;/FDF&lt;&lt; /Fields[&#10;FDF;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\FdfFile.php;f11;40;5;80;;;;vpos;;v;;r&#10;Definition&#10;    __construct($data, $suffix = null, $prefix = null, $directory = null, $encoding = &apos;UTF-8&apos;)&#10;&#10;Description&#10;     Constructor&#10;&#10;Parameters:&#10;    array $data - the form data as name =&gt; value&#10;    string|null $suffix - the optional suffix for the tmp file&#10;    string|null $suffix - the optional prefix for the tmp file&#10;    string|null $directory - directory where the file should be created&#10;    string|null $encoding - of the data;;d4,41;;b1,0;;marray $data;;pstring|null $suffix;;pstring|null $suffix;;pstring|null $directory;;pstring|null $encoding;;p">
</treenode>
</treenode>
<treenode node="FdfFileTest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\FdfFileTest.php;f0;3;1;24;;;;vpos;;vTestCase;;c;;r;;d0,4;;b0,0;;m">
<treenode node="testFdfFileCreation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\FdfFileTest.php;f11;5;5;23;;;;vpos;;v;;r;;d42,5;;b1,0;;m">
</treenode>
</treenode>
<treenode node="File;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\src\File.php;f0;12;1;129;;;;vpos;;v;;r&#10;Definition&#10;    class File&#10;&#10;Description&#10;     File;;d0,13;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\src\File.php;f11;33;5;50;;;;vpos;;v;;r&#10;Definition&#10;    __construct($content, $suffix = null, $prefix = null, $directory = null)&#10;&#10;Description&#10;     Constructor&#10;&#10;Parameters:&#10;    string $content - the tmp file content&#10;    string|null $suffix - the optional suffix for the tmp file&#10;    string|null $prefix - the optional prefix for the tmp file&#10;    string|null $directory - directory where the file should be created;;d4,34;;b1,0;;mstring $content;;pstring|null $suffix;;pstring|null $prefix;;pstring|null $directory;;p">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\src\File.php;f11;55;5;60;;;;vpos;;v;;r&#10;Definition&#10;    __destruct()&#10;&#10;Description&#10;     Delete tmp file on shutdown if `$delete` is `true`;;d4,56;;b1,0;;m">
</treenode>
<treenode node="__toString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\src\File.php;f11;125;5;128;;;;vpos;;vstring;;r&#10;Definition&#10;    __toString()&#10;&#10;Description&#10;      the full file name&#10;&#10;Return:&#10;   the full file name;;d4,126;;b1,0;;m">
</treenode>
<treenode node="getFileName;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\src\File.php;f11;103;5;106;;;;vpos;;vstring;;r&#10;Definition&#10;    getFileName()&#10;&#10;Description&#10;      the full file name&#10;&#10;Return:&#10;   the full file name;;d4,104;;b1,0;;m">
</treenode>
<treenode node="getTempDir;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\src\File.php;f18;111;5;120;;;;vpos;;vstring;;r&#10;Definition&#10;    getTempDir()&#10;&#10;Description&#10;      the path to the temp directory&#10;&#10;Return:&#10;   the path to the temp directory;;d4,112;;b1,5;;m">
</treenode>
<treenode node="saveAs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\src\File.php;f11;95;5;98;;;;vpos;;vbool;;r&#10;Definition&#10;    saveAs($name)&#10;&#10;Description&#10;      the name to save the file as&#10;&#10;Parameters:&#10;    string $name - the name to save the file as&#10;&#10;Return:&#10;   whether the file could be saved;;d4,96;;b1,0;;mstring $name;;p">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\src\File.php;f11;69;5;89;;;;vpos;;v;;r&#10;Definition&#10;    send($filename = null, $contentType, $inline = false)&#10;&#10;Description&#10;     Send tmp file to client, either inline or as download&#10;&#10;Parameters:&#10;    string|null $filename - the filename to send&#10;    string $contentType - the Content-Type header&#10;    bool $inline - whether to force inline display of the file, even if filename is present;;d4,70;;b1,0;;mstring|null $filename;;pstring $contentType;;pbool $inline;;p">
</treenode>
</treenode>
<treenode node="Files_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\files_helper.php;f0;4;1;52;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="getExtension;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\files_helper.php;f15;15;2;20;;;;vpos;;vstring;;r&#10;Definition&#10;    getExtension($file_name)&#10;&#10;Description&#10;     Gets file extension.;;d1,16;;b1,5;;mfile_name;;p">
</treenode>
<treenode node="getSize;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\files_helper.php;f15;27;2;51;;;;vpos;;vint;;r&#10;Definition&#10;    getSize($file_size, $size)&#10;&#10;Description&#10;     Gets file size.;;d1,28;;b1,5;;mfile_size;;psize;;p">
</treenode>
</treenode>
<treenode node="FileTest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\tests\FileTest.php;f0;3;1;93;;;;vpos;;vTestCase;;c;;r;;d0,4;;b0,0;;m">
<treenode node="testCanCastToFileName;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\tests\FileTest.php;f11;85;5;92;;;;vpos;;v;;r;;d4,86;;b1,0;;m">
</treenode>
<treenode node="testCanCreateFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\tests\FileTest.php;f11;5;5;16;;;;vpos;;v;;r;;d4,6;;b1,0;;m">
</treenode>
<treenode node="testCanCreateFileInDirectory;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\tests\FileTest.php;f11;37;5;48;;;;vpos;;v;;r;;d4,38;;b1,0;;m">
</treenode>
<treenode node="testCanCreateFileWithPrefix;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\tests\FileTest.php;f11;28;5;35;;;;vpos;;v;;r;;d4,29;;b1,0;;m">
</treenode>
<treenode node="testCanCreateFileWithSuffix;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\tests\FileTest.php;f11;18;5;26;;;;vpos;;v;;r;;d4,19;;b1,0;;m">
</treenode>
<treenode node="testCanKeepTempFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\tests\FileTest.php;f11;68;5;83;;;;vpos;;v;;r;;d4,69;;b1,0;;m">
</treenode>
<treenode node="testCanSaveFileAs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\tests\FileTest.php;f11;50;5;66;;;;vpos;;v;;r;;d4,51;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Form_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f0;73;1;918;;;;vpos;;v;;r;;d0,74;;b0,0;;m">
<treenode node="setFormBegin;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;317;2;338;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormBegin($controller, $action, $id, $legend, $home = 0, $logo = null) : string&#10;&#10;Description&#10;     Creates form begin. $home: 0 - no, 1 - setHrefButton, 2 - setHrefButtonIcon;;d1,318;;b1,5;;mcontroller;;paction;;pid;;plegend;;phome;;plogo;;p">
</treenode>
<treenode node="setFormCaptcha;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;850;2;864;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormCaptcha($rules) : string&#10;&#10;Description&#10;     Creates form CAPTCHA.;;d1,851;;b1,5;;mrules;;p">
</treenode>
<treenode node="setFormCheckbox;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;470;2;483;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormCheckbox($rules) : string&#10;&#10;Description&#10;     Creates form checkbox.;;d1,471;;b1,5;;mrules;;p">
</treenode>
<treenode node="setFormEnd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;914;2;917;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormEnd() : string&#10;&#10;Description&#10;     Creates form end.;;d1,915;;b1,5;;m">
</treenode>
<treenode node="setFormFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f18;698;2;744;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormFile($rules) : string&#10;&#10;Description&#10;     Creates form file.;;d4,699;;b1,5;;mrules;;p">
</treenode>
<treenode node="setFormFileListDB;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f18;768;2;836;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormFileListDB($rules) : string&#10;&#10;Description&#10;     Creates form file list based on SQL-query.;;d4,769;;b1,5;;mrules;;p">
</treenode>
<treenode node="setFormHeaderSub;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;871;2;874;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormHeaderSub($header)&#10;&#10;Description&#10;     Creates form sub header.;;d1,872;;b1,5;;mheader;;p">
</treenode>
<treenode node="setFormInput;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;358;2;381;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormInput($rules) : string&#10;&#10;Description&#10;     Creates form input.;;d1,359;;b1,5;;mrules;;p">
</treenode>
<treenode node="setFormInputText;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;393;2;407;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormInputText($rules) : string&#10;&#10;Description&#10;     Creates form input text.;;d1,394;;b1,5;;mrules;;p">
</treenode>
<treenode node="setFormLabelStyle;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;886;2;907;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormLabelStyle($required, $required_style, $value) : array&#10;&#10;Description&#10;     Creates form label style.;;d1,887;;b1,5;;mrequired;;prequired_style;;pvalue;;p">
</treenode>
<treenode node="setFormRadio;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;425;2;455;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormRadio($rules) : string&#10;&#10;Description&#10;     Creates form radio.;;d1,426;;b1,5;;mrules;;p">
</treenode>
<treenode node="setFormSelectList;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;501;2;537;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormSelectList($rules) : string&#10;&#10;Description&#10;     Creates form select list.;;d1,502;;b1,5;;mrules;;p">
</treenode>
<treenode node="setFormSelectListBlank;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;548;2;562;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormSelectListBlank($rules) : string&#10;&#10;Description&#10;     Creates form select list blank.;;d1,549;;b1,5;;mrules;;p">
</treenode>
<treenode node="setFormSelectListDB;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;585;2;628;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormSelectListDB($rules) : string&#10;&#10;Description&#10;     Creates form select list based on SQL-query.;;d1,586;;b1,5;;mrules;;p">
</treenode>
<treenode node="setFormSelectListKladr;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;644;2;678;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormSelectListKladr($rules) : string&#10;&#10;Description&#10;     Creates form select list KLADR.;;d1,645;;b1,5;;mrules;;p">
</treenode>
<treenode node="validate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;99;2;309;;;;vpos;;varray;;r&#10;Definition&#10;    validate($form, $rules) : array&#10;&#10;Description&#10;     Validates form.;;d1,100;;b1,0;;mform;;prules;;p">
</treenode>
</treenode>
<treenode node="Help_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f0;4;1;115;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\help_helper.php;f0;6;1;120;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
<treenode node="app;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;87;2;114;;;;vpos;;vstring;;r&#10;Definition&#10;    app() : string&#10;&#10;Description&#10;     Creates help for APP.;;d1,90;;b1,5;;m">
</treenode>
<treenode node="app_help;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\help_helper.php;f15;88;2;119;;;;vpos;;vstring;;r&#10;Definition&#10;    app_help() : string&#10;&#10;Description&#10;     Creates help for APP.;;d1,89;;b1,5;;m">
</treenode>
<treenode node="docs_educ;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;34;2;42;;;;vpos;;vstring;;r&#10;Definition&#10;    docs_educ() : string&#10;&#10;Description&#10;     Creates help for DOCS_EDUC.;;d1,37;;b1,5;;m">
</treenode>
<treenode node="docs_educ_help;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\help_helper.php;f15;35;2;43;;;;vpos;;vstring;;r&#10;Definition&#10;    docs_educ_help() : string&#10;&#10;Description&#10;     Creates help for DOCS_EDUC.;;d1,36;;b1,5;;m">
</treenode>
<treenode node="ege;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;49;2;61;;;;vpos;;vstring;;r&#10;Definition&#10;    ege() : string&#10;&#10;Description&#10;     Creates help for EGE.;;d1,52;;b1,5;;m">
</treenode>
<treenode node="ege_help;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\help_helper.php;f15;50;2;62;;;;vpos;;vstring;;r&#10;Definition&#10;    ege_help() : string&#10;&#10;Description&#10;     Creates help for EGE.;;d1,51;;b1,5;;m">
</treenode>
<treenode node="ind_achievs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;68;2;80;;;;vpos;;vstring;;r&#10;Definition&#10;    ind_achievs() : string&#10;&#10;Description&#10;     Creates help for IND_ACHIEVS.;;d1,71;;b1,5;;m">
</treenode>
<treenode node="ind_achievs_help;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\help_helper.php;f15;69;2;81;;;;vpos;;vstring;;r&#10;Definition&#10;    ind_achievs_help() : string&#10;&#10;Description&#10;     Creates help for IND_ACHIEVS.;;d1,70;;b1,5;;m">
</treenode>
<treenode node="resume;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;15;2;27;;;;vpos;;vstring;;r&#10;Definition&#10;    resume() : string&#10;&#10;Description&#10;     Creates help for RESUME.;;d1,17;;b1,5;;m">
</treenode>
<treenode node="resume_help;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\help_helper.php;f15;17;2;28;;;;vpos;;vstring;;r&#10;Definition&#10;    resume_help() : string&#10;&#10;Description&#10;     Creates help for RESUME.;;d1,18;;b1,5;;m">
</treenode>
</treenode>
<treenode node="HTML_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f0;6;1;491;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
<treenode node="setAlert;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;455;2;462;;;;vpos;;vmixed;;r&#10;Definition&#10;    setAlert($msg, $class)&#10;&#10;Description&#10;     Creates alert.;;d1,456;;b1,5;;mmsg;;pclass;;p">
</treenode>
<treenode node="setButton;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;63;2;74;;;;vpos;;vstring;;r&#10;Definition&#10;    setButton($class, $id, $text, $tooltip = null) : string&#10;&#10;Description&#10;     Creates button.;;d1,64;;b1,5;;mclass;;pid;;ptext;;ptooltip;;p">
</treenode>
<treenode node="setGridDB;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;162;2;242;;;;vpos;;vstring;;r&#10;Definition&#10;    setGridDB($rules) : string&#10;&#10;Description&#10;     Creates GRID from database.;;d1,163;;b1,5;;mrules;;p">
</treenode>
<treenode node="setHrefButton;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;99;2;110;;;;vpos;;vstring;;r&#10;Definition&#10;    setHrefButton($controller, $action, $class, $text, $tooltip = null) : string&#10;&#10;Description&#10;     Creates HREF as button.;;d1,100;;b1,5;;mcontroller;;paction;;pclass;;ptext;;ptooltip;;p">
</treenode>
<treenode node="setHrefButtonIcon;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;117;2;128;;;;vpos;;vstring;;r&#10;Definition&#10;    setHrefButtonIcon($controller, $action, $class, $icon, $tooltip = null, $new_page = 0) : string&#10;&#10;Description&#10;     Creates HREF as icon button.;;d1,118;;b1,5;;mcontroller;;paction;;pclass;;picon;;ptooltip;;pnew_page;;p">
</treenode>
<treenode node="setHrefText;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;81;2;92;;;;vpos;;vstring;;r&#10;Definition&#10;    setHrefText($controller, $action, $text, $tooltip = null) : string&#10;&#10;Description&#10;     Creates HREF as text.;;d1,82;;b1,5;;mcontroller;;paction;;ptext;;ptooltip;;p">
</treenode>
<treenode node="setImageLOB;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;135;2;142;;;;vpos;;vstring;;r&#10;Definition&#10;    setImageLOB($type, $lob, $width = null, $height = null) : string&#10;&#10;Description&#10;     Creates image.;;d1,136;;b1,5;;mtype;;plob;;pwidth;;pheight;;p">
</treenode>
<treenode node="setInput;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;27;2;38;;;;vpos;;vstring;;r&#10;Definition&#10;    setInput($type, $class, $control, $help, $placeholder, $value) : string&#10;&#10;Description&#10;     Creates input field.;;d1,28;;b1,5;;mtype;;pclass;;pcontrol;;phelp;;pplaceholder;;pvalue;;p">
</treenode>
<treenode node="setInvalidFeedback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;469;2;476;;;;vpos;;vmixed;;r&#10;Definition&#10;    setInvalidFeedback($err)&#10;&#10;Description&#10;     Creates invalid feedback.;;d1,470;;b1,5;;merr;;p">
</treenode>
<treenode node="setLabel;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;17;2;20;;;;vpos;;vstring;;r&#10;Definition&#10;    setLabel($class, $control, $label) : string&#10;&#10;Description&#10;     Creates label.;;d1,18;;b1,5;;mclass;;pcontrol;;plabel;;p">
</treenode>
<treenode node="setPagination;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;362;2;448;;;;vpos;;vstring;;r&#10;Definition&#10;    setPagination($rules) : string&#10;&#10;Description&#10;     Creates pagination.;;d1,363;;b1,5;;mrules;;p">
</treenode>
<treenode node="setSubmit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;45;2;56;;;;vpos;;vstring;;r&#10;Definition&#10;    setSubmit($class, $id, $text, $tooltip = null) : string&#10;&#10;Description&#10;     Creates submit button.;;d1,46;;b1,5;;mclass;;pid;;ptext;;ptooltip;;p">
</treenode>
<treenode node="setTableBegin;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;249;2;256;;;;vpos;;vstring;;r&#10;Definition&#10;    setTableBegin($id = null) : string&#10;&#10;Description&#10;     Creates table begin.;;d1,250;;b1,5;;mid;;p">
</treenode>
<treenode node="setTableEnd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;340;2;343;;;;vpos;;vstring;;r&#10;Definition&#10;    setTableEnd() : string&#10;&#10;Description&#10;     Creates table end.;;d1,341;;b1,5;;m">
</treenode>
<treenode node="setTableHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;267;2;289;;;;vpos;;vstring;;r&#10;Definition&#10;    setTableHeader($rules) : string&#10;&#10;Description&#10;     Creates table header.;;d1,268;;b1,5;;mrules;;p">
</treenode>
<treenode node="setTableRow;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;300;2;333;;;;vpos;;vstring;;r&#10;Definition&#10;    setTableRow($rules) : string&#10;&#10;Description&#10;     Creates table row.;;d1,301;;b1,5;;mrules;;p">
</treenode>
<treenode node="setValidFeedback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;483;2;490;;;;vpos;;vmixed;;r&#10;Definition&#10;    setValidFeedback($err, $msg)&#10;&#10;Description&#10;     Creates valid feedback.;;d1,484;;b1,5;;merr;;pmsg;;p">
</treenode>
</treenode>
<treenode node="Mail_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\mail_helper.php;f0;7;1;71;;;;vpos;;v;;r;;d0,8;;b0,0;;m">
<treenode node="sendEmail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\mail_helper.php;f8;18;2;70;;;;vpos;;vstring;;r&#10;Definition&#10;    sendEmail($to, $to_name, $subject, $body, $ccs = null, $bccs = null, $body_plain = null, $attachment = null, $attachment_name = null)&#10;&#10;Description&#10;     Sends email.;;d1,19;;b1,0;;mto;;pto_name;;psubject;;pbody;;pccs;;pbccs;;pbody_plain;;pattachment;;pattachment_name;;p">
</treenode>
</treenode>
<treenode node="MC_TCPDF;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_010.php;f0;33;1;92;;;;vpos;;vTCPDF;;c;;r&#10;Definition&#10;    class MC_TCPDF extends TCPDF&#10;&#10;Description&#10;     Extend TCPDF to work with multiple columns;;d29,33;;b0,0;;m">
<treenode node="ChapterBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_010.php;f8;75;2;91;;;;vpos;;v;;r&#10;Definition&#10;    ChapterBody($file, $mode=false)&#10;&#10;Description&#10;     Print chapter body&#10;&#10;Parameters:&#10;     $file - (string) name of the file containing the chapter body&#10;     $mode - (boolean) if true the chapter body is in HTML, otherwise in simple text;;d49,75;;b1,0;;m $file;;p $mode;;p">
</treenode>
<treenode node="ChapterTitle;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_010.php;f8;62;2;67;;;;vpos;;v;;r&#10;Definition&#10;    ChapterTitle($num, $title)&#10;&#10;Description&#10;     Set chapter title&#10;&#10;Parameters:&#10;     $num - (int) chapter number&#10;     $title - (string) chapter title;;d44,62;;b1,0;;m $num;;p $title;;p">
</treenode>
<treenode node="PrintChapter;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_010.php;f8;43;2;54;;;;vpos;;v;;r&#10;Definition&#10;    PrintChapter($num, $title, $file, $mode=false)&#10;&#10;Description&#10;     Print chapter&#10;&#10;Parameters:&#10;     $num - (int) chapter number&#10;     $title - (string) chapter title&#10;     $file - (string) name of the file containing the chapter body&#10;     $mode - (boolean) if true the chapter body is in HTML, otherwise in simple text;;d64,43;;b1,0;;m $num;;p $title;;p $file;;p $mode;;p">
</treenode>
</treenode>
<treenode node="Model;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\model.php;f0;9;1;233;;;;vpos;;v;;r;;d0,10;;b0,0;;m">
<treenode node="getForm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\model.php;f8;27;2;91;;;;vpos;;varray;;r&#10;Definition&#10;    getForm($rules, $post, $files = null)&#10;&#10;Description&#10;     Gets form data.;;d1,28;;b1,0;;mrules;;ppost;;pfiles;;p">
</treenode>
<treenode node="resetForm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\model.php;f8;159;2;184;;;;vpos;;varray;;r&#10;Definition&#10;    resetForm($vars, $form, $rules)&#10;&#10;Description&#10;     Resets form data.;;d1,160;;b1,0;;mvars;;pform;;prules;;p">
</treenode>
<treenode node="setForm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\model.php;f8;114;2;152;;;;vpos;;varray;;r&#10;Definition&#10;    setForm($rules, $row)&#10;&#10;Description&#10;     Sets form data.;;d1,115;;b1,0;;mrules;;prow;;p">
</treenode>
<treenode node="setFormError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\model.php;f8;226;2;232;;;;vpos;;varray;;r&#10;Definition&#10;    setFormError($form, $msg)&#10;&#10;Description&#10;     Sets form error.;;d1,227;;b1,0;;mform;;pmsg;;p">
</treenode>
<treenode node="setFormErrorField;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\model.php;f8;191;2;204;;;;vpos;;varray;;r&#10;Definition&#10;    setFormErrorField($form, $field, $msg, $global = 0)&#10;&#10;Description&#10;     Sets form field error.;;d1,192;;b1,0;;mform;;pfield;;pmsg;;pglobal;;p">
</treenode>
<treenode node="setFormErrorFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\model.php;f8;211;2;219;;;;vpos;;varray;;r&#10;Definition&#10;    setFormErrorFile($form, $file, $msg)&#10;&#10;Description&#10;     Sets form file error.;;d1,212;;b1,0;;mform;;pfile;;pmsg;;p">
</treenode>
<treenode node="validateForm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\model.php;f8;98;2;107;;;;vpos;;varrau;;r&#10;Definition&#10;    validateForm($form, $rules)&#10;&#10;Description&#10;     Validates form data.;;d1,99;;b1,0;;mform;;prules;;p">
</treenode>
</treenode>
<treenode node="Model_Address;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_.php;f0;11;1;57;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f0;15;1;249;;;;vpos;;vDb_Helper;;c;;r;;d0,16;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f6;21;17;21;;;;vpos;;v;;r&apos;address&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_FACT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_.php;f6;18;16;18;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_REG;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_.php;f6;17;15;17;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;14;15;14;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f6;23;15;23;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_RES;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;15;15;15;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f6;24;15;24;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_.php;f8;29;2;32;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;36;2;39;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f8;52;2;55;;;;vpos;;v;;r;;d1,53;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_.php;f8;53;2;56;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;198;2;201;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f8;245;2;248;;;;vpos;;v;;r;;d1,246;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;191;2;196;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f8;238;2;243;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all address data.;;d1,239;;b1,0;;m">
</treenode>
<treenode node="getByResumeType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;165;2;171;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f8;211;2;217;;;;vpos;;varray;;r&#10;Definition&#10;    getByResumeType()&#10;&#10;Description&#10;     Gets address by resume/type.;;d1,212;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;46;2;158;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f8;62;2;204;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Address rules.;;d1,63;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_.php;f8;39;2;51;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;178;2;184;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f8;224;2;231;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves address data to database.;;d1,225;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_AdmissionCampaign;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_AdmissionCampaigns.php;f0;7;1;36;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_AdmissionCampaign.php;f0;7;1;39;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f0;6;1;331;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f6;12;17;12;;;;vpos;;v;;r&apos;admission_campaign&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;24;2;27;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;15;2;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_AdmissionCampaigns.php;f8;15;2;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictEductypes.php;f8;15;2;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;26;2;29;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_AdmissionCampaign.php;f8;15;2;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;25;2;28;;;;vpos;;v;;r;;d1,26;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;221;2;224;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;277;2;280;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;327;2;330;;;;vpos;;v;;r;;d1,328;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;121;2;128;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;177;2;184;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all admission campaign data.;;d1,186;;b1,0;;m">
</treenode>
<treenode node="changeDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;195;2;201;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeDescription()&#10;&#10;Description&#10;     Changes admission campaign description.;;d1,196;;b1,0;;m">
</treenode>
<treenode node="changeReceiptAllowed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;208;2;214;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeReceiptAllowed()&#10;&#10;Description&#10;     Changes admission campaign receipt allowed.;;d1,209;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;135;2;138;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;191;2;194;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;221;2;224;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all admission campaigns.;;d1,222;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;87;2;90;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;89;2;92;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;82;2;85;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all admission campaigns.;;d1,83;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;125;2;131;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;118;2;124;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets admission campaign by code.;;d1,119;;b1,0;;m">
</treenode>
<treenode node="getById;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;112;2;118;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;105;2;111;;;;vpos;;varray;;r&#10;Definition&#10;    getById()&#10;&#10;Description&#10;     Gets admission campaign by ID.;;d1,106;;b1,0;;m">
</treenode>
<treenode node="getByUniversity;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;138;2;159;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;131;2;155;;;;vpos;;varray;;r&#10;Definition&#10;    getByUniversity()&#10;&#10;Description&#10;     Gets admission campaigns by university.;;d1,132;;b1,0;;m">
</treenode>
<treenode node="getByUniversityJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;25;2;34;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_AdmissionCampaigns.php;f8;25;2;35;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictEductypes.php;f8;25;2;35;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_AdmissionCampaign.php;f8;25;2;38;;;;vpos;;vJSON;;r&#10;Definition&#10;    getByUniversityJSON($university) : string&#10;&#10;Description&#10;     Gets admission campaigns by university JSON.;;d1,26;;b1,0;;muniversity;;p">
</treenode>
<treenode node="getOne;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;97;2;103;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;99;2;105;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;92;2;98;;;;vpos;;varray;;r&#10;Definition&#10;    getOne()&#10;&#10;Description&#10;     Gets one admission campaign.;;d1,93;;b1,0;;m">
</treenode>
<treenode node="getPeriod;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;162;2;177;;;;vpos;;varray;;r&#10;Definition&#10;    getPeriod()&#10;&#10;Description&#10;     Gets admission campaign period.;;d1,163;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;145;2;219;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;201;2;275;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;231;2;325;;;;vpos;;varray;;r&#10;Definition&#10;    load($xml, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads admission campaigns.;;d1,232;;b1,0;;mxml;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;34;2;80;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;36;2;82;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;35;2;75;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Admission campaigns rules.;;d1,36;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;110;2;114;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;166;2;170;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;184;2;188;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves admission campaign data to database.;;d1,185;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_Application;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f0;11;1;727;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Application.php;f0;19;1;273;;;;vpos;;vModel;;c;;r;;d0,20;;b0,0;;m">
<treenode node="STATUS_APPROVED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;33;25;33;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_APPROVED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;34;30;34;;;;vpos;;v;;r&apos;Принято&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_CHANGED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;39;24;39;;;;vpos;;v;;r5;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_CHANGED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;40;29;40;;;;vpos;;v;;r&apos;Изменено&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_CREATED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f6;29;21;29;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_CREATED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f6;30;26;30;;;;vpos;;v;;r&apos;Новое&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_RECALLED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;41;25;41;;;;vpos;;v;;r6;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_RECALLED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;42;30;42;;;;vpos;;v;;r&apos;Отозвано&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_REJECTED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;35;25;35;;;;vpos;;v;;r3;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_REJECTED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;36;30;36;;;;vpos;;v;;r&apos;Отклонено&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_SAVED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;37;22;37;;;;vpos;;v;;r4;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_SAVED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;38;27;38;;;;vpos;;v;;r&apos;Сохранено&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_SENDED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;31;23;31;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_SENDED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;32;28;32;;;;vpos;;v;;r&apos;Отправлено&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f6;17;17;17;;;;vpos;;v;;r&apos;application&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_CHANGE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f6;21;18;21;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_CHANGE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f6;22;23;22;;;;vpos;;v;;r&apos;Заявление на изменение документов&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_NEW;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f6;19;15;19;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_NEW_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f6;20;20;20;;;;vpos;;v;;r&apos;Заявление на приём документов&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_RECALL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f6;23;18;23;;;;vpos;;v;;r3;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_RECALL_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f6;24;23;24;;;;vpos;;v;;r&apos;Заявление на отзыв документов&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;66;2;69;;;;vpos;;v;;r;;d1,67;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;723;2;726;;;;vpos;;v;;r;;d1,724;;b1,0;;m">
</treenode>
<treenode node="changeActive;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;525;2;531;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeActive()&#10;&#10;Description&#10;     Changes application activity.;;d1,526;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;458;2;466;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all application data.;;d1,459;;b1,0;;m">
</treenode>
<treenode node="changeLang;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;473;2;479;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeLang()&#10;&#10;Description&#10;     Changes application foreign language.;;d1,474;;b1,0;;m">
</treenode>
<treenode node="changeNumb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;512;2;518;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeNumb()&#10;&#10;Description&#10;     Changes application numb.;;d1,513;;b1,0;;m">
</treenode>
<treenode node="changeStatus;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;499;2;505;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeStatus()&#10;&#10;Description&#10;     Changes application status.;;d1,500;;b1,0;;m">
</treenode>
<treenode node="changeType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;486;2;492;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeType()&#10;&#10;Description&#10;     Changes application type.;;d1,487;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Application.php;f8;149;2;272;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks application data.;;d1,150;;b1,0;;mform;;p">
</treenode>
<treenode node="checkBachelor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;641;2;655;;;;vpos;;vboolean;;r&#10;Definition&#10;    checkBachelor()&#10;&#10;Description&#10;     Checks bachelor.;;d1,642;;b1,0;;m">
</treenode>
<treenode node="checkCertificate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;707;2;721;;;;vpos;;vboolean;;r&#10;Definition&#10;    checkCertificate()&#10;&#10;Description&#10;     Checks certificate.;;d1,708;;b1,0;;m">
</treenode>
<treenode node="checkHighAfter;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;687;2;700;;;;vpos;;vboolean;;r&#10;Definition&#10;    checkHighAfter()&#10;&#10;Description&#10;     Checks high after.;;d1,688;;b1,0;;m">
</treenode>
<treenode node="checkMagistrature;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;662;2;680;;;;vpos;;vboolean;;r&#10;Definition&#10;    checkMagistrature()&#10;&#10;Description&#10;     Checks magistrature.;;d1,663;;b1,0;;m">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;538;2;546;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes application.;;d1,539;;b1,0;;m">
</treenode>
<treenode node="copy;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;553;2;634;;;;vpos;;vinteger;;r&#10;Definition&#10;    copy($type = null)&#10;&#10;Description&#10;     Copies application.;;d1,554;;b1,0;;mtype;;p">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Application.php;f8;125;2;142;;;;vpos;;varray;;r&#10;Definition&#10;    delete($form)&#10;&#10;Description&#10;     Deletes application from database.;;d1,126;;b1,0;;mform;;p">
</treenode>
<treenode node="existsAppGo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;417;2;430;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsAppGo() : bool&#10;&#10;Description&#10;     Checks if education document used in applications &quot;GO&quot;.;;d1,418;;b1,0;;m">
</treenode>
<treenode node="existsUserCampaign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;379;2;410;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsUserCampaign() : bool&#10;&#10;Description&#10;     Checks if campaign exists for user.;;d1,380;;b1,0;;m">
</treenode>
<treenode node="generateNumb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;251;2;258;;;;vpos;;vstring;;r&#10;Definition&#10;    generateNumb()&#10;&#10;Description&#10;     Generates application numb.;;d1,252;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;313;2;319;;;;vpos;;varray;;r&#10;Definition&#10;    get()&#10;&#10;Description&#10;     Gets application by ID.;;d1,314;;b1,0;;m">
</treenode>
<treenode node="getActiveByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;339;2;346;;;;vpos;;varray;;r&#10;Definition&#10;    getActiveByUser()&#10;&#10;Description&#10;     Gets active applications by user.;;d1,340;;b1,0;;m">
</treenode>
<treenode node="getByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;326;2;332;;;;vpos;;varray;;r&#10;Definition&#10;    getByUser()&#10;&#10;Description&#10;     Gets applications by user.;;d1,327;;b1,0;;m">
</treenode>
<treenode node="getByUserGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;265;2;306;;;;vpos;;varray;;r&#10;Definition&#10;    getByUserGrid()&#10;&#10;Description&#10;     Gets applications by user for GRID.;;d1,266;;b1,0;;m">
</treenode>
<treenode node="getSpec;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;353;2;372;;;;vpos;;varray;;r&#10;Definition&#10;    getSpec()&#10;&#10;Description&#10;     Gets application spec.;;d1,354;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;201;2;244;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Applications grid.;;d1,202;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;76;2;194;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Application.php;f8;30;2;72;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Application rules.;;d1,31;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;437;2;451;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves application data to database.;;d1,438;;b1,0;;m">
</treenode>
<treenode node="showStatus;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Application.php;f15;98;2;118;;;;vpos;;vstring;;r&#10;Definition&#10;    showStatus($status)&#10;&#10;Description&#10;     Shows status.;;d1,99;;b1,5;;mstatus;;p">
</treenode>
<treenode node="showType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Application.php;f15;79;2;91;;;;vpos;;vstring;;r&#10;Definition&#10;    showType($type)&#10;&#10;Description&#10;     Shows type.;;d1,80;;b1,5;;mtype;;p">
</treenode>
</treenode>
<treenode node="Model_ApplicationAchievs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f0;6;1;194;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="IA_ARTICLES_RUS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f6;31;22;31;;;;vpos;;v;;r&apos;000000042&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IA_ARTICLES_VAK_NO;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f6;32;25;32;;;;vpos;;v;;r&apos;000000015&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IA_ARTICLES_VAK_YES;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f6;33;26;33;;;;vpos;;v;;r&apos;000000039&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IA_ARTICLES_WORLD;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f6;30;24;30;;;;vpos;;v;;r&apos;000000041&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IA_CONTEST_BSU;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f6;24;21;24;;;;vpos;;v;;r&apos;000000002&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IA_CONTEST_RUS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f6;23;21;23;;;;vpos;;v;;r&apos;000000005&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IA_DOCSEDUC_MEDAL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f6;28;24;28;;;;vpos;;v;;r&apos;000000046&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IA_GRANTS_NAMED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f6;27;22;27;;;;vpos;;v;;r&apos;000000010&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IA_GRANTS_PRESIDENT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f6;26;26;26;;;;vpos;;v;;r&apos;000000032&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IA_GTO;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f6;20;13;20;;;;vpos;;v;;r&apos;000000004&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IA_MEDAL_CERTIFICATE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f6;21;27;21;;;;vpos;;v;;r&apos;000000003&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IA_MEDAL_DIPLOMA;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f6;22;23;22;;;;vpos;;v;;r&apos;000000022&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IA_MEDIC_LOCATIONS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f6;29;25;29;;;;vpos;;v;;r&apos;000000035&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IA_SPORTMASTER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f6;25;21;25;;;;vpos;;v;;r&apos;000000023&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f6;12;17;12;;;;vpos;;v;;r&apos;application_achievs&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f8;37;2;40;;;;vpos;;v;;r;;d1,38;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f8;190;2;193;;;;vpos;;v;;r;;d1,191;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f8;169;2;176;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all application achievments data.;;d1,170;;b1,0;;m">
</treenode>
<treenode node="clearByApplication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f8;183;2;188;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearByApplication()&#10;&#10;Description&#10;     Removes application achievments by application.;;d1,184;;b1,0;;m">
</treenode>
<treenode node="getByApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f8;129;2;135;;;;vpos;;varray;;r&#10;Definition&#10;    getByApp()&#10;&#10;Description&#10;     Gets application achievments by application.;;d1,130;;b1,0;;m">
</treenode>
<treenode node="getByAppForPdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f8;142;2;149;;;;vpos;;varray;;r&#10;Definition&#10;    getByAppForPdf()&#10;&#10;Description&#10;     Gets application achievments by application for PDF.;;d1,143;;b1,0;;m">
</treenode>
<treenode node="getGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f8;115;2;122;;;;vpos;;varray;;r&#10;Definition&#10;    getGrid()&#10;&#10;Description&#10;     Gets application achievments for GRID.;;d1,116;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f8;88;2;108;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Application achievments grid.;;d1,89;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f8;47;2;81;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Application achievments rules.;;d1,48;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f8;156;2;162;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves application achievments data to database.;;d1,157;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_ApplicationPlaces;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpecs.php;f0;9;1;79;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f0;8;1;1002;;;;vpos;;vDb_Helper;;c;;r;;d0,9;;b0,0;;m">
<treenode node="BACHELOR_LIMIT_END;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f6;21;25;21;;;;vpos;;v;;r&apos;01.08.2018&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="BACHELOR_LIMIT_START;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f6;20;27;20;;;;vpos;;v;;r&apos;27.07.2018&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FREE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f6;16;11;16;;;;vpos;;v;;r&apos;Бесплатная&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PAY;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f6;17;10;17;;;;vpos;;v;;r&apos;Платная&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PURPOSE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f6;18;14;18;;;;vpos;;v;;r&apos;Целевой&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f6;14;17;14;;;;vpos;;v;;r&apos;application_places&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;23;2;26;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;32;2;35;;;;vpos;;v;;r;;d1,33;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;167;2;170;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;998;2;1001;;;;vpos;;v;;r;;d1,999;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;146;2;153;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;725;2;732;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all application places data.;;d1,726;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpecs.php;f8;20;2;78;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;38;2;130;;;;vpos;;varray;;r&#10;Definition&#10;    check($post)&#10;&#10;Description&#10;     Checks application places data.;;d1,52;;b1,0;;mpost;;p">
</treenode>
<treenode node="checkPlaces;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f8;51;2;143;;;;vpos;;varray;;r&#10;Definition&#10;    checkPlaces($post)&#10;&#10;Description&#10;     Checks application places data.;;d1,52;;b1,0;;mpost;;p">
</treenode>
<treenode node="clearByApplication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;160;2;165;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;739;2;744;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearByApplication()&#10;&#10;Description&#10;     Removes application places by application.;;d1,740;;b1,0;;m">
</treenode>
<treenode node="CondsHighEducFirst;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;820;2;827;;;;vpos;;vstring;;r&#10;Definition&#10;    CondsHighEducFirst($pay) : string&#10;&#10;Description&#10;     Returns conditions for the first high education.;;d1,821;;b1,0;;mpay;;p">
</treenode>
<treenode node="CondsHighEducFirstBachelor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;777;2;799;;;;vpos;;vstring;;r&#10;Definition&#10;    CondsHighEducFirstBachelor($pay) : string&#10;&#10;Description&#10;     Returns conditions for the first high bachelor education.;;d1,778;;b1,0;;mpay;;p">
</treenode>
<treenode node="CondsHighEducMagister;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;806;2;813;;;;vpos;;vstring;;r&#10;Definition&#10;    CondsHighEducMagister($pay) : string&#10;&#10;Description&#10;     Returns conditions for the magister education.;;d1,807;;b1,0;;mpay;;p">
</treenode>
<treenode node="CondsHighEducSecond;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;834;2;841;;;;vpos;;vstring;;r&#10;Definition&#10;    CondsHighEducSecond($pay) : string&#10;&#10;Description&#10;     Returns conditions for the second high education.;;d1,835;;b1,0;;mpay;;p">
</treenode>
<treenode node="CondsSpecial9Educ;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;763;2;770;;;;vpos;;vstring;;r&#10;Definition&#10;    CondsSpecial9Educ($pay) : string&#10;&#10;Description&#10;     Returns conditions for special education based on 9 classes.;;d1,764;;b1,0;;mpay;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f8;39;2;44;;;;vpos;;varray;;r&#10;Definition&#10;    get($id)&#10;&#10;Description&#10;     Gets application places from database.;;d1,40;;b1,0;;mid;;p">
</treenode>
<treenode node="getByAppForBachelorSpec;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;544;2;552;;;;vpos;;varray;;r&#10;Definition&#10;    getByAppForBachelorSpec()&#10;&#10;Description&#10;     Gets specialities for bachelor and specialist.;;d1,545;;b1,0;;m">
</treenode>
<treenode node="getByAppForClinical;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;587;2;594;;;;vpos;;varray;;r&#10;Definition&#10;    getByAppForClinical()&#10;&#10;Description&#10;     Gets specialities for clinical.;;d1,588;;b1,0;;m">
</treenode>
<treenode node="getByAppForMagister;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;559;2;566;;;;vpos;;varray;;r&#10;Definition&#10;    getByAppForMagister()&#10;&#10;Description&#10;     Gets specialities for magister.;;d1,560;;b1,0;;m">
</treenode>
<treenode node="getByAppForMedicalA1;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;615;2;623;;;;vpos;;varray;;r&#10;Definition&#10;    getByAppForMedicalA1()&#10;&#10;Description&#10;     Gets specialities for medical certificate (A1 group).;;d1,616;;b1,0;;m">
</treenode>
<treenode node="getByAppForMedicalA2;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;630;2;643;;;;vpos;;varray;;r&#10;Definition&#10;    getByAppForMedicalA2()&#10;&#10;Description&#10;     Gets specialities for medical certificate (A2 group).;;d1,631;;b1,0;;m">
</treenode>
<treenode node="getByAppForMedicalB1;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;650;2;664;;;;vpos;;varray;;r&#10;Definition&#10;    getByAppForMedicalB1()&#10;&#10;Description&#10;     Gets specialities for medical certificate (B1 group).;;d1,651;;b1,0;;m">
</treenode>
<treenode node="getByAppForMedicalC1;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;671;2;689;;;;vpos;;varray;;r&#10;Definition&#10;    getByAppForMedicalC1()&#10;&#10;Description&#10;     Gets specialities for medical certificate (C1 group).;;d1,672;;b1,0;;m">
</treenode>
<treenode node="getByAppForPayedOnline;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;696;2;705;;;;vpos;;varray;;r&#10;Definition&#10;    getByAppForPayedOnline()&#10;&#10;Description&#10;     Gets specialities for payed online education.;;d1,697;;b1,0;;m">
</treenode>
<treenode node="getByAppForSpecial;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;573;2;580;;;;vpos;;varray;;r&#10;Definition&#10;    getByAppForSpecial()&#10;&#10;Description&#10;     Gets specialities for special.;;d1,574;;b1,0;;m">
</treenode>
<treenode node="getByAppForTraineeship;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;601;2;608;;;;vpos;;varray;;r&#10;Definition&#10;    getByAppForTraineeship()&#10;&#10;Description&#10;     Gets specialities for traineeship.;;d1,602;;b1,0;;m">
</treenode>
<treenode node="getByUserGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;94;2;100;;;;vpos;;varray;;r&#10;Definition&#10;    getByUserGrid()&#10;&#10;Description&#10;     Gets application places for GRID.;;d1,95;;b1,0;;m">
</treenode>
<treenode node="getEduformFirstBachelorForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;272;2;281;;;;vpos;;varray;;r&#10;Definition&#10;    getEduformFirstBachelorForApp($pay)&#10;&#10;Description&#10;     Gets first high bachelor eduforms UNIQUE for application.;;d1,273;;b1,0;;mpay;;p">
</treenode>
<treenode node="getEduformFirstForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;432;2;441;;;;vpos;;varray;;r&#10;Definition&#10;    getEduformFirstForApp($pay)&#10;&#10;Description&#10;     Gets first high eduforms UNIQUE for application.;;d1,433;;b1,0;;mpay;;p">
</treenode>
<treenode node="getEduformMagisterForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;352;2;361;;;;vpos;;varray;;r&#10;Definition&#10;    getEduformMagisterForApp($pay)&#10;&#10;Description&#10;     Gets magister eduforms UNIQUE for application.;;d1,353;;b1,0;;mpay;;p">
</treenode>
<treenode node="getEduformSecondForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;512;2;521;;;;vpos;;varray;;r&#10;Definition&#10;    getEduformSecondForApp($pay)&#10;&#10;Description&#10;     Gets second high eduforms UNIQUE for application.;;d1,513;;b1,0;;mpay;;p">
</treenode>
<treenode node="getEduformSpecial9ForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;192;2;201;;;;vpos;;varray;;r&#10;Definition&#10;    getEduformSpecial9ForApp($pay)&#10;&#10;Description&#10;     Gets special eduforms based on 9 classes UNIQUE for application.;;d1,193;;b1,0;;mpay;;p">
</treenode>
<treenode node="getEdulevelFirstBachelorForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;288;2;297;;;;vpos;;varray;;r&#10;Definition&#10;    getEdulevelFirstBachelorForApp($pay)&#10;&#10;Description&#10;     Gets first high bachelor edulevels UNIQUE for application.;;d1,289;;b1,0;;mpay;;p">
</treenode>
<treenode node="getEdulevelFirstForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;448;2;457;;;;vpos;;varray;;r&#10;Definition&#10;    getEdulevelFirstForApp($pay)&#10;&#10;Description&#10;     Gets first high edulevels UNIQUE for application.;;d1,449;;b1,0;;mpay;;p">
</treenode>
<treenode node="getEdulevelMagisterForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;368;2;377;;;;vpos;;varray;;r&#10;Definition&#10;    getEdulevelMagisterForApp($pay)&#10;&#10;Description&#10;     Gets magister edulevels UNIQUE for application.;;d1,369;;b1,0;;mpay;;p">
</treenode>
<treenode node="getEdulevelSecondForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;528;2;537;;;;vpos;;varray;;r&#10;Definition&#10;    getEdulevelSecondForApp($pay)&#10;&#10;Description&#10;     Gets second high edulevels UNIQUE for application.;;d1,529;;b1,0;;mpay;;p">
</treenode>
<treenode node="getEdulevelSpecial9ForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;208;2;217;;;;vpos;;varray;;r&#10;Definition&#10;    getEdulevelSpecial9ForApp($pay)&#10;&#10;Description&#10;     Gets special edulevels based on 9 classes UNIQUE for application.;;d1,209;;b1,0;;mpay;;p">
</treenode>
<treenode node="getFinanceFirstBachelorForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;256;2;265;;;;vpos;;varray;;r&#10;Definition&#10;    getFinanceFirstBachelorForApp($pay)&#10;&#10;Description&#10;     Gets first high bachelor finances UNIQUE for application.;;d1,257;;b1,0;;mpay;;p">
</treenode>
<treenode node="getFinanceFirstForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;416;2;425;;;;vpos;;varray;;r&#10;Definition&#10;    getFinanceFirstForApp($pay)&#10;&#10;Description&#10;     Gets first high finances UNIQUE for application.;;d1,417;;b1,0;;mpay;;p">
</treenode>
<treenode node="getFinanceMagisterForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;336;2;345;;;;vpos;;varray;;r&#10;Definition&#10;    getFinanceMagisterForApp($pay)&#10;&#10;Description&#10;     Gets magister finances UNIQUE for application.;;d1,337;;b1,0;;mpay;;p">
</treenode>
<treenode node="getFinanceSecondForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;496;2;505;;;;vpos;;varray;;r&#10;Definition&#10;    getFinanceSecondForApp($pay)&#10;&#10;Description&#10;     Gets second high finances UNIQUE for application.;;d1,497;;b1,0;;mpay;;p">
</treenode>
<treenode node="getFinanceSpecial9ForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;176;2;185;;;;vpos;;varray;;r&#10;Definition&#10;    getFinanceSpecial9ForApp($pay)&#10;&#10;Description&#10;     Gets special finances based on 9 classes UNIQUE for application.;;d1,177;;b1,0;;mpay;;p">
</treenode>
<treenode node="getGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;94;2;100;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;104;2;110;;;;vpos;;varray;;r&#10;Definition&#10;    getGrid()&#10;&#10;Description&#10;     Gets application places for GRID.;;d1,105;;b1,0;;m">
</treenode>
<treenode node="getSpecialityFirstBachelorForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;240;2;249;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecialityFirstBachelorForApp($pay)&#10;&#10;Description&#10;     Gets first high bachelor specialities UNIQUE for application.;;d1,241;;b1,0;;mpay;;p">
</treenode>
<treenode node="getSpecialityFirstForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;400;2;409;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecialityFirstForApp($pay)&#10;&#10;Description&#10;     Gets first high specialities UNIQUE for application.;;d1,401;;b1,0;;mpay;;p">
</treenode>
<treenode node="getSpecialityMagisterForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;320;2;329;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecialityMagisterForApp($pay)&#10;&#10;Description&#10;     Gets magister specialities UNIQUE for application.;;d1,321;;b1,0;;mpay;;p">
</treenode>
<treenode node="getSpecialitySecondForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;480;2;489;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecialitySecondForApp($pay)&#10;&#10;Description&#10;     Gets second high specialities UNIQUE for application.;;d1,481;;b1,0;;mpay;;p">
</treenode>
<treenode node="getSpecialitySpecial9ForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;160;2;169;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecialitySpecial9ForApp($pay)&#10;&#10;Description&#10;     Gets special specialities based on 9 classes UNIQUE for application.;;d1,161;;b1,0;;mpay;;p">
</treenode>
<treenode node="getSpecsByApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;107;2;113;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;117;2;123;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecsByApp()&#10;&#10;Description&#10;     Gets specialities by application.;;d1,118;;b1,0;;m">
</treenode>
<treenode node="getSpecsByAppPdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;130;2;137;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecsByAppPdf()&#10;&#10;Description&#10;     Gets specialities by application for PDF.;;d1,131;;b1,0;;m">
</treenode>
<treenode node="getSpecsFirstBachelorForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;224;2;233;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecsFirstBachelorForApp($pay)&#10;&#10;Description&#10;     Gets first high bachelor specialities for application.;;d1,225;;b1,0;;mpay;;p">
</treenode>
<treenode node="getSpecsFirstForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;384;2;393;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecsFirstForApp($pay)&#10;&#10;Description&#10;     Gets first high specialities for application.;;d1,385;;b1,0;;mpay;;p">
</treenode>
<treenode node="getSpecsForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;120;2;127;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecsForApp()&#10;&#10;Description&#10;     Gets specialities for application.;;d1,121;;b1,0;;m">
</treenode>
<treenode node="getSpecsMagisterForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;304;2;313;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecsMagisterForApp($pay)&#10;&#10;Description&#10;     Gets magister specialities for application.;;d1,305;;b1,0;;mpay;;p">
</treenode>
<treenode node="getSpecsSecondForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;464;2;473;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecsSecondForApp($pay)&#10;&#10;Description&#10;     Gets second high specialities for application.;;d1,465;;b1,0;;mpay;;p">
</treenode>
<treenode node="getSpecsSpecial9ForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;144;2;153;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecsSpecial9ForApp($pay)&#10;&#10;Description&#10;     Gets special specialities based on 9 classes for application.;;d1,145;;b1,0;;mpay;;p">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;80;2;87;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;89;2;97;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Application places grid.;;d1,90;;b1,0;;m">
</treenode>
<treenode node="ParamsHighEducFirst;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;953;2;970;;;;vpos;;varray;;r&#10;Definition&#10;    ParamsHighEducFirst($pay) : array&#10;&#10;Description&#10;     Returns parameters for the first high education.;;d1,954;;b1,0;;mpay;;p">
</treenode>
<treenode node="ParamsHighEducFirstBachelor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;874;2;922;;;;vpos;;varray;;r&#10;Definition&#10;    ParamsHighEducFirstBachelor($pay) : array&#10;&#10;Description&#10;     Returns parameters for the first high bachelor education.;;d1,875;;b1,0;;mpay;;p">
</treenode>
<treenode node="ParamsHighEducMagister;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;929;2;946;;;;vpos;;varray;;r&#10;Definition&#10;    ParamsHighEducMagister($pay) : array&#10;&#10;Description&#10;     Returns parameters for the magister education.;;d1,930;;b1,0;;mpay;;p">
</treenode>
<treenode node="ParamsHighEducSecond;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;977;2;996;;;;vpos;;varray;;r&#10;Definition&#10;    ParamsHighEducSecond($pay) : array&#10;&#10;Description&#10;     Returns parameters for the second high education.;;d1,978;;b1,0;;mpay;;p">
</treenode>
<treenode node="ParamsSpecial9Educ;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;848;2;867;;;;vpos;;varray;;r&#10;Definition&#10;    ParamsSpecial9Educ($pay) : array&#10;&#10;Description&#10;     Returns parameters for special education based on 9 classes.;;d1,849;;b1,0;;mpay;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;28;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f8;29;2;32;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;33;2;73;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;42;2;82;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Application places rules.;;d1,43;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;134;2;139;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;712;2;718;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves application places data to database.;;d1,713;;b1,0;;m">
</treenode>
<treenode node="TablesSpecs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;751;2;756;;;;vpos;;vstring;;r&#10;Definition&#10;    TablesSpecs() : string&#10;&#10;Description&#10;     Returns tables for specs.;;d1,752;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_ApplicationPlacesExams;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f0;6;1;182;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f6;12;17;12;;;;vpos;;v;;r&apos;application_places_exams&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f8;25;2;28;;;;vpos;;v;;r;;d1,26;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f8;178;2;181;;;;vpos;;v;;r;;d1,179;;b1,0;;m">
</treenode>
<treenode node="changeTest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f8;170;2;176;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeTest()&#10;&#10;Description&#10;     Changes testing scope.;;d1,171;;b1,0;;m">
</treenode>
<treenode node="existsExams;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f8;137;2;150;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsExams()&#10;&#10;Description&#10;     Checks if exams exists.;;d1,138;;b1,0;;m">
</treenode>
<treenode node="getExamsByApplication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f8;121;2;130;;;;vpos;;varray;;r&#10;Definition&#10;    getExamsByApplication()&#10;&#10;Description&#10;     Gets exams by application.;;d1,122;;b1,0;;m">
</treenode>
<treenode node="getExamsByPlace;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f8;94;2;101;;;;vpos;;varray;;r&#10;Definition&#10;    getExamsByPlace()&#10;&#10;Description&#10;     Gets exams by place.;;d1,95;;b1,0;;m">
</treenode>
<treenode node="getExamsByPlaceFull;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f8;108;2;114;;;;vpos;;varray;;r&#10;Definition&#10;    getExamsByPlaceFull()&#10;&#10;Description&#10;     Gets full exams by place.;;d1,109;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f8;35;2;87;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Application places exams rules.;;d1,36;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f8;157;2;163;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves application places exams data to database.;;d1,158;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_ApplicationSpec;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f0;21;1;242;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f0;30;1;1050;;;;vpos;;vModel;;c;;r;;d0,31;;b0,0;;m">
<treenode node="change;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;588;2;620;;;;vpos;;varray;;r&#10;Definition&#10;    change($form)&#10;&#10;Description&#10;     Changes application spec data.;;d1,589;;b1,0;;mform;;p">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f8;216;2;241;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;470;2;547;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks application spec data.;;d1,471;;b1,0;;mform;;p">
</treenode>
<treenode node="checkPlaces;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f8;117;2;209;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;206;2;424;;;;vpos;;varray;;r&#10;Definition&#10;    checkPlaces($post)&#10;&#10;Description&#10;     Checks application places data.;;d1,207;;b1,0;;mpost;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f8;42;2;47;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;110;2;115;;;;vpos;;varray;;r&#10;Definition&#10;    get($id)&#10;&#10;Description&#10;     Gets application spec data from database.;;d1,111;;b1,0;;mid;;p">
</treenode>
<treenode node="getExams;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f8;54;2;62;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;122;2;130;;;;vpos;;varray;;r&#10;Definition&#10;    getExams($form)&#10;&#10;Description&#10;     Gets application places exams.;;d1,123;;b1,0;;mform;;p">
</treenode>
<treenode node="recall;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;627;2;666;;;;vpos;;varray;;r&#10;Definition&#10;    recall($form)&#10;&#10;Description&#10;     Recalls application spec data.;;d1,628;;b1,0;;mform;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f8;32;2;35;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;41;2;69;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Application spec rules.;;d1,42;;b1,0;;m">
</treenode>
<treenode node="saveExams;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;137;2;166;;;;vpos;;varray;;r&#10;Definition&#10;    saveExams($form)&#10;&#10;Description&#10;     Saves application spec exams data.;;d1,138;;b1,0;;mform;;p">
</treenode>
<treenode node="savePdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;673;2;761;;;;vpos;;vmixed;;r&#10;Definition&#10;    savePdf($id)&#10;&#10;Description&#10;     Saves application spec data as PDF.;;d1,674;;b1,0;;mid;;p">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;554;2;581;;;;vpos;;varray;;r&#10;Definition&#10;    send($form)&#10;&#10;Description&#10;     Sends application spec data.;;d1,555;;b1,0;;mform;;p">
</treenode>
<treenode node="setAppForPdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;768;2;781;;;;vpos;;varray;;r&#10;Definition&#10;    setAppForPdf($data, $app_row) : array&#10;&#10;Description&#10;     Sets application data for PDF.;;d1,769;;b1,0;;mdata;;papp_row;;p">
</treenode>
<treenode node="setCampusForPdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;979;2;987;;;;vpos;;varray;;r&#10;Definition&#10;    setCampusForPdf($data, $campus) : array&#10;&#10;Description&#10;     Sets campus data for PDF.;;d1,980;;b1,0;;mdata;;pcampus;;p">
</treenode>
<treenode node="setEducForPdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;921;2;958;;;;vpos;;varray;;r&#10;Definition&#10;    setEducForPdf($data, $id_docseduc, $edulevel) : array&#10;&#10;Description&#10;     Sets education data for PDF.;;d1,922;;b1,0;;mdata;;pid_docseduc;;pedulevel;;p">
</treenode>
<treenode node="setExamsForPdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;845;2;914;;;;vpos;;varray;;r&#10;Definition&#10;    setExamsForPdf($data, $app) : array&#10;&#10;Description&#10;     Sets exams data for PDF.;;d1,846;;b1,0;;mdata;;papp;;p">
</treenode>
<treenode node="setForeignLangForPdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;965;2;972;;;;vpos;;varray;;r&#10;Definition&#10;    setForeignLangForPdf($data, $id_lang) : array&#10;&#10;Description&#10;     Sets foreign language for PDF.;;d1,966;;b1,0;;mdata;;pid_lang;;p">
</treenode>
<treenode node="setIaForPdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;994;2;1049;;;;vpos;;varray;;r&#10;Definition&#10;    setIaForPdf($data, $app) : array&#10;&#10;Description&#10;     Sets individual achievments data for PDF.;;d1,995;;b1,0;;mdata;;papp;;p">
</treenode>
<treenode node="setPlacesForPdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;817;2;838;;;;vpos;;varray;;r&#10;Definition&#10;    setPlacesForPdf($data, $app, $limit) : array&#10;&#10;Description&#10;     Sets places data for PDF.;;d1,818;;b1,0;;mdata;;papp;;plimit;;p">
</treenode>
<treenode node="setResumeForPdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;788;2;810;;;;vpos;;varray;;r&#10;Definition&#10;    setResumeForPdf($data) : array&#10;&#10;Description&#10;     Sets resume data for PDF.;;d1,789;;b1,0;;mdata;;p">
</treenode>
<treenode node="syncIa;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;431;2;463;;;;vpos;;varray;;r&#10;Definition&#10;    syncIa($form)&#10;&#10;Description&#10;     Synchronizes individual achievments for application.;;d1,432;;b1,0;;mform;;p">
</treenode>
<treenode node="unsetScans;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f8;69;2;110;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;173;2;199;;;;vpos;;varray;;r&#10;Definition&#10;    unsetScans($form)&#10;&#10;Description&#10;     Unsets application spec files.;;d1,174;;b1,0;;mform;;p">
</treenode>
<treenode node="validateFormAdvanced;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;76;2;103;;;;vpos;;varray;;r&#10;Definition&#10;    validateFormAdvanced($form)&#10;&#10;Description&#10;     Validates resume advanced.;;d1,77;;b1,0;;mform;;p">
</treenode>
</treenode>
<treenode node="Model_ApplicationStatus;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationStatus.php;f0;7;1;145;;;;vpos;;vDb_Helper;;c;;r;;d0,8;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationStatus.php;f6;13;17;13;;;;vpos;;v;;r&apos;application_status&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationStatus.php;f8;25;2;28;;;;vpos;;v;;r;;d1,26;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationStatus.php;f8;141;2;144;;;;vpos;;v;;r;;d1,142;;b1,0;;m">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationStatus.php;f8;136;2;139;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes application log.;;d1,137;;b1,0;;m">
</treenode>
<treenode node="create;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationStatus.php;f8;104;2;117;;;;vpos;;vinteger;;r&#10;Definition&#10;    create()&#10;&#10;Description&#10;     Creates application status log data.;;d1,105;;b1,0;;m">
</treenode>
<treenode node="getLast;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationStatus.php;f8;88;2;97;;;;vpos;;vinteger;;r&#10;Definition&#10;    getLast()&#10;&#10;Description&#10;     Gets the last application status log data.;;d1,89;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationStatus.php;f8;35;2;81;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Application rules.;;d1,36;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationStatus.php;f8;124;2;129;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves application status log data to database.;;d1,125;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_Contacts;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f0;19;1;228;;;;vpos;;vDb_Helper;;c;;r;;d0,20;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f6;25;17;25;;;;vpos;;v;;r&apos;contacts&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TRANS_PHONE_HOME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f6;33;23;33;;;;vpos;;v;;r[&apos;(&apos; =&gt; &apos;&apos;, &apos;)&apos; =&gt; &apos;&apos;, &apos;-&apos; =&gt; &apos;&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TRANS_PHONE_MOBILE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f6;32;25;32;;;;vpos;;v;;r[&apos;+7&apos; =&gt; &apos;8&apos;, &apos;(&apos; =&gt; &apos;&apos;, &apos;)&apos; =&gt; &apos;&apos;, &apos; &apos; =&gt; &apos;&apos;, &apos;-&apos; =&gt; &apos;&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_EMAIL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f6;27;17;27;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_PHONE_ADD;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f6;30;21;30;;;;vpos;;v;;r3;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_PHONE_HOME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f6;29;22;29;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_PHONE_MOBILE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f6;28;24;28;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;46;2;49;;;;vpos;;v;;r;;d1,47;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;224;2;227;;;;vpos;;v;;r;;d1,225;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;189;2;202;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all contacts data.;;d1,190;;b1,0;;m">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;209;2;212;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes contact.;;d1,210;;b1,0;;m">
</treenode>
<treenode node="getEmailByResume;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;115;2;121;;;;vpos;;varray;;r&#10;Definition&#10;    getEmailByResume()&#10;&#10;Description&#10;     Gets email by resume.;;d1,116;;b1,0;;m">
</treenode>
<treenode node="getPhoneAddByResume;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;154;2;160;;;;vpos;;varray;;r&#10;Definition&#10;    getPhoneAddByResume()&#10;&#10;Description&#10;     Gets phone add by resume.;;d1,155;;b1,0;;m">
</treenode>
<treenode node="getPhoneHomeByResume;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;141;2;147;;;;vpos;;varray;;r&#10;Definition&#10;    getPhoneHomeByResume()&#10;&#10;Description&#10;     Gets phone home by resume.;;d1,142;;b1,0;;m">
</treenode>
<treenode node="getPhoneMobileByResume;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;128;2;134;;;;vpos;;varray;;r&#10;Definition&#10;    getPhoneMobileByResume()&#10;&#10;Description&#10;     Gets phone mobile by resume.;;d1,129;;b1,0;;m">
</treenode>
<treenode node="prettyPhoneMobile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f15;219;2;222;;;;vpos;;vstring;;r&#10;Definition&#10;    prettyPhoneMobile($phone_mobile)&#10;&#10;Description&#10;     Makes mobile phone pretty.;;d1,220;;b1,5;;mphone_mobile;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;56;2;108;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Contacts rules.;;d1,57;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;167;2;182;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves contacts data to database.;;d1,168;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictCountries;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictCountries.php;f0;7;1;164;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f0;6;1;601;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="ABROAD_FAR;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f6;18;17;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;18;17;18;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ABROAD_FAR_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f6;19;22;19;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;19;22;19;;;;vpos;;v;;r&apos;Дальнее&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ABROAD_HOME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f6;14;18;14;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;14;18;14;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ABROAD_HOME_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f6;15;23;15;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;15;23;15;;;;vpos;;v;;r&apos;Нет&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ABROAD_LIST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f6;21;18;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;21;18;21;;;;vpos;;v;;r[&#10;      [&apos;code&apos; =&gt; 0, &apos;description&apos; =&gt; &apos;Нет&apos;],&#10;      [&apos;code&apos; =&gt; 1, &apos;description&apos; =&gt; &apos;Ближнее&apos;],&#10;      [&apos;code&apos; =&gt; 2, &apos;description&apos; =&gt; &apos;Дальнее&apos;]&#10;      ];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ABROAD_NEAR;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f6;16;18;16;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;16;18;16;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ABROAD_NEAR_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f6;17;23;17;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;17;23;17;;;;vpos;;v;;r&apos;Ближнее&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_countries&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;38;2;41;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;38;2;41;;;;vpos;;v;;r;;d1,39;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;597;2;600;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;597;2;600;;;;vpos;;v;;r;;d1,598;;b1,0;;m">
</treenode>
<treenode node="changeAbroad;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;410;2;416;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;410;2;416;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAbroad()&#10;&#10;Description&#10;     Changes abroad.;;d1,411;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;360;2;364;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;360;2;364;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all country data.;;d1,361;;b1,0;;m">
</treenode>
<treenode node="changeAlpha2;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;423;2;429;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;423;2;429;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAlpha2()&#10;&#10;Description&#10;     Changes code alpha2.;;d1,424;;b1,0;;m">
</treenode>
<treenode node="changeAlpha3;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;436;2;442;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;436;2;442;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAlpha3()&#10;&#10;Description&#10;     Changes code alpha3.;;d1,437;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;371;2;377;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;371;2;377;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes code.;;d1,372;;b1,0;;m">
</treenode>
<treenode node="changeFullName;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;397;2;403;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;397;2;403;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeFullName()&#10;&#10;Description&#10;     Changes fullname.;;d1,398;;b1,0;;m">
</treenode>
<treenode node="changeName;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;384;2;390;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;384;2;390;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeName()&#10;&#10;Description&#10;     Changes description.;;d1,385;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictCountries.php;f8;118;2;163;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;118;2;163;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks dictionary countries data.;;d1,119;;b1,0;;mform;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;459;2;462;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;459;2;462;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes country.;;d1,460;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;449;2;452;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;449;2;452;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all countries.;;d1,450;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictCountries.php;f8;93;2;111;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;93;2;111;;;;vpos;;vboolean;;r&#10;Definition&#10;    delete($form)&#10;&#10;Description&#10;     Deletes country from database.;;d1,94;;b1,0;;mform;;p">
</treenode>
<treenode node="existsAddress;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;331;2;342;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;331;2;342;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsAddress()&#10;&#10;Description&#10;     Checks if country used in address.;;d1,332;;b1,0;;m">
</treenode>
<treenode node="existsCitizenship;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;313;2;324;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;313;2;324;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsCitizenship()&#10;&#10;Description&#10;     Checks if country used in citizenship.;;d1,314;;b1,0;;m">
</treenode>
<treenode node="existsCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;241;2;252;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;241;2;252;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsCode()&#10;&#10;Description&#10;     Checks if code exists.;;d1,242;;b1,0;;m">
</treenode>
<treenode node="existsCodeExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;259;2;270;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;259;2;270;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsCodeExcept()&#10;&#10;Description&#10;     Checks if code exists except this ID.;;d1,260;;b1,0;;m">
</treenode>
<treenode node="existsDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;277;2;288;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;277;2;288;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsDescription()&#10;&#10;Description&#10;     Checks if description exists.;;d1,278;;b1,0;;m">
</treenode>
<treenode node="existsDescriptionExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;295;2;306;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;295;2;306;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsDescriptionExcept()&#10;&#10;Description&#10;     Checks if description exists except this ID.;;d1,296;;b1,0;;m">
</treenode>
<treenode node="existsGuid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;205;2;216;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;205;2;216;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsGuid()&#10;&#10;Description&#10;     Checks if GUID exists.;;d1,206;;b1,0;;m">
</treenode>
<treenode node="existsGuidExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;223;2;234;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;223;2;234;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsGuidExcept()&#10;&#10;Description&#10;     Checks if GUID exists except this ID.;;d1,224;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictCountries.php;f8;81;2;86;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;81;2;86;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;166;2;172;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;166;2;172;;;;vpos;;varray;;r&#10;Definition&#10;    get()&#10;&#10;Description&#10;     Gets country by ID.;;d1,167;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;156;2;159;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;156;2;159;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all countries.;;d1,157;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;179;2;185;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;179;2;185;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets country by code.;;d1,180;;b1,0;;m">
</treenode>
<treenode node="getByDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;192;2;198;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;192;2;198;;;;vpos;;varray;;r&#10;Definition&#10;    getByDescription()&#10;&#10;Description&#10;     Gets country by description.;;d1,193;;b1,0;;m">
</treenode>
<treenode node="getGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;142;2;149;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;142;2;149;;;;vpos;;varray;;r&#10;Definition&#10;    getGrid()&#10;&#10;Description&#10;     Gets all countries for GRID.;;d1,143;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;107;2;135;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;107;2;135;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Countries grid.;;d1,108;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;469;2;595;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;469;2;595;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads countries.;;d1,470;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictCountries.php;f8;18;2;74;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;18;2;74;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;48;2;100;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;48;2;100;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Countries rules.;;d1,49;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;349;2;353;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;349;2;353;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves country data to database.;;d1,350;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictDiscipline;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f0;6;1;227;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_discipline&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;23;2;26;;;;vpos;;v;;r;;d1,24;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;223;2;226;;;;vpos;;v;;r;;d1,224;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;151;2;154;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all disciplines.;;d1,152;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;80;2;83;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all disciplines.;;d1,81;;b1,0;;m">
</treenode>
<treenode node="getByCampaign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;127;2;133;;;;vpos;;varray;;r&#10;Definition&#10;    getByCampaign()&#10;&#10;Description&#10;     Gets disciplines by admission campaign.;;d1,128;;b1,0;;m">
</treenode>
<treenode node="getDescriptionByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;114;2;120;;;;vpos;;varray;;r&#10;Definition&#10;    getDescriptionByCode()&#10;&#10;Description&#10;     Gets discipline discipline_name by code.;;d1,115;;b1,0;;m">
</treenode>
<treenode node="getOne;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;100;2;107;;;;vpos;;varray;;r&#10;Definition&#10;    getOne()&#10;&#10;Description&#10;     Gets one discipline.;;d1,101;;b1,0;;m">
</treenode>
<treenode node="getUnique;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;90;2;93;;;;vpos;;varray;;r&#10;Definition&#10;    getUnique()&#10;&#10;Description&#10;     Gets unique disciplines.;;d1,91;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;161;2;221;;;;vpos;;varray;;r&#10;Definition&#10;    load($xml, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads disciplines.;;d1,162;;b1,0;;mxml;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;33;2;73;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Dictionary discipline rules.;;d1,34;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;140;2;144;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves discipline data to database.;;d1,141;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictDocships;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f0;6;1;235;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_docships&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;23;2;26;;;;vpos;;v;;r;;d1,24;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;231;2;234;;;;vpos;;v;;r;;d1,232;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;109;2;115;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes document shipment code.;;d1,110;;b1,0;;m">
</treenode>
<treenode node="changeDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;122;2;128;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeDescription()&#10;&#10;Description&#10;     Changes document shipment description.;;d1,123;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;135;2;138;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all document shipments.;;d1,136;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;68;2;71;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all document shipment.;;d1,69;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;88;2;91;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets document shipment by code.;;d1,89;;b1,0;;m">
</treenode>
<treenode node="getByGuid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;78;2;81;;;;vpos;;varray;;r&#10;Definition&#10;    getByGuid()&#10;&#10;Description&#10;     Gets document shipment by GUID.;;d1,79;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;145;2;229;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads document shipments.;;d1,146;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;33;2;61;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Document shipment rules.;;d1,34;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;98;2;102;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves document shipment data to database.;;d1,99;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictDoctypes;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictEductypes.php;f0;7;1;35;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictDoctypes.php;f0;7;1;119;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f0;6;1;387;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_doctypes&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictEductypes.php;f8;15;2;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;15;2;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;25;2;28;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictDoctypes.php;f8;15;2;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;23;2;26;;;;vpos;;v;;r;;d1,24;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;357;2;360;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;383;2;386;;;;vpos;;v;;r;;d1,384;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;209;2;214;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;232;2;238;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes document type code.;;d1,233;;b1,0;;m">
</treenode>
<treenode node="changeDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;221;2;226;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;245;2;251;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeDescription()&#10;&#10;Description&#10;     Changes document type description.;;d1,246;;b1,0;;m">
</treenode>
<treenode node="changeIsfolder;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;185;2;190;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;206;2;212;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeIsfolder()&#10;&#10;Description&#10;     Changes document type isfolder.;;d1,207;;b1,0;;m">
</treenode>
<treenode node="changeParent;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;197;2;202;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;219;2;225;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeParent()&#10;&#10;Description&#10;     Changes document type parent.;;d1,220;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;233;2;236;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;258;2;261;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all document types.;;d1,259;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;82;2;85;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;80;2;83;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all document types.;;d1,81;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;92;2;95;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;90;2;93;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets document type by code.;;d1,91;;b1,0;;m">
</treenode>
<treenode node="getDiplomas;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;146;2;153;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;166;2;174;;;;vpos;;varray;;r&#10;Definition&#10;    getDiplomas()&#10;&#10;Description&#10;     Gets education documents.;;d1,167;;b1,0;;m">
</treenode>
<treenode node="getDiplomasByEducCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;160;2;167;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;181;2;188;;;;vpos;;varray;;r&#10;Definition&#10;    getDiplomasByEducCode()&#10;&#10;Description&#10;     Gets education documents by education type code.;;d1,182;;b1,0;;m">
</treenode>
<treenode node="getDiplomasByEducCodeJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictEductypes.php;f8;25;2;34;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;25;2;34;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictDoctypes.php;f8;101;2;118;;;;vpos;;vJSON;;r&#10;Definition&#10;    getDiplomasByEducCodeJSON($code_educ) : string&#10;&#10;Description&#10;     Gets education documents by education type code JSON.;;d1,102;;b1,0;;mcode_educ;;p">
</treenode>
<treenode node="getPassports;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;102;2;109;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;100;2;107;;;;vpos;;varray;;r&#10;Definition&#10;    getPassports()&#10;&#10;Description&#10;     Gets passports.;;d1,101;;b1,0;;m">
</treenode>
<treenode node="getPassportsBsu;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;114;2;128;;;;vpos;;varray;;r&#10;Definition&#10;    getPassportsBsu()&#10;&#10;Description&#10;     Gets passports BSU.;;d1,115;;b1,0;;m">
</treenode>
<treenode node="getPassportsBsuJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictDoctypes.php;f8;44;2;56;;;;vpos;;vJSON;;r&#10;Definition&#10;    getPassportsBsuJSON() : string&#10;&#10;Description&#10;     Gets passports BSU JSON.;;d1,45;;b1,0;;m">
</treenode>
<treenode node="getPassportsForeign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;129;2;139;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;149;2;159;;;;vpos;;varray;;r&#10;Definition&#10;    getPassportsForeign()&#10;&#10;Description&#10;     Gets foreign passports.;;d1,150;;b1,0;;m">
</treenode>
<treenode node="getPassportsForeignJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictDoctypes.php;f8;82;2;94;;;;vpos;;vJSON;;r&#10;Definition&#10;    getPassportsForeignJSON() : string&#10;&#10;Description&#10;     Gets foreign passports JSON.;;d1,83;;b1,0;;m">
</treenode>
<treenode node="getPassportsJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictDoctypes.php;f8;25;2;37;;;;vpos;;vJSON;;r&#10;Definition&#10;    getPassportsJSON() : string&#10;&#10;Description&#10;     Gets passports JSON.;;d1,26;;b1,0;;m">
</treenode>
<treenode node="getPassportsRussia;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;116;2;122;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;135;2;142;;;;vpos;;varray;;r&#10;Definition&#10;    getPassportsRussia()&#10;&#10;Description&#10;     Gets russian passports.;;d1,136;;b1,0;;m">
</treenode>
<treenode node="getPassportsRussianJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictDoctypes.php;f8;63;2;75;;;;vpos;;vJSON;;r&#10;Definition&#10;    getPassportsRussianJSON() : string&#10;&#10;Description&#10;     Gets russian passports JSON.;;d1,64;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;243;2;355;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;268;2;381;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads document types.;;d1,269;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;35;2;75;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;33;2;73;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Document types rules.;;d1,34;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;174;2;178;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;195;2;199;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves document type data to database.;;d1,196;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictEducforms;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f0;6;1;274;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f0;6;1;277;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_educforms&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;22;2;25;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;22;2;25;;;;vpos;;v;;r;;d1,23;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;270;2;273;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;273;2;276;;;;vpos;;v;;r;;d1,274;;b1,0;;m">
</treenode>
<treenode node="changeAbbr;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;148;2;153;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;150;2;156;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAbbr()&#10;&#10;Description&#10;     Changes education form abbr.;;d1,151;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;124;2;129;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;124;2;130;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes education form code.;;d1,125;;b1,0;;m">
</treenode>
<treenode node="changeDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;136;2;141;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;137;2;143;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeDescription()&#10;&#10;Description&#10;     Changes education form description.;;d1,138;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;160;2;163;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;163;2;166;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all education forms.;;d1,164;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;73;2;80;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;73;2;80;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all education forms.;;d1,74;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;100;2;106;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;100;2;106;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets education form by code.;;d1,101;;b1,0;;m">
</treenode>
<treenode node="getByGuid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;87;2;93;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;87;2;93;;;;vpos;;varray;;r&#10;Definition&#10;    getByGuid()&#10;&#10;Description&#10;     Gets education form by GUID.;;d1,88;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;170;2;268;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;173;2;271;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads education forms.;;d1,174;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;32;2;66;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;32;2;66;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Education forms rules.;;d1,33;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;113;2;117;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;113;2;117;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves education form data to database.;;d1,114;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictEduclevels;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f0;6;1;346;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_educlevels&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;24;2;27;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;24;2;27;;;;vpos;;v;;r;;d1,25;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;336;2;339;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;342;2;345;;;;vpos;;v;;r;;d1,343;;b1,0;;m">
</treenode>
<treenode node="changeAbbr;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;186;2;191;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;190;2;196;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAbbr()&#10;&#10;Description&#10;     Changes education level abbr.;;d1,191;;b1,0;;m">
</treenode>
<treenode node="changeCateg;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;177;2;183;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCateg()&#10;&#10;Description&#10;     Changes education level categ.;;d1,178;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;162;2;167;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;138;2;144;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes education level code.;;d1,139;;b1,0;;m">
</treenode>
<treenode node="changeDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;174;2;179;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;151;2;157;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeDescription()&#10;&#10;Description&#10;     Changes education level description.;;d1,152;;b1,0;;m">
</treenode>
<treenode node="changeIsfolder;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;138;2;143;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeIsfolder()&#10;&#10;Description&#10;     Changes finance isfolder.;;d1,139;;b1,0;;m">
</treenode>
<treenode node="changeParent;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;150;2;155;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeParent()&#10;&#10;Description&#10;     Changes finance parent.;;d1,151;;b1,0;;m">
</treenode>
<treenode node="changeType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;164;2;170;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeType()&#10;&#10;Description&#10;     Changes education level type.;;d1,165;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;198;2;201;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;203;2;206;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all education levels.;;d1,204;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;87;2;94;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;87;2;94;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all education levels.;;d1,88;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;114;2;120;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;114;2;120;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets education level by code.;;d1,115;;b1,0;;m">
</treenode>
<treenode node="getByGuid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;101;2;107;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;101;2;107;;;;vpos;;varray;;r&#10;Definition&#10;    getByGuid()&#10;&#10;Description&#10;     Gets education level by GUID.;;d1,102;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;208;2;334;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;213;2;340;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads education levels.;;d1,214;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;34;2;80;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;34;2;80;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Education levels rules.;;d1,35;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;127;2;131;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;127;2;131;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves education level data to database.;;d1,128;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictEductypes;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f0;6;1;315;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="EDUCTYPES_DIPLOMA;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;22;24;22;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f6;22;24;22;;;;vpos;;v;;r[&apos;000000001&apos;, &apos;000000003&apos;, &apos;000000004&apos;, &apos;000000006&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_eductypes&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;26;2;29;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;26;2;29;;;;vpos;;v;;r;;d1,27;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;306;2;309;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;311;2;314;;;;vpos;;v;;r;;d1,312;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;158;2;163;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;160;2;166;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes education type code.;;d1,161;;b1,0;;m">
</treenode>
<treenode node="changeDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;170;2;175;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;173;2;179;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeDescription()&#10;&#10;Description&#10;     Changes education type description.;;d1,174;;b1,0;;m">
</treenode>
<treenode node="changeIsfolder;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;134;2;139;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;134;2;140;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeIsfolder()&#10;&#10;Description&#10;     Changes education type isfolder.;;d1,135;;b1,0;;m">
</treenode>
<treenode node="changeParent;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;146;2;151;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;147;2;153;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeParent()&#10;&#10;Description&#10;     Changes education type parent.;;d1,148;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;182;2;185;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;186;2;189;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all education types.;;d1,187;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;89;2;92;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;89;2;92;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all education types.;;d1,90;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;99;2;102;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;99;2;102;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets education type by code.;;d1,100;;b1,0;;m">
</treenode>
<treenode node="getEducs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;109;2;115;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;109;2;115;;;;vpos;;varray;;r&#10;Definition&#10;    getEducs()&#10;&#10;Description&#10;     Gets educations.;;d1,110;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;192;2;304;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;196;2;309;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads education types.;;d1,197;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;36;2;82;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;36;2;82;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Education types rules.;;d1,37;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;122;2;127;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;122;2;127;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves education type data to database.;;d1,123;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictEge;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictEge.php;f0;8;1;111;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f0;6;1;242;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_ege&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;20;2;23;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;20;2;23;;;;vpos;;v;;r;;d1,21;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;112;2;115;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;238;2;241;;;;vpos;;v;;r;;d1,239;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;93;2;100;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;209;2;216;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all dictionary ege data.;;d1,210;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;71;2;109;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictEge.php;f8;72;2;110;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks dictionary ege data.;;d1,73;;b1,0;;mform;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;233;2;236;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes dictionary ege.;;d1,234;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;107;2;110;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;223;2;226;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all dictionary ege.;;d1,224;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;48;2;64;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictEge.php;f8;49;2;65;;;;vpos;;varray;;r&#10;Definition&#10;    delete($form) : array&#10;&#10;Description&#10;     Deletes dictionary ege from database.;;d1,50;;b1,0;;mform;;p">
</treenode>
<treenode node="exists;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;141;2;153;;;;vpos;;vboolean;;r&#10;Definition&#10;    exists()&#10;&#10;Description&#10;     Checks if dictionary ege exists.;;d1,142;;b1,0;;m">
</treenode>
<treenode node="existsEge;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;180;2;191;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsEge()&#10;&#10;Description&#10;     Checks if dictionary ege used in ege.;;d1,181;;b1,0;;m">
</treenode>
<treenode node="existsExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;160;2;173;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsExcept()&#10;&#10;Description&#10;     Checks if dictionary ege exists except this ID.;;d1,161;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;35;2;41;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictEge.php;f8;36;2;42;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;102;2;108;;;;vpos;;varray;;r&#10;Definition&#10;    get()&#10;&#10;Description&#10;     Gets dictionary ege by ID.;;d1,103;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;59;2;62;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;92;2;95;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all dictionary ege.;;d1,93;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;69;2;75;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;115;2;121;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets dictionary ege by code.;;d1,116;;b1,0;;m">
</treenode>
<treenode node="getByDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;128;2;134;;;;vpos;;varray;;r&#10;Definition&#10;    getByDescription()&#10;&#10;Description&#10;     Gets dictionary ege by description.;;d1,129;;b1,0;;m">
</treenode>
<treenode node="getGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;82;2;85;;;;vpos;;varray;;r&#10;Definition&#10;    getGrid()&#10;&#10;Description&#10;     Gets all dictionary ege for GRID.;;d1,83;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;59;2;75;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Educlevels doctypes grid.;;d1,60;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;30;2;52;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;18;2;28;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictEge.php;f8;19;2;29;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;30;2;52;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Dictionary ege rules.;;d1,31;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;82;2;86;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;198;2;202;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves dictionary ege data to database.;;d1,199;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictEntranceExams;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEntrance.php;f0;6;1;40;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEntranceExams.php;f0;6;1;42;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEntrance.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEntranceExams.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_entrance_exams&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEntrance.php;f8;20;2;23;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEntranceExams.php;f8;20;2;23;;;;vpos;;v;;r;;d1,21;;b1,0;;m">
</treenode>
<treenode node="getByCampaignGroup;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEntrance.php;f8;30;2;39;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEntranceExams.php;f8;30;2;41;;;;vpos;;varray;;r&#10;Definition&#10;    getByCampaignGroup()&#10;&#10;Description&#10;     Gets entrance exams by campaign/group.;;d1,31;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictFinances;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictFinances.php;f0;6;1;345;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictFinances.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_finances&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;24;2;27;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictFinances.php;f8;24;2;27;;;;vpos;;v;;r;;d1,25;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;336;2;339;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictFinances.php;f8;341;2;344;;;;vpos;;v;;r;;d1,342;;b1,0;;m">
</treenode>
<treenode node="changeAbbr;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;186;2;191;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictFinances.php;f8;190;2;196;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAbbr()&#10;&#10;Description&#10;     Changes finance abbr.;;d1,191;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;162;2;167;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictFinances.php;f8;164;2;170;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes finance code.;;d1,165;;b1,0;;m">
</treenode>
<treenode node="changeDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;174;2;179;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictFinances.php;f8;177;2;183;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeDescription()&#10;&#10;Description&#10;     Changes finance description.;;d1,178;;b1,0;;m">
</treenode>
<treenode node="changeIsfolder;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;138;2;143;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictFinances.php;f8;138;2;144;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeIsfolder()&#10;&#10;Description&#10;     Changes finance isfolder.;;d1,139;;b1,0;;m">
</treenode>
<treenode node="changeParent;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;150;2;155;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictFinances.php;f8;151;2;157;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeParent()&#10;&#10;Description&#10;     Changes finance parent.;;d1,152;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;198;2;201;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictFinances.php;f8;203;2;206;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all finances.;;d1,204;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;87;2;94;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictFinances.php;f8;87;2;94;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all finances.;;d1,88;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;114;2;120;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictFinances.php;f8;114;2;120;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets finance by code.;;d1,115;;b1,0;;m">
</treenode>
<treenode node="getByGuid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;101;2;107;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictFinances.php;f8;101;2;107;;;;vpos;;varray;;r&#10;Definition&#10;    getByGuid()&#10;&#10;Description&#10;     Gets finance by GUID.;;d1,102;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;208;2;334;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictFinances.php;f8;213;2;339;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads finances.;;d1,214;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;34;2;80;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictFinances.php;f8;34;2;80;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Finances rules.;;d1,35;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;127;2;131;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictFinances.php;f8;127;2;131;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves finance data to database.;;d1,128;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictForeignLangs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictForeignLangs.php;f0;7;1;49;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f0;6;1;346;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_foreign_langs&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;15;2;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;23;2;26;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictForeignLangs.php;f8;15;2;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;23;2;26;;;;vpos;;v;;r;;d1,24;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;293;2;296;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;342;2;345;;;;vpos;;v;;r;;d1,343;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;145;2;150;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;191;2;197;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes foreign language code.;;d1,192;;b1,0;;m">
</treenode>
<treenode node="changeDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;157;2;162;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;204;2;210;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeDescription()&#10;&#10;Description&#10;     Changes foreign language description.;;d1,205;;b1,0;;m">
</treenode>
<treenode node="changeIsfolder;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;121;2;126;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;165;2;171;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeIsfolder()&#10;&#10;Description&#10;     Changes foreign language isfolder.;;d1,166;;b1,0;;m">
</treenode>
<treenode node="changeParent;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;133;2;138;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;178;2;184;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeParent()&#10;&#10;Description&#10;     Changes foreign language parent.;;d1,179;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;169;2;172;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;217;2;220;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all foreign languages.;;d1,218;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;124;2;127;;;;vpos;;varray;;r&#10;Definition&#10;    get()&#10;&#10;Description&#10;     Gets foreign language by ID.;;d1,125;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;80;2;83;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;80;2;88;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all foreign languages.;;d1,81;;b1,0;;m">
</treenode>
<treenode node="getBsu;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;95;2;104;;;;vpos;;varray;;r&#10;Definition&#10;    getBsu()&#10;&#10;Description&#10;     Gets BSU foreign languages.;;d1,96;;b1,0;;m">
</treenode>
<treenode node="getBsuNot;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;111;2;117;;;;vpos;;varray;;r&#10;Definition&#10;    getBsuNot()&#10;&#10;Description&#10;     Gets BSU not studied.;;d1,112;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;100;2;103;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;144;2;147;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets foreign language by code.;;d1,145;;b1,0;;m">
</treenode>
<treenode node="getByGuid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;90;2;93;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;134;2;137;;;;vpos;;varray;;r&#10;Definition&#10;    getByGuid()&#10;&#10;Description&#10;     Gets foreign language by GUID.;;d1,135;;b1,0;;m">
</treenode>
<treenode node="getForeignLangsBsuJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictForeignLangs.php;f8;40;2;48;;;;vpos;;vJSON;;r&#10;Definition&#10;    getForeignLangsBsuJSON() : string&#10;&#10;Description&#10;     Gets BSU foreign languages JSON.;;d1,41;;b1,0;;m">
</treenode>
<treenode node="getForeignLangsJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;25;2;33;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictForeignLangs.php;f8;25;2;33;;;;vpos;;vJSON;;r&#10;Definition&#10;    getForeignLangsJSON() : string&#10;&#10;Description&#10;     Gets foreign languages JSON.;;d1,26;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;179;2;291;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;227;2;340;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads foreign languages.;;d1,228;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;33;2;73;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;33;2;73;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Foreign languages rules.;;d1,34;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;110;2;114;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;154;2;158;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves foreign language data to database.;;d1,155;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictIndAchievs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f0;6;1;356;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="IA_BSU;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f6;23;13;23;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f6;23;13;23;;;;vpos;;v;;r[&apos;000000002&apos;, &apos;000000003&apos;, &apos;000000004&apos;, &apos;000000005&apos;, &apos;000000010&apos;, &apos;000000015&apos;, &apos;000000017&apos;, &apos;000000022&apos;, &apos;000000023&apos;, &apos;000000031&apos;, &apos;000000032&apos;, &apos;000000035&apos;, &apos;000000039&apos;, &apos;000000040&apos;, &apos;000000041&apos;, &apos;000000042&apos;, &apos;000000044&apos;, &apos;000000045&apos;, &apos;000000046&apos;, &apos;000000047&apos;, &apos;000000048&apos;, &apos;000000049&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_ind_achievs&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;27;2;30;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;27;2;30;;;;vpos;;v;;r;;d1,28;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;346;2;349;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;352;2;355;;;;vpos;;v;;r;;d1,353;;b1,0;;m">
</treenode>
<treenode node="changeAbbr;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;183;2;188;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;186;2;192;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAbbr()&#10;&#10;Description&#10;     Changes individual achievment abbr.;;d1,187;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;147;2;152;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;147;2;153;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes individual achievment code.;;d1,148;;b1,0;;m">
</treenode>
<treenode node="changeConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;195;2;200;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;199;2;205;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeConfirm()&#10;&#10;Description&#10;     Changes individual achievment confirm.;;d1,200;;b1,0;;m">
</treenode>
<treenode node="changeDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;159;2;164;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;160;2;166;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeDescription()&#10;&#10;Description&#10;     Changes individual achievment description.;;d1,161;;b1,0;;m">
</treenode>
<treenode node="changeNumb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;171;2;176;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;173;2;179;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeNumb()&#10;&#10;Description&#10;     Changes individual achievment numb.;;d1,174;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;207;2;210;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;212;2;215;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all individual achievments.;;d1,213;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;96;2;103;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;96;2;103;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all individual achievments.;;d1,97;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;123;2;129;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;123;2;129;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets individual achievment by code.;;d1,124;;b1,0;;m">
</treenode>
<treenode node="getByGuid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;110;2;116;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;110;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    getByGuid()&#10;&#10;Description&#10;     Gets individual achievment by GUID.;;d1,111;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;217;2;344;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;222;2;350;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads individual achievments.;;d1,223;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;37;2;89;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;37;2;89;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Individual achievments rules.;;d1,38;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;136;2;140;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;136;2;140;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves individual achievment data to database.;;d1,137;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictIndAchievsAc;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f0;6;1;213;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f0;6;1;210;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_ind_achievs_ac&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;21;2;24;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;21;2;24;;;;vpos;;v;;r;;d1,22;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;209;2;212;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;206;2;209;;;;vpos;;v;;r;;d1,207;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;115;2;122;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;114;2;118;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all IAbyAC data.;;d1,115;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;129;2;132;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;125;2;128;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all IAbyAC.;;d1,126;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;66;2;69;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;66;2;69;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all IAbyAC.;;d1,67;;b1,0;;m">
</treenode>
<treenode node="getByCampaign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;90;2;96;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;90;2;96;;;;vpos;;varray;;r&#10;Definition&#10;    getByCampaign()&#10;&#10;Description&#10;     Gets individual achievments by admission campaign.;;d1,91;;b1,0;;m">
</treenode>
<treenode node="getOne;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;76;2;83;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;76;2;83;;;;vpos;;varray;;r&#10;Definition&#10;    getOne()&#10;&#10;Description&#10;     Gets one IAbyAC.;;d1,77;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;139;2;207;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;135;2;204;;;;vpos;;varray;;r&#10;Definition&#10;    load($xml, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads IAbyAC.;;d1,136;;b1,0;;mxml;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;31;2;59;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;31;2;59;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     IAbyAC rules.;;d1,32;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;103;2;108;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;103;2;107;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves IAbyAC data to database.;;d1,104;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictionaryManager;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictManager.php;f0;6;1;46;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictManager.php;f0;10;1;63;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictionaryManager.php;f0;10;1;235;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f0;6;1;300;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="ROLE_LIST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f6;19;16;19;;;;vpos;;v;;r[&#10;      [&apos;code&apos; =&gt; 0, &apos;description&apos; =&gt; &apos;OData&apos;],&#10;      [&apos;code&apos; =&gt; 1, &apos;description&apos; =&gt; &apos;WSDL&apos;]&#10;      ];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f6;12;17;12;;;;vpos;;v;;r&apos;dictionary_manager&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_ODATA;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f6;14;17;14;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_ODATA_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f6;15;22;15;;;;vpos;;v;;r&apos;OData&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_WSDL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f6;16;16;16;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_WSDL_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f6;17;21;17;;;;vpos;;v;;r&apos;WSDL&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;17;2;20;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictManager.php;f8;17;2;20;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f8;36;2;39;;;;vpos;;v;;r;;d1,37;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;42;2;45;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictManager.php;f8;42;2;45;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f8;296;2;299;;;;vpos;;v;;r;;d1,297;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f8;277;2;284;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all dictionary data.;;d1,278;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictionaryManager.php;f8;189;2;234;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks dictionary data.;;d1,190;;b1,0;;mform;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f8;291;2;294;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes dictionary.;;d1,292;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictionaryManager.php;f8;116;2;128;;;;vpos;;varray;;r&#10;Definition&#10;    delete($form) : array&#10;&#10;Description&#10;     Deletes dictionary from database.;;d1,117;;b1,0;;mform;;p">
</treenode>
<treenode node="existsCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f8;192;2;203;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsCode()&#10;&#10;Description&#10;     Checks if dictionary code exists.;;d1,193;;b1,0;;m">
</treenode>
<treenode node="existsCodeExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f8;210;2;222;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsCodeExcept()&#10;&#10;Description&#10;     Checks if dictionary code exists except this ID.;;d1,211;;b1,0;;m">
</treenode>
<treenode node="existsDescriptionExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f8;247;2;259;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsDescriptionExcept()&#10;&#10;Description&#10;     Checks if dictionary name exists except this ID.;;d1,248;;b1,0;;m">
</treenode>
<treenode node="existsName;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f8;229;2;240;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsName()&#10;&#10;Description&#10;     Checks if dictionary name exists.;;d1,230;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictionaryManager.php;f8;104;2;109;;;;vpos;;varray;;r&#10;Definition&#10;    get($id)&#10;&#10;Description&#10;     Gets dictionary from database.;;d1,105;;b1,0;;mid;;p">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictManager.php;f8;27;2;30;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f8;169;2;172;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all dictionaries.;;d1,170;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictManager.php;f8;37;2;40;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets dictionary by code.;;d1,38;;b1,0;;m">
</treenode>
<treenode node="getById;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f8;179;2;185;;;;vpos;;varray;;r&#10;Definition&#10;    getById()&#10;&#10;Description&#10;     Gets dictionary by id.;;d1,180;;b1,0;;m">
</treenode>
<treenode node="getDictsAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;27;2;30;;;;vpos;;varray;;r&#10;Definition&#10;    getDictsAll()&#10;&#10;Description&#10;     Gets all dictionaries.;;d1,28;;b1,0;;m">
</treenode>
<treenode node="getDictsByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;37;2;40;;;;vpos;;varray;;r&#10;Definition&#10;    getDictsByCode()&#10;&#10;Description&#10;     Gets dictionary by code.;;d1,38;;b1,0;;m">
</treenode>
<treenode node="getGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f8;158;2;162;;;;vpos;;varray;;r&#10;Definition&#10;    getGrid()&#10;&#10;Description&#10;     Gets all dictionaries for GRID.;;d1,159;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f8;111;2;151;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Dictionary manager grid.;;d1,112;;b1,0;;m">
</treenode>
<treenode node="renew;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictManager.php;f8;38;2;62;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;38;2;85;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictionaryManager.php;f8;135;2;182;;;;vpos;;varray;;r&#10;Definition&#10;    renew($form)&#10;&#10;Description&#10;     Renews dictionary data.;;d1,136;;b1,0;;mform;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictManager.php;f8;21;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;21;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f8;46;2;104;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Dictionary manager rules.;;d1,47;;b1,0;;m">
</treenode>
<treenode node="rules_add;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictionaryManager.php;f8;21;2;80;;;;vpos;;varray;;r&#10;Definition&#10;    rules_add()&#10;&#10;Description&#10;     Dictionary manager add rules.;;d1,22;;b1,0;;m">
</treenode>
<treenode node="rules_sync;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictionaryManager.php;f8;87;2;97;;;;vpos;;varray;;r&#10;Definition&#10;    rules_sync()&#10;&#10;Description&#10;     Dictionary manager sync rules.;;d1,88;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f8;266;2;270;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves dictionary data to database.;;d1,267;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictionaryManagerLog;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManagerLog.php;f0;6;1;148;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManagerLog.php;f6;12;17;12;;;;vpos;;v;;r&apos;dictionary_manager_log&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManagerLog.php;f8;24;2;27;;;;vpos;;v;;r;;d1,25;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManagerLog.php;f8;144;2;147;;;;vpos;;v;;r;;d1,145;;b1,0;;m">
</treenode>
<treenode node="getGridByDict;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManagerLog.php;f8;123;2;129;;;;vpos;;varray;;r&#10;Definition&#10;    getGridByDict()&#10;&#10;Description&#10;     Gets all dictionary logs by dictionary for GRID.;;d1,124;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManagerLog.php;f8;87;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Dictionary manager log grid.;;d1,88;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManagerLog.php;f8;34;2;80;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Dictionary manager log rules.;;d1,35;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManagerLog.php;f8;136;2;142;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves dictionary manager log data to database.;;d1,137;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictScans;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f0;6;1;399;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictScans.php;f0;7;1;182;;;;vpos;;vModel;;c;;r;;d0,8;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_scans&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;26;2;29;;;;vpos;;v;;r;;d1,27;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;395;2;398;;;;vpos;;v;;r;;d1,396;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;363;2;370;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all dictionary scans data.;;d1,364;;b1,0;;m">
</treenode>
<treenode node="changeNumb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;377;2;383;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeNumb()&#10;&#10;Description&#10;     Changes dictionary scans numb.;;d1,378;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;105;2;177;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictScans.php;f8;105;2;181;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks dictionary scans data.;;d1,106;;b1,0;;mform;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;390;2;393;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes dictionary scans.;;d1,391;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;82;2;98;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictScans.php;f8;82;2;98;;;;vpos;;varray;;r&#10;Definition&#10;    delete($form) : array&#10;&#10;Description&#10;     Deletes dictionary scans from database.;;d1,83;;b1,0;;mform;;p">
</treenode>
<treenode node="existsCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;256;2;268;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsCode()&#10;&#10;Description&#10;     Checks if dictionary scans code exists.;;d1,257;;b1,0;;m">
</treenode>
<treenode node="existsCodeExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;275;2;288;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsCodeExcept()&#10;&#10;Description&#10;     Checks if dictionary scans code exists except this ID.;;d1,276;;b1,0;;m">
</treenode>
<treenode node="existsName;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;295;2;307;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsName()&#10;&#10;Description&#10;     Checks if dictionary scans name exists.;;d1,296;;b1,0;;m">
</treenode>
<treenode node="existsNameExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;314;2;327;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsNameExcept()&#10;&#10;Description&#10;     Checks if dictionary scans name exists except this ID.;;d1,315;;b1,0;;m">
</treenode>
<treenode node="existsScans;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;334;2;345;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsScans()&#10;&#10;Description&#10;     Checks if dictionary scans used in scans.;;d1,335;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;70;2;75;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;210;2;216;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictScans.php;f8;70;2;75;;;;vpos;;varray;;r&#10;Definition&#10;    get($id)&#10;&#10;Description&#10;     Gets dictionary scans from database.;;d1,71;;b1,0;;mid;;p">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;169;2;172;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all dictionary scans.;;d1,170;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;223;2;230;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets dictionary scans by code.;;d1,224;;b1,0;;m">
</treenode>
<treenode node="getByDocument;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;179;2;187;;;;vpos;;varray;;r&#10;Definition&#10;    getByDocument()&#10;&#10;Description&#10;     Gets dictionary scans by document.;;d1,180;;b1,0;;m">
</treenode>
<treenode node="getByDocumentRequired;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;194;2;203;;;;vpos;;varray;;r&#10;Definition&#10;    getByDocumentRequired()&#10;&#10;Description&#10;     Gets required dictionary scans by document.;;d1,195;;b1,0;;m">
</treenode>
<treenode node="getGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;128;2;135;;;;vpos;;varray;;r&#10;Definition&#10;    getGrid()&#10;&#10;Description&#10;     Gets all dictionary scans for GRID.;;d1,129;;b1,0;;m">
</treenode>
<treenode node="getNumbMax;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;237;2;249;;;;vpos;;vint;;r&#10;Definition&#10;    getNumbMax() : int&#10;&#10;Description&#10;     Gets dictionary scans max numb by document.;;d1,238;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;89;2;121;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Dictionary scans grid.;;d1,90;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;18;2;63;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;36;2;82;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictScans.php;f8;18;2;63;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Dictionary scans rules.;;d1,19;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;352;2;356;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves dictionary scans data to database.;;d1,353;;b1,0;;m">
</treenode>
<treenode node="syncNumbs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;142;2;162;;;;vpos;;vvoid;;r&#10;Definition&#10;    syncNumbs()&#10;&#10;Description&#10;     Syncs dictionary scans numbs for document.;;d1,143;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictSpeciality;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f0;6;1;410;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_speciality&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;40;2;43;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;40;2;43;;;;vpos;;v;;r;;d1,41;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;361;2;364;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;406;2;409;;;;vpos;;v;;r;;d1,407;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;239;2;252;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;284;2;297;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all speciality data.;;d1,285;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;259;2;262;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;304;2;307;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all specialities.;;d1,305;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;199;2;202;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;199;2;206;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all specialities.;;d1,200;;b1,0;;m">
</treenode>
<treenode node="getAllFirst;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;213;2;220;;;;vpos;;varray;;r&#10;Definition&#10;    getAllFirst()&#10;&#10;Description&#10;     Gets all specialities of the first education.;;d1,214;;b1,0;;m">
</treenode>
<treenode node="getAllSecond;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;227;2;234;;;;vpos;;varray;;r&#10;Definition&#10;    getAllSecond()&#10;&#10;Description&#10;     Gets all specialities of the second education.;;d1,228;;b1,0;;m">
</treenode>
<treenode node="getById;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;260;2;266;;;;vpos;;varray;;r&#10;Definition&#10;    getById()&#10;&#10;Description&#10;     Gets speciality by ID.;;d1,261;;b1,0;;m">
</treenode>
<treenode node="getOne;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;209;2;221;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;241;2;253;;;;vpos;;varray;;r&#10;Definition&#10;    getOne()&#10;&#10;Description&#10;     Gets one speciality.;;d1,242;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;269;2;359;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;314;2;404;;;;vpos;;varray;;r&#10;Definition&#10;    load($xml, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads specialities.;;d1,315;;b1,0;;mxml;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;50;2;192;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;50;2;192;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Dictionary speciality rules.;;d1,51;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;228;2;232;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;273;2;277;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves speciality data to database.;;d1,274;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictTestingScopes;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f0;6;1;355;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_testing_scopes&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;23;2;26;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;23;2;26;;;;vpos;;v;;r;;d1,24;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;333;2;336;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;351;2;354;;;;vpos;;v;;r;;d1,352;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;185;2;190;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;200;2;206;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes testing scope code.;;d1,201;;b1,0;;m">
</treenode>
<treenode node="changeDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;197;2;202;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;213;2;219;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeDescription()&#10;&#10;Description&#10;     Changes testing scope description.;;d1,214;;b1,0;;m">
</treenode>
<treenode node="changeIsfolder;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;161;2;166;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;174;2;180;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeIsfolder()&#10;&#10;Description&#10;     Changes testing scope isfolder.;;d1,175;;b1,0;;m">
</treenode>
<treenode node="changeParent;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;173;2;178;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;187;2;193;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeParent()&#10;&#10;Description&#10;     Changes testing scope parent.;;d1,188;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;209;2;212;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;226;2;229;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all testing scopes.;;d1,227;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;80;2;83;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;80;2;83;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all testing scopes.;;d1,81;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;100;2;103;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;100;2;103;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets testing scope by code.;;d1,101;;b1,0;;m">
</treenode>
<treenode node="getByGuid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;90;2;93;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;90;2;93;;;;vpos;;varray;;r&#10;Definition&#10;    getByGuid()&#10;&#10;Description&#10;     Gets testing scope by GUID.;;d1,91;;b1,0;;m">
</treenode>
<treenode node="getEge;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;110;2;116;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;110;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    getEge()&#10;&#10;Description&#10;     Gets EGE.;;d1,111;;b1,0;;m">
</treenode>
<treenode node="getEntranceExams;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;136;2;143;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;149;2;156;;;;vpos;;varray;;r&#10;Definition&#10;    getEntranceExams()&#10;&#10;Description&#10;     Gets entrance exams.;;d1,150;;b1,0;;m">
</treenode>
<treenode node="getExam;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;123;2;129;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;123;2;129;;;;vpos;;varray;;r&#10;Definition&#10;    getExam()&#10;&#10;Description&#10;     Gets EXAM.;;d1,124;;b1,0;;m">
</treenode>
<treenode node="getTest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;136;2;142;;;;vpos;;varray;;r&#10;Definition&#10;    getTest()&#10;&#10;Description&#10;     Gets TEST.;;d1,137;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;219;2;331;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;236;2;349;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads testing scopes.;;d1,237;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;33;2;73;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;33;2;73;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Testing scopes rules.;;d1,34;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;150;2;154;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;163;2;167;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves testing scope data to database.;;d1,164;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictUniversity;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictUniversity.php;f0;7;1;123;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f0;6;1;254;;;;vpos;;vModel;;c;;r;;d0,8;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_university&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;20;2;23;;;;vpos;;v;;r;;d1,21;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;250;2;253;;;;vpos;;v;;r;;d1,251;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;221;2;228;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all dictionary university data.;;d1,222;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;80;2;122;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictUniversity.php;f8;80;2;122;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks dictionary university data.;;d1,81;;b1,0;;mform;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;245;2;248;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes dictionary university.;;d1,246;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;235;2;238;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all dictionary university.;;d1,236;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;57;2;73;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictUniversity.php;f8;57;2;73;;;;vpos;;varray;;r&#10;Definition&#10;    delete($form) : array&#10;&#10;Description&#10;     Deletes dictionary university from database.;;d1,58;;b1,0;;mform;;p">
</treenode>
<treenode node="existsApplications;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;192;2;203;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsApplications()&#10;&#10;Description&#10;     Checks if dictionary university used in applications.;;d1,193;;b1,0;;m">
</treenode>
<treenode node="existsCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;118;2;129;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsCode()&#10;&#10;Description&#10;     Checks if dictionary university code exists.;;d1,119;;b1,0;;m">
</treenode>
<treenode node="existsCodeExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;136;2;148;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsCodeExcept()&#10;&#10;Description&#10;     Checks if dictionary university code exists except this ID.;;d1,137;;b1,0;;m">
</treenode>
<treenode node="existsDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;155;2;166;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsDescription()&#10;&#10;Description&#10;     Checks if dictionary university description exists.;;d1,156;;b1,0;;m">
</treenode>
<treenode node="existsDescriptionExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;173;2;185;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsDescriptionExcept()&#10;&#10;Description&#10;     Checks if dictionary university description exists except this ID.;;d1,174;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;45;2;50;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictUniversity.php;f8;45;2;50;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;92;2;98;;;;vpos;;varray;;r&#10;Definition&#10;    get($id)&#10;&#10;Description&#10;     Gets dictionary university from database.;;d1,46;;b1,0;;mid;;p">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;82;2;85;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all dictionary university.;;d1,83;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;105;2;111;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets dictionary university by code.;;d1,106;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;59;2;75;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Dictionary university grid.;;d1,60;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;18;2;38;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictUniversity.php;f8;18;2;38;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;30;2;52;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Dictionary university rules.;;d1,19;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;210;2;214;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves dictionary university data to database.;;d1,211;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_Docs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_Docs.php;f0;7;1;132;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f0;6;1;259;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f6;12;17;12;;;;vpos;;v;;r&apos;docs&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;16;2;19;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f8;21;2;24;;;;vpos;;v;;r;;d1,22;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;34;2;37;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f8;255;2;258;;;;vpos;;v;;r;;d1,256;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f8;236;2;243;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all documents data.;;d1,237;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;88;2;127;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_Docs.php;f8;88;2;131;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks documents data.;;d1,89;;b1,0;;mform;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f8;250;2;253;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes documents.;;d1,251;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;65;2;81;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_Docs.php;f8;65;2;81;;;;vpos;;varray;;r&#10;Definition&#10;    delete($form) : array&#10;&#10;Description&#10;     Deletes documents from database.;;d1,66;;b1,0;;mform;;p">
</treenode>
<treenode node="existsCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f8;133;2;144;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsCode()&#10;&#10;Description&#10;     Checks if documents code exists.;;d1,134;;b1,0;;m">
</treenode>
<treenode node="existsCodeExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f8;151;2;163;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsCodeExcept()&#10;&#10;Description&#10;     Checks if documents code exists except this ID.;;d1,152;;b1,0;;m">
</treenode>
<treenode node="existsDictScans;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f8;207;2;218;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsDictScans()&#10;&#10;Description&#10;     Checks if documents used in dictionary scans.;;d1,208;;b1,0;;m">
</treenode>
<treenode node="existsName;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f8;170;2;181;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsName()&#10;&#10;Description&#10;     Checks if documents name exists.;;d1,171;;b1,0;;m">
</treenode>
<treenode node="existsNameExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f8;188;2;200;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsNameExcept()&#10;&#10;Description&#10;     Checks if documents name exists except this ID.;;d1,189;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;53;2;58;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_Docs.php;f8;53;2;58;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f8;107;2;113;;;;vpos;;varray;;r&#10;Definition&#10;    get()&#10;&#10;Description&#10;     Gets documents by ID.;;d1,108;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f8;93;2;100;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all documents.;;d1,94;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;26;2;32;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f8;120;2;126;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets document by code.;;d1,121;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f8;66;2;86;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Documents grid.;;d1,67;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;18;2;46;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_Docs.php;f8;18;2;46;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f8;31;2;59;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Documents rules.;;d1,32;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f8;225;2;229;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves documents data to database.;;d1,226;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DocsEduc;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f0;7;1;450;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DocsEduc.php;f0;16;1;301;;;;vpos;;vModel;;c;;r;;d0,17;;b0,0;;m">
<treenode node="CERTIFICATES;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f6;29;19;29;;;;vpos;;v;;r[&apos;000000026&apos;, &apos;000000088&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CLASSES_11;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f6;36;17;36;;;;vpos;;v;;r[&apos;000000026&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CLASSES_9;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f6;35;16;35;;;;vpos;;v;;r[&apos;000000088&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DIPLOMA_BACHELOR;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f6;31;23;31;;;;vpos;;v;;r&apos;000000022&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DIPLOMA_MAGISTER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f6;34;23;34;;;;vpos;;v;;r&apos;000000023&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DIPLOMA_SPECIALIST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f6;32;25;32;;;;vpos;;v;;r&apos;000000024&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DIPLOMA_SPECIALIST_DIPLOMA;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f6;33;33;33;;;;vpos;;v;;r&apos;000000025&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DIPLOMAS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f6;30;15;30;;;;vpos;;v;;r[&apos;000000022&apos;, &apos;000000023&apos;, &apos;000000024&apos;, &apos;000000025&apos;, &apos;000000046&apos;, &apos;000000048&apos;, &apos;000000054&apos;, &apos;000000153&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="HIGH_AFTER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f6;38;17;38;;;;vpos;;v;;r[&apos;000000022&apos;, &apos;000000023&apos;, &apos;000000024&apos;, &apos;000000025&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="HIGH_BEFORE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f6;37;18;37;;;;vpos;;v;;r[&apos;000000026&apos;, &apos;000000046&apos;, &apos;000000048&apos;, &apos;000000088&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f6;13;17;13;;;;vpos;;v;;r&apos;docs_educ&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;42;2;45;;;;vpos;;v;;r;;d1,43;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;446;2;449;;;;vpos;;v;;r;;d1,447;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;426;2;431;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all education document data.;;d1,427;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DocsEduc.php;f8;198;2;280;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks education document data.;;d1,199;;b1,0;;mform;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;438;2;444;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes education document.;;d1,439;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DocsEduc.php;f8;157;2;174;;;;vpos;;varray;;r&#10;Definition&#10;    delete($form) : array&#10;&#10;Description&#10;     Deletes education document from database.;;d1,158;;b1,0;;mform;;p">
</treenode>
<treenode node="existsAppGo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;392;2;405;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsAppGo() : bool&#10;&#10;Description&#10;     Checks if education document used in applications &quot;GO&quot;.;;d1,393;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;185;2;228;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DocsEduc.php;f8;145;2;150;;;;vpos;;varray;;r&#10;Definition&#10;    get($id)&#10;&#10;Description&#10;     Gets education document from database.;;d1,146;;b1,0;;mid;;p">
</treenode>
<treenode node="getByNumb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;348;2;362;;;;vpos;;varray;;r&#10;Definition&#10;    getByNumb()&#10;&#10;Description&#10;     Gets education document by series/numb.;;d1,349;;b1,0;;m">
</treenode>
<treenode node="getByNumbExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;369;2;385;;;;vpos;;varray;;r&#10;Definition&#10;    getByNumbExcept()&#10;&#10;Description&#10;     Gets education document by series/numb except this ID.;;d1,370;;b1,0;;m">
</treenode>
<treenode node="getByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;284;2;290;;;;vpos;;varray;;r&#10;Definition&#10;    getByUser()&#10;&#10;Description&#10;     Gets education documents by user.;;d1,285;;b1,0;;m">
</treenode>
<treenode node="getByUserGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;334;2;341;;;;vpos;;varray;;r&#10;Definition&#10;    getByUserGrid()&#10;&#10;Description&#10;     Gets education documents by user for GRID.;;d1,335;;b1,0;;m">
</treenode>
<treenode node="getByUserSl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;297;2;304;;;;vpos;;varray;;r&#10;Definition&#10;    getByUserSl()&#10;&#10;Description&#10;     Gets education documents by user for SelectList.;;d1,298;;b1,0;;m">
</treenode>
<treenode node="getByUserSlCampaign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;311;2;327;;;;vpos;;varray;;r&#10;Definition&#10;    getByUserSlCampaign($campaign_code)&#10;&#10;Description&#10;     Gets campaign education documents by user for SelectList.;;d1,312;;b1,0;;mcampaign_code;;p">
</treenode>
<treenode node="getDiplomasByUserCampaignJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DocsEduc.php;f8;287;2;300;;;;vpos;;vJSON;;r&#10;Definition&#10;    getDiplomasByUserCampaignJSON($campaign_code) : string&#10;&#10;Description&#10;     Gets education documents by user campaign JSON.;;d1,288;;b1,0;;mcampaign_code;;p">
</treenode>
<treenode node="getForField;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;271;2;277;;;;vpos;;varray;;r&#10;Definition&#10;    getForField()&#10;&#10;Description&#10;     Gets education documents by ID for single field.;;d1,272;;b1,0;;m">
</treenode>
<treenode node="getForPdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;235;2;264;;;;vpos;;varray;;r&#10;Definition&#10;    getForPdf()&#10;&#10;Description&#10;     Gets education document by ID for PDF.;;d1,236;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;141;2;178;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Education documents grid.;;d1,142;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;52;2;134;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DocsEduc.php;f8;27;2;111;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Education documents rules.;;d1,28;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;412;2;419;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves education document data to database.;;d1,413;;b1,0;;m">
</treenode>
<treenode node="unsetScans;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DocsEduc.php;f8;181;2;191;;;;vpos;;varray;;r&#10;Definition&#10;    unsetScans($form)&#10;&#10;Description&#10;     Unsets education document files.;;d1,182;;b1,0;;mform;;p">
</treenode>
<treenode node="validateFormAdvanced;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DocsEduc.php;f8;118;2;138;;;;vpos;;varray;;r&#10;Definition&#10;    validateFormAdvanced($form)&#10;&#10;Description&#10;     Validates education document advanced.;;d1,119;;b1,0;;mform;;p">
</treenode>
</treenode>
<treenode node="Model_EduclevelsDoctypes;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f0;6;1;245;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_EduclevelsDoctypes.php;f0;9;1;117;;;;vpos;;vModel;;c;;r;;d0,10;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f6;12;17;12;;;;vpos;;v;;r&apos;educlevels_doctypes&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;22;2;25;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;22;2;25;;;;vpos;;v;;r;;d1,23;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;217;2;220;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;241;2;244;;;;vpos;;v;;r;;d1,242;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;198;2;205;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;222;2;229;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all educlevels doctypes data.;;d1,223;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;74;2;114;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_EduclevelsDoctypes.php;f8;76;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks educlevels doctypes data.;;d1,77;;b1,0;;mform;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;212;2;215;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;236;2;239;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes educlevels doctypes.;;d1,237;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;58;2;67;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_EduclevelsDoctypes.php;f8;60;2;69;;;;vpos;;vboolean;;r&#10;Definition&#10;    delete($form)&#10;&#10;Description&#10;     Deletes educlevels doctypes from database.;;d1,61;;b1,0;;mform;;p">
</treenode>
<treenode node="exists;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;147;2;159;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;171;2;183;;;;vpos;;vboolean;;r&#10;Definition&#10;    exists()&#10;&#10;Description&#10;     Checks if educlevels doctypes exists.;;d1,172;;b1,0;;m">
</treenode>
<treenode node="existsExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;166;2;179;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;190;2;203;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsExcept()&#10;&#10;Description&#10;     Checks if educlevels doctypes exists except this ID.;;d1,191;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;104;2;127;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;46;2;51;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;104;2;127;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_EduclevelsDoctypes.php;f8;48;2;53;;;;vpos;;varray;;r&#10;Definition&#10;    get($id)&#10;&#10;Description&#10;     Gets educlevels doctypes from database.;;d1,49;;b1,0;;mid;;p">
</treenode>
<treenode node="getGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;134;2;140;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;134;2;142;;;;vpos;;varray;;r&#10;Definition&#10;    getGrid()&#10;&#10;Description&#10;     Gets educlevels doctypes for GRID.;;d1,135;;b1,0;;m">
</treenode>
<treenode node="getPayByDocCampaign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;149;2;164;;;;vpos;;varray;;r&#10;Definition&#10;    getPayByDocCampaign($campaign, $docs_educ)&#10;&#10;Description&#10;     Gets pay by document campaign.;;d1,150;;b1,0;;mcampaign;;pdocs_educ;;p">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;73;2;97;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;73;2;97;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Educlevels doctypes grid.;;d1,74;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;32;2;66;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;18;2;39;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;32;2;66;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_EduclevelsDoctypes.php;f8;20;2;41;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Educlevels doctypes rules.;;d1,21;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;186;2;191;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;210;2;215;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves educlevels doctypes data to database.;;d1,211;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_EductypesDoctypes;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f0;6;1;212;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_EductypesDoctypes.php;f0;9;1;117;;;;vpos;;vModel;;c;;r;;d0,10;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f6;12;17;12;;;;vpos;;v;;r&apos;eductypes_doctypes&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;21;2;24;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;21;2;24;;;;vpos;;v;;r;;d1,22;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;206;2;209;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;208;2;211;;;;vpos;;v;;r;;d1,209;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;187;2;194;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;189;2;196;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all eductypes doctypes data.;;d1,190;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;76;2;115;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_EductypesDoctypes.php;f8;76;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks eductypes doctypes data.;;d1,77;;b1,0;;mform;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;201;2;204;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;203;2;206;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes eductypes doctypes.;;d1,204;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;60;2;69;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_EductypesDoctypes.php;f8;60;2;69;;;;vpos;;vboolean;;r&#10;Definition&#10;    delete($form)&#10;&#10;Description&#10;     Deletes eductypes doctypes from database.;;d1,61;;b1,0;;mform;;p">
</treenode>
<treenode node="exists;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;136;2;148;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;138;2;150;;;;vpos;;vboolean;;r&#10;Definition&#10;    exists()&#10;&#10;Description&#10;     Checks if eductypes doctypes exists.;;d1,139;;b1,0;;m">
</treenode>
<treenode node="existsExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;155;2;168;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;157;2;170;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsExcept()&#10;&#10;Description&#10;     Checks if eductypes doctypes exists except this ID.;;d1,158;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;93;2;116;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;48;2;53;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;93;2;116;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_EductypesDoctypes.php;f8;48;2;53;;;;vpos;;varray;;r&#10;Definition&#10;    get($id)&#10;&#10;Description&#10;     Gets eductypes doctypes from database.;;d1,49;;b1,0;;mid;;p">
</treenode>
<treenode node="getGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;123;2;129;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;123;2;131;;;;vpos;;varray;;r&#10;Definition&#10;    getGrid()&#10;&#10;Description&#10;     Gets eductypes doctypes for GRID.;;d1,124;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;66;2;86;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;66;2;86;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Eductypes doctypes grid.;;d1,67;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;31;2;59;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;20;2;41;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;31;2;59;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_EductypesDoctypes.php;f8;20;2;41;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Eductypes doctypes rules.;;d1,21;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;175;2;180;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;177;2;182;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves eductypes doctypes data to database.;;d1,178;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_Ege;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f0;6;1;206;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Ege.php;f0;8;1;104;;;;vpos;;vModel;;c;;r;;d0,9;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f6;12;17;12;;;;vpos;;v;;r&apos;ege&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;24;2;27;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;23;2;26;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;23;2;26;;;;vpos;;v;;r;;d1,24;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;179;2;182;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;187;2;190;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;202;2;205;;;;vpos;;v;;r;;d1,203;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;162;2;167;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;170;2;175;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;172;2;177;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all ege data.;;d1,173;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;51;2;55;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_EgeDisciplines.php;f8;51;2;55;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Ege.php;f8;83;2;103;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks ege data.;;d1,84;;b1,0;;mform;;p">
</treenode>
<treenode node="checkByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;194;2;200;;;;vpos;;varray;;r&#10;Definition&#10;    checkByUser()&#10;&#10;Description&#10;     Checks ege by user.;;d1,195;;b1,0;;m">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;174;2;177;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;182;2;185;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;184;2;187;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes ege.;;d1,185;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;97;2;106;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Ege.php;f8;67;2;76;;;;vpos;;vboolean;;r&#10;Definition&#10;    delete($form)&#10;&#10;Description&#10;     Deletes ege from database.;;d1,68;;b1,0;;mform;;p">
</treenode>
<treenode node="existsRegyear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;138;2;150;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;139;2;151;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsRegyear()&#10;&#10;Description&#10;     Checks if reg_year exists.;;d1,140;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;85;2;90;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;102;2;105;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;103;2;106;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Ege.php;f8;55;2;60;;;;vpos;;varray;;r&#10;Definition&#10;    get($id)&#10;&#10;Description&#10;     Gets ege from database.;;d1,56;;b1,0;;mid;;p">
</treenode>
<treenode node="getByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;123;2;129;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;112;2;118;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;113;2;119;;;;vpos;;varray;;r&#10;Definition&#10;    getByUser()&#10;&#10;Description&#10;     Gets ege by user.;;d1,114;;b1,0;;m">
</treenode>
<treenode node="getByUserGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;136;2;142;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;125;2;131;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;126;2;132;;;;vpos;;varray;;r&#10;Definition&#10;    getByUserGrid()&#10;&#10;Description&#10;     Gets ege by user for GRID.;;d1,127;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;87;2;94;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;80;2;95;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;80;2;96;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Ege grid.;;d1,81;;b1,0;;m">
</treenode>
<treenode node="grid_disciplines;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;101;2;116;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;101;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    grid_disciplines()&#10;&#10;Description&#10;     Ege disciplines grid.;;d1,99;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;34;2;80;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;17;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_EgeDisciplines.php;f8;17;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;33;2;73;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;33;2;73;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Ege.php;f8;19;2;33;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Ege rules.;;d1,20;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;149;2;155;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;157;2;163;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;158;2;165;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves ege data to database.;;d1,159;;b1,0;;m">
</treenode>
<treenode node="unsetScans;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;113;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    unsetScans($form)&#10;&#10;Description&#10;     Unsets education document files.;;d1,65;;b1,0;;mform;;p">
</treenode>
<treenode node="validateFormAdvanced;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Ege.php;f8;40;2;48;;;;vpos;;varray;;r&#10;Definition&#10;    validateFormAdvanced($form)&#10;&#10;Description&#10;     Validates resume advanced.;;d1,41;;b1,0;;mform;;p">
</treenode>
</treenode>
<treenode node="Model_EgeDisciplines;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f0;7;1;262;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_EgeDisciplines.php;f0;9;1;129;;;;vpos;;vModel;;c;;r;;d0,10;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f6;13;17;13;;;;vpos;;v;;r&apos;ege_disciplines&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;27;2;30;;;;vpos;;v;;r;;d1,28;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;258;2;261;;;;vpos;;v;;r;;d1,259;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;224;2;229;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all ege discipline data.;;d1,225;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_EgeDisciplines.php;f8;78;2;128;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks ege discipline data.;;d1,79;;b1,0;;mform;;p">
</treenode>
<treenode node="checkDiscipline;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;246;2;256;;;;vpos;;vboolean;;r&#10;Definition&#10;    checkDiscipline()&#10;&#10;Description&#10;     Checks discipline.;;d1,247;;b1,0;;m">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;236;2;239;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes ege discipline.;;d1,237;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_EgeDisciplines.php;f8;56;2;71;;;;vpos;;varray;;r&#10;Definition&#10;    delete($form)&#10;&#10;Description&#10;     Deletes ege discipline from database.;;d1,57;;b1,0;;mform;;p">
</treenode>
<treenode node="exists;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;145;2;157;;;;vpos;;vboolean;;r&#10;Definition&#10;    exists()&#10;&#10;Description&#10;     Checks if discipline exists.;;d1,146;;b1,0;;m">
</treenode>
<treenode node="existsAppGo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;184;2;203;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsAppGo() : bool&#10;&#10;Description&#10;     Checks if ege discipline used in applications &quot;GO&quot;.;;d1,185;;b1,0;;m">
</treenode>
<treenode node="existsExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;164;2;177;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsExcept()&#10;&#10;Description&#10;     Checks if discipline exists except this ID.;;d1,165;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;109;2;124;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_EgeDisciplines.php;f8;44;2;49;;;;vpos;;varray;;r&#10;Definition&#10;    get($id)&#10;&#10;Description&#10;     Gets ege discipline from database.;;d1,45;;b1,0;;mid;;p">
</treenode>
<treenode node="getGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;131;2;138;;;;vpos;;varray;;r&#10;Definition&#10;    getGrid()&#10;&#10;Description&#10;     Gets ege disciplines for GRID.;;d1,132;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;90;2;102;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Ege disciplines grid.;;d1,91;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;37;2;83;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_EgeDisciplines.php;f8;20;2;37;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Ege disciplines rules.;;d1,21;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;210;2;217;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves ege discipline data to database.;;d1,211;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_ForeignLangs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f0;6;1;180;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f0;6;1;228;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f6;12;17;12;;;;vpos;;v;;r&apos;foreign_langs&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;22;2;25;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;24;2;27;;;;vpos;;v;;r;;d1,25;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;176;2;179;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;224;2;227;;;;vpos;;v;;r;;d1,225;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;159;2;164;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;207;2;212;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all foreign language data.;;d1,208;;b1,0;;m">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;171;2;174;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;219;2;222;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes foreign language.;;d1,220;;b1,0;;m">
</treenode>
<treenode node="existsLang;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;127;2;139;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;174;2;186;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsLang()&#10;&#10;Description&#10;     Checks if lang exists.;;d1,175;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;91;2;94;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;87;2;93;;;;vpos;;varray;;r&#10;Definition&#10;    get()&#10;&#10;Description&#10;     Gets foreign languages by ID.;;d1,88;;b1,0;;m">
</treenode>
<treenode node="getBsuByResumeList;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;158;2;167;;;;vpos;;varray;;r&#10;Definition&#10;    getBsuByResumeList()&#10;&#10;Description&#10;     Gets BSU foreign languages by resume for List.;;d1,159;;b1,0;;m">
</treenode>
<treenode node="getByResume;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;100;2;106;;;;vpos;;varray;;r&#10;Definition&#10;    getByResume()&#10;&#10;Description&#10;     Gets foreign languages by resume.;;d1,101;;b1,0;;m">
</treenode>
<treenode node="getByResumeList;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;145;2;151;;;;vpos;;varray;;r&#10;Definition&#10;    getByResumeList()&#10;&#10;Description&#10;     Gets foreign languages by resume for List.;;d1,146;;b1,0;;m">
</treenode>
<treenode node="getByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;101;2;107;;;;vpos;;varray;;r&#10;Definition&#10;    getByUser()&#10;&#10;Description&#10;     Gets foreign languages by user.;;d1,116;;b1,0;;m">
</treenode>
<treenode node="getByUserGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;114;2;120;;;;vpos;;varray;;r&#10;Definition&#10;    getByUserGrid()&#10;&#10;Description&#10;     Gets foreign languages by resume for GRID.;;d1,129;;b1,0;;m">
</treenode>
<treenode node="getFirstBsuByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;127;2;138;;;;vpos;;varray;;r&#10;Definition&#10;    getFirstBsuByUser()&#10;&#10;Description&#10;     Gets first BSU foreign language by resume.;;d1,128;;b1,0;;m">
</treenode>
<treenode node="getFirstByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;113;2;120;;;;vpos;;varray;;r&#10;Definition&#10;    getFirstByUser()&#10;&#10;Description&#10;     Gets first foreign language by resume.;;d1,114;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;73;2;84;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Foreign languages grid.;;d1,88;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;32;2;66;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;34;2;80;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Foreign languages rules.;;d1,35;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;146;2;152;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;193;2;200;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves foreign language data to database.;;d1,194;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_IndAchiev;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f0;13;1;181;;;;vpos;;vModel;;c;;r;;d0,14;;b0,0;;m">
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;128;2;180;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks education document data.;;d1,129;;b1,0;;mform;;p">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;102;2;111;;;;vpos;;vboolean;;r&#10;Definition&#10;    delete($form)&#10;&#10;Description&#10;     Deletes education document from database.;;d1,103;;b1,0;;mform;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;90;2;95;;;;vpos;;varray;;r&#10;Definition&#10;    get($id)&#10;&#10;Description&#10;     Gets education document from database.;;d1,91;;b1,0;;mid;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;24;2;83;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Education documents rules.;;d1,25;;b1,0;;m">
</treenode>
<treenode node="unsetScans;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;118;2;121;;;;vpos;;varray;;r&#10;Definition&#10;    unsetScans($form)&#10;&#10;Description&#10;     Unsets education document files.;;d1,119;;b1,0;;mform;;p">
</treenode>
</treenode>
<treenode node="Model_IndAchievs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchiev.php;f0;12;1;160;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchievs.php;f0;13;1;182;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f0;7;1;314;;;;vpos;;vDb_Helper;;c;;r;;d0,8;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f6;13;17;13;;;;vpos;;v;;r&apos;ind_achievs&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;26;2;29;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;29;2;32;;;;vpos;;v;;r;;d1,30;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;243;2;246;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;310;2;313;;;;vpos;;v;;r;;d1,311;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;223;2;228;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;290;2;295;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all individual achievment data.;;d1,291;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchiev.php;f8;112;2;159;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchievs.php;f8;118;2;181;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks education document data.;;d1,119;;b1,0;;mform;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;235;2;241;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;302;2;308;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes individual achievment.;;d1,303;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchiev.php;f8;86;2;95;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchievs.php;f8;84;2;101;;;;vpos;;varray;;r&#10;Definition&#10;    delete($form) : array&#10;&#10;Description&#10;     Deletes individual achievment from database.;;d1,85;;b1,0;;mform;;p">
</treenode>
<treenode node="existsAppGo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;255;2;269;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsAppGo() : bool&#10;&#10;Description&#10;     Checks if individual achievment used in applications &quot;GO&quot;.;;d1,256;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchiev.php;f8;74;2;79;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;135;2;154;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchievs.php;f8;72;2;77;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;140;2;159;;;;vpos;;varray;;r&#10;Definition&#10;    get()&#10;&#10;Description&#10;     Gets individual achievment by ID.;;d1,141;;b1,0;;m">
</treenode>
<treenode node="getByNumb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;187;2;203;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;207;2;223;;;;vpos;;varray;;r&#10;Definition&#10;    getByNumb()&#10;&#10;Description&#10;     Gets individual achievment by achiev_type/series/numb.;;d1,208;;b1,0;;m">
</treenode>
<treenode node="getByNumbExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;230;2;248;;;;vpos;;varray;;r&#10;Definition&#10;    getByNumbExcept()&#10;&#10;Description&#10;     Gets individual achievment by achiev_type/series/numb except this ID.;;d1,231;;b1,0;;m">
</treenode>
<treenode node="getByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;161;2;167;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;166;2;172;;;;vpos;;varray;;r&#10;Definition&#10;    getByUser()&#10;&#10;Description&#10;     Gets individual achievments by user.;;d1,167;;b1,0;;m">
</treenode>
<treenode node="getByUserCampaign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;179;2;187;;;;vpos;;varray;;r&#10;Definition&#10;    getByUserCampaign()&#10;&#10;Description&#10;     Gets individual achievments by user/admission campaign.;;d1,180;;b1,0;;m">
</treenode>
<treenode node="getByUserGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;174;2;180;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;194;2;200;;;;vpos;;varray;;r&#10;Definition&#10;    getByUserGrid()&#10;&#10;Description&#10;     Gets individual achievments by user for GRID.;;d1,195;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;101;2;128;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;104;2;133;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Individual achievments grid.;;d1,105;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchiev.php;f8;23;2;67;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;36;2;94;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchievs.php;f8;24;2;65;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;39;2;97;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Individual achievments rules.;;d1,40;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;210;2;216;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;276;2;283;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves individual achievment data to database.;;d1,277;;b1,0;;m">
</treenode>
<treenode node="unsetScans;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchiev.php;f8;102;2;105;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchievs.php;f8;108;2;111;;;;vpos;;varray;;r&#10;Definition&#10;    unsetScans($form)&#10;&#10;Description&#10;     Unsets individual achievment files.;;d1,109;;b1,0;;mform;;p">
</treenode>
</treenode>
<treenode node="Model_Kladr;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f0;6;1;270;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f0;7;1;446;;;;vpos;;vDb_Helper;;c;;r;;d0,8;;b0,0;;m">
<treenode node="AREA;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f6;13;11;13;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f6;14;11;14;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CITY;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f6;14;11;14;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f6;15;11;15;;;;vpos;;v;;r3;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="HOUSE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f6;18;12;18;;;;vpos;;v;;r6;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LOCATION;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f6;15;15;15;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f6;16;15;16;;;;vpos;;v;;r4;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="REGION;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f6;12;13;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f6;13;13;13;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STREET;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f6;16;13;16;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f6;17;13;17;;;;vpos;;v;;r5;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;25;2;28;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;23;2;27;;;;vpos;;v;;r;;d1,24;;b1,0;;m">
</treenode>
<treenode node="getAreaByRegion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;64;2;78;;;;vpos;;varray;;r&#10;Definition&#10;    getAreaByRegion() : array&#10;&#10;Description&#10;     Gets areas by region.;;d1,65;;b1,0;;m">
</treenode>
<treenode node="getAreaByRegionJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;60;2;87;;;;vpos;;vJSON;;r&#10;Definition&#10;    getAreaByRegionJSON($region) : string&#10;&#10;Description&#10;     Gets areas by region JSON.;;d1,61;;b1,0;;mregion;;p">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;35;2;41;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode($code) : array&#10;&#10;Description&#10;     Gets kladr by code.;;d1,36;;b1,0;;mcode;;p">
</treenode>
<treenode node="getByLevelJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;34;2;53;;;;vpos;;vJSON;;r&#10;Definition&#10;    getByLevelJSON($level) : string&#10;&#10;Description&#10;     Gets kladrs by level JSON.;;d1,35;;b1,0;;mlevel;;p">
</treenode>
<treenode node="getCityByArea;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;107;2;123;;;;vpos;;varray;;r&#10;Definition&#10;    getCityByArea() : array&#10;&#10;Description&#10;     Gets cities by area.;;d1,108;;b1,0;;m">
</treenode>
<treenode node="getCityByAreaJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;129;2;158;;;;vpos;;vJSON;;r&#10;Definition&#10;    getCityByAreaJSON($area) : string&#10;&#10;Description&#10;     Gets cities by area JSON.;;d1,130;;b1,0;;marea;;p">
</treenode>
<treenode node="getCityByRegion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;85;2;100;;;;vpos;;varray;;r&#10;Definition&#10;    getCityByRegion() : array&#10;&#10;Description&#10;     Gets cities by region.;;d1,86;;b1,0;;m">
</treenode>
<treenode node="getCityByRegionJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;94;2;122;;;;vpos;;vJSON;;r&#10;Definition&#10;    getCityByRegionJSON($region) : string&#10;&#10;Description&#10;     Gets cities by region JSON.;;d1,95;;b1,0;;mregion;;p">
</treenode>
<treenode node="getHouseByStreetJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;389;2;425;;;;vpos;;vJSON;;r&#10;Definition&#10;    getHouseByStreetJSON($street) : string&#10;&#10;Description&#10;     Gets houses by street JSON.;;d1,390;;b1,0;;mstreet;;p">
</treenode>
<treenode node="getLocationByArea;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;153;2;169;;;;vpos;;varray;;r&#10;Definition&#10;    getLocationByArea() : array&#10;&#10;Description&#10;     Gets locations by area.;;d1,154;;b1,0;;m">
</treenode>
<treenode node="getLocationByAreaJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;239;2;268;;;;vpos;;vJSON;;r&#10;Definition&#10;    getLocationByAreaJSON($area) : string&#10;&#10;Description&#10;     Gets locations by area JSON.;;d1,240;;b1,0;;marea;;p">
</treenode>
<treenode node="getLocationByCity;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;176;2;194;;;;vpos;;varray;;r&#10;Definition&#10;    getLocationByCity() : array&#10;&#10;Description&#10;     Gets locations by city.;;d1,177;;b1,0;;m">
</treenode>
<treenode node="getLocationByCityJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;201;2;232;;;;vpos;;vJSON;;r&#10;Definition&#10;    getLocationByCityJSON($city) : string&#10;&#10;Description&#10;     Gets locations by city JSON.;;d1,202;;b1,0;;mcity;;p">
</treenode>
<treenode node="getLocationByRegion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;130;2;146;;;;vpos;;varray;;r&#10;Definition&#10;    getLocationByRegion() : array&#10;&#10;Description&#10;     Gets locations by region.;;d1,131;;b1,0;;m">
</treenode>
<treenode node="getLocationByRegionJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;165;2;194;;;;vpos;;vJSON;;r&#10;Definition&#10;    getLocationByRegionJSON($region) : string&#10;&#10;Description&#10;     Gets locations by region JSON.;;d1,166;;b1,0;;mregion;;p">
</treenode>
<treenode node="getPostcodeByCodeJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;432;2;445;;;;vpos;;vJSON;;r&#10;Definition&#10;    getPostcodeByCodeJSON($code) : string&#10;&#10;Description&#10;     Gets postcode by code JSON.;;d1,433;;b1,0;;mcode;;p">
</treenode>
<treenode node="getRegionAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;48;2;57;;;;vpos;;varray;;r&#10;Definition&#10;    getRegionAll() : array&#10;&#10;Description&#10;     Gets all regions.;;d1,49;;b1,0;;m">
</treenode>
<treenode node="getStreetByCity;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;225;2;244;;;;vpos;;varray;;r&#10;Definition&#10;    getStreetByCity() : array&#10;&#10;Description&#10;     Gets streets by city.;;d1,226;;b1,0;;m">
</treenode>
<treenode node="getStreetByCityJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;312;2;344;;;;vpos;;vJSON;;r&#10;Definition&#10;    getStreetByCityJSON($city) : string&#10;&#10;Description&#10;     Gets streets by city JSON.;;d1,313;;b1,0;;mcity;;p">
</treenode>
<treenode node="getStreetByLocation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;251;2;269;;;;vpos;;varray;;r&#10;Definition&#10;    getStreetByLocation() : array&#10;&#10;Description&#10;     Gets streets by location.;;d1,252;;b1,0;;m">
</treenode>
<treenode node="getStreetByLocationJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;351;2;382;;;;vpos;;vJSON;;r&#10;Definition&#10;    getStreetByLocationJSON($location) : string&#10;&#10;Description&#10;     Gets streets by location JSON.;;d1,352;;b1,0;;mlocation;;p">
</treenode>
<treenode node="getStreetByRegion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;201;2;218;;;;vpos;;varray;;r&#10;Definition&#10;    getStreetByRegion() : array&#10;&#10;Description&#10;     Gets streets by region.;;d1,202;;b1,0;;m">
</treenode>
<treenode node="getStreetByRegionJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;275;2;305;;;;vpos;;vJSON;;r&#10;Definition&#10;    getStreetByRegionJSON($region) : string&#10;&#10;Description&#10;     Gets streets by region JSON.;;d1,276;;b1,0;;mregion;;p">
</treenode>
</treenode>
<treenode node="Model_KladrAbbrs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f0;6;1;242;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f6;12;17;12;;;;vpos;;v;;r&apos;kladr_abbrs&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;21;2;24;;;;vpos;;v;;r;;d1,22;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;238;2;241;;;;vpos;;v;;r;;d1,239;;b1,0;;m">
</treenode>
<treenode node="changeAbbr;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;116;2;122;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAbbr()&#10;&#10;Description&#10;     Changes KLADR abbr abbr.;;d1,117;;b1,0;;m">
</treenode>
<treenode node="changeLevel;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;103;2;109;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeLevel()&#10;&#10;Description&#10;     Changes KLADR abbr level.;;d1,104;;b1,0;;m">
</treenode>
<treenode node="changeName;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;90;2;96;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeName()&#10;&#10;Description&#10;     Changes KLADR abbr name.;;d1,91;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;129;2;132;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all KLADR abbrs.;;d1,130;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;66;2;72;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets KLADR abbr by code.;;d1,67;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;139;2;236;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads KLADR abbrs.;;d1,140;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;31;2;59;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     KLADR abbrs rules.;;d1,32;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;79;2;83;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves KLADR abbr data to database.;;d1,80;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_Login;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_Login.php;f0;8;1;101;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Login.php;f0;8;1;84;;;;vpos;;vModel;;c;;r;;d0,9;;b0,0;;m">
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;45;2;98;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_Login.php;f8;46;2;100;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Login.php;f8;46;2;83;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks login data.;;d1,47;;b1,0;;mform;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;18;2;38;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;19;2;39;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_Login.php;f8;19;2;39;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Login.php;f8;19;2;39;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Login rules.;;d1,20;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_Main;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Main.php;f0;8;1;83;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_Main.php;f0;8;1;67;;;;vpos;;vModel;;c;;r;;d0,9;;b0,0;;m">
<treenode node="checkUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Main.php;f8;19;2;57;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_Main.php;f8;19;2;41;;;;vpos;;vvoid;;r&#10;Definition&#10;    checkUser()&#10;&#10;Description&#10;     Checks user.;;d1,20;;b1,0;;m">
</treenode>
<treenode node="logout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Main.php;f8;64;2;82;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_Main.php;f8;48;2;66;;;;vpos;;vvoid;;r&#10;Definition&#10;    logout()&#10;&#10;Description&#10;     Logs user out.;;d1,49;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_Passport;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f0;9;1;170;;;;vpos;;vDb_Helper;;c;;r;;d0,10;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f6;15;17;15;;;;vpos;;v;;r&apos;passport&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f8;33;2;36;;;;vpos;;v;;r;;d1,34;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f8;166;2;169;;;;vpos;;v;;r;;d1,167;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f8;159;2;164;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all passport data.;;d1,160;;b1,0;;m">
</treenode>
<treenode node="getByResume;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f8;132;2;138;;;;vpos;;varray;;r&#10;Definition&#10;    getByResume()&#10;&#10;Description&#10;     Gets passport by resume.;;d1,133;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f8;43;2;125;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Passport rules.;;d1,44;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f8;145;2;152;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves passport data to database.;;d1,146;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_Personal;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f0;16;1;237;;;;vpos;;vDb_Helper;;c;;r;;d0,17;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f6;22;17;22;;;;vpos;;v;;r&apos;personal&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;41;2;44;;;;vpos;;v;;r;;d1,42;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;233;2;236;;;;vpos;;v;;r;;d1,234;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;226;2;231;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all personal data.;;d1,227;;b1,0;;m">
</treenode>
<treenode node="getByResume;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;146;2;152;;;;vpos;;varray;;r&#10;Definition&#10;    getByResume()&#10;&#10;Description&#10;     Gets personal by resume.;;d1,147;;b1,0;;m">
</treenode>
<treenode node="getByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;159;2;165;;;;vpos;;varray;;r&#10;Definition&#10;    getByUser()&#10;&#10;Description&#10;     Gets personal by user.;;d1,160;;b1,0;;m">
</treenode>
<treenode node="getCitizenshipByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;198;2;205;;;;vpos;;varray;;r&#10;Definition&#10;    getCitizenshipByUser()&#10;&#10;Description&#10;     Gets citizenship by user.;;d1,199;;b1,0;;m">
</treenode>
<treenode node="getCode1sByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;185;2;191;;;;vpos;;varray;;r&#10;Definition&#10;    getCode1sByUser()&#10;&#10;Description&#10;     Gets code 1s by user.;;d1,186;;b1,0;;m">
</treenode>
<treenode node="getFioByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;172;2;178;;;;vpos;;varray;;r&#10;Definition&#10;    getFioByUser()&#10;&#10;Description&#10;     Gets FIO by user.;;d1,173;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;51;2;139;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Personal rules.;;d1,52;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;212;2;219;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves personal data to database.;;d1,213;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_ResetPwd;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ResetPwd.php;f0;8;1;72;;;;vpos;;vModel;;c;;r;;d0,9;;b0,0;;m">
<treenode node="resetPwd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ResetPwd.php;f8;46;2;71;;;;vpos;;varray;;r&#10;Definition&#10;    resetPwd($form)&#10;&#10;Description&#10;     Resets user password.;;d1,47;;b1,0;;mform;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ResetPwd.php;f8;19;2;39;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Reset password rules.;;d1,20;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_ResetPwdRequest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ResetPwdRequest.php;f0;9;1;75;;;;vpos;;vModel;;c;;r;;d0,10;;b0,0;;m">
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ResetPwdRequest.php;f8;20;2;32;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Reset password request rules.;;d1,21;;b1,0;;m">
</treenode>
<treenode node="sendEmail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ResetPwdRequest.php;f8;39;2;74;;;;vpos;;varray;;r&#10;Definition&#10;    sendEmail($form)&#10;&#10;Description&#10;     Sets password token and sends confirmation email.;;d1,40;;b1,0;;mform;;p">
</treenode>
</treenode>
<treenode node="Model_Resume;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f0;9;1;324;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f0;27;1;1390;;;;vpos;;vModel;;c;;r;;d0,28;;b0,0;;m">
<treenode node="STATUS_APPROVED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f9;23;25;23;;;;vpos;;v;;r3;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_APPROVED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f9;24;30;24;;;;vpos;;v;;r&apos;Принята&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_CREATED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f6;17;21;17;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_CREATED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f6;18;26;18;;;;vpos;;v;;r&apos;Новая&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_REJECTED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f9;25;25;25;;;;vpos;;v;;r4;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_REJECTED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f9;26;30;26;;;;vpos;;v;;r&apos;Отклонена&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_SAVED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f6;19;19;19;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_SAVED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f6;20;24;20;;;;vpos;;v;;r&apos;Сохранена&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_SENDED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f9;21;23;21;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_SENDED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f9;22;28;22;;;;vpos;;v;;r&apos;Отправлена&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f6;15;17;15;;;;vpos;;v;;r&apos;resume&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f8;40;2;43;;;;vpos;;v;;r;;d1,41;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f8;320;2;323;;;;vpos;;v;;r;;d1,321;;b1,0;;m">
</treenode>
<treenode node="changeApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f8;298;2;305;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeApp()&#10;&#10;Description&#10;     Changes resume app.;;d1,299;;b1,0;;m">
</treenode>
<treenode node="changeStatus;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f8;284;2;291;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeStatus()&#10;&#10;Description&#10;     Changes resume status.;;d1,285;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;851;2;1320;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks resume data.;;d1,852;;b1,0;;mform;;p">
</treenode>
<treenode node="checkByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f8;312;2;318;;;;vpos;;varray;;r&#10;Definition&#10;    checkByUser()&#10;&#10;Description&#10;     Checks resume by user.;;d1,313;;b1,0;;m">
</treenode>
<treenode node="checkCertificateBirth;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;839;2;844;;;;vpos;;varray;;r&#10;Definition&#10;    checkCertificateBirth($form)&#10;&#10;Description&#10;     Checks birth certificate files.;;d1,840;;b1,0;;mform;;p">
</treenode>
<treenode node="checkIdForeign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;811;2;818;;;;vpos;;varray;;r&#10;Definition&#10;    checkIdForeign($form)&#10;&#10;Description&#10;     Checks id foreign files.;;d1,812;;b1,0;;mform;;p">
</treenode>
<treenode node="checkIdRussian;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;787;2;792;;;;vpos;;varray;;r&#10;Definition&#10;    checkIdRussian($form)&#10;&#10;Description&#10;     Checks id russian files.;;d1,788;;b1,0;;mform;;p">
</treenode>
<treenode node="checkPassportForeign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;799;2;804;;;;vpos;;varray;;r&#10;Definition&#10;    checkPassportForeign($form)&#10;&#10;Description&#10;     Checks passport foreign files.;;d1,800;;b1,0;;mform;;p">
</treenode>
<treenode node="checkPassportRussian;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;773;2;780;;;;vpos;;varray;;r&#10;Definition&#10;    checkPassportRussian($form)&#10;&#10;Description&#10;     Checks passport russian files.;;d1,774;;b1,0;;mform;;p">
</treenode>
<treenode node="checkResidencyForeign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;825;2;832;;;;vpos;;varray;;r&#10;Definition&#10;    checkResidencyForeign($form)&#10;&#10;Description&#10;     Checks residency foreign files.;;d1,826;;b1,0;;mform;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f8;115;2;121;;;;vpos;;varray;;r&#10;Definition&#10;    get()&#10;&#10;Description&#10;     Gets resume by ID.;;d1,116;;b1,0;;m">
</treenode>
<treenode node="getAddressReg;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;608;2;634;;;;vpos;;varray;;r&#10;Definition&#10;    getAddressReg($form)&#10;&#10;Description&#10;     Gets registration address.;;d1,609;;b1,0;;mform;;p">
</treenode>
<treenode node="getAddressRes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;641;2;667;;;;vpos;;varray;;r&#10;Definition&#10;    getAddressRes($form)&#10;&#10;Description&#10;     Gets residential address.;;d1,642;;b1,0;;mform;;p">
</treenode>
<treenode node="getByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f8;128;2;247;;;;vpos;;varray;;r&#10;Definition&#10;    getByUser()&#10;&#10;Description&#10;     Gets resume by user.;;d1,129;;b1,0;;m">
</treenode>
<treenode node="getForeignLangs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;709;2;719;;;;vpos;;varray;;r&#10;Definition&#10;    getForeignLangs($form)&#10;&#10;Description&#10;     Gets foreign languages.;;d1,710;;b1,0;;mform;;p">
</treenode>
<treenode node="getStatusByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f8;254;2;261;;;;vpos;;varray;;r&#10;Definition&#10;    getStatusByUser()&#10;&#10;Description&#10;     Gets status by user.;;d1,255;;b1,0;;m">
</treenode>
<treenode node="recall;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;1361;2;1389;;;;vpos;;varray;;r&#10;Definition&#10;    recall($form)&#10;&#10;Description&#10;     Recalls resume data.;;d1,1362;;b1,0;;mform;;p">
</treenode>
<treenode node="resetAddressReg;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;568;2;581;;;;vpos;;varray;;r&#10;Definition&#10;    resetAddressReg($form)&#10;&#10;Description&#10;     Resets registration address.;;d1,569;;b1,0;;mform;;p">
</treenode>
<treenode node="resetAddressRes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;588;2;601;;;;vpos;;varray;;r&#10;Definition&#10;    resetAddressRes($form)&#10;&#10;Description&#10;     Resets residential address.;;d1,589;;b1,0;;mform;;p">
</treenode>
<treenode node="resetForeignLangs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;692;2;702;;;;vpos;;varray;;r&#10;Definition&#10;    resetForeignLangs($form)&#10;&#10;Description&#10;     Resets foreign languages.;;d1,693;;b1,0;;mform;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f8;50;2;108;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;38;2;283;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Resume rules.;;d1,39;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f8;268;2;277;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves resume data to database.;;d1,269;;b1,0;;m">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;1327;2;1354;;;;vpos;;varray;;r&#10;Definition&#10;    send($form)&#10;&#10;Description&#10;     Sends resume data.;;d1,1328;;b1,0;;mform;;p">
</treenode>
<treenode node="setAddressReg;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;494;2;524;;;;vpos;;varray;;r&#10;Definition&#10;    setAddressReg($form)&#10;&#10;Description&#10;     Sets registration address.;;d1,495;;b1,0;;mform;;p">
</treenode>
<treenode node="setAddressRes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;531;2;561;;;;vpos;;varray;;r&#10;Definition&#10;    setAddressRes($form)&#10;&#10;Description&#10;     Sets residential address.;;d1,532;;b1,0;;mform;;p">
</treenode>
<treenode node="setForeignLangs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;674;2;685;;;;vpos;;varray;;r&#10;Definition&#10;    setForeignLangs($form)&#10;&#10;Description&#10;     Sets foreign languages.;;d1,675;;b1,0;;mform;;p">
</treenode>
<treenode node="showStatus;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f15;290;2;314;;;;vpos;;vstring;;r&#10;Definition&#10;    showStatus($status, $width = null)&#10;&#10;Description&#10;     Shows status.;;d1,291;;b1,5;;mstatus;;pwidth;;p">
</treenode>
<treenode node="unsetScans;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;726;2;766;;;;vpos;;varray;;r&#10;Definition&#10;    unsetScans($form)&#10;&#10;Description&#10;     Unsets resume files.;;d1,727;;b1,0;;mform;;p">
</treenode>
<treenode node="validateAgreement;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;348;2;354;;;;vpos;;varray;;r&#10;Definition&#10;    validateAgreement($form)&#10;&#10;Description&#10;     Validates agreement.;;d1,349;;b1,0;;mform;;p">
</treenode>
<treenode node="validateFormAdvanced;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;321;2;341;;;;vpos;;varray;;r&#10;Definition&#10;    validateFormAdvanced($form)&#10;&#10;Description&#10;     Validates resume advanced.;;d1,322;;b1,0;;mform;;p">
</treenode>
<treenode node="validatePassport;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;361;2;444;;;;vpos;;varray;;r&#10;Definition&#10;    validatePassport($form)&#10;&#10;Description&#10;     Validates passport.;;d1,362;;b1,0;;mform;;p">
</treenode>
<treenode node="validatePassportOld;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;451;2;487;;;;vpos;;varray;;r&#10;Definition&#10;    validatePassportOld($form)&#10;&#10;Description&#10;     Validates old passport.;;d1,452;;b1,0;;mform;;p">
</treenode>
</treenode>
<treenode node="Model_Scans;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f0;6;1;259;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Scans.php;f0;14;1;280;;;;vpos;;vModel;;c;;r;;d0,15;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f6;12;17;12;;;;vpos;;v;;r&apos;scans&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;27;2;30;;;;vpos;;v;;r;;d1,28;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;255;2;258;;;;vpos;;v;;r;;d1,256;;b1,0;;m">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;223;2;228;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes scan.;;d1,224;;b1,0;;m">
</treenode>
<treenode node="clearbyDoc;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;235;2;253;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearbyDoc($doc_code)&#10;&#10;Description&#10;     Removes scans by document.;;d1,236;;b1,0;;mdoc_code;;p">
</treenode>
<treenode node="createRules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Scans.php;f15;25;2;55;;;;vpos;;varray;;r&#10;Definition&#10;    createRules($doc_code)&#10;&#10;Description&#10;     Creates scan rules.;;d1,26;;b1,5;;mdoc_code;;p">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Scans.php;f8;198;2;256;;;;vpos;;vboolean;;r&#10;Definition&#10;    delete($form)&#10;&#10;Description&#10;     Deletes scan from database.;;d1,199;;b1,0;;mform;;p">
</treenode>
<treenode node="existsRequired;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Scans.php;f15;263;2;279;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsRequired($doc_code, $id_row)&#10;&#10;Description&#10;     Checks required scans for document row.;;d1,264;;b1,5;;mdoc_code;;pid_row;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;108;2;114;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Scans.php;f8;62;2;67;;;;vpos;;vboolean;;r&#10;Definition&#10;    get($form)&#10;&#10;Description&#10;     Gets scans from database.;;d1,63;;b1,0;;mform;;p">
</treenode>
<treenode node="getByDocrow;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;165;2;172;;;;vpos;;varray;;r&#10;Definition&#10;    getByDocrow($doc_code)&#10;&#10;Description&#10;     Gets scans by document row.;;d1,166;;b1,0;;mdoc_code;;p">
</treenode>
<treenode node="getByDocrowFull;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;179;2;203;;;;vpos;;varray;;r&#10;Definition&#10;    getByDocrowFull($doc_code, $id_row)&#10;&#10;Description&#10;     Gets scans by document row FULL.;;d1,180;;b1,0;;mdoc_code;;pid_row;;p">
</treenode>
<treenode node="getByDocRowScan;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;134;2;142;;;;vpos;;varray;;r&#10;Definition&#10;    getByDocRowScan()&#10;&#10;Description&#10;     Gets scan by document row.;;d1,135;;b1,0;;m">
</treenode>
<treenode node="getByDocScan;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;149;2;158;;;;vpos;;varray;;r&#10;Definition&#10;    getByDocScan($doc_code, $doc_id, $scan_code)&#10;&#10;Description&#10;     Gets scan by document/scan.;;d1,150;;b1,0;;mdoc_code;;pdoc_id;;pscan_code;;p">
</treenode>
<treenode node="getDetails;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;121;2;127;;;;vpos;;varray;;r&#10;Definition&#10;    getDetails()&#10;&#10;Description&#10;     Gets scan details by ID.;;d1,122;;b1,0;;m">
</treenode>
<treenode node="push;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Scans.php;f15;74;2;121;;;;vpos;;varray;;r&#10;Definition&#10;    push($doc_code, $scan_code, $form)&#10;&#10;Description&#10;     Pushes scan.;;d1,75;;b1,5;;mdoc_code;;pscan_code;;pform;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;37;2;101;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Scans rules.;;d1,38;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;210;2;216;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves scan data to database.;;d1,211;;b1,0;;m">
</treenode>
<treenode node="unpush;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Scans.php;f15;128;2;146;;;;vpos;;varray;;r&#10;Definition&#10;    unpush($doc_code, $scan_code, $form)&#10;&#10;Description&#10;     Unpushes scan.;;d1,129;;b1,5;;mdoc_code;;pscan_code;;pform;;p">
</treenode>
<treenode node="unsets;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Scans.php;f15;153;2;191;;;;vpos;;varray;;r&#10;Definition&#10;    unsets($doc_code, $form)&#10;&#10;Description&#10;     Unsets scans.;;d1,154;;b1,5;;mdoc_code;;pform;;p">
</treenode>
</treenode>
<treenode node="Model_Signup;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Signup.php;f0;9;1;153;;;;vpos;;vModel;;c;;r;;d0,10;;b0,0;;m">
<treenode node="activate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;117;2;136;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Signup.php;f8;133;2;152;;;;vpos;;vboolean;;r&#10;Definition&#10;    activate($activation, $email)&#10;&#10;Description&#10;     Activates user account.;;d1,134;;b1,0;;mactivation;;pemail;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;17;2;64;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Signup.php;f8;20;2;67;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Signup rules.;;d1,21;;b1,0;;m">
</treenode>
<treenode node="signup;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;71;2;110;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Signup.php;f8;74;2;126;;;;vpos;;varray;;r&#10;Definition&#10;    signup($form)&#10;&#10;Description&#10;     Saves user data.;;d1,75;;b1,0;;mform;;p">
</treenode>
</treenode>
<treenode node="Model_TranslateLangs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f0;7;1;164;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f0;6;1;601;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_TranslateLangs.php;f0;7;1;164;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f0;6;1;601;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="ABROAD_FAR;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;18;17;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f6;18;17;18;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ABROAD_FAR_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;19;22;19;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f6;19;22;19;;;;vpos;;v;;r&apos;Дальнее&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ABROAD_HOME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;14;18;14;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f6;14;18;14;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ABROAD_HOME_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;15;23;15;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f6;15;23;15;;;;vpos;;v;;r&apos;Нет&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ABROAD_LIST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;21;18;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f6;21;18;21;;;;vpos;;v;;r[&#10;      [&apos;code&apos; =&gt; 0, &apos;description&apos; =&gt; &apos;Нет&apos;],&#10;      [&apos;code&apos; =&gt; 1, &apos;description&apos; =&gt; &apos;Ближнее&apos;],&#10;      [&apos;code&apos; =&gt; 2, &apos;description&apos; =&gt; &apos;Дальнее&apos;]&#10;      ];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ABROAD_NEAR;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;16;18;16;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f6;16;18;16;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ABROAD_NEAR_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;17;23;17;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f6;17;23;17;;;;vpos;;v;;r&apos;Ближнее&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_countries&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;38;2;41;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;38;2;41;;;;vpos;;v;;r;;d1,39;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;597;2;600;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;597;2;600;;;;vpos;;v;;r;;d1,598;;b1,0;;m">
</treenode>
<treenode node="changeAbroad;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;410;2;416;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;410;2;416;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAbroad()&#10;&#10;Description&#10;     Changes abroad.;;d1,411;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;360;2;364;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;360;2;364;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all country data.;;d1,361;;b1,0;;m">
</treenode>
<treenode node="changeAlpha2;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;423;2;429;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;423;2;429;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAlpha2()&#10;&#10;Description&#10;     Changes code alpha2.;;d1,424;;b1,0;;m">
</treenode>
<treenode node="changeAlpha3;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;436;2;442;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;436;2;442;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAlpha3()&#10;&#10;Description&#10;     Changes code alpha3.;;d1,437;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;371;2;377;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;371;2;377;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes code.;;d1,372;;b1,0;;m">
</treenode>
<treenode node="changeFullName;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;397;2;403;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;397;2;403;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeFullName()&#10;&#10;Description&#10;     Changes fullname.;;d1,398;;b1,0;;m">
</treenode>
<treenode node="changeName;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;384;2;390;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;384;2;390;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeName()&#10;&#10;Description&#10;     Changes description.;;d1,385;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;118;2;163;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_TranslateLangs.php;f8;118;2;163;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks dictionary countries data.;;d1,119;;b1,0;;mform;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;459;2;462;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;459;2;462;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes country.;;d1,460;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;449;2;452;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;449;2;452;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all countries.;;d1,450;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;93;2;111;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_TranslateLangs.php;f8;93;2;111;;;;vpos;;vboolean;;r&#10;Definition&#10;    delete($form)&#10;&#10;Description&#10;     Deletes country from database.;;d1,94;;b1,0;;mform;;p">
</treenode>
<treenode node="existsAddress;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;331;2;342;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;331;2;342;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsAddress()&#10;&#10;Description&#10;     Checks if country used in address.;;d1,332;;b1,0;;m">
</treenode>
<treenode node="existsCitizenship;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;313;2;324;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;313;2;324;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsCitizenship()&#10;&#10;Description&#10;     Checks if country used in citizenship.;;d1,314;;b1,0;;m">
</treenode>
<treenode node="existsCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;241;2;252;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;241;2;252;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsCode()&#10;&#10;Description&#10;     Checks if code exists.;;d1,242;;b1,0;;m">
</treenode>
<treenode node="existsCodeExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;259;2;270;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;259;2;270;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsCodeExcept()&#10;&#10;Description&#10;     Checks if code exists except this ID.;;d1,260;;b1,0;;m">
</treenode>
<treenode node="existsDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;277;2;288;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;277;2;288;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsDescription()&#10;&#10;Description&#10;     Checks if description exists.;;d1,278;;b1,0;;m">
</treenode>
<treenode node="existsDescriptionExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;295;2;306;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;295;2;306;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsDescriptionExcept()&#10;&#10;Description&#10;     Checks if description exists except this ID.;;d1,296;;b1,0;;m">
</treenode>
<treenode node="existsGuid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;205;2;216;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;205;2;216;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsGuid()&#10;&#10;Description&#10;     Checks if GUID exists.;;d1,206;;b1,0;;m">
</treenode>
<treenode node="existsGuidExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;223;2;234;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;223;2;234;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsGuidExcept()&#10;&#10;Description&#10;     Checks if GUID exists except this ID.;;d1,224;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;81;2;86;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;166;2;172;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_TranslateLangs.php;f8;81;2;86;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;166;2;172;;;;vpos;;varray;;r&#10;Definition&#10;    get()&#10;&#10;Description&#10;     Gets country by ID.;;d1,167;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;156;2;159;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;156;2;159;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all countries.;;d1,157;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;179;2;185;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;179;2;185;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets country by code.;;d1,180;;b1,0;;m">
</treenode>
<treenode node="getByDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;192;2;198;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;192;2;198;;;;vpos;;varray;;r&#10;Definition&#10;    getByDescription()&#10;&#10;Description&#10;     Gets country by description.;;d1,193;;b1,0;;m">
</treenode>
<treenode node="getGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;142;2;149;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;142;2;149;;;;vpos;;varray;;r&#10;Definition&#10;    getGrid()&#10;&#10;Description&#10;     Gets all countries for GRID.;;d1,143;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;107;2;135;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;107;2;135;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Countries grid.;;d1,108;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;469;2;595;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;469;2;595;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads countries.;;d1,470;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;18;2;74;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;48;2;100;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_TranslateLangs.php;f8;18;2;74;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;48;2;100;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Countries rules.;;d1,49;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;349;2;353;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_TranslateLangs.php;f8;349;2;353;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves country data to database.;;d1,350;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_User;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f0;16;1;541;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_User.php;f0;7;1;275;;;;vpos;;vModel;;c;;r;;d0,8;;b0,0;;m">
<treenode node="LIMIT_PAGES;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f9;45;21;45;;;;vpos;;v;;r20;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LIMIT_ROWS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f9;44;20;44;;;;vpos;;v;;r10;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ROLE_ADMIN;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f6;28;17;28;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ROLE_ADMIN_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f6;29;22;29;;;;vpos;;v;;r&apos;Администратор&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ROLE_GUEST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f6;24;17;24;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ROLE_GUEST_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f6;25;22;25;;;;vpos;;v;;r&apos;Гость&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ROLE_LIST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f6;31;16;31;;;;vpos;;v;;r[&#10;      [&apos;code&apos; =&gt; 0, &apos;description&apos; =&gt; &apos;Гость&apos;],&#10;      [&apos;code&apos; =&gt; 1, &apos;description&apos; =&gt; &apos;Модератор&apos;],&#10;      [&apos;code&apos; =&gt; 2, &apos;description&apos; =&gt; &apos;Администратор&apos;]&#10;      ];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ROLE_MANAGER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f6;26;19;26;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ROLE_MANAGER_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f6;27;24;27;;;;vpos;;v;;r&apos;Модератор&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_ACTIVE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f9;39;23;39;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_ACTIVE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f9;40;28;40;;;;vpos;;v;;r&apos;Активен&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_DELETED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f9;41;24;41;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_DELETED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f9;42;29;42;;;;vpos;;v;;r&apos;Удалён&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_NOTACTIVE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f6;37;23;37;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_NOTACTIVE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f6;38;28;38;;;;vpos;;v;;r&apos;Не активен&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f6;22;17;22;;;;vpos;;v;;r&apos;user&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;60;2;63;;;;vpos;;v;;r;;d1,61;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;537;2;540;;;;vpos;;v;;r;;d1,538;;b1,0;;m">
</treenode>
<treenode node="change;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_User.php;f8;188;2;207;;;;vpos;;varray;;r&#10;Definition&#10;    change($form)&#10;&#10;Description&#10;     Changes user data.;;d1,189;;b1,0;;mform;;p">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;444;2;449;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all user data.;;d1,445;;b1,0;;m">
</treenode>
<treenode node="changePwd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;484;2;491;;;;vpos;;vboolean;;r&#10;Definition&#10;    changePwd()&#10;&#10;Description&#10;     Changes user password.;;d1,485;;b1,0;;m">
</treenode>
<treenode node="changePwdToken;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;470;2;477;;;;vpos;;vboolean;;r&#10;Definition&#10;    changePwdToken()&#10;&#10;Description&#10;     Changes user password token.;;d1,471;;b1,0;;m">
</treenode>
<treenode node="changeStatus;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;456;2;463;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeStatus()&#10;&#10;Description&#10;     Changes user status.;;d1,457;;b1,0;;m">
</treenode>
<treenode node="create;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_User.php;f8;162;2;181;;;;vpos;;varray;;r&#10;Definition&#10;    create($form)&#10;&#10;Description&#10;     Creates user data.;;d1,163;;b1,0;;mform;;p">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_User.php;f8;114;2;127;;;;vpos;;vboolean;;r&#10;Definition&#10;    delete($form)&#10;&#10;Description&#10;     Deletes user from database.;;d1,115;;b1,0;;mform;;p">
</treenode>
<treenode node="existsEmail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;383;2;391;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsEmail()&#10;&#10;Description&#10;     Checks if email exists.;;d1,384;;b1,0;;m">
</treenode>
<treenode node="existsEmailExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;398;2;410;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsEmailExcept()&#10;&#10;Description&#10;     Checks if email exists except this ID.;;d1,399;;b1,0;;m">
</treenode>
<treenode node="existsUsername;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;349;2;357;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsUsername()&#10;&#10;Description&#10;     Checks if username exists.;;d1,350;;b1,0;;m">
</treenode>
<treenode node="existsUsernameExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;364;2;376;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsUsernameExcept()&#10;&#10;Description&#10;     Checks if username exists except this ID.;;d1,365;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;309;2;312;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_User.php;f8;102;2;107;;;;vpos;;varray;;r&#10;Definition&#10;    get($id)&#10;&#10;Description&#10;     Gets user from database.;;d1,103;;b1,0;;mid;;p">
</treenode>
<treenode node="getByEmail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;339;2;342;;;;vpos;;varray;;r&#10;Definition&#10;    getByEmail()&#10;&#10;Description&#10;     Gets user by email.;;d1,340;;b1,0;;m">
</treenode>
<treenode node="getByUsername;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;329;2;332;;;;vpos;;varray;;r&#10;Definition&#10;    getByUsername()&#10;&#10;Description&#10;     Gets user by name.;;d1,330;;b1,0;;m">
</treenode>
<treenode node="getGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;177;2;181;;;;vpos;;varray;;r&#10;Definition&#10;    getGrid()&#10;&#10;Description&#10;     Gets users for GRID.;;d1,178;;b1,0;;m">
</treenode>
<treenode node="getMin;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;319;2;322;;;;vpos;;varray;;r&#10;Definition&#10;    getMin()&#10;&#10;Description&#10;     Gets min user.;;d1,320;;b1,0;;m">
</treenode>
<treenode node="getPageNext;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;294;2;302;;;;vpos;;varray;;r&#10;Definition&#10;    getPageNext()&#10;&#10;Description&#10;     Gets users next page.;;d1,295;;b1,0;;m">
</treenode>
<treenode node="getPageNumber;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;265;2;272;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_User.php;f8;150;2;155;;;;vpos;;varray;;r&#10;Definition&#10;    getPageNumber($id)&#10;&#10;Description&#10;     Gets user page number.;;d1,151;;b1,0;;mid;;p">
</treenode>
<treenode node="getPagePrev;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;279;2;287;;;;vpos;;varray;;r&#10;Definition&#10;    getPagePrev()&#10;&#10;Description&#10;     Gets users previous page.;;d1,280;;b1,0;;m">
</treenode>
<treenode node="getPages;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;213;2;247;;;;vpos;;vmixed;;r&#10;Definition&#10;    getPages()&#10;&#10;Description&#10;     Gets users pages.;;d1,214;;b1,0;;m">
</treenode>
<treenode node="getPagesCount;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;254;2;258;;;;vpos;;vint;;r&#10;Definition&#10;    getPagesCount() : int&#10;&#10;Description&#10;     Gets users pages count.;;d1,255;;b1,0;;m">
</treenode>
<treenode node="getRowsCount;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;202;2;206;;;;vpos;;vint;;r&#10;Definition&#10;    getRowsCount() : int&#10;&#10;Description&#10;     Gets users rows count.;;d1,203;;b1,0;;m">
</treenode>
<treenode node="getRowsCountLess;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;188;2;195;;;;vpos;;vint;;r&#10;Definition&#10;    getRowsCountLess() : int&#10;&#10;Description&#10;     Gets users rows less count.;;d1,189;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;141;2;170;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     User grid.;;d1,142;;b1,0;;m">
</treenode>
<treenode node="mask;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_User.php;f8;252;2;274;;;;vpos;;vboolean;;r&#10;Definition&#10;    mask() : bool&#10;&#10;Description&#10;     Logins as user.;;d1,253;;b1,0;;m">
</treenode>
<treenode node="paginationStart;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_User.php;f8;134;2;143;;;;vpos;;vmixed;;r&#10;Definition&#10;    paginationStart()&#10;&#10;Description&#10;     Starts pagination.;;d1,135;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;70;2;134;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     User rules.;;d1,71;;b1,0;;m">
</treenode>
<treenode node="rules_add;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_User.php;f8;18;2;62;;;;vpos;;varray;;r&#10;Definition&#10;    rules_add()&#10;&#10;Description&#10;     Users add rules.;;d1,19;;b1,0;;m">
</treenode>
<treenode node="rules_edit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_User.php;f8;69;2;95;;;;vpos;;varray;;r&#10;Definition&#10;    rules_edit()&#10;&#10;Description&#10;     Users edit rules.;;d1,70;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;431;2;437;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves user data to database.;;d1,432;;b1,0;;m">
</treenode>
<treenode node="search;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;417;2;424;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_User.php;f8;214;2;245;;;;vpos;;varray;;r&#10;Definition&#10;    search($form, $post) : array&#10;&#10;Description&#10;     Searches for user in database.;;d1,215;;b1,0;;mform;;ppost;;p">
</treenode>
<treenode node="setUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;498;2;521;;;;vpos;;vvoid;;r&#10;Definition&#10;    setUser()&#10;&#10;Description&#10;     Sets user session.;;d1,499;;b1,0;;m">
</treenode>
<treenode node="unsetUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;528;2;535;;;;vpos;;vvoid;;r&#10;Definition&#10;    unsetUser()&#10;&#10;Description&#10;     Unsets user session.;;d1,529;;b1,0;;m">
</treenode>
</treenode>
<treenode node="MYPDF;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_051.php;f0;31;1;48;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_020.php;f0;31;1;68;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_011.php;f0;30;1;74;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_003.php;f0;31;1;53;;;;vpos;;vTCPDF;;c;;r;;d26,31;;b0,0;;m">
<treenode node="ColoredTable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_011.php;f8;44;2;73;;;;vpos;;v;;r;;d45,44;;b1,0;;mheader;;pdata;;p">
</treenode>
<treenode node="Footer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_003.php;f8;45;2;52;;;;vpos;;v;;r;;d26,45;;b1,0;;m">
</treenode>
<treenode node="Header;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_051.php;f8;33;2;47;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_003.php;f8;34;2;42;;;;vpos;;v;;r;;d26,33;;b1,0;;m">
</treenode>
<treenode node="LoadData;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_011.php;f8;33;2;41;;;;vpos;;v;;r;;d33,33;;b1,0;;mfile;;p">
</treenode>
<treenode node="MultiRow;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_020.php;f8;33;2;66;;;;vpos;;v;;r;;d41,33;;b1,0;;mleft;;pright;;p">
</treenode>
</treenode>
<treenode node="Pdf;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f0;16;1;601;;;;vpos;;v;;r&#10;Definition&#10;    class Pdf&#10;&#10;Description&#10;     Pdf;;d0,17;;b0,0;;m">
<treenode node="TMP_PREFIX;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f9;19;20;19;;;;vpos;;v;;r&apos;tmp_php_pdftk_&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;81;5;98;;;;vpos;;v;;r&#10;Definition&#10;    __construct($pdf = null, $options = array())&#10;&#10;Description&#10;      a pdf filename or Pdf instance or an array of filenames/instances indexed by a handle. The array values can also be arrays of the form array($filename, $password) if some files are password protected.&#10;&#10;Parameters:&#10;    string|Pdf|array $pdf - a pdf filename or Pdf instance or an array of filenames/instances indexed by a handle&#10;    array $options - Options to pass to set on the Command instance, e;;d4,82;;b1,0;;mstring|Pdf|array $pdf;;parray $options;;p">
</treenode>
<treenode node="addFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;107;5;123;;;;vpos;;vPdf;;r&#10;Definition&#10;    addFile($name, $handle = null, $password = null)&#10;&#10;Description&#10;      the PDF filename or Pdf instance to add for processing&#10;&#10;Parameters:&#10;    string|Pdf $name - the PDF filename or Pdf instance to add for processing&#10;    string|null $handle - one or more uppercase letters A&#10;    string|null $password - the owner (or user) password if any&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,108;;b1,0;;mstring|Pdf $name;;pstring|null $handle;;pstring|null $password;;p">
</treenode>
<treenode node="allow;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;358;5;363;;;;vpos;;vPdf;;r&#10;Definition&#10;    allow($permissions = null)&#10;&#10;Description&#10;     Set PDF permissions&#10;&#10;Parameters:&#10;    string|null $permissions - list of space separated permissions or null for none&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,359;;b1,0;;mstring|null $permissions;;p">
</treenode>
<treenode node="background;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;254;5;261;;;;vpos;;vPdf;;r&#10;Definition&#10;    background($file)&#10;&#10;Description&#10;     Apply a PDF as watermark to the background of a single PDF file.&#10;&#10;Parameters:&#10;    string $file - name of the background PDF file&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,255;;b1,0;;mstring $file;;p">
</treenode>
<treenode node="burst;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;197;5;203;;;;vpos;;vbool;;r&#10;Definition&#10;    burst($filepattern = null)&#10;&#10;Description&#10;     Split the PDF document into pages&#10;&#10;Parameters:&#10;    string|null $filepattern - the output name in sprintf format or null for default &apos;pg_%04d&#10;&#10;Return:&#10;   whether the burst operation was successful;;d4,198;;b1,0;;mstring|null $filepattern;;p">
</treenode>
<treenode node="cat;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;151;5;157;;;;vpos;;vPdf;;r&#10;Definition&#10;    cat($start, $end = null, $handle = null, $qualifier = null, $rotation = null)&#10;&#10;Description&#10;     Assemble (catenate) pages from the input files.&#10;&#10;Parameters:&#10;    int|string|array $start - the start page number or an array of page numbers&#10;    int|string|null $end - the end page number or null for single page (or list if $start is an array)&#10;    string|null $handle - the handle of the file to use&#10;    string|null $qualifier - the page number qualifier, either &apos;even&apos; or &apos;odd&apos; or null for none&#10;    string $rotation - the rotation to apply to the pages&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,152;;b1,0;;mint|string|array $start;;pint|string|null $end;;pstring|null $handle;;pstring|null $qualifier;;pstring $rotation;;p">
</treenode>
<treenode node="compress;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;383;5;388;;;;vpos;;vPdf;;r&#10;Definition&#10;    compress($compress = true)&#10;&#10;Description&#10;     Restore/remove compression&#10;&#10;Parameters:&#10;    bool $compress - whether to restore (default) or remove the compression&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,384;;b1,0;;mbool $compress;;p">
</treenode>
<treenode node="constrainSingleFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f14;579;5;584;;;;vpos;;v;;r&#10;Definition&#10;    constrainSingleFile()&#10;&#10;Description&#10;     Make sure, that only one file is present;;d4,580;;b2,0;;m">
</treenode>
<treenode node="dropXfa;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;429;5;434;;;;vpos;;vPdf;;r&#10;Definition&#10;    dropXfa()&#10;&#10;Description&#10;     Drop XFA data from forms created with newer Acrobat.&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,430;;b1,0;;m">
</treenode>
<treenode node="dropXmp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;445;5;450;;;;vpos;;vPdf;;r&#10;Definition&#10;    dropXmp()&#10;&#10;Description&#10;     Drop XMP meta data&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,446;;b1,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;555;5;574;;;;vpos;;vbool;;r&#10;Definition&#10;    execute()&#10;&#10;Description&#10;     Execute the pdftk command and store the output file to a temporary location or $this-&gt;_output if set. You should probably never call this method unless you only need a temporary PDF file as result.&#10;&#10;Return:&#10;   whether the command was executed successfully;;d4,556;;b1,0;;m">
</treenode>
<treenode node="fillForm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;229;5;244;;;;vpos;;vPdf;;r&#10;Definition&#10;    fillForm($data, $encoding = &apos;UTF-8&apos;, $dropXfa = true, $format = &apos;xfdf&apos;)&#10;&#10;Description&#10;     Fill a PDF form&#10;&#10;Parameters:&#10;    string|array $data - either a XFDF/FDF filename or an array with form field data (name =&gt; value)&#10;    string $encoding - the encoding of the data&#10;    bool $dropXfa - whether to drop XFA forms (see dropXfa())&#10;    string $format - the file format to use for form filling when passing an array in `$data`&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,230;;b1,0;;mstring|array $data;;pstring $encoding;;pbool $dropXfa;;pstring $format;;p">
</treenode>
<treenode node="flatten;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;370;5;375;;;;vpos;;vPdf;;r&#10;Definition&#10;    flatten()&#10;&#10;Description&#10;     Flatten the PDF form fields values into a single PDF file.&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,371;;b1,0;;m">
</treenode>
<treenode node="generateFdfFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;211;5;217;;;;vpos;;vbool;;r&#10;Definition&#10;    generateFdfFile($name)&#10;&#10;Description&#10;     Generate the FDF file for a single PDF file.&#10;&#10;Parameters:&#10;    string $name - name of the FDF file&#10;&#10;Return:&#10;   whether the pdf is generated successful;;d4,212;;b1,0;;mstring $name;;p">
</treenode>
<treenode node="getCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;523;5;529;;;;vpos;;vCommand;;r&#10;Definition&#10;    getCommand()&#10;&#10;Description&#10;      the command instance that executes pdftk&#10;&#10;Return:&#10;   the command instance that executes pdftk;;d4,524;;b1,0;;m">
</treenode>
<treenode node="getData;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;316;5;329;;;;vpos;;vstring;;r&#10;Definition&#10;    getData($utf8 = true)&#10;&#10;Description&#10;      whether to dump the data UTF-8 encoded. Default is true.&#10;&#10;Parameters:&#10;    bool $utf8 - whether to dump the data UTF-8 encoded&#10;&#10;Return:&#10;   |bool meta data about the PDF or false on failure;;d4,317;;b1,0;;mbool $utf8;;p">
</treenode>
<treenode node="getDataFields;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;335;5;348;;;;vpos;;vDataFields;;r&#10;Definition&#10;    getDataFields($utf8 = true)&#10;&#10;Description&#10;      whether to dump the data UTF-8 encoded. Default is true.&#10;&#10;Parameters:&#10;    bool $utf8 - whether to dump the data UTF-8 encoded&#10;&#10;Return:&#10;   |bool data about the PDF form fields or false on failure;;d4,336;;b1,0;;mbool $utf8;;p">
</treenode>
<treenode node="getError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;545;5;548;;;;vpos;;vstring;;r&#10;Definition&#10;    getError()&#10;&#10;Description&#10;      the error message or an empty string if none&#10;&#10;Return:&#10;   the error message or an empty string if none;;d4,546;;b1,0;;m">
</treenode>
<treenode node="getTmpFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;534;5;540;;;;vpos;;vFile;;r&#10;Definition&#10;    getTmpFile()&#10;&#10;Description&#10;      the temporary output file instance&#10;&#10;Return:&#10;   the temporary output file instance;;d4,535;;b1,0;;m">
</treenode>
<treenode node="keepId;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;397;5;402;;;;vpos;;vPdf;;r&#10;Definition&#10;    keepId($id = &apos;first&apos;)&#10;&#10;Description&#10;     When combining multiple PDFs, use either the first or last ID in the output. If not called, a new ID is created.&#10;&#10;Parameters:&#10;    string $id - , either &apos;first&apos; (default) or &apos;last&apos;&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,398;;b1,0;;mstring $id;;p">
</treenode>
<treenode node="multiBackground;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;271;5;277;;;;vpos;;vPdf;;r&#10;Definition&#10;    multiBackground($file)&#10;&#10;Description&#10;     Apply multiple PDF pages as watermark to the corresponding pages of a single PDF file.&#10;&#10;Parameters:&#10;    string $file - name of the background PDF file&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,272;;b1,0;;mstring $file;;p">
</treenode>
<treenode node="multiStamp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;304;5;310;;;;vpos;;vPdf;;r&#10;Definition&#10;    multiStamp($file)&#10;&#10;Description&#10;     Add multiple pages from $file as overlay to the corresponding pages of a single PDF file.&#10;&#10;Parameters:&#10;    string $file - name of the PDF file to add as overlay&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,305;;b1,0;;mstring $file;;p">
</treenode>
<treenode node="needAppearances;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;413;5;418;;;;vpos;;vPdf;;r&#10;Definition&#10;    needAppearances()&#10;&#10;Description&#10;     Set need_appearances flag in PDF&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,414;;b1,0;;m">
</treenode>
<treenode node="nextHandle;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f14;589;5;600;;;;vpos;;vstring;;r&#10;Definition&#10;    nextHandle()&#10;&#10;Description&#10;      the next handle in the series A, B, C, ... Z, AA, AB...&#10;&#10;Return:&#10;   the next handle in the series A, B, C, ;;d4,590;;b2,0;;m">
</treenode>
<treenode node="passwordEncryption;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;478;5;483;;;;vpos;;vPdf;;r&#10;Definition&#10;    passwordEncryption($strength = 128)&#10;&#10;Description&#10;      the password encryption strength. Default is 128&#10;&#10;Parameters:&#10;    int $strength - the password encryption strength&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,479;;b1,0;;mint $strength;;p">
</treenode>
<treenode node="saveAs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;491;5;502;;;;vpos;;vbool;;r&#10;Definition&#10;    saveAs($name)&#10;&#10;Description&#10;     Execute the operation and save the output file&#10;&#10;Parameters:&#10;    string $name - of output file&#10;&#10;Return:&#10;   whether the PDF could be processed and saved;;d4,492;;b1,0;;mstring $name;;p">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;511;5;518;;;;vpos;;vbool;;r&#10;Definition&#10;    send($filename=null,$inline=false)&#10;&#10;Description&#10;     Send PDF to client, either inline or as download (triggers PDF creation)&#10;&#10;Parameters:&#10;    string|null $filename - the filename to send&#10;    bool $inline - whether to force inline display of the PDF, even if filename is present&#10;&#10;Return:&#10;   whether PDF was created successfully;;d4,512;;b1,0;;mstring|null $filename;;pbool $inline;;p">
</treenode>
<treenode node="setPassword;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;456;5;461;;;;vpos;;vPdf;;r&#10;Definition&#10;    setPassword($password)&#10;&#10;Description&#10;      the owner password to set on the output PDF&#10;&#10;Parameters:&#10;    string $password - the owner password to set on the output PDF&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,457;;b1,0;;mstring $password;;p">
</treenode>
<treenode node="setUserPassword;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;467;5;472;;;;vpos;;vPdf;;r&#10;Definition&#10;    setUserPassword($password)&#10;&#10;Description&#10;      the user password to set on the output PDF&#10;&#10;Parameters:&#10;    string $password - the user password to set on the output PDF&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,468;;b1,0;;mstring $password;;p">
</treenode>
<treenode node="shuffle;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;182;5;188;;;;vpos;;vPdf;;r&#10;Definition&#10;    shuffle($start, $end = null, $handle = null, $qualifier = null, $rotation = null)&#10;&#10;Description&#10;     Shuffle pages from the input files.&#10;&#10;Parameters:&#10;    string $handle - the handle of the input file to use&#10;    int|array $start - the start page number or an array of page numbers&#10;    int|null $end - the end page number or null for single page (or list if $start is an array)&#10;    string|null $qualifier - the page number qualifier, either &apos;even&apos; or &apos;odd&apos; or null for none&#10;    string $rotation - the rotation to apply to the pages&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,183;;b1,0;;mstring $handle;;pint|array $start;;pint|null $end;;pstring|null $qualifier;;pstring $rotation;;p">
</treenode>
<treenode node="stamp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;287;5;294;;;;vpos;;vPdf;;r&#10;Definition&#10;    stamp($file)&#10;&#10;Description&#10;     Add $file as overlay to a single PDF file.&#10;&#10;Parameters:&#10;    string $file - name of the PDF file to add as overlay&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,288;;b1,0;;mstring $file;;p">
</treenode>
</treenode>
<treenode node="PDF_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\pdf_helper.php;f0;6;1;28;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
<treenode node="create;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\pdf_helper.php;f15;17;2;27;;;;vpos;;vnothing;;r&#10;Definition&#10;    create($data, $layout, $output)&#10;&#10;Description&#10;     Creates PDF.;;d1,18;;b1,5;;mdata;;playout;;poutput;;p">
</treenode>
</treenode>
<treenode node="PDF417;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\pdf417.php;f0;92;1;991;;;;vpos;;v;;r&#10;Definition&#10;    class PDF417&#10;&#10;Description&#10;      class PDF417 Class to create PDF417 barcode arrays for TCPDF class. PDF417 (ISO/IEC 15438:2006) is a 2-dimensional stacked bar code created by Symbol Technologies in 1991.;;d13,92;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\pdf417.php;f8;531;2;723;;;;vpos;;v;;r&#10;Definition&#10;    __construct($code, $ecl=-1, $aspectratio=2, $macro=array())&#10;&#10;Description&#10;     This is the class constructor. Creates a PDF417 object&#10;&#10;Parameters:&#10;     $code - (string) code to represent using PDF417&#10;     $ecl - (int) error correction level (0-8);s default -1 = automatic correction level&#10;     $aspectratio - (float) the width to height of the symbol (excluding quiet zones)&#10;     $macro - (array) information for macro block;;d77,531;;b1,0;;m $code;;p $ecl;;p $aspectratio;;p $macro;;p">
</treenode>
<treenode node="getBarcodeArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\pdf417.php;f8;730;2;732;;;;vpos;;varray;;r&#10;Definition&#10;    getBarcodeArray()&#10;&#10;Description&#10;     Returns a barcode array which is readable by TCPDF&#10;&#10;Return:&#10;   barcode array readable by TCPDF;s;;d35,730;;b1,0;;m">
</treenode>
<treenode node="getCompaction;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\pdf417.php;f11;872;2;989;;;;vpos;;varray;;r&#10;Definition&#10;    getCompaction($mode, $code, $addmode=true)&#10;&#10;Description&#10;     Compact data by mode.&#10;&#10;Parameters:&#10;     $mode - (int) compaction mode number&#10;     $code - (string) data to compact&#10;     $addmode - (boolean) if true add the mode codeword at first position&#10;&#10;Return:&#10;   of codewords;;d63,872;;b2,0;;m $mode;;p $code;;p $addmode;;p">
</treenode>
<treenode node="getErrorCorrection;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\pdf417.php;f11;779;2;807;;;;vpos;;varray;;r&#10;Definition&#10;    getErrorCorrection($cw, $ecl)&#10;&#10;Description&#10;     Returns the error correction codewords&#10;&#10;Parameters:&#10;     $cw - (array) array of codewords including Symbol Length Descriptor and pad&#10;     $ecl - (int) error correction level 0-8&#10;&#10;Return:&#10;   of error correction codewords;;d50,779;;b2,0;;m $cw;;p $ecl;;p">
</treenode>
<treenode node="getErrorCorrectionLevel;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\pdf417.php;f11;741;2;770;;;;vpos;;vint;;r&#10;Definition&#10;    getErrorCorrectionLevel($ecl, $numcw)&#10;&#10;Description&#10;     Returns the error correction level (0-8) to be used&#10;&#10;Parameters:&#10;     $ecl - (int) error correction level&#10;     $numcw - (int) number of data codewords&#10;&#10;Return:&#10;   error correction level;;d58,741;;b2,0;;m $ecl;;p $numcw;;p">
</treenode>
<treenode node="getInputSequences;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\pdf417.php;f11;815;2;862;;;;vpos;;vbidimensional;;r&#10;Definition&#10;    getInputSequences($code)&#10;&#10;Description&#10;     Create array of sequences from input&#10;&#10;Parameters:&#10;     $code - (string) code&#10;&#10;Return:&#10;   array containing characters and classification;;d45,815;;b2,0;;m $code;;p">
</treenode>
</treenode>
<treenode node="PdfTest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f0;4;1;704;;;;vpos;;vTestCase;;c;;r;;d0,5;;b0,0;;m">
<treenode node="getDocument1;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f14;554;5;557;;;;vpos;;v;;r;;d4,555;;b2,0;;m">
</treenode>
<treenode node="getDocument2;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f14;559;5;562;;;;vpos;;v;;r;;d4,560;;b2,0;;m">
</treenode>
<treenode node="getFdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f14;576;5;580;;;;vpos;;v;;r;;d4,577;;b2,0;;m">
</treenode>
<treenode node="getFilledForm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f14;570;5;574;;;;vpos;;v;;r;;d4,571;;b2,0;;m">
</treenode>
<treenode node="getForm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f14;564;5;568;;;;vpos;;v;;r;;d4,565;;b2,0;;m">
</treenode>
<treenode node="getOutFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f14;582;5;586;;;;vpos;;v;;r;;d4,583;;b2,0;;m">
</treenode>
<treenode node="setUp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;6;5;9;;;;vpos;;v;;r;;d4,7;;b1,0;;m">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;10;5;13;;;;vpos;;v;;r;;d4,11;;b1,0;;m">
</treenode>
<treenode node="testCanAddFiles;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;114;5;131;;;;vpos;;v;;r;;d4,115;;b1,0;;m">
</treenode>
<treenode node="testCanBurstWithFilePattern;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;241;5;256;;;;vpos;;v;;r;;d4,242;;b1,0;;m">
</treenode>
<treenode node="testCanBurstWithoutPattern;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;224;5;239;;;;vpos;;v;;r;;d4,225;;b1,0;;m">
</treenode>
<treenode node="testCanCatFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;150;5;170;;;;vpos;;v;;r;;d4,151;;b1,0;;m">
</treenode>
<treenode node="testCanCatFiles;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;172;5;196;;;;vpos;;v;;r;;d4,173;;b1,0;;m">
</treenode>
<treenode node="testCanCompress;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;417;5;429;;;;vpos;;v;;r;;d4,418;;b1,0;;m">
</treenode>
<treenode node="testCanCreateFdfFileFromPdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;258;5;266;;;;vpos;;v;;r;;d4,259;;b1,0;;m">
</treenode>
<treenode node="testCanDropXfa;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;473;5;485;;;;vpos;;v;;r;;d4,474;;b1,0;;m">
</treenode>
<treenode node="testCanFillFormFromData;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;268;5;293;;;;vpos;;v;;r;;d4,269;;b1,0;;m">
</treenode>
<treenode node="testCanFillFormFromFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;295;5;313;;;;vpos;;v;;r;;d4,296;;b1,0;;m">
</treenode>
<treenode node="testCanFlatten;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;403;5;415;;;;vpos;;v;;r;;d4,404;;b1,0;;m">
</treenode>
<treenode node="testCanGetData;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;531;5;539;;;;vpos;;v;;r;;d4,532;;b1,0;;m">
</treenode>
<treenode node="testCanGetDataFields;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;541;5;552;;;;vpos;;v;;r;;d4,542;;b1,0;;m">
</treenode>
<treenode node="testCanKeepFinalId;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;459;5;471;;;;vpos;;v;;r;;d4,460;;b1,0;;m">
</treenode>
<treenode node="testCanKeepFirstId;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;445;5;457;;;;vpos;;v;;r;;d4,446;;b1,0;;m">
</treenode>
<treenode node="testCanMultiStamp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;360;5;373;;;;vpos;;v;;r;;d4,361;;b1,0;;m">
</treenode>
<treenode node="testCanPassDocumentsToConstructor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;49;5;64;;;;vpos;;v;;r;;d4,50;;b1,0;;m">
</treenode>
<treenode node="testCanPassDocumentsWithPasswordToConstructor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;95;5;113;;;;vpos;;v;;r;;d4,96;;b1,0;;m">
</treenode>
<treenode node="testCanPassDocumentToConstructor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;17;5;28;;;;vpos;;v;;r;;d4,18;;b1,0;;m">
</treenode>
<treenode node="testCanPassPdfInstancesToConstructor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;65;5;94;;;;vpos;;v;;r;;d4,66;;b1,0;;m">
</treenode>
<treenode node="testCanPassPdfInstanceToConstructor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;29;5;48;;;;vpos;;v;;r;;d4,30;;b1,0;;m">
</treenode>
<treenode node="testCanPerformEmptyOperation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;133;5;148;;;;vpos;;v;;r;;d4,134;;b1,0;;m">
</treenode>
<treenode node="testCanRemovePermissions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;375;5;387;;;;vpos;;v;;r;;d4,376;;b1,0;;m">
</treenode>
<treenode node="testCanSetBackground;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;315;5;328;;;;vpos;;v;;r;;d4,316;;b1,0;;m">
</treenode>
<treenode node="testCanSetMultiBackground;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;330;5;343;;;;vpos;;v;;r;;d4,331;;b1,0;;m">
</treenode>
<treenode node="testCanSetPasswords;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;487;5;500;;;;vpos;;v;;r;;d4,488;;b1,0;;m">
</treenode>
<treenode node="testCanSetPermissions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;389;5;401;;;;vpos;;v;;r;;d4,390;;b1,0;;m">
</treenode>
<treenode node="testCanShuffleFiles;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;198;5;222;;;;vpos;;v;;r;;d4,199;;b1,0;;m">
</treenode>
<treenode node="testCanStamp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;345;5;358;;;;vpos;;v;;r;;d4,346;;b1,0;;m">
</treenode>
<treenode node="testCanUncompress;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;431;5;443;;;;vpos;;v;;r;;d4,432;;b1,0;;m">
</treenode>
<treenode node="testSet128BitEncryption;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;502;5;514;;;;vpos;;v;;r;;d4,503;;b1,0;;m">
</treenode>
<treenode node="testSet40BitEncryption;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;516;5;528;;;;vpos;;v;;r;;d4,517;;b1,0;;m">
</treenode>
</treenode>
<treenode node="phpCAS;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f0;277;1;1860;;;;vpos;;v;;r&#10;Definition&#10;    class phpCAS&#10;&#10;Description&#10;     The phpCAS class is a simple container for the phpCAS library. It provides CAS authentication for web applications written in PHP.;;d0,278;;b0,0;;m">
<treenode node="_validateClientExists;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f19;1830;5;1835;;;;vpos;;vvoid;;r&#10;Definition&#10;    _validateClientExists()&#10;&#10;Description&#10;     Checks if a client already exists;;d4,1831;;b3,5;;m">
</treenode>
<treenode node="_validateProxyExists;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f19;1844;5;1849;;;;vpos;;vvoid;;r&#10;Definition&#10;    _validateProxyExists()&#10;&#10;Description&#10;     Checks of a proxy client aready exists;;d4,1845;;b3,5;;m">
</treenode>
<treenode node="addRebroadcastHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1809;5;1821;;;;vpos;;vvoid;;r&#10;Definition&#10;    addRebroadcastHeader($header)&#10;&#10;Description&#10;     This method is used to add header parameters when rebroadcasting pgtIou/pgtId or logoutRequest.&#10;&#10;Parameters:&#10;    String $header - Header to send when rebroadcasting;;d4,1810;;b1,5;;mString $header;;p">
</treenode>
<treenode node="addRebroadcastNode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1786;5;1799;;;;vpos;;vvoid;;r&#10;Definition&#10;    addRebroadcastNode($rebroadcastNodeUrl)&#10;&#10;Description&#10;     Add a pgtIou/pgtId and logoutRequest rebroadcast node.&#10;&#10;Parameters:&#10;    string $rebroadcastNodeUrl - The rebroadcast node URL;;d4,1787;;b1,5;;mstring $rebroadcastNodeUrl;;p">
</treenode>
<treenode node="allowProxyChain;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1744;5;1756;;;;vpos;;vvoid;;r&#10;Definition&#10;    allowProxyChain(CAS_ProxyChain_Interface $proxy_chain)&#10;&#10;Description&#10;     If you want your service to be proxied you have to enable it (default disabled) and define an accepable list of proxies that are allowed to proxy your service.&#10;&#10;Parameters:&#10;    CAS_ProxyChain_Interface $proxy_chain - A proxy-chain that will be;;d4,1745;;b1,5;;mCAS_ProxyChain_Interface $proxy_chain;;p">
</treenode>
<treenode node="checkAuthentication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1072;5;1084;;;;vpos;;vtrue;;r&#10;Definition&#10;    checkAuthentication()&#10;&#10;Description&#10;     This method is called to check if the user is already authenticated locally or has a global cas session. A already existing cas session is determined by a cas gateway call.(cas login call without any interactive prompt)&#10;&#10;Return:&#10;   when the user is authenticated, false when a previous;;d4,1073;;b1,5;;m">
</treenode>
<treenode node="client;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;337;5;364;;;;vpos;;va;;r&#10;Definition&#10;    client($server_version, $server_hostname,&#10;        $server_port, $server_uri, $changeSessionID = true&#10;    )&#10;&#10;Description&#10;     phpCAS client initializer.&#10;&#10;Parameters:&#10;    string $server_version - the version of the CAS server&#10;    string $server_hostname - the hostname of the CAS server&#10;    string $server_port - the port the CAS server is running on&#10;    string $server_uri - the URI the CAS server is responding on&#10;    bool $changeSessionID - Allow phpCAS to change the session_id (Single&#10;&#10;Return:&#10;   newly created CAS_Client object;;d6,339;;b1,5;;mstring $server_version;;pstring $server_hostname;;pstring $server_port;;pstring $server_uri;;pbool $changeSessionID;;p">
</treenode>
<treenode node="error;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;542;5;569;;;;vpos;;vvoid;;r&#10;Definition&#10;    error($msg)&#10;&#10;Description&#10;     This method is used by interface methods to print an error and where the function was originally called from.&#10;&#10;Parameters:&#10;    string $msg - the message to print;;d4,543;;b1,5;;mstring $msg;;p">
</treenode>
<treenode node="forceAuthentication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1093;5;1111;;;;vpos;;vbool;;r&#10;Definition&#10;    forceAuthentication()&#10;&#10;Description&#10;     This method is called to force authentication if the user was not already authenticated. If the user is not authenticated, halt by redirecting to the CAS server.&#10;&#10;Return:&#10;   Authentication;;d4,1094;;b1,5;;m">
</treenode>
<treenode node="getAttribute;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1252;5;1261;;;;vpos;;vmixed;;r&#10;Definition&#10;    getAttribute($key)&#10;&#10;Description&#10;     Answer an attribute for the authenticated user.&#10;&#10;Parameters:&#10;    string $key - attribute name&#10;&#10;Return:&#10;   string for a single value or an array if multiple values exist;;d4,1253;;b1,5;;mstring $key;;p">
</treenode>
<treenode node="getAttributes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1193;5;1202;;;;vpos;;varray;;r&#10;Definition&#10;    getAttributes()&#10;&#10;Description&#10;     Answer attributes about the authenticated user.;;d4,1194;;b1,5;;m">
</treenode>
<treenode node="getProxiedService;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;863;5;876;;;;vpos;;vCAS_ProxiedService;;r&#10;Definition&#10;    getProxiedService ($type)&#10;&#10;Description&#10;     Answer a proxy-authenticated service handler.&#10;&#10;Parameters:&#10;    string $type - The service type;;d4,864;;b1,5;;mstring $type;;p">
</treenode>
<treenode node="getProxies;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1767;5;1772;;;;vpos;;varray;;r&#10;Definition&#10;    getProxies ()&#10;&#10;Description&#10;     Answer an array of proxies that are sitting in front of this application. This method will only return a non-empty array if we have received and validated a Proxy Ticket.;;d4,1768;;b1,5;;m">
</treenode>
<treenode node="getServerLoginURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1284;5;1289;;;;vpos;;vthe;;r&#10;Definition&#10;    getServerLoginURL()&#10;&#10;Description&#10;     This method returns the URL to be used to login. or phpCAS::isAuthenticated().&#10;&#10;Return:&#10;   login name of the authenticated user;;d4,1285;;b1,5;;m">
</treenode>
<treenode node="getServerLogoutURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1392;5;1397;;;;vpos;;vthe;;r&#10;Definition&#10;    getServerLogoutURL()&#10;&#10;Description&#10;     This method returns the URL to be used to login. or phpCAS::isAuthenticated().&#10;&#10;Return:&#10;   login name of the authenticated user;;d4,1393;;b1,5;;m">
</treenode>
<treenode node="getServiceURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1584;5;1588;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceURL()&#10;&#10;Description&#10;     Get the URL that is set as the CAS service parameter.&#10;&#10;Return:&#10;   Service Url;;d4,1585;;b1,5;;m">
</treenode>
<treenode node="getUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1174;5;1183;;;;vpos;;vstring;;r&#10;Definition&#10;    getUser()&#10;&#10;Description&#10;     This method returns the CAS user&apos;s login name.&#10;&#10;Return:&#10;   the login name of the authenticated user;;d4,1175;;b1,5;;m">
</treenode>
<treenode node="getVerbose;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;495;5;498;;;;vpos;;vboot;;r&#10;Definition&#10;    getVerbose()&#10;&#10;Description&#10;     Show is verbose mode is on&#10;&#10;Return:&#10;   verbose;;d4,496;;b1,5;;m">
</treenode>
<treenode node="getVersion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;713;5;716;;;;vpos;;vthe;;r&#10;Definition&#10;    getVersion()&#10;&#10;Description&#10;     This method returns the phpCAS version.&#10;&#10;Return:&#10;   phpCAS version;;d4,714;;b1,5;;m">
</treenode>
<treenode node="handleLogoutRequests;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1271;5;1276;;;;vpos;;vvoid;;r&#10;Definition&#10;    handleLogoutRequests($check_client = true, $allowed_clients = false)&#10;&#10;Description&#10;     Handle logout requests.&#10;&#10;Parameters:&#10;    bool $check_client - additional safety check&#10;    array $allowed_clients - array of allowed clients;;d4,1272;;b1,5;;mbool $check_client;;parray $allowed_clients;;p">
</treenode>
<treenode node="hasAttribute;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1232;5;1241;;;;vpos;;vbool;;r&#10;Definition&#10;    hasAttribute($key)&#10;&#10;Description&#10;     Answer true if an attribute exists for the authenticated user.&#10;&#10;Parameters:&#10;    string $key - attribute name;;d4,1233;;b1,5;;mstring $key;;p">
</treenode>
<treenode node="hasAttributes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1212;5;1221;;;;vpos;;vbool;;r&#10;Definition&#10;    hasAttributes()&#10;&#10;Description&#10;     Answer true if there are attributes for the authenticated user.;;d4,1213;;b1,5;;m">
</treenode>
<treenode node="initializeProxiedService;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;890;5;899;;;;vpos;;vvoid;;r&#10;Definition&#10;    initializeProxiedService (CAS_ProxiedService $proxiedService)&#10;&#10;Description&#10;     Initialize a proxied-service handler with the proxy-ticket it should use.&#10;&#10;Parameters:&#10;    CAS_ProxiedService $proxiedService - Proxied Service Handler;;d4,891;;b1,5;;mCAS_ProxiedService $proxiedService;;p">
</treenode>
<treenode node="isAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1138;5;1151;;;;vpos;;vtrue;;r&#10;Definition&#10;    isAuthenticated()&#10;&#10;Description&#10;     This method is called to check if the user is authenticated (previously or by tickets given in the URL).&#10;&#10;Return:&#10;   when the user is authenticated;;d4,1139;;b1,5;;m">
</treenode>
<treenode node="isInitialized;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;415;5;418;;;;vpos;;vbool;;r&#10;Definition&#10;    isInitialized ()&#10;&#10;Description&#10;     Answer whether or not the client or proxy has been initialized;;d4,416;;b1,5;;m">
</treenode>
<treenode node="isSessionAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1160;5;1165;;;;vpos;;vbool;;r&#10;Definition&#10;    isSessionAuthenticated()&#10;&#10;Description&#10;     Checks whether authenticated based on $_SESSION. Useful to avoid server calls.&#10;&#10;Return:&#10;   true if authenticated, false otherwise;;d4,1161;;b1,5;;m">
</treenode>
<treenode node="log;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;508;5;531;;;;vpos;;vvoid;;r&#10;Definition&#10;    log($str)&#10;&#10;Description&#10;     Logs a string in debug mode.&#10;&#10;Parameters:&#10;    string $str - the string to write;;d4,509;;b1,5;;mstring $str;;p">
</treenode>
<treenode node="logout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1429;5;1452;;;;vpos;;vvoid;;r&#10;Definition&#10;    logout($params = &quot;&quot;)&#10;&#10;Description&#10;     This method is used to logout from CAS.&#10;&#10;Parameters:&#10;    string $params - an array that contains the optional url and;;d4,1430;;b1,5;;mstring $params;;p">
</treenode>
<treenode node="logoutWithRedirectService;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1462;5;1473;;;;vpos;;vvoid;;r&#10;Definition&#10;    logoutWithRedirectService($service)&#10;&#10;Description&#10;     This method is used to logout from CAS. Halts by redirecting to the CAS server.&#10;&#10;Parameters:&#10;    string $service - a URL that will be transmitted to the CAS server;;d4,1463;;b1,5;;mstring $service;;p">
</treenode>
<treenode node="logoutWithRedirectServiceAndUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1512;5;1532;;;;vpos;;vvoid;;r&#10;Definition&#10;    logoutWithRedirectServiceAndUrl($service, $url)&#10;&#10;Description&#10;     This method is used to logout from CAS. Halts by redirecting to the CAS server.&#10;&#10;Parameters:&#10;    string $service - a URL that will be transmitted to the CAS server&#10;    string $url - a URL that will be transmitted to the CAS server;;d4,1513;;b1,5;;mstring $service;;pstring $url;;p">
</treenode>
<treenode node="logoutWithUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1485;5;1498;;;;vpos;;vvoid;;r&#10;Definition&#10;    logoutWithUrl($url)&#10;&#10;Description&#10;     This method is used to logout from CAS. Halts by redirecting to the CAS server.&#10;&#10;Parameters:&#10;    string $url - a URL that will be transmitted to the CAS server;;d4,1486;;b1,5;;mstring $url;;p">
</treenode>
<treenode node="proxy;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;381;5;408;;;;vpos;;va;;r&#10;Definition&#10;    proxy($server_version, $server_hostname,&#10;        $server_port, $server_uri, $changeSessionID = true&#10;    )&#10;&#10;Description&#10;     phpCAS proxy initializer.&#10;&#10;Parameters:&#10;    string $server_version - the version of the CAS server&#10;    string $server_hostname - the hostname of the CAS server&#10;    string $server_port - the port the CAS server is running on&#10;    string $server_uri - the URI the CAS server is responding on&#10;    bool $changeSessionID - Allow phpCAS to change the session_id (Single&#10;&#10;Return:&#10;   newly created CAS_Client object;;d6,383;;b1,5;;mstring $server_version;;pstring $server_hostname;;pstring $server_port;;pstring $server_uri;;pbool $changeSessionID;;p">
</treenode>
<treenode node="renewAuthentication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1118;5;1130;;;;vpos;;vvoid;;r&#10;Definition&#10;    renewAuthentication()&#10;&#10;Description&#10;     This method is called to renew the authentication.;;d4,1119;;b1,5;;m">
</treenode>
<treenode node="retrievePT;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1599;5;1608;;;;vpos;;vstring;;r&#10;Definition&#10;    retrievePT($target_service, &amp; $err_code, &amp; $err_msg)&#10;&#10;Description&#10;     Retrieve a Proxy Ticket from the CAS server.&#10;&#10;Parameters:&#10;    string $target_service - Url string of service to proxy&#10;    string - &amp;$err_code      error code&#10;    string - &amp;$err_msg       error message&#10;&#10;Return:&#10;   Proxy Ticket;;d4,1600;;b1,5;;mstring $target_service;;pstring;;pstring;;p">
</treenode>
<treenode node="serviceMail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;950;5;963;;;;vpos;;vobject;;r&#10;Definition&#10;    serviceMail($url, $service, $flags, &amp; $err_code, &amp; $err_msg, &amp; $pt)&#10;&#10;Description&#10;     This method is used to access an IMAP/POP3/NNTP service.&#10;&#10;Parameters:&#10;    string $url - a string giving the URL of the service,&#10;    string $service - a string giving for CAS retrieve Proxy ticket&#10;    string $flags - options given to imap_open()&#10;    string - &amp;$err_code an error code Possible values are&#10;    string - &amp;$err_msg  an error message on failure&#10;    string - &amp;$pt       the Proxy Ticket (PT) retrieved from the CAS&#10;&#10;Return:&#10;   IMAP stream on success, false otherwise (in this later;;d4,951;;b1,5;;mstring $url;;pstring $service;;pstring $flags;;pstring;;pstring;;pstring;;p">
</treenode>
<treenode node="serviceWeb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;916;5;929;;;;vpos;;vbool;;r&#10;Definition&#10;    serviceWeb($url, &amp; $err_code, &amp; $output)&#10;&#10;Description&#10;     This method is used to access an HTTP[S] service.&#10;&#10;Parameters:&#10;    string $url - the service to access&#10;    string - &amp;$err_code an error code Possible values are&#10;    string - &amp;$output   the output of the service (also used to give an&#10;&#10;Return:&#10;   true on success, false otherwise (in this later case,;;d4,917;;b1,5;;mstring $url;;pstring;;pstring;;p">
</treenode>
<treenode node="setCacheTimesForAuthRecheck;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;985;5;994;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCacheTimesForAuthRecheck($n)&#10;&#10;Description&#10;     Set the times authentication will be cached before really accessing the CAS server in gateway mode: - -1: check only once, and then never again (until you pree login) - 0: always check - n: check every &quot;n&quot; time&#10;&#10;Parameters:&#10;    int $n - an integer;;d4,986;;b1,5;;mint $n;;p">
</treenode>
<treenode node="setCasAttributeParserCallback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1008;5;1013;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCasAttributeParserCallback($function, array $additionalArgs = array())&#10;&#10;Description&#10;     Set a callback function to be run when receiving CAS attributes&#10;&#10;Parameters:&#10;    string $function - Callback function&#10;    array $additionalArgs - optional array of arguments;;d4,1009;;b1,5;;mstring $function;;parray $additionalArgs;;p">
</treenode>
<treenode node="setCasClient;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1856;5;1859;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCasClient(\CAS_Client $client)&#10;&#10;Description&#10;     For testing purposes, use this method to set the client to a test double;;d4,1857;;b1,5;;mclient;;p">
</treenode>
<treenode node="setCasServerCACert;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1619;5;1631;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCasServerCACert($cert, $validate_cn = true)&#10;&#10;Description&#10;     Set the certificate of the CAS server CA and if the CN should be properly verified.&#10;&#10;Parameters:&#10;    string $cert - CA certificate file name&#10;    bool $validate_cn - Validate CN in certificate (default true);;d4,1620;;b1,5;;mstring $cert;;pbool $validate_cn;;p">
</treenode>
<treenode node="setDebug;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;438;5;469;;;;vpos;;vvoid;;r&#10;Definition&#10;    setDebug($filename = &apos;&apos;)&#10;&#10;Description&#10;     Set/unset debug mode&#10;&#10;Parameters:&#10;    string $filename - the name of the file used for logging, or false;;d4,439;;b1,5;;mstring $filename;;p">
</treenode>
<treenode node="setExtraCurlOption;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1678;5;1685;;;;vpos;;vvoid;;r&#10;Definition&#10;    setExtraCurlOption($key, $value)&#10;&#10;Description&#10;     Change CURL options. CURL is used to connect through HTTPS to CAS server&#10;&#10;Parameters:&#10;    string $key - the option key&#10;    string $value - the value to set;;d4,1679;;b1,5;;mstring $key;;pstring $value;;p">
</treenode>
<treenode node="setFixedCallbackURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1543;5;1555;;;;vpos;;vvoid;;r&#10;Definition&#10;    setFixedCallbackURL($url = &apos;&apos;)&#10;&#10;Description&#10;     Set the fixed URL that will be used by the CAS server to transmit the PGT. When this method is not called, a phpCAS script uses its own URL for the callback.&#10;&#10;Parameters:&#10;    string $url - the URL;;d4,1544;;b1,5;;mstring $url;;p">
</treenode>
<treenode node="setFixedServiceURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1565;5;1577;;;;vpos;;vvoid;;r&#10;Definition&#10;    setFixedServiceURL($url)&#10;&#10;Description&#10;     Set the fixed URL that will be set as the CAS service parameter. When this method is not called, a phpCAS script uses its own URL.&#10;&#10;Parameters:&#10;    string $url - the URL;;d4,1566;;b1,5;;mstring $url;;p">
</treenode>
<treenode node="setHTMLFooter;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;752;5;761;;;;vpos;;vvoid;;r&#10;Definition&#10;    setHTMLFooter($footer)&#10;&#10;Description&#10;     This method sets the HTML footer used for all outputs.&#10;&#10;Parameters:&#10;    string $footer - the HTML footer;;d4,753;;b1,5;;mstring $footer;;p">
</treenode>
<treenode node="setHTMLHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;734;5;743;;;;vpos;;vvoid;;r&#10;Definition&#10;    setHTMLHeader($header)&#10;&#10;Description&#10;     This method sets the HTML header used for all outputs.&#10;&#10;Parameters:&#10;    string $header - the HTML header;;d4,735;;b1,5;;mstring $header;;p">
</treenode>
<treenode node="setLang;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;688;5;697;;;;vpos;;vvoid;;r&#10;Definition&#10;    setLang($lang)&#10;&#10;Description&#10;     This method is used to set the language used by phpCAS.&#10;&#10;Parameters:&#10;    string $lang - string representing the language;;d4,689;;b1,5;;mstring $lang;;p">
</treenode>
<treenode node="setNoCasServerValidation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1638;5;1646;;;;vpos;;vvoid;;r&#10;Definition&#10;    setNoCasServerValidation()&#10;&#10;Description&#10;     Set no SSL validation for the CAS server.;;d4,1639;;b1,5;;m">
</treenode>
<treenode node="setNoClearTicketsFromUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1658;5;1665;;;;vpos;;vvoid;;r&#10;Definition&#10;    setNoClearTicketsFromUrl()&#10;&#10;Description&#10;     Disable the removal of a CAS-Ticket from the URL when authenticating DISABLING POSES A SECURITY RISK: We normally remove the ticket by an additional redirect as a security precaution to prevent a ticket in the HTTP_REFERRER or be carried over in the URL parameter;;d4,1659;;b1,5;;m">
</treenode>
<treenode node="setPGTStorage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;780;5;791;;;;vpos;;vvoid;;r&#10;Definition&#10;    setPGTStorage($storage)&#10;&#10;Description&#10;     This method can be used to set a custom PGT storage object.&#10;&#10;Parameters:&#10;    CAS_PGTStorage $storage - a PGT storage object that inherits from the;;d4,781;;b1,5;;mCAS_PGTStorage $storage;;p">
</treenode>
<treenode node="setPGTStorageDb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;810;5;822;;;;vpos;;vvoid;;r&#10;Definition&#10;    setPGTStorageDb($dsn_or_pdo, $username=&apos;&apos;,&#10;        $password=&apos;&apos;, $table=&apos;&apos;, $driver_options=null&#10;    )&#10;&#10;Description&#10;     This method is used to tell phpCAS to store the response of the CAS server to PGT requests in a database.&#10;&#10;Parameters:&#10;    string $dsn_or_pdo - a dsn string to use for creating a PDO&#10;    string $username - the username to use when connecting to the&#10;    string $password - the password to use when connecting to the&#10;    string $table - the table to use for storing and retrieving&#10;    string $driver_options - any driver options to use when connecting;;d6,812;;b1,5;;mstring $dsn_or_pdo;;pstring $username;;pstring $password;;pstring $table;;pstring $driver_options;;p">
</treenode>
<treenode node="setPGTStorageFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;832;5;843;;;;vpos;;vvoid;;r&#10;Definition&#10;    setPGTStorageFile($path = &apos;&apos;)&#10;&#10;Description&#10;     This method is used to tell phpCAS to store the response of the CAS server to PGT requests onto the filesystem.&#10;&#10;Parameters:&#10;    string $path - the path where the PGT&apos;s should be stored;;d4,833;;b1,5;;mstring $path;;p">
</treenode>
<treenode node="setPostAuthenticateCallback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1034;5;1039;;;;vpos;;vvoid;;r&#10;Definition&#10;    setPostAuthenticateCallback ($function, array $additionalArgs = array())&#10;&#10;Description&#10;     Set a callback function to be run when a user authenticates.&#10;&#10;Parameters:&#10;    string $function - Callback function&#10;    array $additionalArgs - optional array of arguments;;d4,1035;;b1,5;;mstring $function;;parray $additionalArgs;;p">
</treenode>
<treenode node="setServerLoginURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1299;5;1311;;;;vpos;;vvoid;;r&#10;Definition&#10;    setServerLoginURL($url = &apos;&apos;)&#10;&#10;Description&#10;     Set the login URL of the CAS server.&#10;&#10;Parameters:&#10;    string $url - the login URL;;d4,1300;;b1,5;;mstring $url;;p">
</treenode>
<treenode node="setServerLogoutURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1407;5;1419;;;;vpos;;vvoid;;r&#10;Definition&#10;    setServerLogoutURL($url = &apos;&apos;)&#10;&#10;Description&#10;     Set the logout URL of the CAS server.&#10;&#10;Parameters:&#10;    string $url - the logout URL;;d4,1408;;b1,5;;mstring $url;;p">
</treenode>
<treenode node="setServerProxyValidateURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1351;5;1363;;;;vpos;;vvoid;;r&#10;Definition&#10;    setServerProxyValidateURL($url = &apos;&apos;)&#10;&#10;Description&#10;     Set the proxyValidate URL of the CAS server. Used for all CAS versions of proxy URL validations Examples: CAS 1.0 http://www.exemple.com/ CAS 2.0 http://www.exemple.com/proxyValidate CAS 3.0 http://www.exemple.com/p3/proxyValidate&#10;&#10;Parameters:&#10;    string $url - the proxyValidate URL;;d4,1352;;b1,5;;mstring $url;;p">
</treenode>
<treenode node="setServerSamlValidateURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1372;5;1384;;;;vpos;;vvoid;;r&#10;Definition&#10;    setServerSamlValidateURL($url = &apos;&apos;)&#10;&#10;Description&#10;     Set the samlValidate URL of the CAS server.&#10;&#10;Parameters:&#10;    string $url - the samlValidate URL;;d4,1373;;b1,5;;mstring $url;;p">
</treenode>
<treenode node="setServerServiceValidateURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1325;5;1337;;;;vpos;;vvoid;;r&#10;Definition&#10;    setServerServiceValidateURL($url = &apos;&apos;)&#10;&#10;Description&#10;     Set the serviceValidate URL of the CAS server. Used for all CAS versions of URL validations. Examples: CAS 1.0 http://www.exemple.com/validate CAS 2.0 http://www.exemple.com/validateURL CAS 3.0 http://www.exemple.com/p3/serviceValidate&#10;&#10;Parameters:&#10;    string $url - the serviceValidate URL;;d4,1326;;b1,5;;mstring $url;;p">
</treenode>
<treenode node="setSessionIdSalt;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f19;1701;6;1706;;;;vpos;;vvoid;;r&#10;Definition&#10;    setSessionIdSalt($salt)&#10;&#10;Description&#10;     Set a salt/seed for the session-id hash to make it harder to guess.&#10;&#10;Parameters:&#10;    string $salt - The salt to combine with the session ticket;;d52,1701;;b1,5;;mstring $salt;;p">
</treenode>
<treenode node="setSingleSignoutCallback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1055;5;1060;;;;vpos;;vvoid;;r&#10;Definition&#10;    setSingleSignoutCallback ($function, array $additionalArgs = array())&#10;&#10;Description&#10;     Set a callback function to be run when a single-signout request is received. The callback function will be passed a $logoutTicket as its first parameter, followed by any $additionalArgs you pass. The $logoutTicket parameter is an opaque string that can be used to map a session-id to the logout request in order to support single-signout in applications that manage their own sessions (rather than letting phpCAS start and destroy the session).&#10;&#10;Parameters:&#10;    string $function - Callback function&#10;    array $additionalArgs - optional array of arguments;;d4,1056;;b1,5;;mstring $function;;parray $additionalArgs;;p">
</treenode>
<treenode node="setVerbose;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;480;5;487;;;;vpos;;vvoid;;r&#10;Definition&#10;    setVerbose($verbose)&#10;&#10;Description&#10;     Enable verbose errors messages in the website output This is a security relevant since internal status info may leak an may help an attacker. Default is therefore false&#10;&#10;Parameters:&#10;    bool $verbose - enable verbose output;;d4,481;;b1,5;;mbool $verbose;;p">
</treenode>
<treenode node="trace;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;578;5;582;;;;vpos;;vvoid;;r&#10;Definition&#10;    trace($str)&#10;&#10;Description&#10;     This method is used to log something in debug mode.&#10;&#10;Parameters:&#10;    string $str - string to log;;d4,579;;b1,5;;mstring $str;;p">
</treenode>
<treenode node="traceBegin;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;590;5;627;;;;vpos;;vvoid;;r&#10;Definition&#10;    traceBegin()&#10;&#10;Description&#10;     This method is used to indicate the start of the execution of a function in debug mode.;;d4,591;;b1,5;;m">
</treenode>
<treenode node="traceEnd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;637;5;653;;;;vpos;;vvoid;;r&#10;Definition&#10;    traceEnd($res = &apos;&apos;)&#10;&#10;Description&#10;     This method is used to indicate the end of the execution of a function in debug mode.&#10;&#10;Parameters:&#10;    string $res - the result of the function;;d4,638;;b1,5;;mstring $res;;p">
</treenode>
<treenode node="traceExit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;660;5;667;;;;vpos;;vvoid;;r&#10;Definition&#10;    traceExit()&#10;&#10;Description&#10;     This method is used to indicate the end of the execution of the program;;d4,661;;b1,5;;m">
</treenode>
</treenode>
<treenode node="PHPMailer;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f0;30;1;4419;;;;vpos;;v;;r&#10;Definition&#10;    class PHPMailer&#10;&#10;Description&#10;     PHPMailer - PHP email creation and transport class.;;d0,31;;b0,0;;m">
<treenode node="MAX_LINE_LENGTH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f9;706;25;706;;;;vposint;;v;;r998;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STD_LINE_LENGTH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f9;716;25;716;;;;vposint;;v;;r76;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STOP_CONTINUE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f9;685;23;685;;;;vposint;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STOP_CRITICAL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f9;692;23;692;;;;vposint;;v;;r2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STOP_MESSAGE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f9;678;22;678;;;;vposint;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="VERSION;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f9;671;17;671;;;;vposstring;;v;;r&apos;6.0.3&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;723;5;730;;;;vpos;;v;;r&#10;Definition&#10;    __construct($exceptions = null)&#10;&#10;Description&#10;     Constructor.&#10;&#10;Parameters:&#10;    bool $exceptions - Should we throw external exceptions?;;d4,724;;b1,0;;mbool $exceptions;;p">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;735;5;739;;;;vpos;;v;;r&#10;Definition&#10;    __destruct()&#10;&#10;Description&#10;     Destructor.;;d4,736;;b1,0;;m">
</treenode>
<treenode node="_mime_types;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;3817;5;3938;;;;vpos;;vstring;;r&#10;Definition&#10;    _mime_types($ext = &apos;&apos;)&#10;&#10;Description&#10;     Get the MIME type for a file extension.&#10;&#10;Parameters:&#10;    string $ext - File extension&#10;&#10;Return:&#10;   MIME type of file;;d4,3818;;b1,5;;mstring $ext;;p">
</treenode>
<treenode node="addAddress;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;899;5;902;;;;vpos;;vbool;;r&#10;Definition&#10;    addAddress($address, $name = &apos;&apos;)&#10;&#10;Description&#10;     Add a &quot;To&quot; address.&#10;&#10;Parameters:&#10;    string $address - The email address to send to&#10;    string $name&#10;&#10;Return:&#10;   true on success, false if address already used or invalid in some way;;d4,900;;b1,0;;mstring $address;;pstring $name;;p">
</treenode>
<treenode node="addAnAddress;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;1012;5;1055;;;;vpos;;vbool;;r&#10;Definition&#10;    addAnAddress($kind, $address, $name = &apos;&apos;)&#10;&#10;Description&#10;     Add an address to one of the recipient arrays or to the ReplyTo array. Addresses that have been added already return false, but do not throw exceptions.&#10;&#10;Parameters:&#10;    string $kind - One of &apos;to&apos;, &apos;cc&apos;, &apos;bcc&apos;, or &apos;ReplyTo&apos;&#10;    string $address - The email address to send, resp&#10;    string $name&#10;&#10;Return:&#10;   true on success, false if address already used or invalid in some way;;d4,1013;;b2,0;;mstring $kind;;pstring $address;;pstring $name;;p">
</treenode>
<treenode node="addAttachment;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2756;5;2794;;;;vpos;;vbool;;r&#10;Definition&#10;    addAttachment($path, $name = &apos;&apos;, $encoding = &apos;base64&apos;, $type = &apos;&apos;, $disposition = &apos;attachment&apos;)&#10;&#10;Description&#10;     Add an attachment from a path on the filesystem. Never use a user-supplied path to a file! Returns false if the file could not be found or read.&#10;&#10;Parameters:&#10;    string $path - Path to the attachment&#10;    string $name - Overrides the attachment name&#10;    string $encoding - File encoding (see $Encoding)&#10;    string $type - File extension (MIME) type&#10;    string $disposition - Disposition to use;;d4,2757;;b1,0;;mstring $path;;pstring $name;;pstring $encoding;;pstring $type;;pstring $disposition;;p">
</treenode>
<treenode node="addBCC;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;925;5;928;;;;vpos;;vbool;;r&#10;Definition&#10;    addBCC($address, $name = &apos;&apos;)&#10;&#10;Description&#10;     Add a &quot;BCC&quot; address.&#10;&#10;Parameters:&#10;    string $address - The email address to send to&#10;    string $name&#10;&#10;Return:&#10;   true on success, false if address already used or invalid in some way;;d4,926;;b1,0;;mstring $address;;pstring $name;;p">
</treenode>
<treenode node="addCC;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;912;5;915;;;;vpos;;vbool;;r&#10;Definition&#10;    addCC($address, $name = &apos;&apos;)&#10;&#10;Description&#10;     Add a &quot;CC&quot; address.&#10;&#10;Parameters:&#10;    string $address - The email address to send to&#10;    string $name&#10;&#10;Return:&#10;   true on success, false if address already used or invalid in some way;;d4,913;;b1,0;;mstring $address;;pstring $name;;p">
</treenode>
<treenode node="addCustomHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3652;5;3660;;;;vpos;;v;;r&#10;Definition&#10;    addCustomHeader($name, $value = null)&#10;&#10;Description&#10;     Add a custom header. $name value can be overloaded to contain both header name and value (name:value).&#10;&#10;Parameters:&#10;    string $name - Custom header name&#10;    string|null $value - Header value;;d4,3653;;b1,0;;mstring $name;;pstring|null $value;;p">
</treenode>
<treenode node="addEmbeddedImage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3280;5;3311;;;;vpos;;vbool;;r&#10;Definition&#10;    addEmbeddedImage($path, $cid, $name = &apos;&apos;, $encoding = &apos;base64&apos;, $type = &apos;&apos;, $disposition = &apos;inline&apos;)&#10;&#10;Description&#10;     Add an embedded (inline) attachment from a file. This can include images, sounds, and just about any other document type. These differ from &apos;regular&apos; attachments in that they are intended to be displayed inline with the message, not just attached for download. This is used in HTML messages that embed the images the HTML refers to using the $cid value. Never use a user-supplied path to a file!&#10;&#10;Parameters:&#10;    string $path - Path to the attachment&#10;    string $cid - Content ID of the attachment;s Use this to reference&#10;    string $name - Overrides the attachment name&#10;    string $encoding - File encoding (see $Encoding)&#10;    string $type - File MIME type&#10;    string $disposition - Disposition to use&#10;&#10;Return:&#10;   True on successfully adding an attachment;;d4,3281;;b1,0;;mstring $path;;pstring $cid;;pstring $name;;pstring $encoding;;pstring $type;;pstring $disposition;;p">
</treenode>
<treenode node="addOrEnqueueAnAddress;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;957;5;998;;;;vpos;;vbool;;r&#10;Definition&#10;    addOrEnqueueAnAddress($kind, $address, $name)&#10;&#10;Description&#10;     Add an address to one of the recipient arrays or to the ReplyTo array. Because PHPMailer can&apos;t validate addresses with an IDN without knowing the PHPMailer::$CharSet (that can still be modified after calling this function), addition of such addresses is delayed until send(). Addresses that have been added already return false, but do not throw exceptions.&#10;&#10;Parameters:&#10;    string $kind - One of &apos;to&apos;, &apos;cc&apos;, &apos;bcc&apos;, or &apos;ReplyTo&apos;&#10;    string $address - The email address to send, resp&#10;    string $name&#10;&#10;Return:&#10;   true on success, false if address already used or invalid in some way;;d4,958;;b2,0;;mstring $kind;;pstring $address;;pstring $name;;p">
</treenode>
<treenode node="addrAppend;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2041;5;2049;;;;vpos;;vstring;;r&#10;Definition&#10;    addrAppend($type, $addr)&#10;&#10;Description&#10;     Create recipient headers.&#10;&#10;Parameters:&#10;    string $type&#10;    array $addr - An array of recipients,;;d4,2042;;b1,0;;mstring $type;;parray $addr;;p">
</treenode>
<treenode node="addReplyTo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;938;5;941;;;;vpos;;vbool;;r&#10;Definition&#10;    addReplyTo($address, $name = &apos;&apos;)&#10;&#10;Description&#10;     Add a &quot;Reply-To&quot; address.&#10;&#10;Parameters:&#10;    string $address - The email address to reply to&#10;    string $name&#10;&#10;Return:&#10;   true on success, false if address already used or invalid in some way;;d4,939;;b1,0;;mstring $address;;pstring $name;;p">
</treenode>
<treenode node="addrFormat;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2059;5;2068;;;;vpos;;vstring;;r&#10;Definition&#10;    addrFormat($addr)&#10;&#10;Description&#10;     Format an address for use in a message header.&#10;&#10;Parameters:&#10;    array $addr - A 2-element indexed array, element 0 containing an address, element 1 containing a name like;;d4,2060;;b1,0;;marray $addr;;p">
</treenode>
<treenode node="addStringAttachment;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3237;5;3259;;;;vpos;;v;;r&#10;Definition&#10;    addStringAttachment(&#10;        $string,&#10;        $filename,&#10;        $encoding = &apos;base64&apos;,&#10;        $type = &apos;&apos;,&#10;        $disposition = &apos;attachment&apos;&#10;    )&#10;&#10;Description&#10;     Add a string or binary attachment (non-filesystem). This method can be used to attach ascii or binary data, such as a BLOB record from a database.&#10;&#10;Parameters:&#10;    string $string - String attachment data&#10;    string $filename - Name of the attachment&#10;    string $encoding - File encoding (see $Encoding)&#10;    string $type - File extension (MIME) type&#10;    string $disposition - Disposition to use;;d6,3243;;b1,0;;mstring $string;;pstring $filename;;pstring $encoding;;pstring $type;;pstring $disposition;;p">
</treenode>
<treenode node="addStringEmbeddedImage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3330;5;3356;;;;vpos;;vbool;;r&#10;Definition&#10;    addStringEmbeddedImage(&#10;        $string,&#10;        $cid,&#10;        $name = &apos;&apos;,&#10;        $encoding = &apos;base64&apos;,&#10;        $type = &apos;&apos;,&#10;        $disposition = &apos;inline&apos;&#10;    )&#10;&#10;Description&#10;     Add an embedded stringified attachment. This can include images, sounds, and just about any other document type. If your filename doesn&apos;t contain an extension, be sure to set the $type to an appropriate MIME type.&#10;&#10;Parameters:&#10;    string $string - The attachment binary data&#10;    string $cid - Content ID of the attachment;s Use this to reference&#10;    string $name - A filename for the attachment&#10;    string $encoding - File encoding (see $Encoding), defaults to &apos;base64&apos;&#10;    string $type - MIME type - will be used in preference to any automatically derived type&#10;    string $disposition - Disposition to use&#10;&#10;Return:&#10;   True on successfully adding an attachment;;d6,3337;;b1,0;;mstring $string;;pstring $cid;;pstring $name;;pstring $encoding;;pstring $type;;pstring $disposition;;p">
</treenode>
<treenode node="alternativeExists;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3413;5;3416;;;;vpos;;vbool;;r&#10;Definition&#10;    alternativeExists()&#10;&#10;Description&#10;     Check if this message has an alternative body set.;;d4,3414;;b1,0;;m">
</treenode>
<treenode node="attachAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;2815;5;2925;;;;vpos;;vstring;;r&#10;Definition&#10;    attachAll($disposition_type, $boundary)&#10;&#10;Description&#10;     Attach all file, string, and binary attachments to the message. Returns an empty string on failure.&#10;&#10;Parameters:&#10;    string $disposition_type&#10;    string $boundary;;d4,2816;;b2,0;;mstring $disposition_type;;pstring $boundary;;p">
</treenode>
<treenode node="attachmentExists;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3397;5;3406;;;;vpos;;vbool;;r&#10;Definition&#10;    attachmentExists()&#10;&#10;Description&#10;     Check if an attachment (non-inline) is present.;;d4,3398;;b1,0;;m">
</treenode>
<treenode node="base64EncodeWrapMB;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3127;5;3157;;;;vpos;;vstring;;r&#10;Definition&#10;    base64EncodeWrapMB($str, $linebreak = null)&#10;&#10;Description&#10;     Encode and wrap long multibyte strings for mail headers without breaking lines within a character. Adapted from a function by paravoid.&#10;&#10;Parameters:&#10;    string $str - multi-byte text to wrap encode&#10;    string $linebreak - string to use as linefeed/end-of-line;;d4,3128;;b1,0;;mstring $str;;pstring $linebreak;;p">
</treenode>
<treenode node="cidExists;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;3365;5;3374;;;;vpos;;vbool;;r&#10;Definition&#10;    cidExists($cid)&#10;&#10;Description&#10;     Check if an embedded attachment is present with this cid.&#10;&#10;Parameters:&#10;    string $cid;;d4,3366;;b2,0;;mstring $cid;;p">
</treenode>
<treenode node="clearAddresses;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3436;5;3443;;;;vpos;;v;;r&#10;Definition&#10;    clearAddresses()&#10;&#10;Description&#10;     Clear all To recipients.;;d4,3437;;b1,0;;m">
</treenode>
<treenode node="clearAllRecipients;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3481;5;3488;;;;vpos;;v;;r&#10;Definition&#10;    clearAllRecipients()&#10;&#10;Description&#10;     Clear all recipient types.;;d4,3482;;b1,0;;m">
</treenode>
<treenode node="clearAttachments;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3493;5;3496;;;;vpos;;v;;r&#10;Definition&#10;    clearAttachments()&#10;&#10;Description&#10;     Clear all filesystem, string, and binary attachments.;;d4,3494;;b1,0;;m">
</treenode>
<treenode node="clearBCCs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3460;5;3467;;;;vpos;;v;;r&#10;Definition&#10;    clearBCCs()&#10;&#10;Description&#10;     Clear all BCC recipients.;;d4,3461;;b1,0;;m">
</treenode>
<treenode node="clearCCs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3448;5;3455;;;;vpos;;v;;r&#10;Definition&#10;    clearCCs()&#10;&#10;Description&#10;     Clear all CC recipients.;;d4,3449;;b1,0;;m">
</treenode>
<treenode node="clearCustomHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3501;5;3504;;;;vpos;;v;;r&#10;Definition&#10;    clearCustomHeaders()&#10;&#10;Description&#10;     Clear all custom headers.;;d4,3502;;b1,0;;m">
</treenode>
<treenode node="clearQueuedAddresses;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3423;5;3431;;;;vpos;;v;;r&#10;Definition&#10;    clearQueuedAddresses($kind)&#10;&#10;Description&#10;     Clear queued addresses of given kind.&#10;&#10;Parameters:&#10;    string $kind - &apos;to&apos;, &apos;cc&apos;, or &apos;bcc&apos;;;d4,3424;;b1,0;;mstring $kind;;p">
</treenode>
<treenode node="clearReplyTos;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3472;5;3476;;;;vpos;;v;;r&#10;Definition&#10;    clearReplyTos()&#10;&#10;Description&#10;     Clear all ReplyTo recipients.;;d4,3473;;b1,0;;m">
</treenode>
<treenode node="createBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2435;5;2645;;;;vpos;;vstring;;r&#10;Definition&#10;    createBody()&#10;&#10;Description&#10;     Assemble the message body. Returns an empty string on failure.&#10;&#10;Return:&#10;   The assembled message body;;d4,2436;;b1,0;;m">
</treenode>
<treenode node="createHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2250;5;2338;;;;vpos;;vstring;;r&#10;Definition&#10;    createHeader()&#10;&#10;Description&#10;     Assemble message headers.&#10;&#10;Return:&#10;   The assembled headers;;d4,2251;;b1,0;;m">
</treenode>
<treenode node="DKIM_Add;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4240;5;4311;;;;vpos;;vstring;;r&#10;Definition&#10;    DKIM_Add($headers_line, $subject, $body)&#10;&#10;Description&#10;     Create the DKIM header and body in a new message header.&#10;&#10;Parameters:&#10;    string $headers_line - Header lines&#10;    string $subject - Subject&#10;    string $body - Body;;d4,4241;;b1,0;;mstring $headers_line;;pstring $subject;;pstring $body;;p">
</treenode>
<treenode node="DKIM_BodyC;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4219;5;4229;;;;vpos;;vstring;;r&#10;Definition&#10;    DKIM_BodyC($body)&#10;&#10;Description&#10;     Generate a DKIM canonicalization body. Uses the &apos;simple&apos; algorithm from RFC6376 section 3.4.3. Canonicalized bodies should *always* use CRLF, regardless of mailer setting.&#10;&#10;Parameters:&#10;    string $body - Message Body;;d4,4220;;b1,0;;mstring $body;;p">
</treenode>
<treenode node="DKIM_HeaderC;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4177;5;4206;;;;vpos;;vstring;;r&#10;Definition&#10;    DKIM_HeaderC($signHeader)&#10;&#10;Description&#10;     Generate a DKIM canonicalization header. Uses the &apos;relaxed&apos; algorithm from RFC6376 section 3.4.2. Canonicalized headers should *always* use CRLF, regardless of mailer setting.&#10;&#10;Parameters:&#10;    string $signHeader - Header;;d4,4178;;b1,0;;mstring $signHeader;;p">
</treenode>
<treenode node="DKIM_QP;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4114;5;4128;;;;vpos;;vstring;;r&#10;Definition&#10;    DKIM_QP($txt)&#10;&#10;Description&#10;     Quoted-Printable-encode a DKIM header.&#10;&#10;Parameters:&#10;    string $txt;;d4,4115;;b1,0;;mstring $txt;;p">
</treenode>
<treenode node="DKIM_Sign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4139;5;4164;;;;vpos;;vstring;;r&#10;Definition&#10;    DKIM_Sign($signHeader)&#10;&#10;Description&#10;     Generate a DKIM signature.&#10;&#10;Parameters:&#10;    string $signHeader&#10;&#10;Return:&#10;   The DKIM signature value;;d4,4140;;b1,0;;mstring $signHeader;;p">
</treenode>
<treenode node="doCallback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;4393;5;4398;;;;vpos;;v;;r&#10;Definition&#10;    doCallback($isSent, $to, $cc, $bcc, $subject, $body, $from, $extra)&#10;&#10;Description&#10;     Perform a callback.&#10;&#10;Parameters:&#10;    bool $isSent&#10;    array $to&#10;    array $cc&#10;    array $bcc&#10;    string $subject&#10;    string $body&#10;    string $from&#10;    array $extra;;d4,4394;;b2,0;;mbool $isSent;;parray $to;;parray $cc;;parray $bcc;;pstring $subject;;pstring $body;;pstring $from;;parray $extra;;p">
</treenode>
<treenode node="edebug;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;782;5;829;;;;vpos;;v;;r&#10;Definition&#10;    edebug($str)&#10;&#10;Description&#10;     Output debugging info via user-defined method. Only generates output if SMTP debug output is enabled ( see SMTP::$do_debug).&#10;&#10;Parameters:&#10;    string $str;;d4,783;;b2,0;;mstring $str;;p">
</treenode>
<treenode node="encodeFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;2938;5;2956;;;;vpos;;vstring;;r&#10;Definition&#10;    encodeFile($path, $encoding = &apos;base64&apos;)&#10;&#10;Description&#10;     Encode a file attachment in requested format. Returns an empty string on failure.&#10;&#10;Parameters:&#10;    string $path - The full path to the file&#10;    string $encoding - The encoding to use;s one of &apos;base64&apos;, &apos;7bit&apos;, &apos;8bit&apos;, &apos;binary&apos;, &apos;quoted-printable&apos;;;d4,2939;;b2,0;;mstring $path;;pstring $encoding;;p">
</treenode>
<treenode node="encodeHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3010;5;3084;;;;vpos;;vstring;;r&#10;Definition&#10;    encodeHeader($str, $position = &apos;text&apos;)&#10;&#10;Description&#10;     Encode a header value (not including its label) optimally. Picks shortest of Q, B, or none. Result includes folding if needed. See RFC822 definitions for phrase, comment and text positions.&#10;&#10;Parameters:&#10;    string $str - The header value to encode&#10;    string $position - What context the string will be used in;;d4,3011;;b1,0;;mstring $str;;pstring $position;;p">
</treenode>
<treenode node="encodeQ;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3182;5;3224;;;;vpos;;vstring;;r&#10;Definition&#10;    encodeQ($str, $position = &apos;text&apos;)&#10;&#10;Description&#10;     Encode a string using Q encoding.&#10;&#10;Parameters:&#10;    string $str - the text to encode&#10;    string $position - Where the text is going to be used, see the RFC for what that means;;d4,3183;;b1,0;;mstring $str;;pstring $position;;p">
</treenode>
<treenode node="encodeQP;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3167;5;3170;;;;vpos;;vstring;;r&#10;Definition&#10;    encodeQP($string)&#10;&#10;Description&#10;     Encode a string in quoted-printable format. According to RFC2045 section 6.7.&#10;&#10;Parameters:&#10;    string $string - The text to encode;;d4,3168;;b1,0;;mstring $string;;p">
</treenode>
<treenode node="encodeString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2967;5;2998;;;;vpos;;vstring;;r&#10;Definition&#10;    encodeString($str, $encoding = &apos;base64&apos;)&#10;&#10;Description&#10;     Encode a string in requested format. Returns an empty string on failure.&#10;&#10;Parameters:&#10;    string $str - The text to encode&#10;    string $encoding - The encoding to use;s one of &apos;base64&apos;, &apos;7bit&apos;, &apos;8bit&apos;, &apos;binary&apos;, &apos;quoted-printable;;d4,2968;;b1,0;;mstring $str;;pstring $encoding;;p">
</treenode>
<treenode node="endBoundary;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;2688;5;2691;;;;vpos;;vstring;;r&#10;Definition&#10;    endBoundary($boundary)&#10;&#10;Description&#10;     Return the end of a message boundary.&#10;&#10;Parameters:&#10;    string $boundary;;d4,2689;;b2,0;;mstring $boundary;;p">
</treenode>
<treenode node="filenameToType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;3948;5;3958;;;;vpos;;vstring;;r&#10;Definition&#10;    filenameToType($filename)&#10;&#10;Description&#10;     Map a file name to a MIME type. Defaults to &apos;application/octet-stream&apos;, i.e.. arbitrary binary data.&#10;&#10;Parameters:&#10;    string $filename - A file name or full path, does not need to exist as a file;;d4,3949;;b1,5;;mstring $filename;;p">
</treenode>
<treenode node="generateId;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;2411;5;2425;;;;vpos;;vstring;;r&#10;Definition&#10;    generateId()&#10;&#10;Description&#10;     Create a unique ID to use for boundaries.;;d4,2412;;b2,0;;m">
</treenode>
<treenode node="getAllRecipientAddresses;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4376;5;4379;;;;vpos;;varray;;r&#10;Definition&#10;    getAllRecipientAddresses()&#10;&#10;Description&#10;     Allows for public read access to &apos;all_recipients&apos; property. Before the send() call, queued addresses (i.e. with IDN) are not yet included.;;d4,4377;;b1,0;;m">
</treenode>
<treenode node="getAttachments;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2801;5;2804;;;;vpos;;varray;;r&#10;Definition&#10;    getAttachments()&#10;&#10;Description&#10;     Return the array of attachments.;;d4,2802;;b1,0;;m">
</treenode>
<treenode node="getBccAddresses;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4354;5;4357;;;;vpos;;varray;;r&#10;Definition&#10;    getBccAddresses()&#10;&#10;Description&#10;     Allows for public read access to &apos;bcc&apos; property. Before the send() call, queued addresses (i.e. with IDN) are not yet included.;;d4,4355;;b1,0;;m">
</treenode>
<treenode node="getBoundary;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;2657;5;2679;;;;vpos;;vstring;;r&#10;Definition&#10;    getBoundary($boundary, $charSet, $contentType, $encoding)&#10;&#10;Description&#10;     Return the start of a message boundary.&#10;&#10;Parameters:&#10;    string $boundary&#10;    string $charSet&#10;    string $contentType&#10;    string $encoding;;d4,2658;;b2,0;;mstring $boundary;;pstring $charSet;;pstring $contentType;;pstring $encoding;;p">
</treenode>
<treenode node="getCcAddresses;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4343;5;4346;;;;vpos;;varray;;r&#10;Definition&#10;    getCcAddresses()&#10;&#10;Description&#10;     Allows for public read access to &apos;cc&apos; property. Before the send() call, queued addresses (i.e. with IDN) are not yet included.;;d4,4344;;b1,0;;m">
</treenode>
<treenode node="getCustomHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3667;5;3670;;;;vpos;;varray;;r&#10;Definition&#10;    getCustomHeaders()&#10;&#10;Description&#10;     Returns all custom headers.;;d4,3668;;b1,0;;m">
</treenode>
<treenode node="getLastMessageID;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1166;5;1169;;;;vpos;;vstring;;r&#10;Definition&#10;    getLastMessageID()&#10;&#10;Description&#10;     Return the Message-ID header of the last email. Technically this is the value from the last time the headers were created, but it&apos;s also the message ID of the last sent message except in pathological cases.;;d4,1167;;b1,0;;m">
</treenode>
<treenode node="getLE;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;4076;5;4079;;;;vpos;;vstring;;r&#10;Definition&#10;    getLE()&#10;&#10;Description&#10;     Return the current line break format string.;;d4,4077;;b1,5;;m">
</treenode>
<treenode node="getMailMIME;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2345;5;2390;;;;vpos;;vstring;;r&#10;Definition&#10;    getMailMIME()&#10;&#10;Description&#10;     Get the message MIME type headers.;;d4,2346;;b1,0;;m">
</treenode>
<treenode node="getOAuth;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4405;5;4408;;;;vpos;;vOAuth;;r&#10;Definition&#10;    getOAuth()&#10;&#10;Description&#10;     Get the OAuth instance.;;d4,4406;;b1,0;;m">
</treenode>
<treenode node="getReplyToAddresses;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4365;5;4368;;;;vpos;;varray;;r&#10;Definition&#10;    getReplyToAddresses()&#10;&#10;Description&#10;     Allows for public read access to &apos;ReplyTo&apos; property. Before the send() call, queued addresses (i.e. with IDN) are not yet included.;;d4,4366;;b1,0;;m">
</treenode>
<treenode node="getSentMIMEMessage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2401;5;2404;;;;vpos;;vstring;;r&#10;Definition&#10;    getSentMIMEMessage()&#10;&#10;Description&#10;     Returns the whole MIME message. Includes complete headers and body. Only valid post preSend().;;d4,2402;;b1,0;;m">
</treenode>
<treenode node="getSMTPInstance;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1683;5;1690;;;;vpos;;vSMTP;;r&#10;Definition&#10;    getSMTPInstance()&#10;&#10;Description&#10;     Get an instance to use for SMTP operations. Override this function to load your own SMTP implementation, or set one with setSMTPInstance.;;d4,1684;;b1,0;;m">
</treenode>
<treenode node="getToAddresses;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4332;5;4335;;;;vpos;;varray;;r&#10;Definition&#10;    getToAddresses()&#10;&#10;Description&#10;     Allows for public read access to &apos;to&apos; property. Before the send() call, queued addresses (i.e. with IDN) are not yet included.;;d4,4333;;b1,0;;m">
</treenode>
<treenode node="getTranslations;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2025;5;2028;;;;vpos;;varray;;r&#10;Definition&#10;    getTranslations()&#10;&#10;Description&#10;     Get the array of strings for the current language.;;d4,2026;;b1,0;;m">
</treenode>
<treenode node="has8bitChars;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3110;5;3113;;;;vpos;;vbool;;r&#10;Definition&#10;    has8bitChars($text)&#10;&#10;Description&#10;     Does a string contain any 8-bit chars (in any charset)?&#10;&#10;Parameters:&#10;    string $text;;d4,3111;;b1,0;;mstring $text;;p">
</treenode>
<treenode node="hasLineLongerThanMax;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;4321;5;4324;;;;vpos;;vbool;;r&#10;Definition&#10;    hasLineLongerThanMax($str)&#10;&#10;Description&#10;     Detect if a string contains a line longer than the maximum line length allowed by RFC 2822 section 2.1.1.&#10;&#10;Parameters:&#10;    string $str;;d4,4322;;b1,5;;mstring $str;;p">
</treenode>
<treenode node="hasMultiBytes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3093;5;3101;;;;vpos;;vbool;;r&#10;Definition&#10;    hasMultiBytes($str)&#10;&#10;Description&#10;     Check if a string contains multi-byte characters.&#10;&#10;Parameters:&#10;    string $str - multi-byte text to wrap encode;;d4,3094;;b1,0;;mstring $str;;p">
</treenode>
<treenode node="headerLine;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2724;5;2727;;;;vpos;;vstring;;r&#10;Definition&#10;    headerLine($name, $value)&#10;&#10;Description&#10;     Format a header line.&#10;&#10;Parameters:&#10;    string $name&#10;    string|int $value;;d4,2725;;b1,0;;mstring $name;;pstring|int $value;;p">
</treenode>
<treenode node="html2text;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3797;5;3808;;;;vpos;;vstring;;r&#10;Definition&#10;    html2text($html, $advanced = false)&#10;&#10;Description&#10;     Convert an HTML string into plain text. This is used by msgHTML(). Note - older versions of this function used a bundled advanced converter which was removed for license reasons in #232. Example usage:&#10;&#10;Parameters:&#10;    string $html - The HTML text to convert&#10;    bool|callable $advanced - Any boolean value to use the internal converter,;;d4,3798;;b1,0;;mstring $html;;pbool|callable $advanced;;p">
</treenode>
<treenode node="idnSupported;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;1261;5;1264;;;;vpos;;vbool;;r&#10;Definition&#10;    idnSupported()&#10;&#10;Description&#10;     Tells whether IDNs (Internationalized Domain Names) are supported or not. This requires the `intl` and `mbstring` PHP extensions.&#10;&#10;Return:&#10;   `true` if required functions for IDN support are present;;d4,1262;;b1,5;;m">
</treenode>
<treenode node="inlineImageExists;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3381;5;3390;;;;vpos;;vbool;;r&#10;Definition&#10;    inlineImageExists()&#10;&#10;Description&#10;     Check if an inline attachment is present.;;d4,3382;;b1,0;;m">
</treenode>
<treenode node="isError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3639;5;3642;;;;vpos;;vbool;;r&#10;Definition&#10;    isError()&#10;&#10;Description&#10;     Check if an error occurred.&#10;&#10;Return:&#10;   True if an error did occur;;d4,3640;;b1,0;;m">
</treenode>
<treenode node="isHTML;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;836;5;843;;;;vpos;;v;;r&#10;Definition&#10;    isHTML($isHtml = true)&#10;&#10;Description&#10;     Sets message type to HTML or plain.&#10;&#10;Parameters:&#10;    bool $isHtml - True for HTML mode;;d4,837;;b1,0;;mbool $isHtml;;p">
</treenode>
<treenode node="isMail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;856;5;859;;;;vpos;;v;;r&#10;Definition&#10;    isMail()&#10;&#10;Description&#10;     Send messages using PHP&apos;s mail() function.;;d4,857;;b1,0;;m">
</treenode>
<treenode node="isQmail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;879;5;889;;;;vpos;;v;;r&#10;Definition&#10;    isQmail()&#10;&#10;Description&#10;     Send messages using qmail.;;d4,880;;b1,0;;m">
</treenode>
<treenode node="isSendmail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;864;5;874;;;;vpos;;v;;r&#10;Definition&#10;    isSendmail()&#10;&#10;Description&#10;     Send messages using $Sendmail.;;d4,865;;b1,0;;m">
</treenode>
<treenode node="isShellSafe;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f21;1593;5;1616;;;;vpos;;vbool;;r&#10;Definition&#10;    isShellSafe($string)&#10;&#10;Description&#10;     Fix CVE-2016-10033 and CVE-2016-10045 by disallowing potentially unsafe shell characters. Note that escapeshellarg and escapeshellcmd are inadequate for our purposes, especially on Windows.&#10;&#10;Parameters:&#10;    string $string - The string to be validated;;d4,1594;;b2,5;;mstring $string;;p">
</treenode>
<treenode node="isSMTP;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;848;5;851;;;;vpos;;v;;r&#10;Definition&#10;    isSMTP()&#10;&#10;Description&#10;     Send messages using SMTP.;;d4,849;;b1,0;;m">
</treenode>
<treenode node="isValidHost;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;3579;5;3604;;;;vpos;;vbool;;r&#10;Definition&#10;    isValidHost($host)&#10;&#10;Description&#10;     Validate whether a string contains a valid value to use as a hostname or IP address. IPv6 addresses must include [], e.g. `[::1]`, not just `::1`.&#10;&#10;Parameters:&#10;    string $host - The host name or IP address to check;;d4,3580;;b1,5;;mstring $host;;p">
</treenode>
<treenode node="lang;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;3613;5;3632;;;;vpos;;vstring;;r&#10;Definition&#10;    lang($key)&#10;&#10;Description&#10;     Get an error message in the current language.&#10;&#10;Parameters:&#10;    string $key;;d4,3614;;b2,0;;mstring $key;;p">
</treenode>
<treenode node="mailPassthru;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f12;755;5;771;;;;vpos;;vbool;;r&#10;Definition&#10;    mailPassthru($to, $subject, $body, $header, $params)&#10;&#10;Description&#10;     Call mail() in a safe_mode-aware fashion. Also, unless sendmail_path points to sendmail (or something that claims to be sendmail), don&apos;t pass params (not a perfect fix, but it will do).&#10;&#10;Parameters:&#10;    string $to - To&#10;    string $subject - Subject&#10;    string $body - Message Body&#10;    string $header - Additional Header(s)&#10;    string|null $params - Params;;d4,756;;b3,0;;mstring $to;;pstring $subject;;pstring $body;;pstring $header;;pstring|null $params;;p">
</treenode>
<treenode node="mailSend;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;1630;5;1674;;;;vpos;;vbool;;r&#10;Definition&#10;    mailSend($header, $body)&#10;&#10;Description&#10;     Send mail using the PHP mail() function.&#10;&#10;Parameters:&#10;    string $header - The message headers&#10;    string $body - The message body;;d4,1631;;b2,0;;mstring $header;;pstring $body;;p">
</treenode>
<treenode node="mb_pathinfo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;3972;5;4006;;;;vpos;;vstring;;r&#10;Definition&#10;    mb_pathinfo($path, $options = null)&#10;&#10;Description&#10;     Multi-byte-safe pathinfo replacement. Drop-in replacement for pathinfo(), but multibyte- and cross-platform-safe.&#10;&#10;Parameters:&#10;    string $path - A filename or path, does not need to exist as a file&#10;    int|string $options - Either a PATHINFO_* constant,&#10;&#10;Return:&#10;   |array;;d4,3973;;b1,5;;mstring $path;;pint|string $options;;p">
</treenode>
<treenode node="msgHTML;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3690;5;3772;;;;vpos;;vstring;;r&#10;Definition&#10;    msgHTML($message, $basedir = &apos;&apos;, $advanced = false)&#10;&#10;Description&#10;     Create a message body from an HTML string. Automatically inlines images and creates a plain-text version by converting the HTML, overwriting any existing values in Body and AltBody. Do not source $message content from user input! $basedir is prepended when handling relative URLs, e.g. &lt;img src=&quot;/images/a.png&quot;&gt; and must not be empty will look for an image file in $basedir/images/a.png and convert it to inline. If you don&apos;t provide a $basedir, relative paths will be left untouched (and thus probably break in email) Converts data-uri images into embedded attachments. If you don&apos;t want to apply these transformations to your HTML, just set Body and AltBody directly.&#10;&#10;Parameters:&#10;    string $message - HTML message string&#10;    string $basedir - Absolute path to a base directory to prepend to relative paths to images&#10;    bool|callable $advanced - Whether to use the internal HTML to text converter&#10;&#10;Return:&#10;   $message The transformed message Body;;d4,3691;;b1,0;;mstring $message;;pstring $basedir;;pbool|callable $advanced;;p">
</treenode>
<treenode node="normalizeBreaks;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;4056;5;4069;;;;vpos;;vstring;;r&#10;Definition&#10;    normalizeBreaks($text, $breaktype = null)&#10;&#10;Description&#10;     Normalize line breaks in a string. Converts UNIX LF, Mac CR and Windows CRLF line breaks into a single line break format. Defaults to CRLF (for message bodies) and preserves consecutive breaks.&#10;&#10;Parameters:&#10;    string $text&#10;    string $breaktype - What kind of line break to use;s defaults to static::$LE;;d4,4057;;b1,5;;mstring $text;;pstring $breaktype;;p">
</treenode>
<treenode node="parseAddresses;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;1070;5;1114;;;;vpos;;varray;;r&#10;Definition&#10;    parseAddresses($addrstr, $useimap = true)&#10;&#10;Description&#10;     Parse and validate a string containing one or more RFC822-style comma-separated email addresses of the form &quot;display name &lt;address&gt;&quot; into an array of name/address pairs. Uses the imap_rfc822_parse_adrlist function if the IMAP extension is available. Note that quotes in the name part are removed.&#10;&#10;Parameters:&#10;    string $addrstr - The address list string&#10;    bool $useimap - Whether to use the IMAP extension to parse the list;;d4,1071;;b1,5;;mstring $addrstr;;pbool $useimap;;p">
</treenode>
<treenode node="postSend;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1471;5;1500;;;;vpos;;vbool;;r&#10;Definition&#10;    postSend()&#10;&#10;Description&#10;     Actually send a message via the selected mechanism.;;d4,1472;;b1,0;;m">
</treenode>
<treenode node="preSend;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1338;5;1462;;;;vpos;;vbool;;r&#10;Definition&#10;    preSend()&#10;&#10;Description&#10;     Prepare a message for sending.;;d4,1339;;b1,0;;m">
</treenode>
<treenode node="punyencodeAddress;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1280;5;1302;;;;vpos;;vstring;;r&#10;Definition&#10;    punyencodeAddress($address)&#10;&#10;Description&#10;     Converts IDN in given email address to its ASCII form, also known as punycode, if possible. Important: Address must be passed in same encoding as currently set in PHPMailer::$CharSet. This function silently returns unmodified address if: - No conversion is necessary (i.e. domain name is not an IDN, or is already in ASCII form) - Conversion to punycode is impossible (e.g. required PHP functions are not available) or fails for any reason (e.g. domain contains characters not allowed in an IDN).&#10;&#10;Parameters:&#10;    string $address - The email address to convert&#10;&#10;Return:&#10;   The encoded address in ASCII form;;d4,1281;;b1,0;;mstring $address;;p">
</treenode>
<treenode node="rfcDate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;3537;5;3544;;;;vpos;;vstring;;r&#10;Definition&#10;    rfcDate()&#10;&#10;Description&#10;     Return an RFC 822 formatted date.;;d4,3538;;b1,5;;m">
</treenode>
<treenode node="secureHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4041;5;4044;;;;vpos;;vstring;;r&#10;Definition&#10;    secureHeader($str)&#10;&#10;Description&#10;     Strip newlines to prevent header injection.&#10;&#10;Parameters:&#10;    string $str;;d4,4042;;b1,0;;mstring $str;;p">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1312;5;1329;;;;vpos;;vbool;;r&#10;Definition&#10;    send()&#10;&#10;Description&#10;     Create a message and send it. Uses the sending method specified by $Mailer.&#10;&#10;Return:&#10;   false on error - See the ErrorInfo property for details of the error;;d4,1313;;b1,0;;m">
</treenode>
<treenode node="sendmailSend;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;1514;5;1581;;;;vpos;;vbool;;r&#10;Definition&#10;    sendmailSend($header, $body)&#10;&#10;Description&#10;     Send mail using the $Sendmail program.&#10;&#10;Parameters:&#10;    string $header - The message headers&#10;    string $body - The message body;;d4,1515;;b2,0;;mstring $header;;pstring $body;;p">
</treenode>
<treenode node="serverHostname;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;3552;5;3569;;;;vpos;;vstring;;r&#10;Definition&#10;    serverHostname()&#10;&#10;Description&#10;     Get the server hostname. Returns &apos;localhost.localdomain&apos; if unknown.;;d4,3553;;b2,0;;m">
</treenode>
<treenode node="set;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4022;5;4032;;;;vpos;;vbool;;r&#10;Definition&#10;    set($name, $value = &apos;&apos;)&#10;&#10;Description&#10;     Set or reset instance properties. You should avoid this function - it&apos;s more verbose, less efficient, more error-prone and harder to debug than setting properties directly. Usage Example: `$mail-&gt;set(&apos;SMTPSecure&apos;, &apos;tls&apos;);s` is the same as: `$mail-&gt;SMTPSecure = &apos;tls&apos;;s`.&#10;&#10;Parameters:&#10;    string $name - The property name to set&#10;    mixed $value - The value to set the property to;;d4,4023;;b1,0;;mstring $name;;pmixed $value;;p">
</treenode>
<treenode node="setError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;3511;5;3530;;;;vpos;;v;;r&#10;Definition&#10;    setError($msg)&#10;&#10;Description&#10;     Add an error message to the error container.&#10;&#10;Parameters:&#10;    string $msg;;d4,3512;;b2,0;;mstring $msg;;p">
</treenode>
<treenode node="setFrom;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1127;5;1156;;;;vpos;;vbool;;r&#10;Definition&#10;    setFrom($address, $name = &apos;&apos;, $auto = true)&#10;&#10;Description&#10;     Set the From and FromName properties.&#10;&#10;Parameters:&#10;    string $address&#10;    string $name&#10;    bool $auto - Whether to also set the Sender address, defaults to true;;d4,1128;;b1,0;;mstring $address;;pstring $name;;pbool $auto;;p">
</treenode>
<treenode node="setLanguage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1956;5;2018;;;;vpos;;vbool;;r&#10;Definition&#10;    setLanguage($langcode = &apos;en&apos;, $lang_path = &apos;&apos;)&#10;&#10;Description&#10;     Set the language for error messages. Returns false if it cannot load the language file. The default language is English.&#10;&#10;Parameters:&#10;    string $langcode - ISO 639-1 2-character language code (e&#10;    string $lang_path - Path to the language file directory, with trailing separator (slash);;d4,1957;;b1,0;;mstring $langcode;;pstring $lang_path;;p">
</treenode>
<treenode node="setLE;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f21;4086;5;4089;;;;vpos;;v;;r&#10;Definition&#10;    setLE($le)&#10;&#10;Description&#10;     Set the line break format string, e.g. &quot;\r\n&quot;.&#10;&#10;Parameters:&#10;    string $le;;d4,4087;;b2,5;;mstring $le;;p">
</treenode>
<treenode node="setMessageType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;2697;5;2714;;;;vpos;;v;;r&#10;Definition&#10;    setMessageType()&#10;&#10;Description&#10;     Set the message type. PHPMailer only supports some preset message types, not arbitrary MIME structures.;;d4,2698;;b2,0;;m">
</treenode>
<treenode node="setOAuth;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4415;5;4418;;;;vpos;;v;;r&#10;Definition&#10;    setOAuth(OAuth $oauth)&#10;&#10;Description&#10;     Set an OAuth instance.&#10;&#10;Parameters:&#10;    OAuth $oauth;;d4,4416;;b1,0;;mOAuth $oauth;;p">
</treenode>
<treenode node="setSMTPInstance;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1699;5;1704;;;;vpos;;vSMTP;;r&#10;Definition&#10;    setSMTPInstance(SMTP $smtp)&#10;&#10;Description&#10;     Provide an instance to use for SMTP operations.&#10;&#10;Parameters:&#10;    SMTP $smtp;;d4,1700;;b1,0;;mSMTP $smtp;;p">
</treenode>
<treenode node="setWordWrap;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2226;5;2243;;;;vpos;;v;;r&#10;Definition&#10;    setWordWrap()&#10;&#10;Description&#10;     Apply word wrapping to the message body. Wraps the message body to the number of chars set in the WordWrap property. You should only do this to plain-text bodies as wrapping HTML tags may break them. This is called automatically by createBody(), so you don&apos;t need to call it yourself.;;d4,2227;;b1,0;;m">
</treenode>
<treenode node="sign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4099;5;4105;;;;vpos;;v;;r&#10;Definition&#10;    sign($cert_filename, $key_filename, $key_pass, $extracerts_filename = &apos;&apos;)&#10;&#10;Description&#10;     Set the public and private key files and password for S/MIME signing.&#10;&#10;Parameters:&#10;    string $cert_filename&#10;    string $key_filename&#10;    string $key_pass - Password for private key&#10;    string $extracerts_filename - Optional path to chain certificate;;d4,4100;;b1,0;;mstring $cert_filename;;pstring $key_filename;;pstring $key_pass;;pstring $extracerts_filename;;p">
</treenode>
<treenode node="smtpClose;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1936;5;1944;;;;vpos;;v;;r&#10;Definition&#10;    smtpClose()&#10;&#10;Description&#10;     Close the active SMTP session if one exists.;;d4,1937;;b1,0;;m">
</treenode>
<treenode node="smtpConnect;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1808;5;1931;;;;vpos;;vbool;;r&#10;Definition&#10;    smtpConnect($options = null)&#10;&#10;Description&#10;     Initiate a connection to an SMTP server. Returns false if the operation failed.&#10;&#10;Parameters:&#10;    array $options - An array of options compatible with stream_context_create();;d4,1809;;b1,0;;marray $options;;p">
</treenode>
<treenode node="smtpSend;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;1721;5;1794;;;;vpos;;vbool;;r&#10;Definition&#10;    smtpSend($header, $body)&#10;&#10;Description&#10;     Send mail via SMTP. Returns false if there is a bad MAIL FROM, RCPT, or DATA input.&#10;&#10;Parameters:&#10;    string $header - The message headers&#10;    string $body - The message body;;d4,1722;;b2,0;;mstring $header;;pstring $body;;p">
</treenode>
<treenode node="textLine;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2736;5;2739;;;;vpos;;vstring;;r&#10;Definition&#10;    textLine($value)&#10;&#10;Description&#10;     Return a formatted mail line.&#10;&#10;Parameters:&#10;    string $value;;d4,2737;;b1,0;;mstring $value;;p">
</treenode>
<treenode node="utf8CharBoundary;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2182;5;2218;;;;vpos;;vint;;r&#10;Definition&#10;    utf8CharBoundary($encodedText, $maxLength)&#10;&#10;Description&#10;     Find the last character boundary prior to $maxLength in a utf-8 quoted-printable encoded string. Original written by Colin Brown.&#10;&#10;Parameters:&#10;    string $encodedText - utf-8 QP text&#10;    int $maxLength - Find the last character boundary prior to this length;;d4,2183;;b1,0;;mstring $encodedText;;pint $maxLength;;p">
</treenode>
<treenode node="validateAddress;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;1195;5;1253;;;;vpos;;vbool;;r&#10;Definition&#10;    validateAddress($address, $patternselect = null)&#10;&#10;Description&#10;     Check that a string looks like an email address. Validation patterns supported: * `auto` Pick best pattern automatically;s * `pcre8` Use the squiloople.com pattern, requires PCRE &gt; 8.0;s * `pcre` Use old PCRE implementation;s * `php` Use PHP built-in FILTER_VALIDATE_EMAIL;s * `html5` Use the pattern given by the HTML5 spec for &apos;email&apos; type form input elements. * `noregex` Don&apos;t use a regex: super fast, really dumb. Alternatively you may pass in a callable to inject your own validator, for example:&#10;&#10;Parameters:&#10;    string $address - The email address to check&#10;    string|callable $patternselect - Which pattern to use;;d4,1196;;b1,5;;mstring $address;;pstring|callable $patternselect;;p">
</treenode>
<treenode node="wrapText;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2082;5;2170;;;;vpos;;vstring;;r&#10;Definition&#10;    wrapText($message, $length, $qp_mode = false)&#10;&#10;Description&#10;     Word-wrap message. For use with mailers that do not automatically perform wrapping and for quoted-printable encoded messages. Original written by philippe.&#10;&#10;Parameters:&#10;    string $message - The message to wrap&#10;    int $length - The line length to wrap to&#10;    bool $qp_mode - Whether to run in Quoted-Printable mode;;d4,2083;;b1,0;;mstring $message;;pint $length;;pbool $qp_mode;;p">
</treenode>
</treenode>
<treenode node="QRcode;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f0;290;1;2862;;;;vpos;;v;;r&#10;Definition&#10;    class QRcode&#10;&#10;Description&#10;      class QRcode Class to create QR-code arrays for TCPDF class. QR Code symbol is a 2D barcode that can be scanned by handy terminals such as a mobile phone with CCD. The capacity of QR Code is up to 7000 digits or 4000 characters, and has high robustness. This class supports QR Code model 2, described in JIS (Japanese Industrial Standards) X0510:2004 or ISO/IEC 18004. Currently the following features are not supported: ECI and FNC1 mode, Micro QR Code, QR Code model 1, Structured mode.;;d13,290;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f8;638;2;672;;;;vpos;;v;;r&#10;Definition&#10;    __construct($code, $eclevel = &apos;L&apos;)&#10;&#10;Description&#10;     This is the class constructor. Creates a QRcode object&#10;&#10;Parameters:&#10;     $code - (string) code to represent using QRcode&#10;     $eclevel - (string) error level: &lt;ul&gt;&lt;li&gt;L : About 7% or less errors can be corrected;;d52,638;;b1,0;;m $code;;p $eclevel;;p">
</treenode>
<treenode node="allocate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2128;2;2130;;;;vpos;;varray;;r&#10;Definition&#10;    allocate($setLength)&#10;&#10;Description&#10;     Return an array with zeros&#10;&#10;Parameters:&#10;     $setLength - (int) array size;;d42,2128;;b2,0;;m $setLength;;p">
</treenode>
<treenode node="appendBitstream;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2182;2;2190;;;;vpos;;varray;;r&#10;Definition&#10;    appendBitstream($bitstream, $append)&#10;&#10;Description&#10;     Append one bitstream to another&#10;&#10;Parameters:&#10;     $bitstream - (array) original bitstream&#10;     $append - (array) bitstream to append&#10;&#10;Return:&#10;   bitstream;;d58,2182;;b2,0;;m $bitstream;;p $append;;p">
</treenode>
<treenode node="appendBytes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2214;2;2220;;;;vpos;;varray;;r&#10;Definition&#10;    appendBytes($bitstream, $size, $data)&#10;&#10;Description&#10;     Append one bitstream created from bytes to another&#10;&#10;Parameters:&#10;     $bitstream - (array) original bitstream&#10;     $size - (int) size&#10;     $data - (array) bytes&#10;&#10;Return:&#10;   bitstream;;d59,2214;;b2,0;;m $bitstream;;p $size;;p $data;;p">
</treenode>
<treenode node="appendNewInputItem;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;1695;2;1701;;;;vpos;;vitems;;r&#10;Definition&#10;    appendNewInputItem($items, $mode, $size, $data)&#10;&#10;Description&#10;     Append data to an input object. The data is copied and appended to the input object.&#10;&#10;Parameters:&#10;     $items - (arrray) input items&#10;     $mode - (int) encoding mode&#10;     $size - (int) size of data (byte)&#10;     $data - (array) array of input data;;d68,1695;;b2,0;;m $items;;p $mode;;p $size;;p $data;;p">
</treenode>
<treenode node="appendNum;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2199;2;2205;;;;vpos;;varray;;r&#10;Definition&#10;    appendNum($bitstream, $bits, $num)&#10;&#10;Description&#10;     Append one bitstream created from number to another&#10;&#10;Parameters:&#10;     $bitstream - (array) original bitstream&#10;     $bits - (int) number of bits&#10;     $num - (int) number&#10;&#10;Return:&#10;   bitstream;;d56,2199;;b2,0;;m $bitstream;;p $bits;;p $num;;p">
</treenode>
<treenode node="appendPaddingBit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2054;2;2080;;;;vpos;;varray;;r&#10;Definition&#10;    appendPaddingBit($bstream)&#10;&#10;Description&#10;     Append Padding Bit to bitstream&#10;&#10;Parameters:&#10;     $bstream - (array)&#10;&#10;Return:&#10;   bitstream;;d48,2054;;b2,0;;m $bstream;;p">
</treenode>
<treenode node="binarize;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;688;2;697;;;;vpos;;varray;;r&#10;Definition&#10;    binarize($frame)&#10;&#10;Description&#10;     Convert the frame in binary form&#10;&#10;Parameters:&#10;     $frame - (array) array to binarize&#10;&#10;Return:&#10;   frame in binary form;;d37,688;;b2,0;;m $frame;;p">
</treenode>
<treenode node="bitstreamToByte;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2227;2;2257;;;;vpos;;varray;;r&#10;Definition&#10;    bitstreamToByte($bstream)&#10;&#10;Description&#10;     Convert bitstream to bytes&#10;&#10;Parameters:&#10;     $bstream - (array) original bitstream&#10;&#10;Return:&#10;   of bytes;;d47,2227;;b2,0;;m $bstream;;p">
</treenode>
<treenode node="calcN1N3;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1126;2;1149;;;;vpos;;vint;;r&#10;Definition&#10;    calcN1N3($length)&#10;&#10;Description&#10;     calcN1N3&#10;&#10;Parameters:&#10;     $length - (int)&#10;&#10;Return:&#10;   demerit;;d39,1126;;b2,0;;m $length;;p">
</treenode>
<treenode node="calcParity;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1729;2;1739;;;;vpos;;vint;;r&#10;Definition&#10;    calcParity($items)&#10;&#10;Description&#10;     calcParity&#10;&#10;Parameters:&#10;     $items - (array)&#10;&#10;Return:&#10;   parity;;d40,1729;;b2,0;;m $items;;p">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;1858;2;1883;;;;vpos;;vboolean;;r&#10;Definition&#10;    check($mode, $size, $data)&#10;&#10;Description&#10;     Validate the input data.&#10;&#10;Parameters:&#10;     $mode - (int) encoding mode&#10;     $size - (int) size of data (byte)&#10;     $data - (array) data to validate&#10;&#10;Return:&#10;   true in case of valid data, false otherwise;;d47,1858;;b2,0;;m $mode;;p $size;;p $data;;p">
</treenode>
<treenode node="checkModeAn;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1771;2;1778;;;;vpos;;vboolean;;r&#10;Definition&#10;    checkModeAn($size, $data)&#10;&#10;Description&#10;     checkModeAn&#10;&#10;Parameters:&#10;     $size - (int)&#10;     $data - (array)&#10;&#10;Return:&#10;   true or false;;d47,1771;;b2,0;;m $size;;p $data;;p">
</treenode>
<treenode node="checkModeKanji;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1838;2;1849;;;;vpos;;vboolean;;r&#10;Definition&#10;    checkModeKanji($size, $data)&#10;&#10;Description&#10;     checkModeKanji&#10;&#10;Parameters:&#10;     $size - (int)&#10;     $data - (array)&#10;&#10;Return:&#10;   true or false;;d50,1838;;b2,0;;m $size;;p $data;;p">
</treenode>
<treenode node="checkModeNum;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1747;2;1754;;;;vpos;;vboolean;;r&#10;Definition&#10;    checkModeNum($size, $data)&#10;&#10;Description&#10;     checkModeNum&#10;&#10;Parameters:&#10;     $size - (int)&#10;     $data - (array)&#10;&#10;Return:&#10;   true or false;;d48,1747;;b2,0;;m $size;;p $data;;p">
</treenode>
<treenode node="convertData;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2025;2;2047;;;;vpos;;varray;;r&#10;Definition&#10;    convertData($items)&#10;&#10;Description&#10;     convertData&#10;&#10;Parameters:&#10;     $items - (array)&#10;&#10;Return:&#10;   items;;d41,2025;;b2,0;;m $items;;p">
</treenode>
<treenode node="createBitStream;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2010;2;2018;;;;vpos;;varray;;r&#10;Definition&#10;    createBitStream($items)&#10;&#10;Description&#10;     createBitStream&#10;&#10;Parameters:&#10;     $items - (array)&#10;&#10;Return:&#10;   of items and total bits;;d45,2010;;b2,0;;m $items;;p">
</treenode>
<treenode node="createFrame;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;2529;2;2587;;;;vpos;;vArray;;r&#10;Definition&#10;    createFrame($version)&#10;&#10;Description&#10;     Return a copy of initialized frame.&#10;&#10;Parameters:&#10;     $version - (int) version&#10;&#10;Return:&#10;   of unsigned char;;d42,2529;;b2,0;;m $version;;p">
</treenode>
<treenode node="eat8;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1395;2;1438;;;;vpos;;vint;;r&#10;Definition&#10;    eat8()&#10;&#10;Description&#10;     eat8&#10;&#10;Return:&#10;   run;;d28,1395;;b2,0;;m">
</treenode>
<treenode node="eatAn;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1343;2;1376;;;;vpos;;vint;;r&#10;Definition&#10;    eatAn()&#10;&#10;Description&#10;     eatAn&#10;&#10;Return:&#10;   run;;d29,1343;;b2,0;;m">
</treenode>
<treenode node="eatKanji;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1382;2;1389;;;;vpos;;vint;;r&#10;Definition&#10;    eatKanji()&#10;&#10;Description&#10;     eatKanji&#10;&#10;Return:&#10;   run;;d32,1382;;b2,0;;m">
</treenode>
<treenode node="eatNum;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1311;2;1337;;;;vpos;;vint;;r&#10;Definition&#10;    eatNum()&#10;&#10;Description&#10;     eatNum&#10;&#10;Return:&#10;   run;;d30,1311;;b2,0;;m">
</treenode>
<treenode node="encode_rs_char;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2827;2;2860;;;;vpos;;vparity;;r&#10;Definition&#10;    encode_rs_char($rs, $data, $parity)&#10;&#10;Description&#10;     Encode a Reed-Solomon codec and returns the parity array&#10;&#10;Parameters:&#10;     $rs - (array) RS values&#10;     $data - (array) data&#10;     $parity - (array) parity&#10;&#10;Return:&#10;   array;;d57,2827;;b2,0;;m $rs;;p $data;;p $parity;;p">
</treenode>
<treenode node="encodeBitStream;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1640;2;1679;;;;vpos;;varray;;r&#10;Definition&#10;    encodeBitStream($inputitem, $version)&#10;&#10;Description&#10;     encodeBitStream&#10;&#10;Parameters:&#10;     $inputitem - (array)&#10;     $version - (int)&#10;&#10;Return:&#10;   input item;;d59,1640;;b2,0;;m $inputitem;;p $version;;p">
</treenode>
<treenode node="encodeMask;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;719;2;774;;;;vpos;;v;;r&#10;Definition&#10;    encodeMask($mask)&#10;&#10;Description&#10;     Encode mask&#10;&#10;Parameters:&#10;     $mask - (int) masking mode;;d38,719;;b2,0;;m $mask;;p">
</treenode>
<treenode node="encodeMode8;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1586;2;1594;;;;vpos;;varray;;r&#10;Definition&#10;    encodeMode8($inputitem, $version)&#10;&#10;Description&#10;     encodeMode8&#10;&#10;Parameters:&#10;     $inputitem - (array)&#10;     $version - (int)&#10;&#10;Return:&#10;   input item;;d55,1586;;b2,0;;m $inputitem;;p $version;;p">
</treenode>
<treenode node="encodeModeAn;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1563;2;1578;;;;vpos;;varray;;r&#10;Definition&#10;    encodeModeAn($inputitem, $version)&#10;&#10;Description&#10;     encodeModeAn&#10;&#10;Parameters:&#10;     $inputitem - (array)&#10;     $version - (int)&#10;&#10;Return:&#10;   input item;;d56,1563;;b2,0;;m $inputitem;;p $version;;p">
</treenode>
<treenode node="encodeModeKanji;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1602;2;1618;;;;vpos;;varray;;r&#10;Definition&#10;    encodeModeKanji($inputitem, $version)&#10;&#10;Description&#10;     encodeModeKanji&#10;&#10;Parameters:&#10;     $inputitem - (array)&#10;     $version - (int)&#10;&#10;Return:&#10;   input item;;d59,1602;;b2,0;;m $inputitem;;p $version;;p">
</treenode>
<treenode node="encodeModeNum;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1534;2;1555;;;;vpos;;varray;;r&#10;Definition&#10;    encodeModeNum($inputitem, $version)&#10;&#10;Description&#10;     encodeModeNum&#10;&#10;Parameters:&#10;     $inputitem - (array)&#10;     $version - (int)&#10;&#10;Return:&#10;   input item;;d57,1534;;b2,0;;m $inputitem;;p $version;;p">
</treenode>
<treenode node="encodeModeStructure;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1625;2;1632;;;;vpos;;varray;;r&#10;Definition&#10;    encodeModeStructure($inputitem)&#10;&#10;Description&#10;     encodeModeStructure&#10;&#10;Parameters:&#10;     $inputitem - (array)&#10;&#10;Return:&#10;   input item;;d53,1625;;b2,0;;m $inputitem;;p">
</treenode>
<treenode node="encodeString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;703;2;713;;;;vpos;;v;;r&#10;Definition&#10;    encodeString($string)&#10;&#10;Description&#10;     Encode the input string to QR code&#10;&#10;Parameters:&#10;     $string - (string) input string to encode;;d42,703;;b2,0;;m $string;;p">
</treenode>
<treenode node="estimateBitsMode8;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1819;2;1821;;;;vpos;;vint;;r&#10;Definition&#10;    estimateBitsMode8($size)&#10;&#10;Description&#10;     estimateBitsMode8&#10;&#10;Parameters:&#10;     $size - (int)&#10;&#10;Return:&#10;   number of bits;;d46,1819;;b2,0;;m $size;;p">
</treenode>
<treenode node="estimateBitsModeAn;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1806;2;1812;;;;vpos;;vint;;r&#10;Definition&#10;    estimateBitsModeAn($size)&#10;&#10;Description&#10;     estimateBitsModeAn&#10;&#10;Parameters:&#10;     $size - (int)&#10;&#10;Return:&#10;   number of bits;;d47,1806;;b2,0;;m $size;;p">
</treenode>
<treenode node="estimateBitsModeKanji;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1828;2;1830;;;;vpos;;vint;;r&#10;Definition&#10;    estimateBitsModeKanji($size)&#10;&#10;Description&#10;     estimateBitsModeKanji&#10;&#10;Parameters:&#10;     $size - (int)&#10;&#10;Return:&#10;   number of bits;;d50,1828;;b2,0;;m $size;;p">
</treenode>
<treenode node="estimateBitsModeNum;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1785;2;1799;;;;vpos;;vint;;r&#10;Definition&#10;    estimateBitsModeNum($size)&#10;&#10;Description&#10;     estimateBitsModeNum&#10;&#10;Parameters:&#10;     $size - (int)&#10;&#10;Return:&#10;   number of bits;;d48,1785;;b2,0;;m $size;;p">
</treenode>
<treenode node="estimateBitStreamSize;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1891;2;1927;;;;vpos;;vint;;r&#10;Definition&#10;    estimateBitStreamSize($items, $version)&#10;&#10;Description&#10;     estimateBitStreamSize&#10;&#10;Parameters:&#10;     $items - (array)&#10;     $version - (int)&#10;&#10;Return:&#10;   bits;;d61,1891;;b2,0;;m $items;;p $version;;p">
</treenode>
<treenode node="estimateVersion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1934;2;1946;;;;vpos;;vint;;r&#10;Definition&#10;    estimateVersion($items)&#10;&#10;Description&#10;     estimateVersion&#10;&#10;Parameters:&#10;     $items - (array)&#10;&#10;Return:&#10;   version;;d45,1934;;b2,0;;m $items;;p">
</treenode>
<treenode node="evaluateSymbol;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1157;2;1210;;;;vpos;;vint;;r&#10;Definition&#10;    evaluateSymbol($width, $frame)&#10;&#10;Description&#10;     evaluateSymbol&#10;&#10;Parameters:&#10;     $width - (int)&#10;     $frame - (array)&#10;&#10;Return:&#10;   demerit;;d52,1157;;b2,0;;m $width;;p $frame;;p">
</treenode>
<treenode node="generateMaskNo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;1063;2;1076;;;;vpos;;varray;;r&#10;Definition&#10;    generateMaskNo($maskNo, $width, $frame)&#10;&#10;Description&#10;     Return bitmask&#10;&#10;Parameters:&#10;     $maskNo - (int) mask number&#10;     $width - (int) width&#10;     $frame - (array) frame&#10;&#10;Return:&#10;   bitmask;;d60,1063;;b2,0;;m $maskNo;;p $width;;p $frame;;p">
</treenode>
<treenode node="getBarcodeArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f8;679;2;681;;;;vpos;;varray;;r&#10;Definition&#10;    getBarcodeArray()&#10;&#10;Description&#10;     Returns a barcode array which is readable by TCPDF&#10;&#10;Return:&#10;   barcode array readable by TCPDF;s;;d35,679;;b1,0;;m">
</treenode>
<treenode node="getBitStream;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;2104;2;2107;;;;vpos;;varray;;r&#10;Definition&#10;    getBitStream($items)&#10;&#10;Description&#10;     Returns a stream of bits.&#10;&#10;Parameters:&#10;     $items - (int)&#10;&#10;Return:&#10;   padded merged byte stream;;d41,2104;;b2,0;;m $items;;p">
</treenode>
<treenode node="getByteStream;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;2114;2;2117;;;;vpos;;varray;;r&#10;Definition&#10;    getByteStream($items)&#10;&#10;Description&#10;     Pack all bit streams padding bits into a byte array.&#10;&#10;Parameters:&#10;     $items - (int)&#10;&#10;Return:&#10;   padded merged byte stream;;d42,2114;;b2,0;;m $items;;p">
</treenode>
<treenode node="getCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;909;2;926;;;;vpos;;varray;;r&#10;Definition&#10;    getCode()&#10;&#10;Description&#10;     Return Reed-Solomon block code.&#10;&#10;Return:&#10;   rsblocks;;d30,909;;b2,0;;m">
</treenode>
<treenode node="getDataLength;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;2283;2;2285;;;;vpos;;vint;;r&#10;Definition&#10;    getDataLength($version, $level)&#10;&#10;Description&#10;     Return maximum data code length (bytes) for the version.&#10;&#10;Parameters:&#10;     $version - (int) version&#10;     $level - (int) error correction level&#10;&#10;Return:&#10;   maximum size (bytes);;d52,2283;;b2,0;;m $version;;p $level;;p">
</treenode>
<treenode node="getECCLength;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;2293;2;2295;;;;vpos;;vint;;r&#10;Definition&#10;    getECCLength($version, $level)&#10;&#10;Description&#10;     Return maximum error correction code length (bytes) for the version.&#10;&#10;Parameters:&#10;     $version - (int) version&#10;     $level - (int) error correction level&#10;&#10;Return:&#10;   ECC size (bytes);;d50,2293;;b2,0;;m $version;;p $level;;p">
</treenode>
<treenode node="getEccSpec;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;2384;2;2406;;;;vpos;;varray;;r&#10;Definition&#10;    getEccSpec($version, $level, $spec)&#10;&#10;Description&#10;     Return an array of ECC specification.&#10;&#10;Parameters:&#10;     $version - (int) version&#10;     $level - (int) error correction level&#10;     $spec - (array) an array of ECC specification contains as following: {# of type1 blocks, # of data code, # of ecc code, # of type2 blocks, # of data code}&#10;&#10;Return:&#10;   spec;;d56,2384;;b2,0;;m $version;;p $level;;p $spec;;p">
</treenode>
<treenode node="getFormatInfo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;2491;2;2499;;;;vpos;;vBCH;;r&#10;Definition&#10;    getFormatInfo($mask, $level)&#10;&#10;Description&#10;     Return BCH encoded format information pattern.&#10;&#10;Parameters:&#10;     $mask - (array)&#10;     $level - (int) error correction level&#10;&#10;Return:&#10;   encoded format information pattern;;d49,2491;;b2,0;;m $mask;;p $level;;p">
</treenode>
<treenode node="getFrameAt;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;794;2;796;;;;vpos;;vvalue;;r&#10;Definition&#10;    getFrameAt($at)&#10;&#10;Description&#10;     Get frame value at specified position&#10;&#10;Parameters:&#10;     $at - (array) x,y position&#10;&#10;Return:&#10;   at specified position;;d36,794;;b2,0;;m $at;;p">
</treenode>
<treenode node="getMinimumVersion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;2321;2;2330;;;;vpos;;vint;;r&#10;Definition&#10;    getMinimumVersion($size, $level)&#10;&#10;Description&#10;     Return a version number that satisfies the input code length.&#10;&#10;Parameters:&#10;     $size - (int) input code length (bytes)&#10;     $level - (int) error correction level&#10;&#10;Return:&#10;   version number;;d53,2321;;b2,0;;m $size;;p $level;;p">
</treenode>
<treenode node="getNextPosition;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;802;2;847;;;;vpos;;varray;;r&#10;Definition&#10;    getNextPosition()&#10;&#10;Description&#10;     Return the next frame position&#10;&#10;Return:&#10;   of x,y coordinates;;d38,802;;b2,0;;m">
</treenode>
<treenode node="getRemainder;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;2311;2;2313;;;;vpos;;vint;;r&#10;Definition&#10;    getRemainder($version)&#10;&#10;Description&#10;     Return the numer of remainder bits.&#10;&#10;Parameters:&#10;     $version - (int) version&#10;&#10;Return:&#10;   number of remainder bits;;d43,2311;;b2,0;;m $version;;p">
</treenode>
<treenode node="getVersionPattern;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;2478;2;2483;;;;vpos;;vBCH;;r&#10;Definition&#10;    getVersionPattern($version)&#10;&#10;Description&#10;     Return BCH encoded version information pattern that is used for the symbol of version 7 or greater. Use lower 18 bits.&#10;&#10;Parameters:&#10;     $version - (int) version&#10;&#10;Return:&#10;   encoded version information pattern;;d48,2478;;b2,0;;m $version;;p">
</treenode>
<treenode node="getWidth;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;2302;2;2304;;;;vpos;;vint;;r&#10;Definition&#10;    getWidth($version)&#10;&#10;Description&#10;     Return the width of the symbol for the version.&#10;&#10;Parameters:&#10;     $version - (int) version&#10;&#10;Return:&#10;   width;;d39,2302;;b2,0;;m $version;;p">
</treenode>
<treenode node="identifyMode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1286;2;1305;;;;vpos;;vint;;r&#10;Definition&#10;    identifyMode($pos)&#10;&#10;Description&#10;     identifyMode&#10;&#10;Parameters:&#10;     $pos - (int)&#10;&#10;Return:&#10;   mode;;d40,1286;;b2,0;;m $pos;;p">
</treenode>
<treenode node="init;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;858;2;903;;;;vpos;;v;;r&#10;Definition&#10;    init($spec)&#10;&#10;Description&#10;     Initialize code.&#10;&#10;Parameters:&#10;     $spec - (array) array of ECC specification;;d32,858;;b2,0;;m $spec;;p">
</treenode>
<treenode node="init_rs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2702;2;2713;;;;vpos;;varray;;r&#10;Definition&#10;    init_rs($symsize, $gfpoly, $fcr, $prim, $nroots, $pad)&#10;&#10;Description&#10;     Initialize a Reed-Solomon codec and add it to existing rsitems&#10;&#10;Parameters:&#10;     $symsize - (int) symbol size, bits&#10;     $gfpoly - (int)  Field generator polynomial coefficients&#10;     $fcr - (int)  first root of RS code generator polynomial, index form&#10;     $prim - (int)  primitive element to generate polynomial roots&#10;     $nroots - (int) RS code generator polynomial degree (number of roots)&#10;     $pad - (int)  padding bytes at front of shortened block&#10;&#10;Return:&#10;   Array of RS values:&lt;ul&gt;&lt;li&gt;mm = Bits per symbol;s&lt;/li&gt;&lt;li&gt;nn = Symbols per block;s&lt;/li&gt;&lt;li&gt;alpha_to = log lookup table array;s&lt;/li&gt;&lt;li&gt;index_of = Antilog lookup table array;s&lt;/li&gt;&lt;li&gt;genpoly = Generator polynomial array;s&lt;/li&gt;&lt;li&gt;nroots = Number of generator;s&lt;/li&gt;&lt;li&gt;roots = number of parity symbols;s&lt;/li&gt;&lt;li&gt;fcr = First consecutive root, index form;s&lt;/li&gt;&lt;li&gt;prim = Primitive element, index form;s&lt;/li&gt;&lt;li&gt;iprim = prim-th root of 1, index form;s&lt;/li&gt;&lt;li&gt;pad = Padding bytes in shortened block;s&lt;/li&gt;&lt;li&gt;gfpoly&lt;/ul&gt;;;d76,2702;;b2,0;;m $symsize;;p $gfpoly;;p $fcr;;p $prim;;p $nroots;;p $pad;;p">
</treenode>
<treenode node="init_rs_char;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;2743;2;2818;;;;vpos;;varray;;r&#10;Definition&#10;    init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad)&#10;&#10;Description&#10;     Initialize a Reed-Solomon codec and returns an array of values.&#10;&#10;Parameters:&#10;     $symsize - (int) symbol size, bits&#10;     $gfpoly - (int)  Field generator polynomial coefficients&#10;     $fcr - (int)  first root of RS code generator polynomial, index form&#10;     $prim - (int)  primitive element to generate polynomial roots&#10;     $nroots - (int) RS code generator polynomial degree (number of roots)&#10;     $pad - (int)  padding bytes at front of shortened block&#10;&#10;Return:&#10;   Array of RS values:&lt;ul&gt;&lt;li&gt;mm = Bits per symbol;s&lt;/li&gt;&lt;li&gt;nn = Symbols per block;s&lt;/li&gt;&lt;li&gt;alpha_to = log lookup table array;s&lt;/li&gt;&lt;li&gt;index_of = Antilog lookup table array;s&lt;/li&gt;&lt;li&gt;genpoly = Generator polynomial array;s&lt;/li&gt;&lt;li&gt;nroots = Number of generator;s&lt;/li&gt;&lt;li&gt;roots = number of parity symbols;s&lt;/li&gt;&lt;li&gt;fcr = First consecutive root, index form;s&lt;/li&gt;&lt;li&gt;prim = Primitive element, index form;s&lt;/li&gt;&lt;li&gt;iprim = prim-th root of 1, index form;s&lt;/li&gt;&lt;li&gt;pad = Padding bytes in shortened block;s&lt;/li&gt;&lt;li&gt;gfpoly&lt;/ul&gt;;;d80,2743;;b2,0;;m $symsize;;p $gfpoly;;p $fcr;;p $prim;;p $nroots;;p $pad;;p">
</treenode>
<treenode node="insertStructuredAppendHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1711;2;1722;;;;vpos;;varray;;r&#10;Definition&#10;    insertStructuredAppendHeader($items, $size, $index, $parity)&#10;&#10;Description&#10;     insertStructuredAppendHeader&#10;&#10;Parameters:&#10;     $items - (array)&#10;     $size - (int)&#10;     $index - (int)&#10;     $parity - (int)&#10;&#10;Return:&#10;   items;;d82,1711;;b2,0;;m $items;;p $size;;p $index;;p $parity;;p">
</treenode>
<treenode node="isalnumat;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1274;2;1279;;;;vpos;;vboolean;;r&#10;Definition&#10;    isalnumat($str, $pos)&#10;&#10;Description&#10;     Return true if the character at specified position is an alphanumeric character&#10;&#10;Parameters:&#10;     $str - (string) string&#10;     $pos - (int) characted position&#10;&#10;Return:&#10;   true of false;;d43,1274;;b2,0;;m $str;;p $pos;;p">
</treenode>
<treenode node="isdigitat;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1261;2;1266;;;;vpos;;vboolean;;r&#10;Definition&#10;    isdigitat($str, $pos)&#10;&#10;Description&#10;     Return true if the character at specified position is a number&#10;&#10;Parameters:&#10;     $str - (string) string&#10;     $pos - (int) characted position&#10;&#10;Return:&#10;   true of false;;d43,1261;;b2,0;;m $str;;p $pos;;p">
</treenode>
<treenode node="lengthIndicator;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;2338;2;2350;;;;vpos;;vint;;r&#10;Definition&#10;    lengthIndicator($mode, $version)&#10;&#10;Description&#10;     Return the size of length indicator for the mode and version.&#10;&#10;Parameters:&#10;     $mode - (int) encoding mode&#10;     $version - (int) version&#10;&#10;Return:&#10;   the size of the appropriate length indicator (bits);;d53,2338;;b2,0;;m $mode;;p $version;;p">
</treenode>
<treenode node="lengthOfCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1955;2;2003;;;;vpos;;vint;;r&#10;Definition&#10;    lengthOfCode($mode, $version, $bits)&#10;&#10;Description&#10;     lengthOfCode&#10;&#10;Parameters:&#10;     $mode - (int)&#10;     $version - (int)&#10;     $bits - (int)&#10;&#10;Return:&#10;   size;;d58,1955;;b2,0;;m $mode;;p $version;;p $bits;;p">
</treenode>
<treenode node="lookAnTable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;1761;2;1763;;;;vpos;;vvalue;;r&#10;Definition&#10;    lookAnTable($c)&#10;&#10;Description&#10;     Look up the alphabet-numeric convesion table (see JIS X0510:2004, pp.19).&#10;&#10;Parameters:&#10;     $c - (int) character value;;d36,1761;;b2,0;;m $c;;p">
</treenode>
<treenode node="makeMask;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1114;2;1119;;;;vpos;;varray;;r&#10;Definition&#10;    makeMask($width, $frame, $maskNo, $level)&#10;&#10;Description&#10;     makeMask&#10;&#10;Parameters:&#10;     $width - (int)&#10;     $frame - (array)&#10;     $maskNo - (int)&#10;     $level - (int)&#10;&#10;Return:&#10;   mask;;d63,1114;;b2,0;;m $width;;p $frame;;p $maskNo;;p $level;;p">
</treenode>
<treenode node="makeMaskNo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1087;2;1104;;;;vpos;;vint;;r&#10;Definition&#10;    makeMaskNo($maskNo, $width, $s, &amp;$d, $maskGenOnly=false)&#10;&#10;Description&#10;     makeMaskNo&#10;&#10;Parameters:&#10;     $maskNo - (int)&#10;     $width - (int)&#10;     $s - (int)&#10;     $d - (int)&#10;     $maskGenOnly - (boolean)&#10;&#10;Return:&#10;   b;;d78,1087;;b2,0;;m $maskNo;;p $width;;p $s;;p $d;;p $maskGenOnly;;p">
</treenode>
<treenode node="mask;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1219;2;1249;;;;vpos;;varray;;r&#10;Definition&#10;    mask($width, $frame, $level)&#10;&#10;Description&#10;     mask&#10;&#10;Parameters:&#10;     $width - (int)&#10;     $frame - (array)&#10;     $level - (int)&#10;&#10;Return:&#10;   best mask;;d50,1219;;b2,0;;m $width;;p $frame;;p $level;;p">
</treenode>
<treenode node="mask0;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;982;2;984;;;;vpos;;vint;;r&#10;Definition&#10;    mask0($x, $y)&#10;&#10;Description&#10;     mask0&#10;&#10;Parameters:&#10;     $x - (int) X position&#10;     $y - (int) Y position&#10;&#10;Return:&#10;   mask;;d35,982;;b2,0;;m $x;;p $y;;p">
</treenode>
<treenode node="mask1;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;992;2;994;;;;vpos;;vint;;r&#10;Definition&#10;    mask1($x, $y)&#10;&#10;Description&#10;     mask1&#10;&#10;Parameters:&#10;     $x - (int) X position&#10;     $y - (int) Y position&#10;&#10;Return:&#10;   mask;;d35,992;;b2,0;;m $x;;p $y;;p">
</treenode>
<treenode node="mask2;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1002;2;1004;;;;vpos;;vint;;r&#10;Definition&#10;    mask2($x, $y)&#10;&#10;Description&#10;     mask2&#10;&#10;Parameters:&#10;     $x - (int) X position&#10;     $y - (int) Y position&#10;&#10;Return:&#10;   mask;;d35,1002;;b2,0;;m $x;;p $y;;p">
</treenode>
<treenode node="mask3;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1012;2;1014;;;;vpos;;vint;;r&#10;Definition&#10;    mask3($x, $y)&#10;&#10;Description&#10;     mask3&#10;&#10;Parameters:&#10;     $x - (int) X position&#10;     $y - (int) Y position&#10;&#10;Return:&#10;   mask;;d35,1012;;b2,0;;m $x;;p $y;;p">
</treenode>
<treenode node="mask4;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1022;2;1024;;;;vpos;;vint;;r&#10;Definition&#10;    mask4($x, $y)&#10;&#10;Description&#10;     mask4&#10;&#10;Parameters:&#10;     $x - (int) X position&#10;     $y - (int) Y position&#10;&#10;Return:&#10;   mask;;d35,1022;;b2,0;;m $x;;p $y;;p">
</treenode>
<treenode node="mask5;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1032;2;1034;;;;vpos;;vint;;r&#10;Definition&#10;    mask5($x, $y)&#10;&#10;Description&#10;     mask5&#10;&#10;Parameters:&#10;     $x - (int) X position&#10;     $y - (int) Y position&#10;&#10;Return:&#10;   mask;;d35,1032;;b2,0;;m $x;;p $y;;p">
</treenode>
<treenode node="mask6;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1042;2;1044;;;;vpos;;vint;;r&#10;Definition&#10;    mask6($x, $y)&#10;&#10;Description&#10;     mask6&#10;&#10;Parameters:&#10;     $x - (int) X position&#10;     $y - (int) Y position&#10;&#10;Return:&#10;   mask;;d35,1042;;b2,0;;m $x;;p $y;;p">
</treenode>
<treenode node="mask7;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1052;2;1054;;;;vpos;;vint;;r&#10;Definition&#10;    mask7($x, $y)&#10;&#10;Description&#10;     mask7&#10;&#10;Parameters:&#10;     $x - (int) X position&#10;     $y - (int) Y position&#10;&#10;Return:&#10;   mask;;d35,1052;;b2,0;;m $x;;p $y;;p">
</treenode>
<treenode node="maximumWords;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;2358;2;2375;;;;vpos;;vint;;r&#10;Definition&#10;    maximumWords($mode, $version)&#10;&#10;Description&#10;     Return the maximum length for the mode and version.&#10;&#10;Parameters:&#10;     $mode - (int) encoding mode&#10;     $version - (int) version&#10;&#10;Return:&#10;   the maximum length (bytes);;d50,2358;;b2,0;;m $mode;;p $version;;p">
</treenode>
<treenode node="mergeBitStream;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2087;2;2097;;;;vpos;;varray;;r&#10;Definition&#10;    mergeBitStream($items)&#10;&#10;Description&#10;     mergeBitStream&#10;&#10;Parameters:&#10;     $items - (array) items&#10;&#10;Return:&#10;   bitstream;;d44,2087;;b2,0;;m $items;;p">
</treenode>
<treenode node="modnn;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2725;2;2731;;;;vpos;;vint;;r&#10;Definition&#10;    modnn($rs, $x)&#10;&#10;Description&#10;     modnn&#10;&#10;Parameters:&#10;     $rs - (array) RS values&#10;     $x - (int) X position&#10;&#10;Return:&#10;   X osition;;d36,2725;;b2,0;;m $rs;;p $x;;p">
</treenode>
<treenode node="newFrame;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;2594;2;2605;;;;vpos;;vArray;;r&#10;Definition&#10;    newFrame($version)&#10;&#10;Description&#10;     Set new frame for the specified version.&#10;&#10;Parameters:&#10;     $version - (int) version&#10;&#10;Return:&#10;   of unsigned char;;d39,2594;;b2,0;;m $version;;p">
</treenode>
<treenode node="newFromBytes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2158;2;2174;;;;vpos;;varray;;r&#10;Definition&#10;    newFromBytes($size, $data)&#10;&#10;Description&#10;     Return new bitstream from bytes&#10;&#10;Parameters:&#10;     $size - (int) size&#10;     $data - (array) bytes&#10;&#10;Return:&#10;   bitstream;;d48,2158;;b2,0;;m $size;;p $data;;p">
</treenode>
<treenode node="newFromNum;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2138;2;2150;;;;vpos;;varray;;r&#10;Definition&#10;    newFromNum($bits, $num)&#10;&#10;Description&#10;     Return new bitstream from number&#10;&#10;Parameters:&#10;     $bits - (int) number of bits&#10;     $num - (int) number&#10;&#10;Return:&#10;   bitstream;;d45,2138;;b2,0;;m $bits;;p $num;;p">
</treenode>
<treenode node="newInputItem;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1512;2;1526;;;;vpos;;varray;;r&#10;Definition&#10;    newInputItem($mode, $size, $data, $bstream=null)&#10;&#10;Description&#10;     newInputItem&#10;&#10;Parameters:&#10;     $mode - (int)&#10;     $size - (int)&#10;     $data - (array)&#10;     $bstream - (array)&#10;&#10;Return:&#10;   input item;;d70,1512;;b2,0;;m $mode;;p $size;;p $data;;p $bstream;;p">
</treenode>
<treenode node="putAlignmentMarker;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;2415;2;2429;;;;vpos;;varray;;r&#10;Definition&#10;    putAlignmentMarker($frame, $ox, $oy)&#10;&#10;Description&#10;     Put an alignment marker.&#10;&#10;Parameters:&#10;     $frame - (array) frame&#10;     $ox - (int) X center coordinate of the pattern&#10;     $oy - (int) Y center coordinate of the pattern&#10;&#10;Return:&#10;   frame;;d57,2415;;b2,0;;m $frame;;p $ox;;p $oy;;p">
</treenode>
<treenode node="putAlignmentPattern;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2438;2;2471;;;;vpos;;varray;;r&#10;Definition&#10;    putAlignmentPattern($version, $frame, $width)&#10;&#10;Description&#10;     Put an alignment pattern.&#10;&#10;Parameters:&#10;     $version - (int) version&#10;     $frame - (array) frame&#10;     $width - (int) width&#10;&#10;Return:&#10;   frame;;d67,2438;;b2,0;;m $version;;p $frame;;p $width;;p">
</treenode>
<treenode node="putFinderPattern;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;2508;2;2522;;;;vpos;;varray;;r&#10;Definition&#10;    putFinderPattern($frame, $ox, $oy)&#10;&#10;Description&#10;     Put a finder pattern.&#10;&#10;Parameters:&#10;     $frame - (array) frame&#10;     $ox - (int) X center coordinate of the pattern&#10;     $oy - (int) Y center coordinate of the pattern&#10;&#10;Return:&#10;   frame;;d55,2508;;b2,0;;m $frame;;p $ox;;p $oy;;p">
</treenode>
<treenode node="qrstrset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2272;2;2275;;;;vpos;;varray;;r&#10;Definition&#10;    qrstrset($srctab, $x, $y, $repl, $replLen=false)&#10;&#10;Description&#10;     Replace a value on the array at the specified position&#10;&#10;Parameters:&#10;     $srctab - (array)&#10;     $x - (int) X position&#10;     $y - (int) Y position&#10;     $repl - (string) value to replace&#10;     $replLen - (int) length of the repl string&#10;&#10;Return:&#10;   srctab;;d70,2272;;b2,0;;m $srctab;;p $x;;p $y;;p $repl;;p $replLen;;p">
</treenode>
<treenode node="rsBlockNum;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2612;2;2614;;;;vpos;;vint;;r&#10;Definition&#10;    rsBlockNum($spec)&#10;&#10;Description&#10;     Return block number 0&#10;&#10;Parameters:&#10;     $spec - (array)&#10;&#10;Return:&#10;   value;;d39,2612;;b2,0;;m $spec;;p">
</treenode>
<treenode node="rsBlockNum1;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2621;2;2623;;;;vpos;;vint;;r&#10;Definition&#10;    rsBlockNum1($spec)&#10;&#10;Description&#10;     Return block number 1&#10;&#10;Parameters:&#10;     $spec - (array)&#10;&#10;Return:&#10;   value;;d40,2621;;b2,0;;m $spec;;p">
</treenode>
<treenode node="rsBlockNum2;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2648;2;2650;;;;vpos;;vint;;r&#10;Definition&#10;    rsBlockNum2($spec)&#10;&#10;Description&#10;     Return block number 2&#10;&#10;Parameters:&#10;     $spec - (array)&#10;&#10;Return:&#10;   value;;d40,2648;;b2,0;;m $spec;;p">
</treenode>
<treenode node="rsDataCodes1;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2630;2;2632;;;;vpos;;vint;;r&#10;Definition&#10;    rsDataCodes1($spec)&#10;&#10;Description&#10;     Return data codes 1&#10;&#10;Parameters:&#10;     $spec - (array)&#10;&#10;Return:&#10;   value;;d41,2630;;b2,0;;m $spec;;p">
</treenode>
<treenode node="rsDataCodes2;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2657;2;2659;;;;vpos;;vint;;r&#10;Definition&#10;    rsDataCodes2($spec)&#10;&#10;Description&#10;     Return data codes 2&#10;&#10;Parameters:&#10;     $spec - (array)&#10;&#10;Return:&#10;   value;;d41,2657;;b2,0;;m $spec;;p">
</treenode>
<treenode node="rsDataLength;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2675;2;2677;;;;vpos;;vint;;r&#10;Definition&#10;    rsDataLength($spec)&#10;&#10;Description&#10;     Return data length&#10;&#10;Parameters:&#10;     $spec - (array)&#10;&#10;Return:&#10;   value;;d41,2675;;b2,0;;m $spec;;p">
</treenode>
<treenode node="rsEccCodes1;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2639;2;2641;;;;vpos;;vint;;r&#10;Definition&#10;    rsEccCodes1($spec)&#10;&#10;Description&#10;     Return ecc codes 1&#10;&#10;Parameters:&#10;     $spec - (array)&#10;&#10;Return:&#10;   value;;d40,2639;;b2,0;;m $spec;;p">
</treenode>
<treenode node="rsEccCodes2;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2666;2;2668;;;;vpos;;vint;;r&#10;Definition&#10;    rsEccCodes2($spec)&#10;&#10;Description&#10;     Return ecc codes 2&#10;&#10;Parameters:&#10;     $spec - (array)&#10;&#10;Return:&#10;   value;;d40,2666;;b2,0;;m $spec;;p">
</treenode>
<treenode node="rsEccLength;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;2684;2;2686;;;;vpos;;vint;;r&#10;Definition&#10;    rsEccLength($spec)&#10;&#10;Description&#10;     Return ecc length&#10;&#10;Parameters:&#10;     $spec - (array)&#10;&#10;Return:&#10;   value;;d40,2684;;b2,0;;m $spec;;p">
</treenode>
<treenode node="setFrameAt;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f11;785;2;787;;;;vpos;;v;;r&#10;Definition&#10;    setFrameAt($at, $val)&#10;&#10;Description&#10;     Set frame value at specified position&#10;&#10;Parameters:&#10;     $at - (array) x,y position&#10;     $val - (int) value of the character to set;;d42,785;;b2,0;;m $at;;p $val;;p">
</treenode>
<treenode node="splitString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1444;2;1478;;;;vpos;;v;;r&#10;Definition&#10;    splitString()&#10;&#10;Description&#10;     splitString;;d35,1444;;b2,0;;m">
</treenode>
<treenode node="toUpper;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;1483;2;1498;;;;vpos;;v;;r&#10;Definition&#10;    toUpper()&#10;&#10;Description&#10;     toUpper;;d31,1483;;b2,0;;m">
</treenode>
<treenode node="writeFormatInformation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f12;940;2;974;;;;vpos;;vint;;r&#10;Definition&#10;    writeFormatInformation($width, &amp;$frame, $mask, $level)&#10;&#10;Description&#10;     Write Format Information on frame and returns the number of black bits&#10;&#10;Parameters:&#10;     $width - (int) frame width&#10;     $frame - (array) frame&#10;     $mask - (array) masking mode&#10;     $level - (int) error correction level&#10;&#10;Return:&#10;   blacks;;d76,940;;b2,0;;m $width;;p $frame;;p $mask;;p $level;;p">
</treenode>
</treenode>
<treenode node="Routing;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\routing.php;f0;4;1;69;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="ErrorPage404;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\routing.php;f8;62;5;68;;;;vpos;;v;;r;;d1,63;;b0,5;;m">
</treenode>
<treenode node="execute;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\routing.php;f8;10;2;60;;;;vpos;;v;;r;;d1,11;;b0,5;;m">
</treenode>
</treenode>
<treenode node="SMTP;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f0;29;1;1324;;;;vpos;;v;;r&#10;Definition&#10;    class SMTP&#10;&#10;Description&#10;     PHPMailer RFC821 SMTP email transport class. Implements RFC 821 SMTP commands and provides some utility methods for sending mail to an SMTP server.;;d0,30;;b0,0;;m">
<treenode node="DEBUG_CLIENT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f9;67;22;67;;;;vpos;;v;;r&#10;Description&#10;     Debug level to show client -&gt; server messages.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DEBUG_CONNECTION;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f9;77;26;77;;;;vpos;;v;;r&#10;Description&#10;     Debug level to show connection status, client -&gt; server and server -&gt; client messages.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DEBUG_LOWLEVEL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f9;82;24;82;;;;vpos;;v;;r&#10;Description&#10;     Debug level to show all messages.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DEBUG_OFF;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f9;62;19;62;;;;vpos;;v;;r&#10;Description&#10;     Debug level for no output.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DEBUG_SERVER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f9;72;22;72;;;;vpos;;v;;r&#10;Description&#10;     Debug level to show client -&gt; server and server -&gt; client messages.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DEFAULT_PORT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f9;50;22;50;;;;vposint;;v;;r25;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f9;43;12;43;;;;vposstring;;v;;r&quot;\r\n&quot;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAX_LINE_LENGTH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f9;57;25;57;;;;vposint;;v;;r998;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="VERSION;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f9;36;17;36;;;;vposstring;;v;;r&apos;6.0.3&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="authenticate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;423;5;542;;;;vpos;;vbool;;r&#10;Definition&#10;    authenticate(&#10;        $username,&#10;        $password,&#10;        $authtype = null,&#10;        $OAuth = null&#10;    )&#10;&#10;Description&#10;     Perform SMTP authentication. Must be run after hello().&#10;&#10;Parameters:&#10;    string $username - The user name&#10;    string $password - The password&#10;    string $authtype - The auth type (CRAM-MD5, PLAIN, LOGIN, XOAUTH2)&#10;    OAuth $OAuth - An optional OAuth instance for XOAUTH2 authentication&#10;&#10;Return:&#10;   True if successfully authenticated;;d6,428;;b1,0;;mstring $username;;pstring $password;;pstring $authtype;;pOAuth $OAuth;;p">
</treenode>
<treenode node="client_send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1011;5;1026;;;;vpos;;vint;;r&#10;Definition&#10;    client_send($data, $command = &apos;&apos;)&#10;&#10;Description&#10;     Send raw data to the server.&#10;&#10;Parameters:&#10;    string $data - The data to send&#10;    string $command - Optionally, the command this is part of, used only for controlling debug output&#10;&#10;Return:&#10;   |bool The number of bytes sent to the server or false on error;;d4,1012;;b1,0;;mstring $data;;pstring $command;;p">
</treenode>
<treenode node="close;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;613;5;624;;;;vpos;;v;;r&#10;Definition&#10;    close()&#10;&#10;Description&#10;     Close the socket and clean up the state of the class. Don&apos;t use this function without first trying to use QUIT.;;d4,614;;b1,0;;m">
</treenode>
<treenode node="connect;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;287;5;375;;;;vpos;;vbool;;r&#10;Definition&#10;    connect($host, $port = null, $timeout = 30, $options = [])&#10;&#10;Description&#10;     Connect to an SMTP server.&#10;&#10;Parameters:&#10;    string $host - SMTP server IP or host name&#10;    int $port - The port number to connect to&#10;    int $timeout - How long to wait for the connection to open&#10;    array $options - An array of options for stream_context_create();;d4,288;;b1,0;;mstring $host;;pint $port;;pint $timeout;;parray $options;;p">
</treenode>
<treenode node="connected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;586;5;605;;;;vpos;;vbool;;r&#10;Definition&#10;    connected()&#10;&#10;Description&#10;     Check connection state.&#10;&#10;Return:&#10;   True if connected;;d4,587;;b1,0;;m">
</treenode>
<treenode node="data;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;639;5;718;;;;vpos;;vbool;;r&#10;Definition&#10;    data($msg_data)&#10;&#10;Description&#10;     Send an SMTP DATA command. Issues a data command and sends the msg_data to the server, finializing the mail transaction. $msg_data is the message that is to be send with the headers. Each header needs to be on a single line followed by a &lt;CRLF&gt; with the message headers and the message body being separated by an additional &lt;CRLF&gt;. Implements RFC 821: DATA &lt;CRLF&gt;.&#10;&#10;Parameters:&#10;    string $msg_data - Message data to send;;d4,640;;b1,0;;mstring $msg_data;;p">
</treenode>
<treenode node="edebug;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f14;228;5;275;;;;vpos;;v;;r&#10;Definition&#10;    edebug($str, $level = 0)&#10;&#10;Description&#10;     Output debugging info via a user-selected method.&#10;&#10;Parameters:&#10;    string $str - Debug string to output&#10;    int $level - The debug level of this message;s see DEBUG_* constants;;d4,229;;b2,0;;mstring $str;;pint $level;;p">
</treenode>
<treenode node="errorHandler;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f14;1269;5;1281;;;;vpos;;v;;r&#10;Definition&#10;    errorHandler($errno, $errmsg, $errfile = &apos;&apos;, $errline = 0)&#10;&#10;Description&#10;     Reports an error number and string.&#10;&#10;Parameters:&#10;    int $errno - The error number returned by PHP&#10;    string $errmsg - The error message returned by PHP&#10;    string $errfile - The file the error occurred in&#10;    int $errline - The line number the error occurred on;;d4,1270;;b2,0;;mint $errno;;pstring $errmsg;;pstring $errfile;;pint $errline;;p">
</treenode>
<treenode node="get_lines;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f14;1107;5;1161;;;;vpos;;vstring;;r&#10;Definition&#10;    get_lines()&#10;&#10;Description&#10;     Read the SMTP server&apos;s response. Either before eof or socket timeout occurs on the operation. With SMTP we can tell if we have more lines to read if the 4th character is &apos;-&apos; symbol. If it is a space then we don&apos;t need to read anything else.;;d4,1108;;b2,0;;m">
</treenode>
<treenode node="getDebugLevel;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1236;5;1239;;;;vpos;;vint;;r&#10;Definition&#10;    getDebugLevel()&#10;&#10;Description&#10;     Get debug output level.;;d4,1237;;b1,0;;m">
</treenode>
<treenode node="getDebugOutput;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1216;5;1219;;;;vpos;;vstring;;r&#10;Definition&#10;    getDebugOutput()&#10;&#10;Description&#10;     Get debug output method.;;d4,1217;;b1,0;;m">
</treenode>
<treenode node="getError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1033;5;1036;;;;vpos;;varray;;r&#10;Definition&#10;    getError()&#10;&#10;Description&#10;     Get the latest error.;;d4,1034;;b1,0;;m">
</treenode>
<treenode node="getLastReply;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1093;5;1096;;;;vpos;;vstring;;r&#10;Definition&#10;    getLastReply()&#10;&#10;Description&#10;     Get the last reply from the server.;;d4,1094;;b1,0;;m">
</treenode>
<treenode node="getLastTransactionID;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1320;5;1323;;;;vpos;;vbool;;r&#10;Definition&#10;    getLastTransactionID()&#10;&#10;Description&#10;     Get the queue/transaction ID of the last SMTP transaction If no reply has been received yet, it will return null. If no pattern was matched, it will return false.&#10;&#10;Return:&#10;   |null|string;;d4,1321;;b1,0;;m">
</treenode>
<treenode node="getServerExt;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1065;5;1086;;;;vpos;;vmixed;;r&#10;Definition&#10;    getServerExt($name)&#10;&#10;Description&#10;     Get metadata about the SMTP server from its HELO/EHLO response. The method works in three ways, dependent on argument value and current state: 1. HELO/EHLO has not been sent - returns null and populates $this-&gt;error. 2. HELO has been sent - $name == &apos;HELO&apos;: returns server name $name == &apos;EHLO&apos;: returns boolean false $name == any other string: returns null and populates $this-&gt;error 3. EHLO has been sent - $name == &apos;HELO&apos;|&apos;EHLO&apos;: returns the server name $name == any other string: if extension $name exists, returns True or its options (e.g. AUTH mechanisms supported). Otherwise returns False.&#10;&#10;Parameters:&#10;    string $name - Name of SMTP extension or &apos;HELO&apos;|&apos;EHLO&apos;;;d4,1066;;b1,0;;mstring $name;;p">
</treenode>
<treenode node="getServerExtList;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1043;5;1046;;;;vpos;;varray;;r&#10;Definition&#10;    getServerExtList()&#10;&#10;Description&#10;     Get SMTP extensions available on the server.&#10;&#10;Return:&#10;   |null;;d4,1044;;b1,0;;m">
</treenode>
<treenode node="getTimeout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1256;5;1259;;;;vpos;;vint;;r&#10;Definition&#10;    getTimeout()&#10;&#10;Description&#10;     Get SMTP timeout.;;d4,1257;;b1,0;;m">
</treenode>
<treenode node="getVerp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1178;5;1181;;;;vpos;;vbool;;r&#10;Definition&#10;    getVerp()&#10;&#10;Description&#10;     Get VERP address generation mode.;;d4,1179;;b1,0;;m">
</treenode>
<treenode node="hello;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;731;5;735;;;;vpos;;vbool;;r&#10;Definition&#10;    hello($host = &apos;&apos;)&#10;&#10;Description&#10;     Send an SMTP HELO or EHLO command. Used to identify the sending server to the receiving server. This makes sure that client and server are in a known state. Implements RFC 821: HELO &lt;SP&gt; &lt;domain&gt; &lt;CRLF&gt; and RFC 2821 EHLO.&#10;&#10;Parameters:&#10;    string $host - The host name or IP to connect to;;d4,732;;b1,0;;mstring $host;;p">
</treenode>
<treenode node="hmac;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f14;554;5;579;;;;vpos;;vstring;;r&#10;Definition&#10;    hmac($data, $key)&#10;&#10;Description&#10;     Calculate an MD5 HMAC hash. Works like hash_hmac(&apos;md5&apos;, $data, $key) in case that function is not available.&#10;&#10;Parameters:&#10;    string $data - The data to hash&#10;    string $key - The key to hash with;;d4,555;;b2,0;;mstring $data;;pstring $key;;p">
</treenode>
<treenode node="mail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;815;5;824;;;;vpos;;vbool;;r&#10;Definition&#10;    mail($from)&#10;&#10;Description&#10;     Send an SMTP MAIL command. Starts a mail transaction from the email address specified in $from. Returns true if successful or false otherwise. If True the mail transaction is started and then one or more recipient commands may be called followed by a data command. Implements RFC 821: MAIL &lt;SP&gt; FROM:&lt;reverse-path&gt; &lt;CRLF&gt;.&#10;&#10;Parameters:&#10;    string $from - Source address of this message;;d4,816;;b1,0;;mstring $from;;p">
</treenode>
<treenode node="noop;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;981;5;984;;;;vpos;;vbool;;r&#10;Definition&#10;    noop()&#10;&#10;Description&#10;     Send an SMTP NOOP command. Used to keep keep-alives alive, doesn&apos;t actually do anything.;;d4,982;;b1,0;;m">
</treenode>
<treenode node="parseHelloFields;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f14;767;5;801;;;;vpos;;v;;r&#10;Definition&#10;    parseHelloFields($type)&#10;&#10;Description&#10;     Parse a reply to HELO/EHLO command to discover server extensions. In case of HELO, the only parameter that can be discovered is a server name.&#10;&#10;Parameters:&#10;    string $type - `HELO` or `EHLO`;;d4,768;;b2,0;;mstring $type;;p">
</treenode>
<treenode node="quit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;835;5;845;;;;vpos;;vbool;;r&#10;Definition&#10;    quit($close_on_error = true)&#10;&#10;Description&#10;     Send an SMTP QUIT command. Closes the socket if there is no error or the $close_on_error argument is true. Implements from RFC 821: QUIT &lt;CRLF&gt;.&#10;&#10;Parameters:&#10;    bool $close_on_error - Should the connection close if an error occurs?;;d4,836;;b1,0;;mbool $close_on_error;;p">
</treenode>
<treenode node="recipient;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;857;5;864;;;;vpos;;vbool;;r&#10;Definition&#10;    recipient($address)&#10;&#10;Description&#10;     Send an SMTP RCPT command. Sets the TO argument to $toaddr. Returns true if the recipient was accepted false if it was rejected. Implements from RFC 821: RCPT &lt;SP&gt; TO:&lt;forward-path&gt; &lt;CRLF&gt;.&#10;&#10;Parameters:&#10;    string $address - The address the message is being sent to;;d4,858;;b1,0;;mstring $address;;p">
</treenode>
<treenode node="recordLastTransactionID;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f14;1292;5;1309;;;;vpos;;vbool;;r&#10;Definition&#10;    recordLastTransactionID()&#10;&#10;Description&#10;     Extract and return the ID of the last SMTP transaction based on a list of patterns provided in SMTP::$smtp_transaction_id_patterns. Relies on the host providing the ID in response to a DATA command. If no reply has been received yet, it will return null. If no pattern was matched, it will return false.&#10;&#10;Return:&#10;   |null|string;;d4,1293;;b2,0;;m">
</treenode>
<treenode node="reset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;873;5;876;;;;vpos;;vbool;;r&#10;Definition&#10;    reset()&#10;&#10;Description&#10;     Send an SMTP RSET command. Abort any transaction that is currently in progress. Implements RFC 821: RSET &lt;CRLF&gt;.&#10;&#10;Return:&#10;   True on success;;d4,874;;b1,0;;m">
</treenode>
<treenode node="sendAndMail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;958;5;961;;;;vpos;;vbool;;r&#10;Definition&#10;    sendAndMail($from)&#10;&#10;Description&#10;     Send an SMTP SAML command. Starts a mail transaction from the email address specified in $from. Returns true if successful or false otherwise. If True the mail transaction is started and then one or more recipient commands may be called followed by a data command. This command will send the message to the users terminal if they are logged in and send them an email. Implements RFC 821: SAML &lt;SP&gt; FROM:&lt;reverse-path&gt; &lt;CRLF&gt;.&#10;&#10;Parameters:&#10;    string $from - The address the message is from;;d4,959;;b1,0;;mstring $from;;p">
</treenode>
<treenode node="sendCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f14;887;5;942;;;;vpos;;vbool;;r&#10;Definition&#10;    sendCommand($command, $commandstring, $expect)&#10;&#10;Description&#10;     Send a command to an SMTP server and check its return code.&#10;&#10;Parameters:&#10;    string $command - The command name - not sent to the server&#10;    string $commandstring - The actual command to send&#10;    int|array $expect - One or more expected integer success codes&#10;&#10;Return:&#10;   True on success;;d4,888;;b2,0;;mstring $command;;pstring $commandstring;;pint|array $expect;;p">
</treenode>
<treenode node="sendHello;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f14;748;5;759;;;;vpos;;vbool;;r&#10;Definition&#10;    sendHello($hello, $host)&#10;&#10;Description&#10;     Send an SMTP HELO or EHLO command. Low-level implementation used by hello().&#10;&#10;Parameters:&#10;    string $hello - The HELO string&#10;    string $host - The hostname to say we are;;d4,749;;b2,0;;mstring $hello;;pstring $host;;p">
</treenode>
<treenode node="setDebugLevel;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1226;5;1229;;;;vpos;;v;;r&#10;Definition&#10;    setDebugLevel($level = 0)&#10;&#10;Description&#10;     Set debug output level.&#10;&#10;Parameters:&#10;    int $level;;d4,1227;;b1,0;;mint $level;;p">
</treenode>
<treenode node="setDebugOutput;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1206;5;1209;;;;vpos;;v;;r&#10;Definition&#10;    setDebugOutput($method = &apos;echo&apos;)&#10;&#10;Description&#10;     Set debug output method.&#10;&#10;Parameters:&#10;    string|callable $method - The name of the mechanism to use for debugging output, or a callable to handle it;;d4,1207;;b1,0;;mstring|callable $method;;p">
</treenode>
<treenode node="setError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f14;1191;5;1199;;;;vpos;;v;;r&#10;Definition&#10;    setError($message, $detail = &apos;&apos;, $smtp_code = &apos;&apos;, $smtp_code_ex = &apos;&apos;)&#10;&#10;Description&#10;     Set error messages and codes.&#10;&#10;Parameters:&#10;    string $message - The error message&#10;    string $detail - Further detail on the error&#10;    string $smtp_code - An associated SMTP error code&#10;    string $smtp_code_ex - Extended SMTP code;;d4,1192;;b2,0;;mstring $message;;pstring $detail;;pstring $smtp_code;;pstring $smtp_code_ex;;p">
</treenode>
<treenode node="setTimeout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1246;5;1249;;;;vpos;;v;;r&#10;Definition&#10;    setTimeout($timeout = 0)&#10;&#10;Description&#10;     Set SMTP timeout.&#10;&#10;Parameters:&#10;    int $timeout - The timeout duration in seconds;;d4,1247;;b1,0;;mint $timeout;;p">
</treenode>
<treenode node="setVerp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1168;5;1171;;;;vpos;;v;;r&#10;Definition&#10;    setVerp($enabled = false)&#10;&#10;Description&#10;     Enable or disable VERP address generation.&#10;&#10;Parameters:&#10;    bool $enabled;;d4,1169;;b1,0;;mbool $enabled;;p">
</treenode>
<treenode node="startTLS;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;382;5;408;;;;vpos;;vbool;;r&#10;Definition&#10;    startTLS()&#10;&#10;Description&#10;     Initiate a TLS (encrypted) session.;;d4,383;;b1,0;;m">
</treenode>
<treenode node="turn;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;995;5;1001;;;;vpos;;vbool;;r&#10;Definition&#10;    turn()&#10;&#10;Description&#10;     Send an SMTP TURN command. This is an optional command for SMTP that this class does not support. This method is here to make the RFC821 Definition complete for this class and _may_ be implemented in future. Implements from RFC 821: TURN &lt;CRLF&gt;.;;d4,996;;b1,0;;m">
</treenode>
<treenode node="verify;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;970;5;973;;;;vpos;;vbool;;r&#10;Definition&#10;    verify($name)&#10;&#10;Description&#10;     Send an SMTP VRFY command.&#10;&#10;Parameters:&#10;    string $name - The name to verify;;d4,971;;b1,0;;mstring $name;;p">
</treenode>
</treenode>
<treenode node="SOAP_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\soap_helper.php;f0;4;1;40;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="loadWsdl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;15;2;39;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\soap_helper.php;f15;15;2;39;;;;vpos;;vxml;;r&#10;Definition&#10;    loadWsdl($wsdl, $method, $username = null, $password = null)&#10;&#10;Description&#10;     Loads XML from WSDL.;;d1,16;;b1,5;;mwsdl;;pmethod;;pusername;;ppassword;;p">
</treenode>
</treenode>
<treenode node="TCPDF;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f0;133;1;24482;;;;vpos;;v;;r&#10;Definition&#10;    class TCPDF&#10;&#10;Description&#10;      class TCPDF PHP class for generating PDF documents without requiring external extensions. TCPDF project (http://www.tcpdf.org) has been originally derived in 2002 from the Public Domain FPDF class by Olivier Plathey (http://www.fpdf.org), but now is almost entirely rewritten.&lt;br&gt;;;d12,133;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;1837;2;1988;;;;vpos;;v;;r&#10;Definition&#10;    __construct($orientation=&apos;P&apos;, $unit=&apos;mm&apos;, $format=&apos;A4&apos;, $unicode=true, $encoding=&apos;UTF-8&apos;, $diskcache=false, $pdfa=false)&#10;&#10;Description&#10;     This is the class constructor. It allows to set up the page format, the orientation and the measure unit used in all the methods (except for the font sizes).&#10;&#10;Parameters:&#10;     $orientation - (string) page orientation&#10;     $unit - (string) User measure unit&#10;     $format - (mixed) The format used for pages&#10;     $unicode - (boolean) TRUE means that the input text is unicode (default = true)&#10;     $encoding - (string) Charset encoding (used only when converting back html entities);s default is UTF-8&#10;     $diskcache - (boolean) DEPRECATED FEATURE&#10;     $pdfa - (boolean) If TRUE set the document to PDF/A mode;;d138,1837;;b1,0;;m $orientation;;p $unit;;p $format;;p $unicode;;p $encoding;;p $diskcache;;p $pdfa;;p">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;1995;2;2002;;;;vpos;;v;;r&#10;Definition&#10;    __destruct()&#10;&#10;Description&#10;     Default destructor.;;d30,1995;;b1,0;;m">
</treenode>
<treenode node="_addfield;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;12577;2;12600;;;;vpos;;v;;r&#10;Definition&#10;    _addfield($type, $name, $x, $y, $w, $h, $prop)&#10;&#10;Description&#10;     Adds a javascript form field.&#10;&#10;Parameters:&#10;     $type - (string) field type&#10;     $name - (string) field name&#10;     $x - (int) horizontal position&#10;     $y - (int) vertical position&#10;     $w - (int) width&#10;     $h - (int) height&#10;     $prop - (array) javascript field properties;;d67,12577;;b2,0;;m $type;;p $name;;p $x;;p $y;;p $w;;p $h;;p $prop;;p">
</treenode>
<treenode node="_beginpage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10006;2;10043;;;;vpos;;v;;r&#10;Definition&#10;    _beginpage($orientation=&apos;&apos;, $format=&apos;&apos;)&#10;&#10;Description&#10;     Initialize a new page.&#10;&#10;Parameters:&#10;     $orientation - (string) page orientation&#10;     $format - (mixed) The format used for pages;;d60,10006;;b2,0;;m $orientation;;p $format;;p">
</treenode>
<treenode node="_datastring;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10165;2;10171;;;;vpos;;vstring;;r&#10;Definition&#10;    _datastring($s, $n=0)&#10;&#10;Description&#10;     Format a data string for meta information&#10;&#10;Parameters:&#10;     $s - (string) data string to escape&#10;     $n - (int) object ID&#10;&#10;Return:&#10;   escaped string;;d42,10165;;b2,0;;m $s;;p $n;;p">
</treenode>
<treenode node="_datestring;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10227;2;10232;;;;vpos;;vstring;;r&#10;Definition&#10;    _datestring($n=0, $timestamp=0)&#10;&#10;Description&#10;     Returns a formatted date for meta information&#10;&#10;Parameters:&#10;     $n - (int) Object ID&#10;     $timestamp - (int) Timestamp to convert&#10;&#10;Return:&#10;   escaped date string;;d52,10227;;b2,0;;m $n;;p $timestamp;;p">
</treenode>
<treenode node="_destroy;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;7751;2;7780;;;;vpos;;v;;r&#10;Definition&#10;    _destroy($destroyall=false, $preserve_objcopy=false)&#10;&#10;Description&#10;     Unset all class variables except the following critical variables.&#10;&#10;Parameters:&#10;     $destroyall - (boolean) if true destroys all class variables, otherwise preserves critical variables&#10;     $preserve_objcopy - (boolean) if true preserves the objcopy variable;;d70,7751;;b1,0;;m $destroyall;;p $preserve_objcopy;;p">
</treenode>
<treenode node="_dochecks;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;7786;2;7795;;;;vpos;;v;;r&#10;Definition&#10;    _dochecks()&#10;&#10;Description&#10;     Check for locale-related bug;;d32,7786;;b2,0;;m">
</treenode>
<treenode node="_dolinethrough;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10113;2;10116;;;;vpos;;v;;r&#10;Definition&#10;    _dolinethrough($x, $y, $txt)&#10;&#10;Description&#10;     Line through text.&#10;&#10;Parameters:&#10;     $x - (int) X coordinate&#10;     $y - (int) Y coordinate&#10;     $txt - (string) text to linethrough;;d49,10113;;b2,0;;m $x;;p $y;;p $txt;;p">
</treenode>
<treenode node="_dolinethroughw;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10126;2;10129;;;;vpos;;v;;r&#10;Definition&#10;    _dolinethroughw($x, $y, $w)&#10;&#10;Description&#10;     Line through for rectangular text area.&#10;&#10;Parameters:&#10;     $x - (int) X coordinate&#10;     $y - (int) Y coordinate&#10;     $w - (int) line length (width);;d48,10126;;b2,0;;m $x;;p $y;;p $w;;p">
</treenode>
<treenode node="_dooverline;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10139;2;10142;;;;vpos;;v;;r&#10;Definition&#10;    _dooverline($x, $y, $txt)&#10;&#10;Description&#10;     Overline text.&#10;&#10;Parameters:&#10;     $x - (int) X coordinate&#10;     $y - (int) Y coordinate&#10;     $txt - (string) text to overline;;d46,10139;;b2,0;;m $x;;p $y;;p $txt;;p">
</treenode>
<treenode node="_dooverlinew;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10152;2;10156;;;;vpos;;v;;r&#10;Definition&#10;    _dooverlinew($x, $y, $w)&#10;&#10;Description&#10;     Overline for rectangular text area.&#10;&#10;Parameters:&#10;     $x - (int) X coordinate&#10;     $y - (int) Y coordinate&#10;     $w - (int) width to overline;;d45,10152;;b2,0;;m $x;;p $y;;p $w;;p">
</treenode>
<treenode node="_dounderline;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10088;2;10091;;;;vpos;;v;;r&#10;Definition&#10;    _dounderline($x, $y, $txt)&#10;&#10;Description&#10;     Underline text.&#10;&#10;Parameters:&#10;     $x - (int) X coordinate&#10;     $y - (int) Y coordinate&#10;     $txt - (string) text to underline;;d47,10088;;b2,0;;m $x;;p $y;;p $txt;;p">
</treenode>
<treenode node="_dounderlinew;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10101;2;10104;;;;vpos;;v;;r&#10;Definition&#10;    _dounderlinew($x, $y, $w)&#10;&#10;Description&#10;     Underline for rectangular text area.&#10;&#10;Parameters:&#10;     $x - (int) X coordinate&#10;     $y - (int) Y coordinate&#10;     $w - (int) width to underline;;d46,10101;;b2,0;;m $x;;p $y;;p $w;;p">
</treenode>
<treenode node="_encrypt_data;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10459;2;10479;;;;vpos;;vencrypted;;r&#10;Definition&#10;    _encrypt_data($n, $s)&#10;&#10;Description&#10;     Encrypt the input string.&#10;&#10;Parameters:&#10;     $n - (int) object number&#10;     $s - (string) data string to encrypt&#10;&#10;Return:&#10;   string;;d42,10459;;b2,0;;m $n;;p $s;;p">
</treenode>
<treenode node="_enddoc;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;9915;2;9997;;;;vpos;;v;;r&#10;Definition&#10;    _enddoc()&#10;&#10;Description&#10;     Output end of document (EOF).;;d30,9915;;b2,0;;m">
</treenode>
<treenode node="_endpage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10049;2;10052;;;;vpos;;v;;r&#10;Definition&#10;    _endpage()&#10;&#10;Description&#10;     Mark end of page.;;d31,10049;;b2,0;;m">
</treenode>
<treenode node="_fixAES256Password;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10703;2;10710;;;;vpos;;vstring;;r&#10;Definition&#10;    _fixAES256Password($password)&#10;&#10;Description&#10;     Convert password for AES-256 encryption mode&#10;&#10;Parameters:&#10;     $password - (string) password&#10;&#10;Return:&#10;   password;;d50,10703;;b2,0;;m $password;;p">
</treenode>
<treenode node="_generateencryptionkey;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10718;2;10820;;;;vpos;;v;;r&#10;Definition&#10;    _generateencryptionkey()&#10;&#10;Description&#10;     Compute encryption key;;d45,10718;;b2,0;;m">
</treenode>
<treenode node="_getannotsrefs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;8052;2;8086;;;;vpos;;vstring;;r&#10;Definition&#10;    _getannotsrefs($n)&#10;&#10;Description&#10;     Get references to page annotations.&#10;&#10;Parameters:&#10;     $n - (int) page number;;d39,8052;;b2,0;;m $n;;p">
</treenode>
<treenode node="_getobj;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10071;2;10079;;;;vpos;;vstring;;r&#10;Definition&#10;    _getobj($objid=&apos;&apos;)&#10;&#10;Description&#10;     Return the starting object string for the selected object ID.&#10;&#10;Parameters:&#10;     $objid - (int) Object ID (leave empty to get a new ID)&#10;&#10;Return:&#10;   the starting object string;;d39,10071;;b2,0;;m $objid;;p">
</treenode>
<treenode node="_getrawstream;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10257;2;10263;;;;vpos;;v;;r&#10;Definition&#10;    _getrawstream($s, $n=0)&#10;&#10;Description&#10;     get raw output stream.&#10;&#10;Parameters:&#10;     $s - (string) string to output&#10;     $n - (int) object reference for encryption mode;;d44,10257;;b2,0;;m $s;;p $n;;p">
</treenode>
<treenode node="_getxobjectdict;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;9349;2;9355;;;;vpos;;vstring;;r&#10;Definition&#10;    _getxobjectdict()&#10;&#10;Description&#10;     Return XObjects Dictionary.&#10;&#10;Return:&#10;   XObjects dictionary;;d38,9349;;b2,0;;m">
</treenode>
<treenode node="_newobj;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10059;2;10062;;;;vpos;;vint;;r&#10;Definition&#10;    _newobj()&#10;&#10;Description&#10;     Begin a new object and return the object number.&#10;&#10;Return:&#10;   object number;;d30,10059;;b2,0;;m">
</treenode>
<treenode node="_objectkey;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10439;2;10448;;;;vpos;;vint;;r&#10;Definition&#10;    _objectkey($n)&#10;&#10;Description&#10;     Compute encryption key depending on object number where the encrypted data is stored. This is used for all strings and streams without crypt filter specifier.&#10;&#10;Parameters:&#10;     $n - (int) object number&#10;&#10;Return:&#10;   object key;;d35,10439;;b2,0;;m $n;;p">
</treenode>
<treenode node="_OEvalue;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10690;2;10693;;;;vpos;;vstring;;r&#10;Definition&#10;    _OEvalue()&#10;&#10;Description&#10;     Compute OE value (used for encryption)&#10;&#10;Return:&#10;   OE value;;d31,10690;;b2,0;;m">
</treenode>
<treenode node="_out;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10270;2;10291;;;;vpos;;v;;r&#10;Definition&#10;    _out($s)&#10;&#10;Description&#10;     Output a string to the document.&#10;&#10;Parameters:&#10;     $s - (string) string to output;;d29,10270;;b2,0;;m $s;;p">
</treenode>
<treenode node="_outCurve;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;11429;2;11433;;;;vpos;;v;;r&#10;Definition&#10;    _outCurve($x1, $y1, $x2, $y2, $x3, $y3)&#10;&#10;Description&#10;     Append a cubic Bezier curve to the current path. The curve shall extend from the current point to the point (x3, y3), using (x1, y1) and (x2, y2) as the Bezier control points. The new current point shall be (x3, y3).&#10;&#10;Parameters:&#10;     $x1 - (float) Abscissa of control point 1&#10;     $y1 - (float) Ordinate of control point 1&#10;     $x2 - (float) Abscissa of control point 2&#10;     $y2 - (float) Ordinate of control point 2&#10;     $x3 - (float) Abscissa of end point&#10;     $y3 - (float) Ordinate of end point;;d60,11429;;b2,0;;m $x1;;p $y1;;p $x2;;p $y2;;p $x3;;p $y3;;p">
</treenode>
<treenode node="_outCurveV;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;11445;2;11449;;;;vpos;;v;;r&#10;Definition&#10;    _outCurveV($x2, $y2, $x3, $y3)&#10;&#10;Description&#10;     Append a cubic Bezier curve to the current path. The curve shall extend from the current point to the point (x3, y3), using the current point and (x2, y2) as the Bezier control points. The new current point shall be (x3, y3).&#10;&#10;Parameters:&#10;     $x2 - (float) Abscissa of control point 2&#10;     $y2 - (float) Ordinate of control point 2&#10;     $x3 - (float) Abscissa of end point&#10;     $y3 - (float) Ordinate of end point;;d51,11445;;b2,0;;m $x2;;p $y2;;p $x3;;p $y3;;p">
</treenode>
<treenode node="_outCurveY;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;11461;2;11465;;;;vpos;;v;;r&#10;Definition&#10;    _outCurveY($x1, $y1, $x3, $y3)&#10;&#10;Description&#10;     Append a cubic Bezier curve to the current path. The curve shall extend from the current point to the point (x3, y3), using (x1, y1) and (x3, y3) as the Bezier control points. The new current point shall be (x3, y3).&#10;&#10;Parameters:&#10;     $x1 - (float) Abscissa of control point 1&#10;     $y1 - (float) Ordinate of control point 1&#10;     $x3 - (float) Abscissa of end point&#10;     $y3 - (float) Ordinate of end point;;d51,11461;;b2,0;;m $x1;;p $y1;;p $x3;;p $y3;;p">
</treenode>
<treenode node="_outellipticalarc;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;11690;2;11804;;;;vpos;;varray;;r&#10;Definition&#10;    _outellipticalarc($xc, $yc, $rx, $ry, $xang=0, $angs=0, $angf=360, $pie=false, $nc=2, $startpoint=true, $ccw=true, $svg=false)&#10;&#10;Description&#10;     Append an elliptical arc to the current path. An ellipse is formed from n Bezier curves.&#10;&#10;Parameters:&#10;     $xc - (float) Abscissa of center point&#10;     $yc - (float) Ordinate of center point&#10;     $rx - (float) Horizontal radius&#10;     $ry - (float) Vertical radius (if ry = 0 then is a circle, see Circle())&#10;     $xang - : (float) Angle between the X-axis and the major axis of the ellipse&#10;     $angs - : (float) Angle start of draw line&#10;     $angf - : (float) Angle finish of draw line&#10;     $pie - (boolean) if true do not mark the border point (used to draw pie sectors)&#10;     $nc - (integer) Number of curves used to draw a 90 degrees portion of ellipse&#10;     $startpoint - (boolean) if true output a starting point&#10;     $ccw - (boolean) if true draws in counter-clockwise&#10;     $svg - (boolean) if true the angles are in svg mode (already calculated)&#10;&#10;Return:&#10;   bounding box coordinates (x min, y min, x max, y max);;d147,11690;;b2,0;;m $xc;;p $yc;;p $rx;;p $ry;;p $xang;;p $angs;;p $angf;;p $pie;;p $nc;;p $startpoint;;p $ccw;;p $svg;;p">
</treenode>
<treenode node="_outLine;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;11395;2;11399;;;;vpos;;v;;r&#10;Definition&#10;    _outLine($x, $y)&#10;&#10;Description&#10;     Append a straight line segment from the current point to the point (x, y). The new current point shall be (x, y).&#10;&#10;Parameters:&#10;     $x - (float) Abscissa of end point&#10;     $y - (float) Ordinate of end point;;d37,11395;;b2,0;;m $x;;p $y;;p">
</treenode>
<treenode node="_outPoint;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;11381;2;11385;;;;vpos;;v;;r&#10;Definition&#10;    _outPoint($x, $y)&#10;&#10;Description&#10;     Begin a new subpath by moving the current point to coordinates (x, y), omitting any connecting line segment.&#10;&#10;Parameters:&#10;     $x - (float) Abscissa of point&#10;     $y - (float) Ordinate of point;;d38,11381;;b2,0;;m $x;;p $y;;p">
</treenode>
<treenode node="_outRect;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;11411;2;11415;;;;vpos;;v;;r&#10;Definition&#10;    _outRect($x, $y, $w, $h, $op)&#10;&#10;Description&#10;     Append a rectangle to the current path as a complete subpath, with lower-left corner (x, y) and dimensions widthand height in user space.&#10;&#10;Parameters:&#10;     $x - (float) Abscissa of upper-left corner&#10;     $y - (float) Ordinate of upper-left corner&#10;     $w - (float) Width&#10;     $h - (float) Height&#10;     $op - (string) options;;d50,11411;;b2,0;;m $x;;p $y;;p $w;;p $h;;p $op;;p">
</treenode>
<treenode node="_outRestoreGraphicsState;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;20663;2;20665;;;;vpos;;v;;r&#10;Definition&#10;    _outRestoreGraphicsState()&#10;&#10;Description&#10;     Outputs the &quot;restore graphics state&quot; operator &apos;Q&apos;;;d47,20663;;b2,0;;m">
</treenode>
<treenode node="_outSaveGraphicsState;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;20655;2;20657;;;;vpos;;v;;r&#10;Definition&#10;    _outSaveGraphicsState()&#10;&#10;Description&#10;     Outputs the &quot;save graphics state&quot; operator &apos;q&apos;;;d44,20655;;b2,0;;m">
</treenode>
<treenode node="_Ovalue;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10652;2;10681;;;;vpos;;vstring;;r&#10;Definition&#10;    _Ovalue()&#10;&#10;Description&#10;     Compute O value (used for encryption)&#10;&#10;Return:&#10;   O value;;d30,10652;;b2,0;;m">
</treenode>
<treenode node="_putannotsobjs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;8096;2;8730;;;;vpos;;v;;r&#10;Definition&#10;    _putannotsobjs()&#10;&#10;Description&#10;     Output annotations objects for all pages. !!! THIS METHOD IS NOT YET COMPLETED !!! See section 12.5 of PDF 32000_2008 reference.;;d37,8096;;b2,0;;m">
</treenode>
<treenode node="_putAPXObject;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;8741;2;8764;;;;vpos;;vint;;r&#10;Definition&#10;    _putAPXObject($w=0, $h=0, $stream=&apos;&apos;)&#10;&#10;Description&#10;     Put appearance streams XObject used to define annotation&apos;s appearance states.&#10;&#10;Parameters:&#10;     $w - (int) annotation width&#10;     $h - (int) annotation height&#10;     $stream - (string) appearance stream&#10;&#10;Return:&#10;   object ID;;d58,8741;;b2,0;;m $w;;p $h;;p $stream;;p">
</treenode>
<treenode node="_putbookmarks;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;12364;2;12479;;;;vpos;;v;;r&#10;Definition&#10;    _putbookmarks()&#10;&#10;Description&#10;     Create a bookmark PDF string.;;d36,12364;;b2,0;;m">
</treenode>
<treenode node="_putcatalog;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;9647;2;9825;;;;vpos;;vint;;r&#10;Definition&#10;    _putcatalog()&#10;&#10;Description&#10;     Output Catalog.&#10;&#10;Return:&#10;   object id;;d34,9647;;b2,0;;m">
</treenode>
<treenode node="_putcidfont0;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;9027;2;9091;;;;vpos;;v;;r&#10;Definition&#10;    _putcidfont0($font)&#10;&#10;Description&#10;     Output CID-0 fonts. A Type 0 CIDFont contains glyph descriptions based on the Adobe Type 1 font format&#10;&#10;Parameters:&#10;     $font - (array) font data;;d40,9027;;b2,0;;m $font;;p">
</treenode>
<treenode node="_putdests;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;12256;2;12268;;;;vpos;;v;;r&#10;Definition&#10;    _putdests()&#10;&#10;Description&#10;     Insert Named Destinations.;;d32,12256;;b2,0;;m">
</treenode>
<treenode node="_putEmbeddedFiles;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;4834;2;4867;;;;vpos;;v;;r&#10;Definition&#10;    _putEmbeddedFiles()&#10;&#10;Description&#10;     Embedd the attached files.;;d40,4834;;b2,0;;m">
</treenode>
<treenode node="_putencryption;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10487;2;10598;;;;vpos;;v;;r&#10;Definition&#10;    _putencryption()&#10;&#10;Description&#10;     Put encryption on PDF document.;;d37,10487;;b2,0;;m">
</treenode>
<treenode node="_putextgstates;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;13838;2;13856;;;;vpos;;v;;r&#10;Definition&#10;    _putextgstates()&#10;&#10;Description&#10;     Put extgstates for object transparency;;d37,13838;;b2,0;;m">
</treenode>
<treenode node="_putfonts;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;8771;2;8913;;;;vpos;;v;;r&#10;Definition&#10;    _putfonts()&#10;&#10;Description&#10;     Output fonts.;;d32,8771;;b2,0;;m">
</treenode>
<treenode node="_putheader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;9906;2;9909;;;;vpos;;v;;r&#10;Definition&#10;    _putheader()&#10;&#10;Description&#10;     Output PDF File Header (7.5.2).;;d33,9906;;b2,0;;m">
</treenode>
<treenode node="_putimages;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;9097;2;9217;;;;vpos;;v;;r&#10;Definition&#10;    _putimages()&#10;&#10;Description&#10;     Output images.;;d33,9097;;b2,0;;m">
</treenode>
<treenode node="_putinfo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;9448;2;9490;;;;vpos;;vint;;r&#10;Definition&#10;    _putinfo()&#10;&#10;Description&#10;     Adds some Metadata information (Document Information Dictionary) (see Chapter 14.3.3 Document Information Dictionary of PDF32000_2008.pdf Reference)&#10;&#10;Return:&#10;   object id;;d31,9448;;b2,0;;m">
</treenode>
<treenode node="_putjavascript;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;12519;2;12562;;;;vpos;;v;;r&#10;Definition&#10;    _putjavascript()&#10;&#10;Description&#10;     Create a javascript PDF string.;;d37,12519;;b2,0;;m">
</treenode>
<treenode node="_putocg;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;13694;2;13711;;;;vpos;;v;;r&#10;Definition&#10;    _putocg()&#10;&#10;Description&#10;     Put pdf layers.;;d30,13694;;b2,0;;m">
</treenode>
<treenode node="_putpages;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;7890;2;8042;;;;vpos;;v;;r&#10;Definition&#10;    _putpages()&#10;&#10;Description&#10;     Output pages (and replace page number aliases).;;d32,7890;;b2,0;;m">
</treenode>
<treenode node="_putresourcedict;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;9361;2;9419;;;;vpos;;v;;r&#10;Definition&#10;    _putresourcedict()&#10;&#10;Description&#10;     Output Resources Dictionary.;;d39,9361;;b2,0;;m">
</treenode>
<treenode node="_putresources;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;9425;2;9440;;;;vpos;;v;;r&#10;Definition&#10;    _putresources()&#10;&#10;Description&#10;     Output Resources.;;d36,9425;;b2,0;;m">
</treenode>
<treenode node="_putshaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f1;14574;2;14749;;;;vpos;;v;;r&#10;Definition&#10;    _putshaders()&#10;&#10;Description&#10;     Output gradient shaders.;;d24,14574;;b0,0;;m">
</treenode>
<treenode node="_putsignature;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;13286;2;13355;;;;vpos;;v;;r&#10;Definition&#10;    _putsignature()&#10;&#10;Description&#10;     Add certification signature (DocMDP or UR3) You can set only one signature type;;d36,13286;;b2,0;;m">
</treenode>
<treenode node="_putspotcolors;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;9329;2;9341;;;;vpos;;v;;r&#10;Definition&#10;    _putspotcolors()&#10;&#10;Description&#10;     Output Spot Colors Resources.;;d37,9329;;b2,0;;m">
</treenode>
<treenode node="_puttruetypeunicode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;8923;2;9017;;;;vpos;;v;;r&#10;Definition&#10;    _puttruetypeunicode($font)&#10;&#10;Description&#10;     Adds unicode fonts.&lt;br&gt; Based on PDF Reference 1.3 (section 5)&#10;&#10;Parameters:&#10;     $font - (array) font data;;d47,8923;;b2,0;;m $font;;p">
</treenode>
<treenode node="_putviewerpreferences;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;9834;2;9900;;;;vpos;;vstring;;r&#10;Definition&#10;    _putviewerpreferences()&#10;&#10;Description&#10;     Output viewer preferences.&#10;&#10;Return:&#10;   for viewer preferences;;d44,9834;;b2,0;;m">
</treenode>
<treenode node="_putXMP;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;9509;2;9640;;;;vpos;;v;;r&#10;Definition&#10;    _putXMP()&#10;&#10;Description&#10;     Put XMP data object and return ID.;;d30,9509;;b2,0;;m">
</treenode>
<treenode node="_putxobjects;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;9226;2;9322;;;;vpos;;v;;r&#10;Definition&#10;    _putxobjects()&#10;&#10;Description&#10;     Output Form XObjects Templates.;;d35,9226;;b2,0;;m">
</treenode>
<treenode node="_textstring;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10241;2;10247;;;;vpos;;vstring;;r&#10;Definition&#10;    _textstring($s, $n=0)&#10;&#10;Description&#10;     Format a text string for meta information&#10;&#10;Parameters:&#10;     $s - (string) string to escape&#10;     $n - (int) object ID&#10;&#10;Return:&#10;   escaped string;;d42,10241;;b2,0;;m $s;;p $n;;p">
</treenode>
<treenode node="_UEvalue;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10640;2;10643;;;;vpos;;vstring;;r&#10;Definition&#10;    _UEvalue()&#10;&#10;Description&#10;     Compute UE value (used for encryption)&#10;&#10;Return:&#10;   UE value;;d31,10640;;b2,0;;m">
</treenode>
<treenode node="_Uvalue;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;10607;2;10631;;;;vpos;;vstring;;r&#10;Definition&#10;    _Uvalue()&#10;&#10;Description&#10;     Compute U value (used for encryption)&#10;&#10;Return:&#10;   U value;;d30,10607;;b2,0;;m">
</treenode>
<treenode node="AcceptPageBreak;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4912;2;4928;;;;vpos;;vboolean;;r&#10;Definition&#10;    AcceptPageBreak()&#10;&#10;Description&#10;     Whenever a page break condition is met, the method is called, and the break is issued or not depending on the returned value. The default implementation returns a value according to the mode selected by SetAutoPageBreak().&lt;br /&gt; This method is called automatically and should not be called directly by the application.;;d35,4912;;b1,0;;m">
</treenode>
<treenode node="addEmptySignatureAppearance;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13464;2;13467;;;;vpos;;v;;r&#10;Definition&#10;    addEmptySignatureAppearance($x=0, $y=0, $w=0, $h=0, $page=-1, $name=&apos;&apos;)&#10;&#10;Description&#10;     Add an empty digital signature appearance (a cliccable rectangle area to get signature properties)&#10;&#10;Parameters:&#10;     $x - (float) Abscissa of the upper-left corner&#10;     $y - (float) Ordinate of the upper-left corner&#10;     $w - (float) Width of the signature area&#10;     $h - (float) Height of the signature area&#10;     $page - (int) option page number (if &lt; 0 the current page is used)&#10;     $name - (string) Name of the signature;;d89,13464;;b1,0;;m $x;;p $y;;p $w;;p $h;;p $page;;p $name;;p">
</treenode>
<treenode node="addExtGState;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;13794;2;13817;;;;vpos;;vthe;;r&#10;Definition&#10;    addExtGState($parms)&#10;&#10;Description&#10;     Add transparency parameters to the current extgstate&#10;&#10;Parameters:&#10;     $parms - (array) parameters&#10;&#10;Return:&#10;   number of extgstates;;d41,13794;;b2,0;;m $parms;;p">
</treenode>
<treenode node="AddFont;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4170;2;4407;;;;vpos;;varray;;r&#10;Definition&#10;    AddFont($family, $style=&apos;&apos;, $fontfile=&apos;&apos;, $subset=&apos;default&apos;)&#10;&#10;Description&#10;     Imports a TrueType, Type1, core, or CID0 font and makes it available. It is necessary to generate a font definition file first (read /fonts/utils/README.TXT). The definition file (and the font file itself when embedding) must be present either in the current directory or in the one indicated by K_PATH_FONTS if the constant is defined. If it could not be found, the error &quot;Could not include font definition file&quot; is generated.&#10;&#10;Parameters:&#10;     $family - (string) Font family&#10;     $style - (string) Font style&#10;     $fontfile - (string) The font definition file&#10;     $subset - (mixed) if true embedd only a subset of the font (stores only the information related to the used characters);s if false embedd full font;s if &apos;default&apos; uses the default value set using setFontSubsetting()&#10;&#10;Return:&#10;   containing the font data, or false in case of error;;d78,4170;;b1,0;;m $family;;p $style;;p $fontfile;;p $subset;;p">
</treenode>
<treenode node="addHtmlLink;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;10371;2;10404;;;;vpos;;vthe;;r&#10;Definition&#10;    addHtmlLink($url, $name, $fill=false, $firstline=false, $color=&apos;&apos;, $style=-1, $firstblock=false)&#10;&#10;Description&#10;     Output anchor link.&#10;&#10;Parameters:&#10;     $url - (string) link URL or internal link (i&#10;     $name - (string) link name&#10;     $fill - (boolean) Indicates if the cell background must be painted (true) or transparent (false)&#10;     $firstline - (boolean) if true prints only the first line and return the remaining string&#10;     $color - (array) array of RGB text color&#10;     $style - (string) font style (U, D, B, I)&#10;     $firstblock - (boolean) if true the string is the starting of a line&#10;&#10;Return:&#10;   number of cells used or the remaining text if $firstline = true;s;;d114,10371;;b1,0;;m $url;;p $name;;p $fill;;p $firstline;;p $color;;p $style;;p $firstblock;;p">
</treenode>
<treenode node="addHTMLTOC;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;21484;2;21610;;;;vpos;;v;;r&#10;Definition&#10;    addHTMLTOC($page=&apos;&apos;, $toc_name=&apos;TOC&apos;, $templates=array(), $correct_align=true, $style=&apos;&apos;, $color=array(0,0,0))&#10;&#10;Description&#10;     Output a Table Of Content Index (TOC) using HTML templates. This method must be called after all Bookmarks were set. Before calling this method you have to open the page using the addTOCPage() method. After calling this method you have to call endTOCPage() to close the TOC page.&#10;&#10;Parameters:&#10;     $page - (int) page number where this TOC should be inserted (leave empty for current page)&#10;     $toc_name - (string) name to use for TOC bookmark&#10;     $templates - (array) array of html templates&#10;     $correct_align - (boolean) if true correct the number alignment (numbers must be in monospaced font like courier and right aligned on LTR, or left aligned on RTL)&#10;     $style - (string) Font style for title: B = Bold, I = Italic, BI = Bold + Italic&#10;     $color - (array) RGB color array for title (values from 0 to 255);;d128,21484;;b1,0;;m $page;;p $toc_name;;p $templates;;p $correct_align;;p $style;;p $color;;p">
</treenode>
<treenode node="addHTMLVertSpace;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;19891;2;19909;;;;vpos;;v;;r&#10;Definition&#10;    addHTMLVertSpace($hbz=0, $hb=0, $cell=false, $firsttag=false, $lasttag=false)&#10;&#10;Description&#10;     Add vertical spaces if needed.&#10;&#10;Parameters:&#10;     $hbz - (string) Distance between current y and line bottom&#10;     $hb - (string) The height of the break&#10;     $cell - (boolean) if true add the default left (or right if RTL) padding to each new line (default false)&#10;     $firsttag - (boolean) set to true when the tag is the first&#10;     $lasttag - (boolean) set to true when the tag is the last;;d98,19891;;b2,0;;m $hbz;;p $hb;;p $cell;;p $firsttag;;p $lasttag;;p">
</treenode>
<treenode node="addJavascriptObject;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;12503;2;12511;;;;vpos;;vint;;r&#10;Definition&#10;    addJavascriptObject($script, $onload=false)&#10;&#10;Description&#10;     Adds a javascript object and return object ID&#10;&#10;Parameters:&#10;     $script - (string) Javascript code&#10;     $onload - (boolean) if true executes this object when opening the document&#10;&#10;Return:&#10;   internal object ID;;d61,12503;;b1,0;;m $script;;p $onload;;p">
</treenode>
<treenode node="AddLink;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4682;2;4687;;;;vpos;;v;;r&#10;Definition&#10;    AddLink()&#10;&#10;Description&#10;     Creates a new internal link and returns its identifier. An internal link is a clickable area which directs to another place within the document.&lt;br /&gt; The identifier can then be passed to Cell(), Write(), Image() or Link(). The destination is defined with SetLink().;;d27,4682;;b1,0;;m">
</treenode>
<treenode node="AddPage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3101;2;3116;;;;vpos;;v;;r&#10;Definition&#10;    AddPage($orientation=&apos;&apos;, $format=&apos;&apos;, $keepmargins=false, $tocpage=false)&#10;&#10;Description&#10;     Adds a new page to the document. If a page is already present, the Footer() method is called first to output the footer (if enabled). Then the page is added, the current position set to the top-left corner according to the left and top margins (or top-right if in RTL mode), and Header() is called to display the header (if enabled). The origin of the coordinate system is at the top-left corner (or top-right for RTL) and increasing ordinates go downwards.&#10;&#10;Parameters:&#10;     $orientation - (string) page orientation&#10;     $format - (mixed) The format used for pages&#10;     $keepmargins - (boolean) if true overwrites the default page margins with the current margins&#10;     $tocpage - (boolean) if true set the tocpage state to true (the added page will be used to display Table Of Content);;d90,3101;;b1,0;;m $orientation;;p $format;;p $keepmargins;;p $tocpage;;p">
</treenode>
<treenode node="addPageRegion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22532;2;22541;;;;vpos;;v;;r&#10;Definition&#10;    addPageRegion($region)&#10;&#10;Description&#10;     Add a single no-write region on selected page. A no-write region is a portion of the page with a rectangular or trapezium shape that will not be covered when writing text or html code. A region is always aligned on the left or right side of the page ad is defined using a vertical segment. You can set multiple regions for the same page.&#10;&#10;Parameters:&#10;     $region - (array) array of a single no-write region array: (&apos;page&apos; =&gt; page number or empy for current page, &apos;xt&apos; =&gt; X top, &apos;yt&apos; =&gt; Y top, &apos;xb&apos; =&gt; X bottom, &apos;yb&apos; =&gt; Y bottom, &apos;side&apos; =&gt; page side &apos;L&apos; = left or &apos;R&apos; = right);;d40,22532;;b1,0;;m $region;;p">
</treenode>
<treenode node="AddSpotColor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3715;2;3720;;;;vpos;;v;;r&#10;Definition&#10;    AddSpotColor($name, $c, $m, $y, $k)&#10;&#10;Description&#10;     Defines a new spot color. It can be expressed in RGB components or gray scale. The method can be called before the first page is created and the value is retained from page to page.&#10;&#10;Parameters:&#10;     $name - (string) Full name of the spot color&#10;     $c - (float) Cyan color for CMYK&#10;     $m - (float) Magenta color for CMYK&#10;     $y - (float) Yellow color for CMYK&#10;     $k - (float) Key (Black) color for CMYK;;d53,3715;;b1,0;;m $name;;p $c;;p $m;;p $y;;p $k;;p">
</treenode>
<treenode node="addTOC;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;21274;2;21466;;;;vpos;;v;;r&#10;Definition&#10;    addTOC($page=&apos;&apos;, $numbersfont=&apos;&apos;, $filler=&apos;.&apos;, $toc_name=&apos;TOC&apos;, $style=&apos;&apos;, $color=array(0,0,0))&#10;&#10;Description&#10;     Output a Table of Content Index (TOC). This method must be called after all Bookmarks were set. Before calling this method you have to open the page using the addTOCPage() method. After calling this method you have to call endTOCPage() to close the TOC page. You can override this method to achieve different styles.&#10;&#10;Parameters:&#10;     $page - (int) page number where this TOC should be inserted (leave empty for current page)&#10;     $numbersfont - (string) set the font for page numbers (please use monospaced font for better alignment)&#10;     $filler - (string) string used to fill the space between text and page number&#10;     $toc_name - (string) name to use for TOC bookmark&#10;     $style - (string) Font style for title: B = Bold, I = Italic, BI = Bold + Italic&#10;     $color - (array) RGB color array for bookmark title (values from 0 to 255);;d113,21274;;b1,0;;m $page;;p $numbersfont;;p $filler;;p $toc_name;;p $style;;p $color;;p">
</treenode>
<treenode node="addTOCPage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3076;2;3078;;;;vpos;;v;;r&#10;Definition&#10;    addTOCPage($orientation=&apos;&apos;, $format=&apos;&apos;, $keepmargins=false)&#10;&#10;Description&#10;     Adds a new TOC (Table Of Content) page to the document.&#10;&#10;Parameters:&#10;     $orientation - (string) page orientation&#10;     $format - (mixed) The format used for pages&#10;     $keepmargins - (boolean) if true overwrites the default page margins with the current margins;;d77,3076;;b1,0;;m $orientation;;p $format;;p $keepmargins;;p">
</treenode>
<treenode node="adjustCellPadding;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;2714;2;2779;;;;vpos;;varray;;r&#10;Definition&#10;    adjustCellPadding($brd=0)&#10;&#10;Description&#10;     Adjust the internal Cell padding array to take account of the line width.&#10;&#10;Parameters:&#10;     $brd - (mixed) Indicates if borders must be drawn around the cell&#10;&#10;Return:&#10;   of adjustments;;d46,2714;;b2,0;;m $brd;;p">
</treenode>
<treenode node="Annotation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4744;2;4826;;;;vpos;;v;;r&#10;Definition&#10;    Annotation($x, $y, $w, $h, $text, $opt=array(&apos;Subtype&apos;=&gt;&apos;Text&apos;), $spaces=0)&#10;&#10;Description&#10;     Puts a markup annotation on a rectangular area of the page. !!!!THE ANNOTATION SUPPORT IS NOT YET FULLY IMPLEMENTED !!!!&#10;&#10;Parameters:&#10;     $x - (float) Abscissa of the upper-left corner of the rectangle&#10;     $y - (float) Ordinate of the upper-left corner of the rectangle&#10;     $w - (float) Width of the rectangle&#10;     $h - (float) Height of the rectangle&#10;     $text - (string) annotation text or alternate content&#10;     $opt - (array) array of options (see section 8&#10;     $spaces - (int) number of spaces on the text to link;;d93,4744;;b1,0;;m $x;;p $y;;p $w;;p $h;;p $text;;p $opt;;p $spaces;;p">
</treenode>
<treenode node="applyTSA;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;13542;2;13548;;;;vpos;;v;;r&#10;Definition&#10;    applyTSA($signature)&#10;&#10;Description&#10;     NOT YET IMPLEMENTED Request TSA for a timestamp&#10;&#10;Parameters:&#10;     $signature - (string) Digital signature as binary string;;d41,13542;;b2,0;;m $signature;;p">
</treenode>
<treenode node="Arrow;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;12138;2;12187;;;;vpos;;v;;r&#10;Definition&#10;    Arrow($x0, $y0, $x1, $y1, $head_style=0, $arm_size=5, $arm_angle=15)&#10;&#10;Description&#10;     Draws a grahic arrow.&#10;&#10;Parameters:&#10;     $x0 - (float) Abscissa of first point&#10;     $y0 - (float) Ordinate of first point&#10;     $x1 - (float) Abscissa of second point&#10;     $y1 - (float) Ordinate of second point&#10;     $head_style - (int) (0 = draw only arrowhead arms, 1 = draw closed arrowhead, but no fill, 2 = closed and filled arrowhead, 3 = filled arrowhead)&#10;     $arm_size - (float) length of arrowhead arms&#10;     $arm_angle - (int) angle between an arm and the shaft;;d86,12138;;b1,0;;m $x0;;p $y0;;p $x1;;p $y1;;p $head_style;;p $arm_size;;p $arm_angle;;p">
</treenode>
<treenode node="Bookmark;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;12299;2;12339;;;;vpos;;v;;r&#10;Definition&#10;    Bookmark($txt, $level=0, $y=-1, $page=&apos;&apos;, $style=&apos;&apos;, $color=array(0,0,0), $x=-1, $link=&apos;&apos;)&#10;&#10;Description&#10;     Adds a bookmark.&#10;&#10;Parameters:&#10;     $txt - (string) Bookmark description&#10;     $level - (int) Bookmark level (minimum value is 0)&#10;     $y - (float) Y position in user units of the bookmark on the selected page (default = -1 = current position;s 0 = page start;s)&#10;     $page - (int|string) Target page number (leave empty for current page)&#10;     $style - (string) Font style: B = Bold, I = Italic, BI = Bold + Italic&#10;     $color - (array) RGB color array (values from 0 to 255)&#10;     $x - (float) X position in user units of the bookmark on the selected page (default = -1 = current position;s)&#10;     $link - (mixed) URL, or numerical link ID, or named destination (# character followed by the destination name), or embedded file (* character followed by the file name);;d108,12299;;b1,0;;m $txt;;p $level;;p $y;;p $page;;p $style;;p $color;;p $x;;p $link;;p">
</treenode>
<treenode node="Button;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13119;2;13275;;;;vpos;;v;;r&#10;Definition&#10;    Button($name, $w, $h, $caption, $action, $prop=array(), $opt=array(), $x=&apos;&apos;, $y=&apos;&apos;, $js=false)&#10;&#10;Description&#10;     Creates a button field&#10;&#10;Parameters:&#10;     $name - (string) field name&#10;     $w - (int) width&#10;     $h - (int) height&#10;     $caption - (string) caption&#10;     $action - (mixed) action triggered by pressing the button&#10;     $prop - (array) javascript field properties&#10;     $opt - (array) annotation parameters&#10;     $x - (float) Abscissa of the upper-left corner of the rectangle&#10;     $y - (float) Ordinate of the upper-left corner of the rectangle&#10;     $js - (boolean) if true put the field using JavaScript (requires Acrobat Writer to be rendered);;d112,13119;;b1,0;;m $name;;p $w;;p $h;;p $caption;;p $action;;p $prop;;p $opt;;p $x;;p $y;;p $js;;p">
</treenode>
<treenode node="Cell;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4993;2;5040;;;;vpos;;v;;r&#10;Definition&#10;    Cell($w, $h=0, $txt=&apos;&apos;, $border=0, $ln=0, $align=&apos;&apos;, $fill=false, $link=&apos;&apos;, $stretch=0, $ignore_min_height=false, $calign=&apos;T&apos;, $valign=&apos;M&apos;)&#10;&#10;Description&#10;     Prints a cell (rectangular area) with optional borders, background color and character string. The upper-left corner of the cell corresponds to the current position. The text can be aligned or centered. After the call, the current position moves to the right or to the next line. It is possible to put a link on the text.&lt;br /&gt; If automatic page breaking is enabled and the cell goes beyond the limit, a page break is done before outputting.&#10;&#10;Parameters:&#10;     $w - (float) Cell width&#10;     $h - (float) Cell height&#10;     $txt - (string) String to print&#10;     $border - (mixed) Indicates if borders must be drawn around the cell&#10;     $ln - (int) Indicates where the current position should go after the call&#10;     $align - (string) Allows to center or align the text&#10;     $fill - (boolean) Indicates if the cell background must be painted (true) or transparent (false)&#10;     $link - (mixed) URL or identifier returned by AddLink()&#10;     $stretch - (int) font stretch mode: &lt;ul&gt;&lt;li&gt;0 = disabled&lt;/li&gt;&lt;li&gt;1 = horizontal scaling only if text is larger than cell width&lt;/li&gt;&lt;li&gt;2 = forced horizontal scaling to fit cell width&lt;/li&gt;&lt;li&gt;3 = character spacing only if text is larger than cell width&lt;/li&gt;&lt;li&gt;4 = forced character spacing to fit cell width&lt;/li&gt;&lt;/ul&gt; General font stretching and scaling values will be preserved when possible&#10;     $ignore_min_height - (boolean) if true ignore automatic minimum height value&#10;     $calign - (string) cell vertical alignment relative to the specified Y value&#10;     $valign - (string) text vertical alignment inside the cell;;d157,4993;;b1,0;;m $w;;p $h;;p $txt;;p $border;;p $ln;;p $align;;p $fill;;p $link;;p $stretch;;p $ignore_min_height;;p $calign;;p $valign;;p">
</treenode>
<treenode node="CheckBox;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13039;2;13101;;;;vpos;;v;;r&#10;Definition&#10;    CheckBox($name, $w, $checked=false, $prop=array(), $opt=array(), $onvalue=&apos;Yes&apos;, $x=&apos;&apos;, $y=&apos;&apos;, $js=false)&#10;&#10;Description&#10;     Creates a CheckBox field&#10;&#10;Parameters:&#10;     $name - (string) field name&#10;     $w - (int) width&#10;     $checked - (boolean) define the initial state&#10;     $prop - (array) javascript field properties&#10;     $opt - (array) annotation parameters&#10;     $onvalue - (string) value to be returned if selected&#10;     $x - (float) Abscissa of the upper-left corner of the rectangle&#10;     $y - (float) Ordinate of the upper-left corner of the rectangle&#10;     $js - (boolean) if true put the field using JavaScript (requires Acrobat Writer to be rendered);;d123,13039;;b1,0;;m $name;;p $w;;p $checked;;p $prop;;p $opt;;p $onvalue;;p $x;;p $y;;p $js;;p">
</treenode>
<treenode node="checkPageBreak;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;4939;2;4972;;;;vpos;;vboolean;;r&#10;Definition&#10;    checkPageBreak($h=0, $y=&apos;&apos;, $addpage=true)&#10;&#10;Description&#10;     Add page if needed.&#10;&#10;Parameters:&#10;     $h - (float) Cell height&#10;     $y - (mixed) starting y position, leave empty for current position&#10;     $addpage - (boolean) if true add a page, otherwise only return the true/false state&#10;&#10;Return:&#10;   true in case of page break, false otherwise;;d63,4939;;b2,0;;m $h;;p $y;;p $addpage;;p">
</treenode>
<treenode node="checkPageRegions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;22569;2;22651;;;;vpos;;varray;;r&#10;Definition&#10;    checkPageRegions($h, $x, $y)&#10;&#10;Description&#10;     Check page for no-write regions and adapt current coordinates and page margins if necessary. A no-write region is a portion of the page with a rectangular or trapezium shape that will not be covered when writing text or html code. A region is always aligned on the left or right side of the page ad is defined using a vertical segment.&#10;&#10;Parameters:&#10;     $h - (float) height of the text/image/object to print in user units&#10;     $x - (float) current X coordinate in user units&#10;     $y - (float) current Y coordinate in user units&#10;&#10;Return:&#10;   ($x, $y);;d49,22569;;b2,0;;m $h;;p $x;;p $y;;p">
</treenode>
<treenode node="Circle;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11821;2;11823;;;;vpos;;v;;r&#10;Definition&#10;    Circle($x0, $y0, $r, $angstr=0, $angend=360, $style=&apos;&apos;, $line_style=array(), $fill_color=array(), $nc=2)&#10;&#10;Description&#10;     Draws a circle. A circle is formed from n Bezier curves.&#10;&#10;Parameters:&#10;     $x0 - (float) Abscissa of center point&#10;     $y0 - (float) Ordinate of center point&#10;     $r - (float) Radius&#10;     $angstr - : (float) Angle start of draw line&#10;     $angend - : (float) Angle finish of draw line&#10;     $style - (string) Style of rendering&#10;     $line_style - (array) Line style of circle&#10;     $fill_color - (array) Fill color&#10;     $nc - (integer) Number of curves used to draw a 90 degrees portion of circle;;d122,11821;;b1,0;;m $x0;;p $y0;;p $r;;p $angstr;;p $angend;;p $style;;p $line_style;;p $fill_color;;p $nc;;p">
</treenode>
<treenode node="Clip;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;14440;2;14454;;;;vpos;;v;;r&#10;Definition&#10;    Clip($x, $y, $w, $h)&#10;&#10;Description&#10;     Set a rectangular clipping area.&#10;&#10;Parameters:&#10;     $x - (float) abscissa of the top left corner of the rectangle (or top right corner for RTL mode)&#10;     $y - (float) ordinate of the top left corner of the rectangle&#10;     $w - (float) width of the rectangle&#10;     $h - (float) height of the rectangle;;d41,14440;;b2,0;;m $x;;p $y;;p $w;;p $h;;p">
</treenode>
<treenode node="Close;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2950;2;2984;;;;vpos;;v;;r&#10;Definition&#10;    Close()&#10;&#10;Description&#10;     Terminates the PDF document. It is not necessary to call this method explicitly because Output() does it automatically. If the document contains no page, AddPage() is called to prevent from getting an invalid document.;;d25,2950;;b1,0;;m">
</treenode>
<treenode node="closeHTMLTagHandler;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;19344;2;19880;;;;vpos;;v;;r&#10;Definition&#10;    closeHTMLTagHandler($dom, $key, $cell, $maxbottomliney=0)&#10;&#10;Description&#10;     Process closing tags.&#10;&#10;Parameters:&#10;     $dom - (array) html dom array&#10;     $key - (int) current element id&#10;     $cell - (boolean) if true add the default left (or right if RTL) padding to each new line (default false)&#10;     $maxbottomliney - (int) maximum y value of current line;;d78,19344;;b2,0;;m $dom;;p $key;;p $cell;;p $maxbottomliney;;p">
</treenode>
<treenode node="colorRegistrationBar;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;14025;2;14151;;;;vpos;;v;;r&#10;Definition&#10;    colorRegistrationBar($x, $y, $w, $h, $transition=true, $vertical=false, $colors=&apos;A,R,G,B,C,M,Y,K&apos;)&#10;&#10;Description&#10;     Paints color transition registration bars&#10;&#10;Parameters:&#10;     $x - (float) abscissa of the top left corner of the rectangle&#10;     $y - (float) ordinate of the top left corner of the rectangle&#10;     $w - (float) width of the rectangle&#10;     $h - (float) height of the rectangle&#10;     $transition - (boolean) if true prints tcolor transitions to white&#10;     $vertical - (boolean) if true prints bar vertically&#10;     $colors - (string) colors to print separated by comma;;d116,14025;;b1,0;;m $x;;p $y;;p $w;;p $h;;p $transition;;p $vertical;;p $colors;;p">
</treenode>
<treenode node="ComboBox;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;12952;2;13022;;;;vpos;;v;;r&#10;Definition&#10;    ComboBox($name, $w, $h, $values, $prop=array(), $opt=array(), $x=&apos;&apos;, $y=&apos;&apos;, $js=false)&#10;&#10;Description&#10;     Creates a Combo-box field&#10;&#10;Parameters:&#10;     $name - (string) field name&#10;     $w - (int) width&#10;     $h - (int) height&#10;     $values - (array) array containing the list of values&#10;     $prop - (array) javascript field properties&#10;     $opt - (array) annotation parameters&#10;     $x - (float) Abscissa of the upper-left corner of the rectangle&#10;     $y - (float) Ordinate of the upper-left corner of the rectangle&#10;     $js - (boolean) if true put the field using JavaScript (requires Acrobat Writer to be rendered);;d104,12952;;b1,0;;m $name;;p $w;;p $h;;p $values;;p $prop;;p $opt;;p $x;;p $y;;p $js;;p">
</treenode>
<treenode node="commitTransaction;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;21634;2;21639;;;;vpos;;v;;r&#10;Definition&#10;    commitTransaction()&#10;&#10;Description&#10;     Delete the copy of the current TCPDF object used for undo operation.;;d37,21634;;b1,0;;m">
</treenode>
<treenode node="convertSVGtMatrix;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;22993;2;23005;;;;vpos;;varray;;r&#10;Definition&#10;    convertSVGtMatrix($tm)&#10;&#10;Description&#10;     Convert SVG transformation matrix to PDF.&#10;&#10;Parameters:&#10;     $tm - (array) original SVG transformation matrix&#10;&#10;Return:&#10;   transformation matrix;;d43,22993;;b2,0;;m $tm;;p">
</treenode>
<treenode node="CoonsPatchMesh;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;14348;2;14428;;;;vpos;;v;;r&#10;Definition&#10;    CoonsPatchMesh($x, $y, $w, $h, $col1=array(), $col2=array(), $col3=array(), $col4=array(), $coords=array(0.00,0.0,0.33,0.00,0.67,0.00,1.00,0.00,1.00,0.33,1.00,0.67,1.00,1.00,0.67,1.00,0.33,1.00,0.00,1.00,0.00,0.67,0.00,0.33), $coords_min=0, $coords_max=1, $antialias=false)&#10;&#10;Description&#10;     Paints a coons patch mesh.&#10;&#10;Parameters:&#10;     $x - (float) abscissa of the top left corner of the rectangle&#10;     $y - (float) ordinate of the top left corner of the rectangle&#10;     $w - (float) width of the rectangle&#10;     $h - (float) height of the rectangle&#10;     $col1 - (array) first color (lower left corner) (RGB components)&#10;     $col2 - (array) second color (lower right corner) (RGB components)&#10;     $col3 - (array) third color (upper right corner) (RGB components)&#10;     $col4 - (array) fourth color (upper left corner) (RGB components)&#10;     $coords - (array) &lt;ul&gt;&lt;li&gt;for one patch mesh: array(float x1, float y1, &#10;     $coords_min - (array) minimum value used by the coordinates&#10;     $coords_max - (array) maximum value used by the coordinates&#10;     $antialias - (boolean) A flag indicating whether to filter the shading function to prevent aliasing artifacts;;d291,14348;;b1,0;;m $x;;p $y;;p $w;;p $h;;p $col1;;p $col2;;p $col3;;p $col4;;p $coords;;p $coords_min;;p $coords_max;;p $antialias;;p">
</treenode>
<treenode node="copyPage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;21197;2;21255;;;;vpos;;vtrue;;r&#10;Definition&#10;    copyPage($page=0)&#10;&#10;Description&#10;     Clone the specified page to a new page.&#10;&#10;Parameters:&#10;     $page - (int) number of page to copy (0 = current page)&#10;&#10;Return:&#10;   in case of success, false in case of error;;d35,21197;;b1,0;;m $page;;p">
</treenode>
<treenode node="cropMark;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;14165;2;14222;;;;vpos;;v;;r&#10;Definition&#10;    cropMark($x, $y, $w, $h, $type=&apos;T,R,B,L&apos;, $color=array(100,100,100,100,&apos;All&apos;))&#10;&#10;Description&#10;     Paints crop marks.&#10;&#10;Parameters:&#10;     $x - (float) abscissa of the crop mark center&#10;     $y - (float) ordinate of the crop mark center&#10;     $w - (float) width of the crop mark&#10;     $h - (float) height of the crop mark&#10;     $type - (string) type of crop mark, one symbol per type separated by comma: T = TOP, F = BOTTOM, L = LEFT, R = RIGHT, TL = A = TOP-LEFT, TR = B = TOP-RIGHT, BL = C = BOTTOM-LEFT, BR = D = BOTTOM-RIGHT&#10;     $color - (array) crop mark color (default spot registration color);;d96,14165;;b1,0;;m $x;;p $y;;p $w;;p $h;;p $type;;p $color;;p">
</treenode>
<treenode node="Curve;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11579;2;11593;;;;vpos;;v;;r&#10;Definition&#10;    Curve($x0, $y0, $x1, $y1, $x2, $y2, $x3, $y3, $style=&apos;&apos;, $line_style=array(), $fill_color=array())&#10;&#10;Description&#10;     Draws a Bezier curve. The Bezier curve is a tangent to the line between the control points at either end of the curve.&#10;&#10;Parameters:&#10;     $x0 - (float) Abscissa of start point&#10;     $y0 - (float) Ordinate of start point&#10;     $x1 - (float) Abscissa of control point 1&#10;     $y1 - (float) Ordinate of control point 1&#10;     $x2 - (float) Abscissa of control point 2&#10;     $y2 - (float) Ordinate of control point 2&#10;     $x3 - (float) Abscissa of end point&#10;     $y3 - (float) Ordinate of end point&#10;     $style - (string) Style of rendering&#10;     $line_style - (array) Line style of curve&#10;     $fill_color - (array) Fill color;;d116,11579;;b1,0;;m $x0;;p $y0;;p $x1;;p $y1;;p $x2;;p $y2;;p $x3;;p $y3;;p $style;;p $line_style;;p $fill_color;;p">
</treenode>
<treenode node="deletePage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;21007;2;21188;;;;vpos;;vtrue;;r&#10;Definition&#10;    deletePage($page)&#10;&#10;Description&#10;     Remove the specified page.&#10;&#10;Parameters:&#10;     $page - (int) page to remove&#10;&#10;Return:&#10;   in case of success, false in case of error;;d35,21007;;b1,0;;m $page;;p">
</treenode>
<treenode node="drawHTMLTagBorder;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;19933;2;20127;;;;vpos;;v;;r&#10;Definition&#10;    drawHTMLTagBorder($tag, $xmax)&#10;&#10;Description&#10;     Draw an HTML block border and fill&#10;&#10;Parameters:&#10;     $tag - (array) array of tag properties&#10;     $xmax - (int) end X coordinate for border;;d51,19933;;b2,0;;m $tag;;p $xmax;;p">
</treenode>
<treenode node="Ellipse;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11649;2;11668;;;;vpos;;v;;r&#10;Definition&#10;    Ellipse($x0, $y0, $rx, $ry=&apos;&apos;, $angle=0, $astart=0, $afinish=360, $style=&apos;&apos;, $line_style=array(), $fill_color=array(), $nc=2)&#10;&#10;Description&#10;     Draws an ellipse. An ellipse is formed from n Bezier curves.&#10;&#10;Parameters:&#10;     $x0 - (float) Abscissa of center point&#10;     $y0 - (float) Ordinate of center point&#10;     $rx - (float) Horizontal radius&#10;     $ry - (float) Vertical radius (if ry = 0 then is a circle, see Circle())&#10;     $angle - : (float) Angle oriented (anti-clockwise)&#10;     $astart - : (float) Angle start of draw line&#10;     $afinish - : (float) Angle finish of draw line&#10;     $style - (string) Style of rendering&#10;     $line_style - (array) Line style of ellipse&#10;     $fill_color - (array) Fill color&#10;     $nc - (integer) Number of curves used to draw a 90 degrees portion of ellipse;;d143,11649;;b1,0;;m $x0;;p $y0;;p $rx;;p $ry;;p $angle;;p $astart;;p $afinish;;p $style;;p $line_style;;p $fill_color;;p $nc;;p">
</treenode>
<treenode node="endLayer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13742;2;13751;;;;vpos;;v;;r&#10;Definition&#10;    endLayer()&#10;&#10;Description&#10;     End the current PDF layer.;;d28,13742;;b1,0;;m">
</treenode>
<treenode node="endPage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3125;2;3139;;;;vpos;;v;;r&#10;Definition&#10;    endPage($tocpage=false)&#10;&#10;Description&#10;     Terminate the current page&#10;&#10;Parameters:&#10;     $tocpage - (boolean) if true set the tocpage state to false (end the page used to display Table Of Content);;d41,3125;;b1,0;;m $tocpage;;p">
</treenode>
<treenode node="endSVGElementHandler;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;24369;2;24466;;;;vpos;;v;;r&#10;Definition&#10;    endSVGElementHandler($parser, $name)&#10;&#10;Description&#10;     Sets the closing SVG element handler function for the XML parser.&#10;&#10;Parameters:&#10;     $parser - (resource) The first parameter, parser, is a reference to the XML parser calling the handler&#10;     $name - (string) The second parameter, name, contains the name of the element for which this handler is called;;d57,24369;;b2,0;;m $parser;;p $name;;p">
</treenode>
<treenode node="endTemplate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22290;2;22299;;;;vpos;;vint;;r&#10;Definition&#10;    endTemplate()&#10;&#10;Description&#10;     End the current XObject Template started with startTemplate() and restore the previous graphic state. An XObject Template is a PDF block that is a self-contained description of any sequence of graphics objects (including path objects, text objects, and sampled images). An XObject Template may be painted multiple times, either on several pages or at several locations on the same page and produces the same results each time, subject only to the graphics state at the time it is invoked.&#10;&#10;Return:&#10;   the XObject Template ID in case of success or false in case of error;;d31,22290;;b1,0;;m">
</treenode>
<treenode node="endTOCPage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3086;2;3088;;;;vpos;;v;;r&#10;Definition&#10;    endTOCPage()&#10;&#10;Description&#10;     Terminate the current TOC (Table Of Content) page;;d30,3086;;b1,0;;m">
</treenode>
<treenode node="Error;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2920;2;2928;;;;vpos;;v;;r&#10;Definition&#10;    Error($msg)&#10;&#10;Description&#10;     Throw an exception or print an error message and die if the K_TCPDF_PARSER_THROW_EXCEPTION_ERROR constant is set to true.&#10;&#10;Parameters:&#10;     $msg - (string) The error message;;d29,2920;;b1,0;;m $msg;;p">
</treenode>
<treenode node="fitBlock;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;6728;2;6787;;;;vpos;;varray;;r&#10;Definition&#10;    fitBlock($w, $h, $x, $y, $fitonpage=false)&#10;&#10;Description&#10;     Set the block dimensions accounting for page breaks and page/column fitting&#10;&#10;Parameters:&#10;     $w - (float) width&#10;     $h - (float) height&#10;     $x - (float) X coordinate&#10;     $y - (float) Y coodiante&#10;     $fitonpage - (boolean) if true the block is resized to not exceed page dimensions&#10;&#10;Return:&#10;   ($w, $h, $x, $y);;d63,6728;;b2,0;;m $w;;p $h;;p $x;;p $y;;p $fitonpage;;p">
</treenode>
<treenode node="fixHTMLCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;15829;2;15831;;;;vpos;;vstring;;r&#10;Definition&#10;    fixHTMLCode($html, $default_css=&apos;&apos;, $tagvs=&apos;&apos;, $tidy_options=&apos;&apos;)&#10;&#10;Description&#10;     Cleanup HTML code (requires HTML Tidy library).&#10;&#10;Parameters:&#10;     $html - (string) htmlcode to fix&#10;     $default_css - (string) CSS commands to add&#10;     $tagvs - (array) parameters for setHtmlVSpace method&#10;     $tidy_options - (array) options for tidy_parse_string function&#10;&#10;Return:&#10;   XHTML code cleaned up;;d82,15829;;b1,0;;m $html;;p $default_css;;p $tagvs;;p $tidy_options;;p">
</treenode>
<treenode node="Footer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3468;2;3508;;;;vpos;;v;;r&#10;Definition&#10;    Footer()&#10;&#10;Description&#10;     This method is used to render the page footer. It is automatically called by AddPage() and could be overwritten in your own inherited class.;;d26,3468;;b1,0;;m">
</treenode>
<treenode node="getAbsFontMeasure;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4533;2;4535;;;;vpos;;vfloat;;r&#10;Definition&#10;    getAbsFontMeasure($s)&#10;&#10;Description&#10;     Convert a relative font measure into absolute value.&#10;&#10;Parameters:&#10;     $s - (int) Font measure&#10;&#10;Return:&#10;   Absolute measure;;d39,4533;;b1,0;;m $s;;p">
</treenode>
<treenode node="GetAbsX;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;7412;2;7414;;;;vpos;;vfloat;;r&#10;Definition&#10;    GetAbsX()&#10;&#10;Description&#10;     Returns the absolute X value of current position.;;d27,7412;;b1,0;;m">
</treenode>
<treenode node="getAliasNbPages;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13607;2;13612;;;;vpos;;vstring;;r&#10;Definition&#10;    getAliasNbPages()&#10;&#10;Description&#10;     Returns the string alias used for the total number of pages. If the current font is unicode type, the returned string is surrounded by additional curly braces. This alias will be replaced by the total number of pages in the document.;;d35,13607;;b1,0;;m">
</treenode>
<treenode node="getAliasNumPage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13622;2;13627;;;;vpos;;vstring;;r&#10;Definition&#10;    getAliasNumPage()&#10;&#10;Description&#10;     Returns the string alias used for the page number. If the current font is unicode type, the returned string is surrounded by additional curly braces. This alias will be replaced by the page number.;;d35,13622;;b1,0;;m">
</treenode>
<treenode node="getAliasRightShift;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13581;2;13597;;;;vpos;;vstring;;r&#10;Definition&#10;    getAliasRightShift()&#10;&#10;Description&#10;     Returns the string alias used right align page numbers. If the current font is unicode type, the returned string wil contain an additional open curly brace.;;d38,13581;;b1,0;;m">
</treenode>
<treenode node="getAllInternalPageNumberAliases;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;7824;2;7831;;;;vpos;;varray;;r&#10;Definition&#10;    getAllInternalPageNumberAliases()&#10;&#10;Description&#10;     Return an array containing all internal page aliases.&#10;&#10;Return:&#10;   of page number aliases;;d54,7824;;b2,0;;m">
</treenode>
<treenode node="getAllSpotColors;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3698;2;3700;;;;vpos;;v;;r&#10;Definition&#10;    getAllSpotColors()&#10;&#10;Description&#10;     Returns the array of spot colors.;;d36,3698;;b1,0;;m">
</treenode>
<treenode node="getAlpha;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13938;2;13940;;;;vpos;;varray;;r&#10;Definition&#10;    getAlpha()&#10;&#10;Description&#10;     Get the alpha mode array (CA, ca, BM, AIS). (Check the &quot;Entries in a Graphics State Parameter Dictionary&quot; on PDF 32000-1:2008).&#10;&#10;Return:&#10;   .;;d28,13938;;b1,0;;m">
</treenode>
<treenode node="GetArrStringWidth;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4047;2;4075;;;;vpos;;vmixed;;r&#10;Definition&#10;    GetArrStringWidth($sa, $fontname=&apos;&apos;, $fontstyle=&apos;&apos;, $fontsize=0, $getarray=false)&#10;&#10;Description&#10;     Returns the string length of an array of chars in user unit or an array of characters widths. A font must be selected.&lt;br&gt;&#10;&#10;Parameters:&#10;     $sa - (string) The array of chars whose total length is to be computed&#10;     $fontname - (string) Family font&#10;     $fontstyle - (string) Font style&#10;     $fontsize - (float) Font size in points&#10;     $getarray - (boolean) if true returns an array of characters widths, if false returns the total length&#10;&#10;Return:&#10;   int total string length or array of characted widths;;d99,4047;;b1,0;;m $sa;;p $fontname;;p $fontstyle;;p $fontsize;;p $getarray;;p">
</treenode>
<treenode node="getAutoPageBreak;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2801;2;2803;;;;vpos;;vboolean;;r&#10;Definition&#10;    getAutoPageBreak()&#10;&#10;Description&#10;     Return the auto-page-break mode (true or false).&#10;&#10;Return:&#10;   auto-page-break mode;;d36,2801;;b1,0;;m">
</treenode>
<treenode node="getBarcode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;15160;2;15162;;;;vpos;;vstring;;r&#10;Definition&#10;    getBarcode()&#10;&#10;Description&#10;     Get current barcode.;;d30,15160;;b1,0;;m">
</treenode>
<treenode node="getBorderStartPosition;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;19917;2;19924;;;;vpos;;varray;;r&#10;Definition&#10;    getBorderStartPosition()&#10;&#10;Description&#10;     Return the starting coordinates to draw an html border&#10;&#10;Return:&#10;   containing top-left border coordinates;;d45,19917;;b2,0;;m">
</treenode>
<treenode node="getBreakMargin;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2532;2;2537;;;;vpos;;vint;;r&#10;Definition&#10;    getBreakMargin($pagenum=&apos;&apos;)&#10;&#10;Description&#10;     Returns the page break margin.&#10;&#10;Parameters:&#10;     $pagenum - (int) page number (empty = current page)&#10;&#10;Return:&#10;   page break margin;;d45,2532;;b1,0;;m $pagenum;;p">
</treenode>
<treenode node="getBuffer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;20695;2;20697;;;;vpos;;vstring;;r&#10;Definition&#10;    getBuffer()&#10;&#10;Description&#10;     Get buffer content.&#10;&#10;Return:&#10;   buffer content;;d32,20695;;b2,0;;m">
</treenode>
<treenode node="getCellBorder;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;5553;2;5729;;;;vpos;;vstring;;r&#10;Definition&#10;    getCellBorder($x, $y, $w, $h, $brd)&#10;&#10;Description&#10;     Returns the code to draw the cell border&#10;&#10;Parameters:&#10;     $x - (float) X coordinate&#10;     $y - (float) Y coordinate&#10;     $w - (float) Cell width&#10;     $h - (float) Cell height&#10;     $brd - (mixed) Indicates if borders must be drawn around the cell&#10;&#10;Return:&#10;   containing cell border code;;d56,5553;;b2,0;;m $x;;p $y;;p $w;;p $h;;p $brd;;p">
</treenode>
<treenode node="getCellCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;5062;2;5520;;;;vpos;;vstring;;r&#10;Definition&#10;    getCellCode($w, $h=0, $txt=&apos;&apos;, $border=0, $ln=0, $align=&apos;&apos;, $fill=false, $link=&apos;&apos;, $stretch=0, $ignore_min_height=false, $calign=&apos;T&apos;, $valign=&apos;M&apos;)&#10;&#10;Description&#10;     Returns the PDF string code to print a cell (rectangular area) with optional borders, background color and character string. The upper-left corner of the cell corresponds to the current position. The text can be aligned or centered. After the call, the current position moves to the right or to the next line. It is possible to put a link on the text.&lt;br /&gt; If automatic page breaking is enabled and the cell goes beyond the limit, a page break is done before outputting.&#10;&#10;Parameters:&#10;     $w - (float) Cell width&#10;     $h - (float) Cell height&#10;     $txt - (string) String to print&#10;     $border - (mixed) Indicates if borders must be drawn around the cell&#10;     $ln - (int) Indicates where the current position should go after the call&#10;     $align - (string) Allows to center or align the text&#10;     $fill - (boolean) Indicates if the cell background must be painted (true) or transparent (false)&#10;     $link - (mixed) URL or identifier returned by AddLink()&#10;     $stretch - (int) font stretch mode: &lt;ul&gt;&lt;li&gt;0 = disabled&lt;/li&gt;&lt;li&gt;1 = horizontal scaling only if text is larger than cell width&lt;/li&gt;&lt;li&gt;2 = forced horizontal scaling to fit cell width&lt;/li&gt;&lt;li&gt;3 = character spacing only if text is larger than cell width&lt;/li&gt;&lt;li&gt;4 = forced character spacing to fit cell width&lt;/li&gt;&lt;/ul&gt; General font stretching and scaling values will be preserved when possible&#10;     $ignore_min_height - (boolean) if true ignore automatic minimum height value&#10;     $calign - (string) cell vertical alignment relative to the specified Y value&#10;     $valign - (string) text vertical alignment inside the cell&#10;&#10;Return:&#10;   containing cell code;;d167,5062;;b2,0;;m $w;;p $h;;p $txt;;p $border;;p $ln;;p $align;;p $fill;;p $link;;p $stretch;;p $ignore_min_height;;p $calign;;p $valign;;p">
</treenode>
<treenode node="getCellHeight;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2426;2;2432;;;;vpos;;v;;r&#10;Definition&#10;    getCellHeight($fontsize, $padding=TRUE)&#10;&#10;Description&#10;     Return the cell height&#10;&#10;Parameters:&#10;     $fontsize - (int) Font size in internal units&#10;     $padding - (boolean) If true add cell padding;;d57,2426;;b1,0;;m $fontsize;;p $padding;;p">
</treenode>
<treenode node="getCellHeightRatio;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13980;2;13982;;;;vpos;;v;;r&#10;Definition&#10;    getCellHeightRatio()&#10;&#10;Description&#10;     return the height of cell repect font height.;;d38,13980;;b1,0;;m">
</treenode>
<treenode node="getCellMargins;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2703;2;2705;;;;vpos;;varray;;r&#10;Definition&#10;    getCellMargins()&#10;&#10;Description&#10;     Get the internal Cell margin array.&#10;&#10;Return:&#10;   of margin values;;d34,2703;;b1,0;;m">
</treenode>
<treenode node="getCellPaddings;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2667;2;2669;;;;vpos;;varray;;r&#10;Definition&#10;    getCellPaddings()&#10;&#10;Description&#10;     Get the internal Cell padding array.&#10;&#10;Return:&#10;   of padding values;;d35,2667;;b1,0;;m">
</treenode>
<treenode node="getCharBBox;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4543;2;4554;;;;vpos;;vmixed;;r&#10;Definition&#10;    getCharBBox($char)&#10;&#10;Description&#10;     Returns the glyph bounding box of the specified character in the current font in user units.&#10;&#10;Parameters:&#10;     $char - (int) Input character code&#10;&#10;Return:&#10;   array(xMin, yMin, xMax, yMax) or FALSE if not defined;;d36,4543;;b1,0;;m $char;;p">
</treenode>
<treenode node="GetCharWidth;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4086;2;4098;;;;vpos;;vfloat;;r&#10;Definition&#10;    GetCharWidth($char, $notlast=true)&#10;&#10;Description&#10;     Returns the length of the char in user unit for the current font considering current stretching and spacing (tracking).&#10;&#10;Parameters:&#10;     $char - (int) The char code whose length is to be returned&#10;     $notlast - (boolean) If false ignore the font-spacing&#10;&#10;Return:&#10;   char width;;d52,4086;;b1,0;;m $char;;p $notlast;;p">
</treenode>
<treenode node="getColumn;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;21810;2;21812;;;;vpos;;vint;;r&#10;Definition&#10;    getColumn()&#10;&#10;Description&#10;     Return the current column number&#10;&#10;Return:&#10;   current column number;;d29,21810;;b1,0;;m">
</treenode>
<treenode node="getCSSBorderDashStyle;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;15860;2;15887;;;;vpos;;vint;;r&#10;Definition&#10;    getCSSBorderDashStyle($style)&#10;&#10;Description&#10;     Returns the border dash style from CSS property&#10;&#10;Parameters:&#10;     $style - (string) border style to convert&#10;&#10;Return:&#10;   sash style (return -1 in case of none or hidden border);;d50,15860;;b2,0;;m $style;;p">
</treenode>
<treenode node="getCSSBorderMargin;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;16055;2;16079;;;;vpos;;varray;;r&#10;Definition&#10;    getCSSBorderMargin($cssbspace, $width=0)&#10;&#10;Description&#10;     Get the border-spacing from CSS attribute.&#10;&#10;Parameters:&#10;     $cssbspace - (string) border-spacing CSS properties&#10;     $width - (float) width of the containing element&#10;&#10;Return:&#10;   of border spacings;;d58,16055;;b1,0;;m $cssbspace;;p $width;;p">
</treenode>
<treenode node="getCSSBorderStyle;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;15896;2;15937;;;;vpos;;varray;;r&#10;Definition&#10;    getCSSBorderStyle($cssborder)&#10;&#10;Description&#10;     Returns the border style array from CSS border properties&#10;&#10;Parameters:&#10;     $cssborder - (string) border properties&#10;&#10;Return:&#10;   containing border properties;;d50,15896;;b2,0;;m $cssborder;;p">
</treenode>
<treenode node="getCSSBorderWidth;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;15840;2;15851;;;;vpos;;vint;;r&#10;Definition&#10;    getCSSBorderWidth($width)&#10;&#10;Description&#10;     Returns the border width from CSS property&#10;&#10;Parameters:&#10;     $width - (string) border width&#10;&#10;Return:&#10;   with in user units;;d46,15840;;b2,0;;m $width;;p">
</treenode>
<treenode node="getCSSFontSpacing;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;16089;2;16110;;;;vpos;;vfloat;;r&#10;Definition&#10;    getCSSFontSpacing($spacing, $parent=0)&#10;&#10;Description&#10;     Returns the letter-spacing value from CSS value&#10;&#10;Parameters:&#10;     $spacing - (string) letter-spacing value&#10;     $parent - (float) font spacing (tracking) value of the parent element&#10;&#10;Return:&#10;   quantity to increases or decreases the space between characters in a text;;d59,16089;;b2,0;;m $spacing;;p $parent;;p">
</treenode>
<treenode node="getCSSFontStretching;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;16120;2;16181;;;;vpos;;vfloat;;r&#10;Definition&#10;    getCSSFontStretching($stretch, $parent=100)&#10;&#10;Description&#10;     Returns the percentage of font stretching from CSS value&#10;&#10;Parameters:&#10;     $stretch - (string) stretch mode&#10;     $parent - (float) stretch value of the parent element&#10;&#10;Return:&#10;   font stretching percentage;;d64,16120;;b2,0;;m $stretch;;p $parent;;p">
</treenode>
<treenode node="getCSSMargin;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;16001;2;16045;;;;vpos;;varray;;r&#10;Definition&#10;    getCSSMargin($cssmargin, $width=0)&#10;&#10;Description&#10;     Get the internal Cell margin from CSS attribute.&#10;&#10;Parameters:&#10;     $cssmargin - (string) margin properties&#10;     $width - (float) width of the containing element&#10;&#10;Return:&#10;   of cell margins;;d52,16001;;b1,0;;m $cssmargin;;p $width;;p">
</treenode>
<treenode node="getCSSPadding;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;15947;2;15991;;;;vpos;;varray;;r&#10;Definition&#10;    getCSSPadding($csspadding, $width=0)&#10;&#10;Description&#10;     Get the internal Cell padding from CSS attribute.&#10;&#10;Parameters:&#10;     $csspadding - (string) padding properties&#10;     $width - (float) width of the containing element&#10;&#10;Return:&#10;   of cell paddings;;d54,15947;;b1,0;;m $csspadding;;p $width;;p">
</treenode>
<treenode node="getDestination;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;12246;2;12248;;;;vpos;;v;;r&#10;Definition&#10;    getDestination()&#10;&#10;Description&#10;     Return the Named Destination array.;;d34,12246;;b1,0;;m">
</treenode>
<treenode node="getDocCreationTimestamp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;10205;2;10207;;;;vpos;;v;;r&#10;Definition&#10;    getDocCreationTimestamp()&#10;&#10;Description&#10;     Returns document creation timestamp in seconds.;;d43,10205;;b1,0;;m">
</treenode>
<treenode node="getDocModificationTimestamp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;10215;2;10217;;;;vpos;;v;;r&#10;Definition&#10;    getDocModificationTimestamp()&#10;&#10;Description&#10;     Returns document modification timestamp in seconds.;;d47,10215;;b1,0;;m">
</treenode>
<treenode node="getFontAscent;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4587;2;4596;;;;vpos;;vint;;r&#10;Definition&#10;    getFontAscent($font, $style=&apos;&apos;, $size=0)&#10;&#10;Description&#10;     Return the font ascent value.&#10;&#10;Parameters:&#10;     $font - (string) font name&#10;     $style - (string) font style&#10;     $size - (float) The size (in points)&#10;&#10;Return:&#10;   font ascent;;d58,4587;;b1,0;;m $font;;p $style;;p $size;;p">
</treenode>
<treenode node="getFontBBox;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4494;2;4525;;;;vpos;;varray;;r&#10;Definition&#10;    getFontBBox()&#10;&#10;Description&#10;     Returns the bounding box of the current font in user units.;;d31,4494;;b1,0;;m">
</treenode>
<treenode node="getFontBuffer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;20821;2;20826;;;;vpos;;vstring;;r&#10;Definition&#10;    getFontBuffer($font)&#10;&#10;Description&#10;     Get font buffer content.&#10;&#10;Parameters:&#10;     $font - (string) font key&#10;&#10;Return:&#10;   font buffer content or false in case of error;;d41,20821;;b2,0;;m $font;;p">
</treenode>
<treenode node="getFontDescent;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4566;2;4575;;;;vpos;;vint;;r&#10;Definition&#10;    getFontDescent($font, $style=&apos;&apos;, $size=0)&#10;&#10;Description&#10;     Return the font descent value&#10;&#10;Parameters:&#10;     $font - (string) font name&#10;     $style - (string) font style&#10;     $size - (float) The size (in points)&#10;&#10;Return:&#10;   font descent;;d59,4566;;b1,0;;m $font;;p $style;;p $size;;p">
</treenode>
<treenode node="getFontFamily;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;15803;2;15805;;;;vpos;;vstring;;r&#10;Definition&#10;    getFontFamily()&#10;&#10;Description&#10;     Returns the current font family name.&#10;&#10;Return:&#10;   current font family name;;d33,15803;;b1,0;;m">
</treenode>
<treenode node="getFontFamilyName;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22181;2;22209;;;;vpos;;vstring;;r&#10;Definition&#10;    getFontFamilyName($fontfamily)&#10;&#10;Description&#10;     Return normalized font name&#10;&#10;Parameters:&#10;     $fontfamily - (string) property string containing font family names&#10;&#10;Return:&#10;   normalized font name;;d48,22181;;b1,0;;m $fontfamily;;p">
</treenode>
<treenode node="getFontSize;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;15783;2;15785;;;;vpos;;vcurrent;;r&#10;Definition&#10;    getFontSize()&#10;&#10;Description&#10;     Returns the current font size.&#10;&#10;Return:&#10;   font size;;d31,15783;;b1,0;;m">
</treenode>
<treenode node="getFontSizePt;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;15793;2;15795;;;;vpos;;vcurrent;;r&#10;Definition&#10;    getFontSizePt()&#10;&#10;Description&#10;     Returns the current font size in points unit.&#10;&#10;Return:&#10;   font size in points unit;;d33,15793;;b1,0;;m">
</treenode>
<treenode node="getFontsList;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;4146;2;4155;;;;vpos;;v;;r&#10;Definition&#10;    getFontsList()&#10;&#10;Description&#10;     Fill the list of available fonts ($this-&gt;fontlist).;;d35,4146;;b2,0;;m">
</treenode>
<treenode node="getFontSpacing;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22485;2;22487;;;;vpos;;vint;;r&#10;Definition&#10;    getFontSpacing()&#10;&#10;Description&#10;     Get the amount to increase or decrease the space between characters in a text.&#10;&#10;Return:&#10;   font spacing (tracking) value;;d34,22485;;b1,0;;m">
</treenode>
<treenode node="getFontStretching;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22463;2;22465;;;;vpos;;vfloat;;r&#10;Definition&#10;    getFontStretching()&#10;&#10;Description&#10;     Get the percentage of character stretching.&#10;&#10;Return:&#10;   stretching value;;d37,22463;;b1,0;;m">
</treenode>
<treenode node="getFontStyle;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;15813;2;15815;;;;vpos;;vstring;;r&#10;Definition&#10;    getFontStyle()&#10;&#10;Description&#10;     Returns the current font style.&#10;&#10;Return:&#10;   current font style;;d32,15813;;b1,0;;m">
</treenode>
<treenode node="getFontSubsetting;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22117;2;22119;;;;vpos;;vboolean;;r&#10;Definition&#10;    getFontSubsetting()&#10;&#10;Description&#10;     Return the default option for font subsetting.&#10;&#10;Return:&#10;   default font subsetting state;;d37,22117;;b1,0;;m">
</treenode>
<treenode node="getFooterFont;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;10329;2;10331;;;;vpos;;varray;;r&#10;Definition&#10;    getFooterFont()&#10;&#10;Description&#10;     Get Footer font.&#10;&#10;Return:&#10;   () Array describing the basic font parameters: (family, style, size);;d33,10329;;b1,0;;m">
</treenode>
<treenode node="getFooterMargin;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3330;2;3332;;;;vpos;;vfloat;;r&#10;Definition&#10;    getFooterMargin()&#10;&#10;Description&#10;     Returns footer margin in user units.;;d35,3330;;b1,0;;m">
</treenode>
<treenode node="getFormDefaultProp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;12624;2;12626;;;;vpos;;varray;;r&#10;Definition&#10;    getFormDefaultProp()&#10;&#10;Description&#10;     Return the default properties for form fields.&#10;&#10;Return:&#10;   $prop javascript field properties;;d38,12624;;b1,0;;m">
</treenode>
<treenode node="getGDgamma;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;7337;2;7351;;;;vpos;;v;;r&#10;Definition&#10;    getGDgamma($img, $c)&#10;&#10;Description&#10;     Get the GD-corrected PNG gamma value from alpha color&#10;&#10;Parameters:&#10;     $img - (int) GD image Resource ID&#10;     $c - (int) alpha color;;d41,7337;;b2,0;;m $img;;p $c;;p">
</treenode>
<treenode node="getGraphicVars;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;20530;2;20582;;;;vpos;;varray;;r&#10;Definition&#10;    getGraphicVars()&#10;&#10;Description&#10;     Returns current graphic variables as array.&#10;&#10;Return:&#10;   of graphic variables;;d37,20530;;b2,0;;m">
</treenode>
<treenode node="getGroupPageNo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13665;2;13667;;;;vpos;;vcurrent;;r&#10;Definition&#10;    getGroupPageNo()&#10;&#10;Description&#10;     Return the current page in the group.&#10;&#10;Return:&#10;   page in the group;;d34,13665;;b1,0;;m">
</treenode>
<treenode node="getGroupPageNoFormatted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13675;2;13677;;;;vpos;;v;;r&#10;Definition&#10;    getGroupPageNoFormatted()&#10;&#10;Description&#10;     Returns the current group page number formatted as a string.;;d43,13675;;b1,0;;m">
</treenode>
<treenode node="getHashForTCPDFtagParams;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;17048;2;17050;;;;vpos;;vstring;;r&#10;Definition&#10;    getHashForTCPDFtagParams($data)&#10;&#10;Description&#10;     Return an hash code used to ensure that the serialized data has been generated by this TCPDF instance.&#10;&#10;Parameters:&#10;     $data - (string) serialized data;;d52,17048;;b2,0;;m $data;;p">
</treenode>
<treenode node="getHeaderData;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3283;2;3292;;;;vpos;;varray;;r&#10;Definition&#10;    getHeaderData()&#10;&#10;Description&#10;     Returns header data: &lt;ul&gt;&lt;li&gt;$ret[&apos;logo&apos;] = logo image&lt;/li&gt;&lt;li&gt;$ret[&apos;logo_width&apos;] = width of the image logo in user units&lt;/li&gt;&lt;li&gt;$ret[&apos;title&apos;] = header title&lt;/li&gt;&lt;li&gt;$ret[&apos;string&apos;] = header description string&lt;/li&gt;&lt;/ul&gt;&#10;&#10;Return:&#10;   ();;d33,3283;;b1,0;;m">
</treenode>
<treenode node="getHeaderFont;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;10309;2;10311;;;;vpos;;varray;;r&#10;Definition&#10;    getHeaderFont()&#10;&#10;Description&#10;     Get header font.&#10;&#10;Return:&#10;   () Array describing the basic font parameters: (family, style, size);;d33,10309;;b1,0;;m">
</treenode>
<treenode node="getHeaderMargin;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3310;2;3312;;;;vpos;;vfloat;;r&#10;Definition&#10;    getHeaderMargin()&#10;&#10;Description&#10;     Returns header margin in user units.;;d35,3310;;b1,0;;m">
</treenode>
<treenode node="getHtmlDomArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;16246;2;17025;;;;vpos;;varray;;r&#10;Definition&#10;    getHtmlDomArray($html)&#10;&#10;Description&#10;     Returns the HTML DOM array.&#10;&#10;Parameters:&#10;     $html - (string) html code;;d43,16246;;b2,0;;m $html;;p">
</treenode>
<treenode node="getHTMLFontUnits;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;16192;2;16237;;;;vpos;;vfloat;;r&#10;Definition&#10;    getHTMLFontUnits($val, $refsize=12, $parent_size=12, $defaultunit=&apos;pt&apos;)&#10;&#10;Description&#10;     Convert HTML string containing font size value to points&#10;&#10;Parameters:&#10;     $val - (string) String containing font size value and unit&#10;     $refsize - (float) Reference font size in points&#10;     $parent_size - (float) Parent font size in points&#10;     $defaultunit - (string) Default unit (can be one of the following: %, em, ex, px, in, mm, pc, pt)&#10;&#10;Return:&#10;   value in points;;d89,16192;;b1,0;;m $val;;p $refsize;;p $parent_size;;p $defaultunit;;p">
</treenode>
<treenode node="getHTMLUnitToUnits;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;20244;2;20318;;;;vpos;;vfloat;;r&#10;Definition&#10;    getHTMLUnitToUnits($htmlval, $refsize=1, $defaultunit=&apos;px&apos;, $points=false)&#10;&#10;Description&#10;     Convert HTML string containing value and unit of measure to user&apos;s units or points.&#10;&#10;Parameters:&#10;     $htmlval - (string) String containing values and unit&#10;     $refsize - (string) Reference value in points&#10;     $defaultunit - (string) Default unit (can be one of the following: %, em, ex, px, in, mm, pc, pt)&#10;     $points - (boolean) If true returns points, otherwise returns value in user&apos;s units&#10;&#10;Return:&#10;   value in user&apos;s unit or point if $points=true;;d92,20244;;b1,0;;m $htmlval;;p $refsize;;p $defaultunit;;p $points;;p">
</treenode>
<treenode node="getImageBuffer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;20774;2;20779;;;;vpos;;vstring;;r&#10;Definition&#10;    getImageBuffer($image)&#10;&#10;Description&#10;     Get image buffer content.&#10;&#10;Parameters:&#10;     $image - (string) image key&#10;&#10;Return:&#10;   image buffer content or false in case of error;;d43,20774;;b2,0;;m $image;;p">
</treenode>
<treenode node="getImageRBX;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3356;2;3358;;;;vpos;;vfloat;;r&#10;Definition&#10;    getImageRBX()&#10;&#10;Description&#10;     Return the right-bottom (or left-bottom for RTL) corner X coordinate of last inserted image;;d31,3356;;b1,0;;m">
</treenode>
<treenode node="getImageRBY;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3365;2;3367;;;;vpos;;vfloat;;r&#10;Definition&#10;    getImageRBY()&#10;&#10;Description&#10;     Return the right-bottom (or left-bottom for RTL) corner Y coordinate of last inserted image;;d31,3365;;b1,0;;m">
</treenode>
<treenode node="getImageScale;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2471;2;2473;;;;vpos;;vfloat;;r&#10;Definition&#10;    getImageScale()&#10;&#10;Description&#10;     Returns the adjusting factor to convert pixels to user units.&#10;&#10;Return:&#10;   adjusting factor to convert pixels to user units;;d33,2471;;b1,0;;m">
</treenode>
<treenode node="getInternalPageNumberAliases;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;7803;2;7817;;;;vpos;;varray;;r&#10;Definition&#10;    getInternalPageNumberAliases($a= &apos;&apos;)&#10;&#10;Description&#10;     Return an array containing variations for the basic page number alias.&#10;&#10;Parameters:&#10;     $a - (string) Base alias&#10;&#10;Return:&#10;   of page number aliases;;d57,7803;;b2,0;;m $a;;p">
</treenode>
<treenode node="getLastH;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2449;2;2451;;;;vpos;;vlast;;r&#10;Definition&#10;    getLastH()&#10;&#10;Description&#10;     Get the last cell height.&#10;&#10;Return:&#10;   cell height;;d28,2449;;b1,0;;m">
</treenode>
<treenode node="GetLineWidth;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11292;2;11294;;;;vpos;;vint;;r&#10;Definition&#10;    GetLineWidth()&#10;&#10;Description&#10;     Returns the current the line width.&#10;&#10;Return:&#10;   Line width;;d32,11292;;b1,0;;m">
</treenode>
<treenode node="getMargins;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;15742;2;15757;;;;vpos;;varray;;r&#10;Definition&#10;    getMargins()&#10;&#10;Description&#10;     Returns an array containing current margins: &lt;ul&gt; &lt;li&gt;$ret[&apos;left&apos;] = left margin&lt;/li&gt; &lt;li&gt;$ret[&apos;right&apos;] = right margin&lt;/li&gt; &lt;li&gt;$ret[&apos;top&apos;] = top margin&lt;/li&gt; &lt;li&gt;$ret[&apos;bottom&apos;] = bottom margin&lt;/li&gt; &lt;li&gt;$ret[&apos;header&apos;] = header margin&lt;/li&gt; &lt;li&gt;$ret[&apos;footer&apos;] = footer margin&lt;/li&gt; &lt;li&gt;$ret[&apos;cell&apos;] = cell padding array&lt;/li&gt; &lt;li&gt;$ret[&apos;padding_left&apos;] = cell left padding&lt;/li&gt; &lt;li&gt;$ret[&apos;padding_top&apos;] = cell top padding&lt;/li&gt; &lt;li&gt;$ret[&apos;padding_right&apos;] = cell right padding&lt;/li&gt; &lt;li&gt;$ret[&apos;padding_bottom&apos;] = cell bottom padding&lt;/li&gt; &lt;/ul&gt;&#10;&#10;Return:&#10;   containing all margins measures;;d30,15742;;b1,0;;m">
</treenode>
<treenode node="getNumberOfColumns;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;21820;2;21822;;;;vpos;;vint;;r&#10;Definition&#10;    getNumberOfColumns()&#10;&#10;Description&#10;     Return the current number of columns.&#10;&#10;Return:&#10;   number of columns;;d38,21820;;b1,0;;m">
</treenode>
<treenode node="GetNumChars;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4134;2;4139;;;;vpos;;vint;;r&#10;Definition&#10;    GetNumChars($s)&#10;&#10;Description&#10;     Returns the numbero of characters in a string.&#10;&#10;Parameters:&#10;     $s - (string) The input string&#10;&#10;Return:&#10;   number of characters;;d33,4134;;b1,0;;m $s;;p">
</treenode>
<treenode node="getNumLines;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;6125;2;6195;;;;vpos;;vfloat;;r&#10;Definition&#10;    getNumLines($txt, $w=0, $reseth=false, $autopadding=true, $cellpadding=&apos;&apos;, $border=0)&#10;&#10;Description&#10;     This method return the estimated number of lines for print a simple text string using Multicell() method.&#10;&#10;Parameters:&#10;     $txt - (string) String for calculating his height&#10;     $w - (float) Width of cells&#10;     $reseth - (boolean) if true reset the last cell height (default false)&#10;     $autopadding - (boolean) if true, uses internal padding and automatically adjust it to account for line width (default true)&#10;     $cellpadding - (float) Internal cell padding, if empty uses default cell padding&#10;     $border - (mixed) Indicates if borders must be drawn around the cell&#10;&#10;Return:&#10;   Return the minimal height needed for multicell method for printing the $txt param;;d103,6125;;b1,0;;m $txt;;p $w;;p $reseth;;p $autopadding;;p $cellpadding;;p $border;;p">
</treenode>
<treenode node="getNumPages;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3063;2;3065;;;;vpos;;vint;;r&#10;Definition&#10;    getNumPages()&#10;&#10;Description&#10;     Get the total number of insered pages.&#10;&#10;Return:&#10;   number of pages;;d31,3063;;b1,0;;m">
</treenode>
<treenode node="getOriginalMargins;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;15769;2;15775;;;;vpos;;varray;;r&#10;Definition&#10;    getOriginalMargins()&#10;&#10;Description&#10;     Returns an array containing original margins: &lt;ul&gt; &lt;li&gt;$ret[&apos;left&apos;] = left margin&lt;/li&gt; &lt;li&gt;$ret[&apos;right&apos;] = right margin&lt;/li&gt; &lt;/ul&gt;&#10;&#10;Return:&#10;   containing all margins measures;;d38,15769;;b1,0;;m">
</treenode>
<treenode node="getOverprint;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13893;2;13895;;;;vpos;;varray;;r&#10;Definition&#10;    getOverprint()&#10;&#10;Description&#10;     Get the overprint mode array (OP, op, OPM). (Check the &quot;Entries in a Graphics State Parameter Dictionary&quot; on PDF 32000-1:2008).&#10;&#10;Return:&#10;   .;;d32,13893;;b1,0;;m">
</treenode>
<treenode node="getPage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3052;2;3054;;;;vpos;;vint;;r&#10;Definition&#10;    getPage()&#10;&#10;Description&#10;     Get current document page number.&#10;&#10;Return:&#10;   page number;;d27,3052;;b1,0;;m">
</treenode>
<treenode node="getPageBuffer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;20727;2;20732;;;;vpos;;vstring;;r&#10;Definition&#10;    getPageBuffer($page)&#10;&#10;Description&#10;     Get page buffer content.&#10;&#10;Parameters:&#10;     $page - (int) page number&#10;&#10;Return:&#10;   page buffer content or false in case of error;;d41,20727;;b2,0;;m $page;;p">
</treenode>
<treenode node="getPageDimensions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2484;2;2489;;;;vpos;;varray;;r&#10;Definition&#10;    getPageDimensions($pagenum=&apos;&apos;)&#10;&#10;Description&#10;     Returns an array of page dimensions: &lt;ul&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;w&apos;] = page width in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;h&apos;] = height in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;wk&apos;] = page width in user units&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;hk&apos;] = page height in user units&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;tm&apos;] = top margin&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;bm&apos;] = bottom margin&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;lm&apos;] = left margin&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;rm&apos;] = right margin&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;pb&apos;] = auto page break&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;or&apos;] = page orientation&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;olm&apos;] = original left margin&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;orm&apos;] = original right margin&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;Rotate&apos;] = The number of degrees by which the page shall be rotated clockwise when displayed or printed. The value shall be a multiple of 90.&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;PZ&apos;] = The page&apos;s preferred zoom (magnification) factor.&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;trans&apos;] : the style and duration of the visual transition to use when moving from another page to the given page during a presentation&lt;ul&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;trans&apos;][&apos;Dur&apos;] = The page&apos;s display duration (also called its advance timing): the maximum length of time, in seconds, that the page shall be displayed during presentations before the viewer application shall automatically advance to the next page.&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;trans&apos;][&apos;S&apos;] = transition style : Split, Blinds, Box, Wipe, Dissolve, Glitter, R, Fly, Push, Cover, Uncover, Fade&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;trans&apos;][&apos;D&apos;] = The duration of the transition effect, in seconds.&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;trans&apos;][&apos;Dm&apos;] = (Split and Blinds transition styles only) The dimension in which the specified transition effect shall occur: H = Horizontal, V = Vertical. Default value: H.&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;trans&apos;][&apos;M&apos;] = (Split, Box and Fly transition styles only) The direction of motion for the specified transition effect: I = Inward from the edges of the page, O = Outward from the center of the pageDefault value: I.&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;trans&apos;][&apos;Di&apos;] = (Wipe, Glitter, Fly, Cover, Uncover and Push transition styles only) The direction in which the specified transition effect shall moves, expressed in degrees counterclockwise starting from a left-to-right direction. If the value is a number, it shall be one of: 0 = Left to right, 90 = Bottom to top (Wipe only), 180 = Right to left (Wipe only), 270 = Top to bottom, 315 = Top-left to bottom-right (Glitter only). If the value is a name, it shall be None, which is relevant only for the Fly transition when the value of SS is not 1.0. Default value: 0.&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;trans&apos;][&apos;SS&apos;] = (Fly transition style only) The starting or ending scale at which the changes shall be drawn. If M specifies an inward transition, the scale of the changes drawn shall progress from SS to 1.0 over the course of the transition. If M specifies an outward transition, the scale of the changes drawn shall progress from 1.0 to SS over the course of the transition. Default: 1.0. &lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;trans&apos;][&apos;B&apos;] = (Fly transition style only) If true, the area that shall be flown in is rectangular and opaque. Default: false.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;MediaBox&apos;] : the boundaries of the physical medium on which the page shall be displayed or printed&lt;ul&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;MediaBox&apos;][&apos;llx&apos;] = lower-left x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;MediaBox&apos;][&apos;lly&apos;] = lower-left y coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;MediaBox&apos;][&apos;urx&apos;] = upper-right x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;MediaBox&apos;][&apos;ury&apos;] = upper-right y coordinate in points&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;CropBox&apos;] : the visible region of default user space&lt;ul&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;CropBox&apos;][&apos;llx&apos;] = lower-left x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;CropBox&apos;][&apos;lly&apos;] = lower-left y coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;CropBox&apos;][&apos;urx&apos;] = upper-right x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;CropBox&apos;][&apos;ury&apos;] = upper-right y coordinate in points&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;BleedBox&apos;] : the region to which the contents of the page shall be clipped when output in a production environment&lt;ul&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;BleedBox&apos;][&apos;llx&apos;] = lower-left x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;BleedBox&apos;][&apos;lly&apos;] = lower-left y coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;BleedBox&apos;][&apos;urx&apos;] = upper-right x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;BleedBox&apos;][&apos;ury&apos;] = upper-right y coordinate in points&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;TrimBox&apos;] : the intended dimensions of the finished page after trimming&lt;ul&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;TrimBox&apos;][&apos;llx&apos;] = lower-left x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;TrimBox&apos;][&apos;lly&apos;] = lower-left y coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;TrimBox&apos;][&apos;urx&apos;] = upper-right x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;TrimBox&apos;][&apos;ury&apos;] = upper-right y coordinate in points&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;ArtBox&apos;] : the extent of the page&apos;s meaningful content&lt;ul&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;ArtBox&apos;][&apos;llx&apos;] = lower-left x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;ArtBox&apos;][&apos;lly&apos;] = lower-left y coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;ArtBox&apos;][&apos;urx&apos;] = upper-right x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;ArtBox&apos;][&apos;ury&apos;] = upper-right y coordinate in points&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&#10;&#10;Parameters:&#10;     $pagenum - (int) page number (empty = current page)&#10;&#10;Return:&#10;   of page dimensions;;d48,2484;;b1,0;;m $pagenum;;p">
</treenode>
<treenode node="getPageGroupAlias;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13637;2;13642;;;;vpos;;valias;;r&#10;Definition&#10;    getPageGroupAlias()&#10;&#10;Description&#10;     Return the alias for the total number of pages in the current page group. If the current font is unicode type, the returned string is surrounded by additional curly braces. This alias will be replaced by the total number of pages in this group.&#10;&#10;Return:&#10;   of the current page group;;d37,13637;;b1,0;;m">
</treenode>
<treenode node="getPageHeight;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2516;2;2521;;;;vpos;;vint;;r&#10;Definition&#10;    getPageHeight($pagenum=&apos;&apos;)&#10;&#10;Description&#10;     Returns the page height in units.&#10;&#10;Parameters:&#10;     $pagenum - (int) page number (empty = current page)&#10;&#10;Return:&#10;   page height;;d44,2516;;b1,0;;m $pagenum;;p">
</treenode>
<treenode node="getPageNumGroupAlias;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13652;2;13657;;;;vpos;;valias;;r&#10;Definition&#10;    getPageNumGroupAlias()&#10;&#10;Description&#10;     Return the alias for the page number on the current page group. If the current font is unicode type, the returned string is surrounded by additional curly braces. This alias will be replaced by the page number (relative to the belonging group).&#10;&#10;Return:&#10;   of the current page group;;d40,13652;;b1,0;;m">
</treenode>
<treenode node="getPageRegions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22497;2;22499;;;;vpos;;varray;;r&#10;Definition&#10;    getPageRegions()&#10;&#10;Description&#10;     Return an array of no-write page regions&#10;&#10;Return:&#10;   of no-write page regions;;d34,22497;;b1,0;;m">
</treenode>
<treenode node="getPageWidth;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2500;2;2505;;;;vpos;;vint;;r&#10;Definition&#10;    getPageWidth($pagenum=&apos;&apos;)&#10;&#10;Description&#10;     Returns the page width in units.&#10;&#10;Parameters:&#10;     $pagenum - (int) page number (empty = current page)&#10;&#10;Return:&#10;   page width;;d43,2500;;b1,0;;m $pagenum;;p">
</treenode>
<treenode node="getPDFData;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;10352;2;10357;;;;vpos;;v;;r&#10;Definition&#10;    getPDFData()&#10;&#10;Description&#10;     Returns the PDF data.;;d30,10352;;b1,0;;m">
</treenode>
<treenode node="getRawCharWidth;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4108;2;4125;;;;vpos;;vfloat;;r&#10;Definition&#10;    getRawCharWidth($char)&#10;&#10;Description&#10;     Returns the length of the char in user unit for the current font.&#10;&#10;Parameters:&#10;     $char - (int) The char code whose length is to be returned&#10;&#10;Return:&#10;   char width;;d40,4108;;b1,0;;m $char;;p">
</treenode>
<treenode node="getRemainingWidth;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;6708;2;6715;;;;vpos;;vint;;r&#10;Definition&#10;    getRemainingWidth()&#10;&#10;Description&#10;     Returns the remaining width between the current position and margins.&#10;&#10;Return:&#10;   Return the remaining width;;d40,6708;;b2,0;;m">
</treenode>
<treenode node="getRTL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2363;2;2365;;;;vpos;;vboolean;;r&#10;Definition&#10;    getRTL()&#10;&#10;Description&#10;     Return the RTL status;;d26,2363;;b1,0;;m">
</treenode>
<treenode node="getScaleFactor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2546;2;2548;;;;vpos;;vint;;r&#10;Definition&#10;    getScaleFactor()&#10;&#10;Description&#10;     Returns the scale factor (number of points in user unit).&#10;&#10;Return:&#10;   scale factor;;d34,2546;;b1,0;;m">
</treenode>
<treenode node="getSignatureAppearanceArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;13482;2;13500;;;;vpos;;v;;r&#10;Definition&#10;    getSignatureAppearanceArray($x=0, $y=0, $w=0, $h=0, $page=-1, $name=&apos;&apos;)&#10;&#10;Description&#10;     Get the array that defines the signature appearance (page and rectangle coordinates).&#10;&#10;Parameters:&#10;     $x - (float) Abscissa of the upper-left corner&#10;     $y - (float) Ordinate of the upper-left corner&#10;     $w - (float) Width of the signature area&#10;     $h - (float) Height of the signature area&#10;     $page - (int) option page number (if &lt; 0 the current page is used)&#10;     $name - (string) Name of the signature;;d92,13482;;b2,0;;m $x;;p $y;;p $w;;p $h;;p $page;;p $name;;p">
</treenode>
<treenode node="getSpaceString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;17034;2;17040;;;;vpos;;vstring;;r&#10;Definition&#10;    getSpaceString()&#10;&#10;Description&#10;     Returns the string used to find spaces;;d37,17034;;b2,0;;m">
</treenode>
<treenode node="getStringHeight;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;6244;2;6257;;;;vpos;;vfloat;;r&#10;Definition&#10;    getStringHeight($w, $txt, $reseth=false, $autopadding=true, $cellpadding=&apos;&apos;, $border=0)&#10;&#10;Description&#10;     This method return the estimated height needed for printing a simple text string using the Multicell() method. Generally, if you want to know the exact height for a block of content you can use the following alternative technique:&#10;&#10;Parameters:&#10;     $w - (float) Width of cells&#10;     $txt - (string) String for calculating his height&#10;     $reseth - (boolean) if true reset the last cell height (default false)&#10;     $autopadding - (boolean) if true, uses internal padding and automatically adjust it to account for line width (default true)&#10;     $cellpadding - (float) Internal cell padding, if empty uses default cell padding&#10;     $border - (mixed) Indicates if borders must be drawn around the cell&#10;&#10;Return:&#10;   Return the minimal height needed for multicell method for printing the $txt param;;d105,6244;;b1,0;;m $w;;p $txt;;p $reseth;;p $autopadding;;p $cellpadding;;p $border;;p">
</treenode>
<treenode node="GetStringWidth;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4031;2;4033;;;;vpos;;vmixed;;r&#10;Definition&#10;    GetStringWidth($s, $fontname=&apos;&apos;, $fontstyle=&apos;&apos;, $fontsize=0, $getarray=false)&#10;&#10;Description&#10;     Returns the length of a string in user unit. A font must be selected.&lt;br&gt;&#10;&#10;Parameters:&#10;     $s - (string) The string whose length is to be computed&#10;     $fontname - (string) Family font&#10;     $fontstyle - (string) Font style&#10;     $fontsize - (float) Font size in points&#10;     $getarray - (boolean) if true returns an array of characters widths, if false returns the total length&#10;&#10;Return:&#10;   int total string length or array of characted widths;;d95,4031;;b1,0;;m $s;;p $fontname;;p $fontstyle;;p $fontsize;;p $getarray;;p">
</treenode>
<treenode node="getTextShadow;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;21929;2;21931;;;;vpos;;vArray;;r&#10;Definition&#10;    getTextShadow()&#10;&#10;Description&#10;     Return the text shadow parameters array.&#10;&#10;Return:&#10;   of parameters;;d33,21929;;b1,0;;m">
</treenode>
<treenode node="GetX;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;7396;2;7403;;;;vpos;;vfloat;;r&#10;Definition&#10;    GetX()&#10;&#10;Description&#10;     Returns the relative X value of current position. The value is relative to the left border for LTR languages and to the right border for RTL languages.;;d24,7396;;b1,0;;m">
</treenode>
<treenode node="GetY;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;7423;2;7425;;;;vpos;;vfloat;;r&#10;Definition&#10;    GetY()&#10;&#10;Description&#10;     Returns the ordinate of the current position.;;d24,7423;;b1,0;;m">
</treenode>
<treenode node="Gradient;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;14467;2;14566;;;;vpos;;v;;r&#10;Definition&#10;    Gradient($type, $coords, $stops, $background=array(), $antialias=false)&#10;&#10;Description&#10;     Output gradient.&#10;&#10;Parameters:&#10;     $type - (int) type of gradient (1 Function-based shading;s 2 Axial shading;s 3 Radial shading;s 4 Free-form Gouraud-shaded triangle mesh;s 5 Lattice-form Gouraud-shaded triangle mesh;s 6 Coons patch mesh;s 7 Tensor-product patch mesh)&#10;     $coords - (array) array of coordinates&#10;     $stops - (array) array gradient color components: color = array of GRAY, RGB or CMYK color components;s offset = (0 to 1) represents a location along the gradient vector;s exponent = exponent of the exponential interpolation function (default = 1)&#10;     $background - (array) An array of colour components appropriate to the colour space, specifying a single background colour value&#10;     $antialias - (boolean) A flag indicating whether to filter the shading function to prevent aliasing artifacts;;d89,14467;;b1,0;;m $type;;p $coords;;p $stops;;p $background;;p $antialias;;p">
</treenode>
<treenode node="Header;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3391;2;3461;;;;vpos;;v;;r&#10;Definition&#10;    Header()&#10;&#10;Description&#10;     This method is used to render the page header. It is automatically called by AddPage() and could be overwritten in your own inherited class.;;d26,3391;;b1,0;;m">
</treenode>
<treenode node="hyphenateText;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22027;2;22083;;;;vpos;;varray;;r&#10;Definition&#10;    hyphenateText($text, $patterns, $dictionary=array(), $leftmin=1, $rightmin=2, $charmin=1, $charmax=8)&#10;&#10;Description&#10;     Returns text with soft hyphens.&#10;&#10;Parameters:&#10;     $text - (string) text to process&#10;     $patterns - (mixed) Array of hypenation patterns or a TEX file containing hypenation patterns&#10;     $dictionary - (array) Array of words to be returned without applying the hyphenation algorithm&#10;     $leftmin - (int) Minimum number of character to leave on the left of the word without applying the hyphens&#10;     $rightmin - (int) Minimum number of character to leave on the right of the word without applying the hyphens&#10;     $charmin - (int) Minimum word length to apply the hyphenation algorithm&#10;     $charmax - (int) Maximum length of broken piece of word&#10;&#10;Return:&#10;   text with soft hyphens;;d119,22027;;b1,0;;m $text;;p $patterns;;p $dictionary;;p $leftmin;;p $rightmin;;p $charmin;;p $charmax;;p">
</treenode>
<treenode node="hyphenateWord;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;21947;2;22011;;;;vpos;;varray;;r&#10;Definition&#10;    hyphenateWord($word, $patterns, $dictionary=array(), $leftmin=1, $rightmin=2, $charmin=1, $charmax=8)&#10;&#10;Description&#10;     Returns an array of chars containing soft hyphens.&#10;&#10;Parameters:&#10;     $word - (array) array of chars&#10;     $patterns - (array) Array of hypenation patterns&#10;     $dictionary - (array) Array of words to be returned without applying the hyphenation algorithm&#10;     $leftmin - (int) Minimum number of character to leave on the left of the word without applying the hyphens&#10;     $rightmin - (int) Minimum number of character to leave on the right of the word without applying the hyphens&#10;     $charmin - (int) Minimum word length to apply the hyphenation algorithm&#10;     $charmax - (int) Maximum length of broken piece of word&#10;&#10;Return:&#10;   text with soft hyphens;;d122,21947;;b2,0;;m $word;;p $patterns;;p $dictionary;;p $leftmin;;p $rightmin;;p $charmin;;p $charmax;;p">
</treenode>
<treenode node="Image;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;6823;2;7220;;;;vpos;;vimage;;r&#10;Definition&#10;    Image($file, $x=&apos;&apos;, $y=&apos;&apos;, $w=0, $h=0, $type=&apos;&apos;, $link=&apos;&apos;, $align=&apos;&apos;, $resize=false, $dpi=300, $palign=&apos;&apos;, $ismask=false, $imgmask=false, $border=0, $fitbox=false, $hidden=false, $fitonpage=false, $alt=false, $altimgs=array())&#10;&#10;Description&#10;     Puts an image in the page. The upper-left corner must be given. The dimensions can be specified in different ways:&lt;ul&gt; &lt;li&gt;explicit width and height (expressed in user unit)&lt;/li&gt; &lt;li&gt;one explicit dimension, the other being calculated automatically in order to keep the original proportions&lt;/li&gt; &lt;li&gt;no explicit dimension, in which case the image is put at 72 dpi&lt;/li&gt;&lt;/ul&gt; Supported formats are JPEG and PNG images whitout GD library and all images supported by GD: GD, GD2, GD2PART, GIF, JPEG, PNG, BMP, XBM, XPM;s The format can be specified explicitly or inferred from the file extension.&lt;br /&gt; It is possible to put a link on the image.&lt;br /&gt; Remark: if an image is used several times, only one copy will be embedded in the file.&lt;br /&gt;&#10;&#10;Parameters:&#10;     $file - (string) Name of the file containing the image or a &apos;&#10;     $x - (float) Abscissa of the upper-left corner (LTR) or upper-right corner (RTL)&#10;     $y - (float) Ordinate of the upper-left corner (LTR) or upper-right corner (RTL)&#10;     $w - (float) Width of the image in the page&#10;     $h - (float) Height of the image in the page&#10;     $type - (string) Image format&#10;     $link - (mixed) URL or identifier returned by AddLink()&#10;     $align - (string) Indicates the alignment of the pointer next to image insertion relative to image height&#10;     $resize - (mixed) If true resize (reduce) the image to fit $w and $h (requires GD or ImageMagick library);s if false do not resize;s if 2 force resize in all cases (upscaling and downscaling)&#10;     $dpi - (int) dot-per-inch resolution used on resize&#10;     $palign - (string) Allows to center or align the image on the current line&#10;     $ismask - (boolean) true if this image is a mask, false otherwise&#10;     $imgmask - (mixed) image object returned by this function or false&#10;     $border - (mixed) Indicates if borders must be drawn around the cell&#10;     $fitbox - (mixed) If not false scale image dimensions proportionally to fit within the ($w, $h) box&#10;     $hidden - (boolean) If true do not display the image&#10;     $fitonpage - (boolean) If true the image is resized to not exceed page dimensions&#10;     $alt - (boolean) If true the image will be added as alternative and not directly printed (the ID of the image will be returned)&#10;     $altimgs - (array) Array of alternate images IDs&#10;&#10;Return:&#10;   information;;d244,6823;;b1,0;;m $file;;p $x;;p $y;;p $w;;p $h;;p $type;;p $link;;p $align;;p $resize;;p $dpi;;p $palign;;p $ismask;;p $imgmask;;p $border;;p $fitbox;;p $hidden;;p $fitonpage;;p $alt;;p $altimgs;;p">
</treenode>
<treenode node="ImageEps;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;14831;2;15143;;;;vpos;;v;;r&#10;Definition&#10;    ImageEps($file, $x=&apos;&apos;, $y=&apos;&apos;, $w=0, $h=0, $link=&apos;&apos;, $useBoundingBox=true, $align=&apos;&apos;, $palign=&apos;&apos;, $border=0, $fitonpage=false, $fixoutvals=false)&#10;&#10;Description&#10;     Embed vector-based Adobe Illustrator (AI) or AI-compatible EPS files. NOTE: EPS is not yet fully implemented, use the setRasterizeVectorImages() method to enable/disable rasterization of vector images using ImageMagick library. Only vector drawing is supported, not text or bitmap. Although the script was successfully tested with various AI format versions, best results are probably achieved with files that were exported in the AI3 format (tested with Illustrator CS2, Freehand MX and Photoshop CS2).&#10;&#10;Parameters:&#10;     $file - (string) Name of the file containing the image or a &apos;&#10;     $x - (float) Abscissa of the upper-left corner&#10;     $y - (float) Ordinate of the upper-left corner&#10;     $w - (float) Width of the image in the page&#10;     $h - (float) Height of the image in the page&#10;     $link - (mixed) URL or identifier returned by AddLink()&#10;     $useBoundingBox - (boolean) specifies whether to position the bounding box (true) or the complete canvas (false) at location (x,y)&#10;     $align - (string) Indicates the alignment of the pointer next to image insertion relative to image height&#10;     $palign - (string) Allows to center or align the image on the current line&#10;     $border - (mixed) Indicates if borders must be drawn around the cell&#10;     $fitonpage - (boolean) if true the image is resized to not exceed page dimensions&#10;     $fixoutvals - (boolean) if true remove values outside the bounding box;;d162,14831;;b1,0;;m $file;;p $x;;p $y;;p $w;;p $h;;p $link;;p $useBoundingBox;;p $align;;p $palign;;p $border;;p $fitonpage;;p $fixoutvals;;p">
</treenode>
<treenode node="ImagePngAlpha;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;7243;2;7328;;;;vpos;;v;;r&#10;Definition&#10;    ImagePngAlpha($file, $x, $y, $wpx, $hpx, $w, $h, $type, $link, $align, $resize, $dpi, $palign, $filehash=&apos;&apos;)&#10;&#10;Description&#10;     Extract info from a PNG image with alpha channel using the Imagick or GD library.&#10;&#10;Parameters:&#10;     $file - (string) Name of the file containing the image&#10;     $x - (float) Abscissa of the upper-left corner&#10;     $y - (float) Ordinate of the upper-left corner&#10;     $wpx - (float) Original width of the image in pixels&#10;     $hpx - (float) original height of the image in pixels&#10;     $w - (float) Width of the image in the page&#10;     $h - (float) Height of the image in the page&#10;     $type - (string) Image format&#10;     $link - (mixed) URL or identifier returned by AddLink()&#10;     $align - (string) Indicates the alignment of the pointer next to image insertion relative to image height&#10;     $resize - (boolean) If true resize (reduce) the image to fit $w and $h (requires GD library)&#10;     $dpi - (int) dot-per-inch resolution used on resize&#10;     $palign - (string) Allows to center or align the image on the current line&#10;     $filehash - (string) File hash used to build unique file names;;d129,7243;;b2,0;;m $file;;p $x;;p $y;;p $wpx;;p $hpx;;p $w;;p $h;;p $type;;p $link;;p $align;;p $resize;;p $dpi;;p $palign;;p $filehash;;p">
</treenode>
<treenode node="ImageSVG;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22672;2;22984;;;;vpos;;v;;r&#10;Definition&#10;    ImageSVG($file, $x=&apos;&apos;, $y=&apos;&apos;, $w=0, $h=0, $link=&apos;&apos;, $align=&apos;&apos;, $palign=&apos;&apos;, $border=0, $fitonpage=false)&#10;&#10;Description&#10;     Embedd a Scalable Vector Graphics (SVG) image. NOTE: SVG standard is not yet fully implemented, use the setRasterizeVectorImages() method to enable/disable rasterization of vector images using ImageMagick library.&#10;&#10;Parameters:&#10;     $file - (string) Name of the SVG file or a &apos;&#10;     $x - (float) Abscissa of the upper-left corner&#10;     $y - (float) Ordinate of the upper-left corner&#10;     $w - (float) Width of the image in the page&#10;     $h - (float) Height of the image in the page&#10;     $link - (mixed) URL or identifier returned by AddLink()&#10;     $align - (string) Indicates the alignment of the pointer next to image insertion relative to image height&#10;     $palign - (string) Allows to center or align the image on the current line&#10;     $border - (mixed) Indicates if borders must be drawn around the cell&#10;     $fitonpage - (boolean) if true the image is resized to not exceed page dimensions;;d121,22672;;b1,0;;m $file;;p $x;;p $y;;p $w;;p $h;;p $link;;p $align;;p $palign;;p $border;;p $fitonpage;;p">
</treenode>
<treenode node="IncludeJS;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;12490;2;12492;;;;vpos;;v;;r&#10;Definition&#10;    IncludeJS($script)&#10;&#10;Description&#10;     Adds a javascript&#10;&#10;Parameters:&#10;     $script - (string) Javascript code;;d36,12490;;b1,0;;m $script;;p">
</treenode>
<treenode node="inPageBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;3612;2;3614;;;;vpos;;vtrue;;r&#10;Definition&#10;    inPageBody()&#10;&#10;Description&#10;     Check if we are on the page body (excluding page header and footer).&#10;&#10;Return:&#10;   if we are not in page header nor in page footer, false otherwise;;d33,3612;;b2,0;;m">
</treenode>
<treenode node="isCharDefined;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4607;2;4622;;;;vpos;;v;;r&#10;Definition&#10;    isCharDefined($char, $font=&apos;&apos;, $style=&apos;&apos;)&#10;&#10;Description&#10;     Return true in the character is present in the specified font.&#10;&#10;Parameters:&#10;     $char - (mixed) Character to check (integer value or string)&#10;     $font - (string) Font name (family name)&#10;     $style - (string) Font style;;d59,4607;;b1,0;;m $char;;p $font;;p $style;;p">
</treenode>
<treenode node="isRTLTextDir;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2405;2;2407;;;;vpos;;vboolean;;r&#10;Definition&#10;    isRTLTextDir()&#10;&#10;Description&#10;     Return the current temporary RTL status;;d32,2405;;b1,0;;m">
</treenode>
<treenode node="isUnicodeFont;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22169;2;22171;;;;vpos;;vtrue;;r&#10;Definition&#10;    isUnicodeFont()&#10;&#10;Description&#10;     Return true if the current font is unicode type.&#10;&#10;Return:&#10;   for unicode font, false otherwise;;d33,22169;;b1,0;;m">
</treenode>
<treenode node="lastPage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3041;2;3043;;;;vpos;;v;;r&#10;Definition&#10;    lastPage($resetmargins=false)&#10;&#10;Description&#10;     Reset pointer to the last document page.&#10;&#10;Parameters:&#10;     $resetmargins - (boolean) if true reset left, right, top margins and Y position;;d47,3041;;b1,0;;m $resetmargins;;p">
</treenode>
<treenode node="Line;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11478;2;11488;;;;vpos;;v;;r&#10;Definition&#10;    Line($x1, $y1, $x2, $y2, $style=array())&#10;&#10;Description&#10;     Draws a line between two points.&#10;&#10;Parameters:&#10;     $x1 - (float) Abscissa of first point&#10;     $y1 - (float) Ordinate of first point&#10;     $x2 - (float) Abscissa of second point&#10;     $y2 - (float) Ordinate of second point&#10;     $style - (array) Line style;;d58,11478;;b1,0;;m $x1;;p $y1;;p $x2;;p $y2;;p $style;;p">
</treenode>
<treenode node="LinearGradient;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;14307;2;14310;;;;vpos;;v;;r&#10;Definition&#10;    LinearGradient($x, $y, $w, $h, $col1=array(), $col2=array(), $coords=array(0,0,1,0))&#10;&#10;Description&#10;     Paints a linear colour gradient.&#10;&#10;Parameters:&#10;     $x - (float) abscissa of the top left corner of the rectangle&#10;     $y - (float) ordinate of the top left corner of the rectangle&#10;     $w - (float) width of the rectangle&#10;     $h - (float) height of the rectangle&#10;     $col1 - (array) first color (Grayscale, RGB or CMYK components)&#10;     $col2 - (array) second color (Grayscale, RGB or CMYK components)&#10;     $coords - (array) array of the form (x1, y1, x2, y2) which defines the gradient vector (see linear_gradient_coords;;d102,14307;;b1,0;;m $x;;p $y;;p $w;;p $h;;p $col1;;p $col2;;p $coords;;p">
</treenode>
<treenode node="Link;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4727;2;4729;;;;vpos;;v;;r&#10;Definition&#10;    Link($x, $y, $w, $h, $link, $spaces=0)&#10;&#10;Description&#10;     Puts a link on a rectangular area of the page. Text or image links are generally put via Cell(), Write() or Image(), but this method can be useful for instance to define a clickable area inside an image.&#10;&#10;Parameters:&#10;     $x - (float) Abscissa of the upper-left corner of the rectangle&#10;     $y - (float) Ordinate of the upper-left corner of the rectangle&#10;     $w - (float) Width of the rectangle&#10;     $h - (float) Height of the rectangle&#10;     $link - (mixed) URL or identifier returned by AddLink()&#10;     $spaces - (int) number of spaces on the text to link;;d56,4727;;b1,0;;m $x;;p $y;;p $w;;p $h;;p $link;;p $spaces;;p">
</treenode>
<treenode node="ListBox;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;12866;2;12935;;;;vpos;;v;;r&#10;Definition&#10;    ListBox($name, $w, $h, $values, $prop=array(), $opt=array(), $x=&apos;&apos;, $y=&apos;&apos;, $js=false)&#10;&#10;Description&#10;     Creates a List-box field&#10;&#10;Parameters:&#10;     $name - (string) field name&#10;     $w - (int) width&#10;     $h - (int) height&#10;     $values - (array) array containing the list of values&#10;     $prop - (array) javascript field properties&#10;     $opt - (array) annotation parameters&#10;     $x - (float) Abscissa of the upper-left corner of the rectangle&#10;     $y - (float) Ordinate of the upper-left corner of the rectangle&#10;     $js - (boolean) if true put the field using JavaScript (requires Acrobat Writer to be rendered);;d103,12866;;b1,0;;m $name;;p $w;;p $h;;p $values;;p $prop;;p $opt;;p $x;;p $y;;p $js;;p">
</treenode>
<treenode node="Ln;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;7362;2;7386;;;;vpos;;v;;r&#10;Definition&#10;    Ln($h=&apos;&apos;, $cell=false)&#10;&#10;Description&#10;     Performs a line break. The current abscissa goes back to the left margin and the ordinate increases by the amount passed in parameter.&#10;&#10;Parameters:&#10;     $h - (float) The height of the break&#10;     $cell - (boolean) if true add the current left (or right o for RTL) padding to the X coordinate;;d40,7362;;b1,0;;m $h;;p $cell;;p">
</treenode>
<treenode node="MirrorH;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11063;2;11065;;;;vpos;;v;;r&#10;Definition&#10;    MirrorH($x=&apos;&apos;)&#10;&#10;Description&#10;     Horizontal Mirroring.&#10;&#10;Parameters:&#10;     $x - (int) abscissa of the point;;d32,11063;;b1,0;;m $x;;p">
</treenode>
<treenode node="MirrorL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11099;2;11102;;;;vpos;;v;;r&#10;Definition&#10;    MirrorL($angle=0, $x=&apos;&apos;,$y=&apos;&apos;)&#10;&#10;Description&#10;     Reflection against a straight line through point (x, y) with the gradient angle (angle).&#10;&#10;Parameters:&#10;     $angle - (float) gradient angle of the straight line&#10;     $x - (int) abscissa of the point&#10;     $y - (int) ordinate of the point;;d48,11099;;b1,0;;m $angle;;p $x;;p $y;;p">
</treenode>
<treenode node="MirrorP;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11086;2;11088;;;;vpos;;v;;r&#10;Definition&#10;    MirrorP($x=&apos;&apos;,$y=&apos;&apos;)&#10;&#10;Description&#10;     Point reflection mirroring.&#10;&#10;Parameters:&#10;     $x - (int) abscissa of the point&#10;     $y - (int) ordinate of the point;;d38,11086;;b1,0;;m $x;;p $y;;p">
</treenode>
<treenode node="MirrorV;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11074;2;11076;;;;vpos;;v;;r&#10;Definition&#10;    MirrorV($y=&apos;&apos;)&#10;&#10;Description&#10;     Verical Mirroring.&#10;&#10;Parameters:&#10;     $y - (int) ordinate of the point;;d32,11074;;b1,0;;m $y;;p">
</treenode>
<treenode node="movePage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;20836;2;20998;;;;vpos;;vtrue;;r&#10;Definition&#10;    movePage($frompage, $topage)&#10;&#10;Description&#10;     Move a page to a previous position.&#10;&#10;Parameters:&#10;     $frompage - (int) number of the source page&#10;     $topage - (int) number of the destination page (must be less than $frompage)&#10;&#10;Return:&#10;   in case of success, false in case of error;;d46,20836;;b1,0;;m $frompage;;p $topage;;p">
</treenode>
<treenode node="MultiCell;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;5756;2;6110;;;;vpos;;vint;;r&#10;Definition&#10;    MultiCell($w, $h, $txt, $border=0, $align=&apos;J&apos;, $fill=false, $ln=1, $x=&apos;&apos;, $y=&apos;&apos;, $reseth=true, $stretch=0, $ishtml=false, $autopadding=true, $maxh=0, $valign=&apos;T&apos;, $fitcell=false)&#10;&#10;Description&#10;     This method allows printing text with line breaks. They can be automatic (as soon as the text reaches the right border of the cell) or explicit (via the \n character). As many cells as necessary are output, one below the other.&lt;br /&gt; Text can be aligned, centered or justified. The cell block can be framed and the background painted.&#10;&#10;Parameters:&#10;     $w - (float) Width of cells&#10;     $h - (float) Cell minimum height&#10;     $txt - (string) String to print&#10;     $border - (mixed) Indicates if borders must be drawn around the cell&#10;     $align - (string) Allows to center or align the text&#10;     $fill - (boolean) Indicates if the cell background must be painted (true) or transparent (false)&#10;     $ln - (int) Indicates where the current position should go after the call&#10;     $x - (float) x position in user units&#10;     $y - (float) y position in user units&#10;     $reseth - (boolean) if true reset the last cell height (default true)&#10;     $stretch - (int) font stretch mode: &lt;ul&gt;&lt;li&gt;0 = disabled&lt;/li&gt;&lt;li&gt;1 = horizontal scaling only if text is larger than cell width&lt;/li&gt;&lt;li&gt;2 = forced horizontal scaling to fit cell width&lt;/li&gt;&lt;li&gt;3 = character spacing only if text is larger than cell width&lt;/li&gt;&lt;li&gt;4 = forced character spacing to fit cell width&lt;/li&gt;&lt;/ul&gt; General font stretching and scaling values will be preserved when possible&#10;     $ishtml - (boolean) INTERNAL USE ONLY -- set to true if $txt is HTML content (default = false)&#10;     $autopadding - (boolean) if true, uses internal padding and automatically adjust it to account for line width&#10;     $maxh - (float) maximum height&#10;     $valign - (string) Vertical alignment of text (requires $maxh = $h &gt; 0)&#10;     $fitcell - (boolean) if true attempt to fit all the text within the cell by reducing the font size (do not work in HTML mode)&#10;&#10;Return:&#10;   Return the number of cells or 1 for html mode;;d196,5756;;b1,0;;m $w;;p $h;;p $txt;;p $border;;p $align;;p $fill;;p $ln;;p $x;;p $y;;p $reseth;;p $stretch;;p $ishtml;;p $autopadding;;p $maxh;;p $valign;;p $fitcell;;p">
</treenode>
<treenode node="Open;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2938;2;2940;;;;vpos;;v;;r&#10;Definition&#10;    Open()&#10;&#10;Description&#10;     This method begins the generation of the PDF document. It is not necessary to call it explicitly because AddPage() does it automatically. Note: no page is created by this method;;d24,2938;;b1,0;;m">
</treenode>
<treenode node="openHTMLTagHandler;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;18674;2;19333;;;;vpos;;v;;r&#10;Definition&#10;    openHTMLTagHandler($dom, $key, $cell)&#10;&#10;Description&#10;     Process opening tags.&#10;&#10;Parameters:&#10;     $dom - (array) html dom array&#10;     $key - (int) current element id&#10;     $cell - (boolean) if true add the default left (or right if RTL) padding to each new line (default false);;d58,18674;;b2,0;;m $dom;;p $key;;p $cell;;p">
</treenode>
<treenode node="Output;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;7553;2;7742;;;;vpos;;vstring;;r&#10;Definition&#10;    Output($name=&apos;doc.pdf&apos;, $dest=&apos;I&apos;)&#10;&#10;Description&#10;     Send the document to a given destination: string, local file or browser. In the last case, the plug-in may be used (if present) or a download (&quot;Save as&quot; dialog box) may be forced.&lt;br /&gt; The method first calls Close() if necessary to terminate the document.&#10;&#10;Parameters:&#10;     $name - (string) The name of the file when saved&#10;     $dest - (string) Destination where to send the document;;d52,7553;;b1,0;;m $name;;p $dest;;p">
</treenode>
<treenode node="PageNo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3688;2;3690;;;;vpos;;vint;;r&#10;Definition&#10;    PageNo()&#10;&#10;Description&#10;     Returns the current page number.&#10;&#10;Return:&#10;   page number;;d26,3688;;b1,0;;m">
</treenode>
<treenode node="PageNoFormatted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13685;2;13687;;;;vpos;;v;;r&#10;Definition&#10;    PageNoFormatted()&#10;&#10;Description&#10;     Returns the current page number formatted as a string.;;d35,13685;;b1,0;;m">
</treenode>
<treenode node="PieSector;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;14766;2;14768;;;;vpos;;v;;r&#10;Definition&#10;    PieSector($xc, $yc, $r, $a, $b, $style=&apos;FD&apos;, $cw=true, $o=90)&#10;&#10;Description&#10;     Draw the sector of a circle. It can be used for instance to render pie charts.&#10;&#10;Parameters:&#10;     $xc - (float) abscissa of the center&#10;     $yc - (float) ordinate of the center&#10;     $r - (float) radius&#10;     $a - (float) start angle (in degrees)&#10;     $b - (float) end angle (in degrees)&#10;     $style - (string) Style of rendering&#10;     $cw - : (float) indicates whether to go clockwise (default: true)&#10;     $o - : (float) origin of angles (0 for 3 o&apos;clock, 90 for noon, 180 for 9 o&apos;clock, 270 for 6 o&apos;clock);;d79,14766;;b1,0;;m $xc;;p $yc;;p $r;;p $a;;p $b;;p $style;;p $cw;;p $o;;p">
</treenode>
<treenode node="PieSectorXY;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;14787;2;14808;;;;vpos;;v;;r&#10;Definition&#10;    PieSectorXY($xc, $yc, $rx, $ry, $a, $b, $style=&apos;FD&apos;, $cw=false, $o=0, $nc=2)&#10;&#10;Description&#10;     Draw the sector of an ellipse. It can be used for instance to render pie charts.&#10;&#10;Parameters:&#10;     $xc - (float) abscissa of the center&#10;     $yc - (float) ordinate of the center&#10;     $rx - (float) the x-axis radius&#10;     $ry - (float) the y-axis radius&#10;     $a - (float) start angle (in degrees)&#10;     $b - (float) end angle (in degrees)&#10;     $style - (string) Style of rendering&#10;     $cw - : (float) indicates whether to go clockwise&#10;     $o - : (float) origin of angles (0 for 3 o&apos;clock, 90 for noon, 180 for 9 o&apos;clock, 270 for 6 o&apos;clock)&#10;     $nc - (integer) Number of curves used to draw a 90 degrees portion of arc;;d94,14787;;b1,0;;m $xc;;p $yc;;p $rx;;p $ry;;p $a;;p $b;;p $style;;p $cw;;p $o;;p $nc;;p">
</treenode>
<treenode node="pixelsToUnits;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;10413;2;10415;;;;vpos;;vfloat;;r&#10;Definition&#10;    pixelsToUnits($px)&#10;&#10;Description&#10;     Converts pixels to User&apos;s Units.&#10;&#10;Parameters:&#10;     $px - (int) pixels&#10;&#10;Return:&#10;   value in user&apos;s unit;;d36,10413;;b1,0;;m $px;;p">
</treenode>
<treenode node="Polycurve;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11609;2;11629;;;;vpos;;v;;r&#10;Definition&#10;    Polycurve($x0, $y0, $segments, $style=&apos;&apos;, $line_style=array(), $fill_color=array())&#10;&#10;Description&#10;     Draws a poly-Bezier curve. Each Bezier curve segment is a tangent to the line between the control points at either end of the curve.&#10;&#10;Parameters:&#10;     $x0 - (float) Abscissa of start point&#10;     $y0 - (float) Ordinate of start point&#10;     $segments - (float) An array of bezier descriptions&#10;     $style - (string) Style of rendering&#10;     $line_style - (array) Line style of curve&#10;     $fill_color - (array) Fill color;;d101,11609;;b1,0;;m $x0;;p $y0;;p $segments;;p $style;;p $line_style;;p $fill_color;;p">
</treenode>
<treenode node="Polygon;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11858;2;11928;;;;vpos;;v;;r&#10;Definition&#10;    Polygon($p, $style=&apos;&apos;, $line_style=array(), $fill_color=array(), $closed=true)&#10;&#10;Description&#10;     Draws a polygon.&#10;&#10;Parameters:&#10;     $p - (array) Points 0 to ($np - 1)&#10;     $style - (string) Style of rendering&#10;     $line_style - (array) Line style of polygon&#10;     $fill_color - (array) Fill color&#10;     $closed - (boolean) if true the polygon is closes, otherwise will remain open;;d96,11858;;b1,0;;m $p;;p $style;;p $line_style;;p $fill_color;;p $closed;;p">
</treenode>
<treenode node="PolyLine;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11839;2;11841;;;;vpos;;v;;r&#10;Definition&#10;    PolyLine($p, $style=&apos;&apos;, $line_style=array(), $fill_color=array())&#10;&#10;Description&#10;     Draws a polygonal line&#10;&#10;Parameters:&#10;     $p - (array) Points 0 to ($np - 1)&#10;     $style - (string) Style of rendering&#10;     $line_style - (array) Line style of polygon&#10;     $fill_color - (array) Fill color;;d83,11839;;b1,0;;m $p;;p $style;;p $line_style;;p $fill_color;;p">
</treenode>
<treenode node="printTemplate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22319;2;22443;;;;vpos;;v;;r&#10;Definition&#10;    printTemplate($id, $x=&apos;&apos;, $y=&apos;&apos;, $w=0, $h=0, $align=&apos;&apos;, $palign=&apos;&apos;, $fitonpage=false)&#10;&#10;Description&#10;     Print an XObject Template. You can print an XObject Template inside the currently opened Template. An XObject Template is a PDF block that is a self-contained description of any sequence of graphics objects (including path objects, text objects, and sampled images). An XObject Template may be painted multiple times, either on several pages or at several locations on the same page and produces the same results each time, subject only to the graphics state at the time it is invoked.&#10;&#10;Parameters:&#10;     $id - (string) The ID of XObject Template to print&#10;     $x - (int) X position in user units (empty string = current x position)&#10;     $y - (int) Y position in user units (empty string = current y position)&#10;     $w - (int) Width in user units (zero = remaining page width)&#10;     $h - (int) Height in user units (zero = remaining page height)&#10;     $align - (string) Indicates the alignment of the pointer next to template insertion relative to template height&#10;     $palign - (string) Allows to center or align the template on the current line&#10;     $fitonpage - (boolean) If true the template is resized to not exceed page dimensions;;d103,22319;;b1,0;;m $id;;p $x;;p $y;;p $w;;p $h;;p $align;;p $palign;;p $fitonpage;;p">
</treenode>
<treenode node="putHtmlListBullet;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;20328;2;20522;;;;vpos;;v;;r&#10;Definition&#10;    putHtmlListBullet($listdepth, $listtype=&apos;&apos;, $size=10)&#10;&#10;Description&#10;     Output an HTML list bullet or ordered item symbol&#10;&#10;Parameters:&#10;     $listdepth - (int) list nesting level&#10;     $listtype - (string) type of list&#10;     $size - (float) current font size;;d74,20328;;b2,0;;m $listdepth;;p $listtype;;p $size;;p">
</treenode>
<treenode node="RadialGradient;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;14325;2;14328;;;;vpos;;v;;r&#10;Definition&#10;    RadialGradient($x, $y, $w, $h, $col1=array(), $col2=array(), $coords=array(0.5,0.5,0.5,0.5,1))&#10;&#10;Description&#10;     Paints a radial colour gradient.&#10;&#10;Parameters:&#10;     $x - (float) abscissa of the top left corner of the rectangle&#10;     $y - (float) ordinate of the top left corner of the rectangle&#10;     $w - (float) width of the rectangle&#10;     $h - (float) height of the rectangle&#10;     $col1 - (array) first color (Grayscale, RGB or CMYK components)&#10;     $col2 - (array) second color (Grayscale, RGB or CMYK components)&#10;     $coords - (array) array of the form (fx, fy, cx, cy, r) where (fx, fy) is the starting point of the gradient with color1, (cx, cy) is the center of the circle with color2, and r is the radius of the circle (see radial_gradient_coords;;d112,14325;;b1,0;;m $x;;p $y;;p $w;;p $h;;p $col1;;p $col2;;p $coords;;p">
</treenode>
<treenode node="RadioButton;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;12763;2;12849;;;;vpos;;v;;r&#10;Definition&#10;    RadioButton($name, $w, $prop=array(), $opt=array(), $onvalue=&apos;On&apos;, $checked=false, $x=&apos;&apos;, $y=&apos;&apos;, $js=false)&#10;&#10;Description&#10;     Creates a RadioButton field.&#10;&#10;Parameters:&#10;     $name - (string) Field name&#10;     $w - (int) Width of the radio button&#10;     $prop - (array) Javascript field properties&#10;     $opt - (array) Annotation parameters&#10;     $onvalue - (string) Value to be returned if selected&#10;     $checked - (boolean) Define the initial state&#10;     $x - (float) Abscissa of the upper-left corner of the rectangle&#10;     $y - (float) Ordinate of the upper-left corner of the rectangle&#10;     $js - (boolean) If true put the field using JavaScript (requires Acrobat Writer to be rendered);;d125,12763;;b1,0;;m $name;;p $w;;p $prop;;p $opt;;p $onvalue;;p $checked;;p $x;;p $y;;p $js;;p">
</treenode>
<treenode node="Rect;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11508;2;11558;;;;vpos;;v;;r&#10;Definition&#10;    Rect($x, $y, $w, $h, $style=&apos;&apos;, $border_style=array(), $fill_color=array())&#10;&#10;Description&#10;     Draws a rectangle.&#10;&#10;Parameters:&#10;     $x - (float) Abscissa of upper-left corner&#10;     $y - (float) Ordinate of upper-left corner&#10;     $w - (float) Width&#10;     $h - (float) Height&#10;     $style - (string) Style of rendering&#10;     $border_style - (array) Border style of rectangle&#10;     $fill_color - (array) Fill color;;d93,11508;;b1,0;;m $x;;p $y;;p $w;;p $h;;p $style;;p $border_style;;p $fill_color;;p">
</treenode>
<treenode node="registrationMark;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;14236;2;14252;;;;vpos;;v;;r&#10;Definition&#10;    registrationMark($x, $y, $r, $double=false, $cola=array(100,100,100,100,&apos;All&apos;), $colb=array(0,0,0,0,&apos;None&apos;))&#10;&#10;Description&#10;     Paints a registration mark&#10;&#10;Parameters:&#10;     $x - (float) abscissa of the registration mark center&#10;     $y - (float) ordinate of the registration mark center&#10;     $r - (float) radius of the crop mark&#10;     $double - (boolean) if true print two concentric crop marks&#10;     $cola - (array) crop mark color (default spot registration color &apos;All&apos;)&#10;     $colb - (array) second crop mark color (default spot registration color &apos;None&apos;);;d126,14236;;b1,0;;m $x;;p $y;;p $r;;p $double;;p $cola;;p $colb;;p">
</treenode>
<treenode node="registrationMarkCMYK;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;14263;2;14292;;;;vpos;;v;;r&#10;Definition&#10;    registrationMarkCMYK($x, $y, $r)&#10;&#10;Description&#10;     Paints a CMYK registration mark&#10;&#10;Parameters:&#10;     $x - (float) abscissa of the registration mark center&#10;     $y - (float) ordinate of the registration mark center&#10;     $r - (float) radius of the crop mark;;d50,14263;;b1,0;;m $x;;p $y;;p $r;;p">
</treenode>
<treenode node="RegularPolygon;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11959;2;11974;;;;vpos;;v;;r&#10;Definition&#10;    RegularPolygon($x0, $y0, $r, $ns, $angle=0, $draw_circle=false, $style=&apos;&apos;, $line_style=array(), $fill_color=array(), $circle_style=&apos;&apos;, $circle_outLine_style=array(), $circle_fill_color=array())&#10;&#10;Description&#10;     Draws a regular polygon.&#10;&#10;Parameters:&#10;     $x0 - (float) Abscissa of center point&#10;     $y0 - (float) Ordinate of center point&#10;     $r - : (float) Radius of inscribed circle&#10;     $ns - (integer) Number of sides&#10;     $angle - (float) Angle oriented (anti-clockwise)&#10;     $draw_circle - (boolean) Draw inscribed circle or not&#10;     $style - (string) Style of rendering&#10;     $line_style - (array) Line style of polygon sides&#10;     $fill_color - (array) Fill color&#10;     $circle_style - (string) Style of rendering of inscribed circle (if draws)&#10;     $circle_outLine_style - (array) Line style of inscribed circle (if draws)&#10;     $circle_fill_color - (array) Fill color of inscribed circle (if draws);;d211,11959;;b1,0;;m $x0;;p $y0;;p $r;;p $ns;;p $angle;;p $draw_circle;;p $style;;p $line_style;;p $fill_color;;p $circle_style;;p $circle_outLine_style;;p $circle_fill_color;;p">
</treenode>
<treenode node="removePageRegion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22551;2;22555;;;;vpos;;v;;r&#10;Definition&#10;    removePageRegion($key)&#10;&#10;Description&#10;     Remove a single no-write region.&#10;&#10;Parameters:&#10;     $key - (int) region key;;d40,22551;;b1,0;;m $key;;p">
</treenode>
<treenode node="removeTagNamespace;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;23684;2;23690;;;;vpos;;v;;r&#10;Definition&#10;    removeTagNamespace($name)&#10;&#10;Description&#10;     Return the tag name without the namespace&#10;&#10;Parameters:&#10;     $name - (string) Tag name;;d46,23684;;b2,0;;m $name;;p">
</treenode>
<treenode node="replaceBuffer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;20684;2;20687;;;;vpos;;v;;r&#10;Definition&#10;    replaceBuffer($data)&#10;&#10;Description&#10;     Replace the buffer content&#10;&#10;Parameters:&#10;     $data - (string) data;;d41,20684;;b2,0;;m $data;;p">
</treenode>
<treenode node="replaceChar;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;5530;2;5539;;;;vpos;;vint;;r&#10;Definition&#10;    replaceChar($oldchar, $newchar)&#10;&#10;Description&#10;     Replace a char if is defined on the current font.&#10;&#10;Parameters:&#10;     $oldchar - (int) Integer code (unicode) of the character to replace&#10;     $newchar - (int) Integer code (unicode) of the new character&#10;&#10;Return:&#10;   the replaced char or the old char in case the new char i not defined;;d52,5530;;b2,0;;m $oldchar;;p $newchar;;p">
</treenode>
<treenode node="replaceMissingChars;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4634;2;4663;;;;vpos;;v;;r&#10;Definition&#10;    replaceMissingChars($text, $font=&apos;&apos;, $style=&apos;&apos;, $subs=array())&#10;&#10;Description&#10;     Replace missing font characters on selected font with specified substitutions.&#10;&#10;Parameters:&#10;     $text - (string) Text to process&#10;     $font - (string) Font name (family name)&#10;     $style - (string) Font style&#10;     $subs - (array) Array of possible character substitutions;;d80,4634;;b1,0;;m $text;;p $font;;p $style;;p $subs;;p">
</treenode>
<treenode node="replaceRightShiftPageNumAliases;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;7842;2;7870;;;;vpos;;vreplaced;;r&#10;Definition&#10;    replaceRightShiftPageNumAliases($page, $aliases, $diff)&#10;&#10;Description&#10;     Replace right shift page number aliases with spaces to correct right alignment. This works perfectly only when using monospaced fonts.&#10;&#10;Parameters:&#10;     $page - (string) Page content&#10;     $aliases - (array) Array of page aliases&#10;     $diff - (int) initial difference to add&#10;&#10;Return:&#10;   page content;;d76,7842;;b2,0;;m $page;;p $aliases;;p $diff;;p">
</treenode>
<treenode node="resetColumns;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;21704;2;21708;;;;vpos;;v;;r&#10;Definition&#10;    resetColumns()&#10;&#10;Description&#10;     Remove columns and reset page margins.;;d32,21704;;b1,0;;m">
</treenode>
<treenode node="resetHeaderTemplate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3373;2;3375;;;;vpos;;v;;r&#10;Definition&#10;    resetHeaderTemplate()&#10;&#10;Description&#10;     Reset the xobject template used by Header() method.;;d39,3373;;b1,0;;m">
</treenode>
<treenode node="resetLastH;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2439;2;2441;;;;vpos;;v;;r&#10;Definition&#10;    resetLastH()&#10;&#10;Description&#10;     Reset the last cell height.;;d30,2439;;b1,0;;m">
</treenode>
<treenode node="rollbackTransaction;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;21648;2;21660;;;;vpos;;vTCPDF;;r&#10;Definition&#10;    rollbackTransaction($self=false)&#10;&#10;Description&#10;     This method allows to undo the latest transaction by returning the latest saved TCPDF object with startTransaction().&#10;&#10;Parameters:&#10;     $self - (boolean) if true restores current class object to previous state without the need of reassignment via the returned value&#10;&#10;Return:&#10;   object;;d50,21648;;b1,0;;m $self;;p">
</treenode>
<treenode node="Rotate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11156;2;11175;;;;vpos;;v;;r&#10;Definition&#10;    Rotate($angle, $x=&apos;&apos;, $y=&apos;&apos;)&#10;&#10;Description&#10;     Rotate object.&#10;&#10;Parameters:&#10;     $angle - (float) angle in degrees for counter-clockwise rotation&#10;     $x - (int) abscissa of the rotation center&#10;     $y - (int) ordinate of the rotation center;;d46,11156;;b1,0;;m $angle;;p $x;;p $y;;p">
</treenode>
<treenode node="RoundedRect;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;12049;2;12051;;;;vpos;;v;;r&#10;Definition&#10;    RoundedRect($x, $y, $w, $h, $r, $round_corner=&apos;1111&apos;, $style=&apos;&apos;, $border_style=array(), $fill_color=array())&#10;&#10;Description&#10;     Draws a rounded rectangle.&#10;&#10;Parameters:&#10;     $x - (float) Abscissa of upper-left corner&#10;     $y - (float) Ordinate of upper-left corner&#10;     $w - (float) Width&#10;     $h - (float) Height&#10;     $r - (float) the radius of the circle used to round off the corners of the rectangle&#10;     $round_corner - (string) Draws rounded corner or not&#10;     $style - (string) Style of rendering&#10;     $border_style - (array) Border style of rectangle&#10;     $fill_color - (array) Fill color;;d126,12049;;b1,0;;m $x;;p $y;;p $w;;p $h;;p $r;;p $round_corner;;p $style;;p $border_style;;p $fill_color;;p">
</treenode>
<treenode node="RoundedRectXY;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;12068;2;12124;;;;vpos;;v;;r&#10;Definition&#10;    RoundedRectXY($x, $y, $w, $h, $rx, $ry, $round_corner=&apos;1111&apos;, $style=&apos;&apos;, $border_style=array(), $fill_color=array())&#10;&#10;Description&#10;     Draws a rounded rectangle.&#10;&#10;Parameters:&#10;     $x - (float) Abscissa of upper-left corner&#10;     $y - (float) Ordinate of upper-left corner&#10;     $w - (float) Width&#10;     $h - (float) Height&#10;     $rx - (float) the x-axis radius of the ellipse used to round off the corners of the rectangle&#10;     $ry - (float) the y-axis radius of the ellipse used to round off the corners of the rectangle&#10;     $round_corner - (string) Draws rounded corner or not&#10;     $style - (string) Style of rendering&#10;     $border_style - (array) Border style of rectangle&#10;     $fill_color - (array) Fill color;;d134,12068;;b1,0;;m $x;;p $y;;p $w;;p $h;;p $rx;;p $ry;;p $round_corner;;p $style;;p $border_style;;p $fill_color;;p">
</treenode>
<treenode node="Scale;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11030;2;11054;;;;vpos;;v;;r&#10;Definition&#10;    Scale($s_x, $s_y, $x=&apos;&apos;, $y=&apos;&apos;)&#10;&#10;Description&#10;     Vertical and horizontal non-proportional Scaling.&#10;&#10;Parameters:&#10;     $s_x - (float) scaling factor for width as percent&#10;     $s_y - (float) scaling factor for height as percent&#10;     $x - (int) abscissa of the scaling center&#10;     $y - (int) ordinate of the scaling center;;d49,11030;;b1,0;;m $s_x;;p $s_y;;p $x;;p $y;;p">
</treenode>
<treenode node="ScaleX;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;10990;2;10992;;;;vpos;;v;;r&#10;Definition&#10;    ScaleX($s_x, $x=&apos;&apos;, $y=&apos;&apos;)&#10;&#10;Description&#10;     Horizontal Scaling.&#10;&#10;Parameters:&#10;     $s_x - (float) scaling factor for width as percent&#10;     $x - (int) abscissa of the scaling center&#10;     $y - (int) ordinate of the scaling center;;d44,10990;;b1,0;;m $s_x;;p $x;;p $y;;p">
</treenode>
<treenode node="ScaleXY;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11016;2;11018;;;;vpos;;v;;r&#10;Definition&#10;    ScaleXY($s, $x=&apos;&apos;, $y=&apos;&apos;)&#10;&#10;Description&#10;     Vertical and horizontal proportional Scaling.&#10;&#10;Parameters:&#10;     $s - (float) scaling factor for width and height as percent&#10;     $x - (int) abscissa of the scaling center&#10;     $y - (int) ordinate of the scaling center;;d43,11016;;b1,0;;m $s;;p $x;;p $y;;p">
</treenode>
<treenode node="ScaleY;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11003;2;11005;;;;vpos;;v;;r&#10;Definition&#10;    ScaleY($s_y, $x=&apos;&apos;, $y=&apos;&apos;)&#10;&#10;Description&#10;     Vertical Scaling.&#10;&#10;Parameters:&#10;     $s_y - (float) scaling factor for height as percent&#10;     $x - (int) abscissa of the scaling center&#10;     $y - (int) ordinate of the scaling center;;d44,11003;;b1,0;;m $s_y;;p $x;;p $y;;p">
</treenode>
<treenode node="segSVGContentHandler;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;24476;2;24478;;;;vpos;;v;;r&#10;Definition&#10;    segSVGContentHandler($parser, $data)&#10;&#10;Description&#10;     Sets the character data handler function for the XML parser.&#10;&#10;Parameters:&#10;     $parser - (resource) The first parameter, parser, is a reference to the XML parser calling the handler&#10;     $data - (string) The second parameter, data, contains the character data as a string;;d57,24476;;b2,0;;m $parser;;p $data;;p">
</treenode>
<treenode node="selectColumn;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;21731;2;21802;;;;vpos;;v;;r&#10;Definition&#10;    selectColumn($col=&apos;&apos;)&#10;&#10;Description&#10;     Set position at a given column&#10;&#10;Parameters:&#10;     $col - (int) column number (from 0 to getNumberOfColumns()-1);s empty string = current column;;d39,21731;;b1,0;;m $col;;p">
</treenode>
<treenode node="serializeTCPDFtagParameters;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;17058;2;17061;;;;vpos;;vstring;;r&#10;Definition&#10;    serializeTCPDFtagParameters($data)&#10;&#10;Description&#10;     Serialize an array of parameters to be used with TCPDF tag in HTML code.&#10;&#10;Parameters:&#10;     $data - (array) parameters array&#10;&#10;Return:&#10;   containing serialized data;;d52,17058;;b1,0;;m $data;;p">
</treenode>
<treenode node="SetAbsX;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;7514;2;7516;;;;vpos;;v;;r&#10;Definition&#10;    SetAbsX($x)&#10;&#10;Description&#10;     Set the absolute X coordinate of the current pointer.&#10;&#10;Parameters:&#10;     $x - (float) The value of the abscissa in user units;;d29,7514;;b1,0;;m $x;;p">
</treenode>
<treenode node="SetAbsXY;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;7537;2;7540;;;;vpos;;v;;r&#10;Definition&#10;    SetAbsXY($x, $y)&#10;&#10;Description&#10;     Set the absolute X and Y coordinates of the current pointer.&#10;&#10;Parameters:&#10;     $x - (float) The value of the abscissa in user units&#10;     $y - (float) (float) The value of the ordinate in user units;;d34,7537;;b1,0;;m $x;;p $y;;p">
</treenode>
<treenode node="SetAbsY;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;7525;2;7527;;;;vpos;;v;;r&#10;Definition&#10;    SetAbsY($y)&#10;&#10;Description&#10;     Set the absolute Y coordinate of the current pointer.&#10;&#10;Parameters:&#10;     $y - (float) (float) The value of the ordinate in user units;;d29,7525;;b1,0;;m $y;;p">
</treenode>
<treenode node="setAlpha;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13906;2;13929;;;;vpos;;v;;r&#10;Definition&#10;    setAlpha($stroking=1, $bm=&apos;Normal&apos;, $nonstroking=&apos;&apos;, $ais=false)&#10;&#10;Description&#10;     Set alpha for stroking (CA) and non-stroking (ca) operations.&#10;&#10;Parameters:&#10;     $stroking - (float) Alpha value for stroking operations: real value from 0 (transparent) to 1 (opaque)&#10;     $bm - (string) blend mode, one of the following: Normal, Multiply, Screen, Overlay, Darken, Lighten, ColorDodge, ColorBurn, HardLight, SoftLight, Difference, Exclusion, Hue, Saturation, Color, Luminosity&#10;     $nonstroking - (float) Alpha value for non-stroking operations: real value from 0 (transparent) to 1 (opaque)&#10;     $ais - (boolean);;d82,13906;;b1,0;;m $stroking;;p $bm;;p $nonstroking;;p $ais;;p">
</treenode>
<treenode node="SetAuthor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2888;2;2890;;;;vpos;;v;;r&#10;Definition&#10;    SetAuthor($author)&#10;&#10;Description&#10;     Defines the author of the document.&#10;&#10;Parameters:&#10;     $author - (string) The name of the author;;d36,2888;;b1,0;;m $author;;p">
</treenode>
<treenode node="SetAutoPageBreak;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2789;2;2793;;;;vpos;;v;;r&#10;Definition&#10;    SetAutoPageBreak($auto, $margin=0)&#10;&#10;Description&#10;     Enables or disables the automatic page breaking mode. When enabling, the second parameter is the distance from the bottom of the page that defines the triggering limit. By default, the mode is on and the margin is 2 cm.&#10;&#10;Parameters:&#10;     $auto - (boolean) Boolean indicating if mode should be on or off&#10;     $margin - (float) Distance from the bottom of the page;;d52,2789;;b1,0;;m $auto;;p $margin;;p">
</treenode>
<treenode node="setBarcode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;15150;2;15152;;;;vpos;;v;;r&#10;Definition&#10;    setBarcode($bc=&apos;&apos;)&#10;&#10;Description&#10;     Set document barcode.&#10;&#10;Parameters:&#10;     $bc - (string) barcode;;d36,15150;;b1,0;;m $bc;;p">
</treenode>
<treenode node="SetBooklet;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;20158;2;20166;;;;vpos;;v;;r&#10;Definition&#10;    SetBooklet($booklet=true, $inner=-1, $outer=-1)&#10;&#10;Description&#10;     Set the booklet mode for double-sided pages.&#10;&#10;Parameters:&#10;     $booklet - (boolean) true set the booklet mode on, false otherwise&#10;     $inner - (float) Inner page margin&#10;     $outer - (float) Outer page margin;;d65,20158;;b1,0;;m $booklet;;p $inner;;p $outer;;p">
</treenode>
<treenode node="setBookmark;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;12282;2;12284;;;;vpos;;v;;r&#10;Definition&#10;    setBookmark($txt, $level=0, $y=-1, $page=&apos;&apos;, $style=&apos;&apos;, $color=array(0,0,0), $x=-1, $link=&apos;&apos;)&#10;&#10;Description&#10;     Adds a bookmark - alias for Bookmark().&#10;&#10;Parameters:&#10;     $txt - (string) Bookmark description&#10;     $level - (int) Bookmark level (minimum value is 0)&#10;     $y - (float) Y position in user units of the bookmark on the selected page (default = -1 = current position;s 0 = page start;s)&#10;     $page - (int|string) Target page number (leave empty for current page)&#10;     $style - (string) Font style: B = Bold, I = Italic, BI = Bold + Italic&#10;     $color - (array) RGB color array (values from 0 to 255)&#10;     $x - (float) X position in user units of the bookmark on the selected page (default = -1 = current position;s)&#10;     $link - (mixed) URL, or numerical link ID, or named destination (# character followed by the destination name), or embedded file (* character followed by the file name);;d111,12282;;b1,0;;m $txt;;p $level;;p $y;;p $page;;p $style;;p $color;;p $x;;p $link;;p">
</treenode>
<treenode node="setBuffer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;20673;2;20676;;;;vpos;;v;;r&#10;Definition&#10;    setBuffer($data)&#10;&#10;Description&#10;     Set buffer content (always append data).&#10;&#10;Parameters:&#10;     $data - (string) data;;d37,20673;;b2,0;;m $data;;p">
</treenode>
<treenode node="setCellHeightRatio;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13971;2;13973;;;;vpos;;v;;r&#10;Definition&#10;    setCellHeightRatio($h)&#10;&#10;Description&#10;     Set the height of the cell (line height) respect the font height.&#10;&#10;Parameters:&#10;     $h - (int) cell proportion respect font height (typical value = 1;;d40,13971;;b1,0;;m $h;;p">
</treenode>
<treenode node="setCellMargins;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2681;2;2694;;;;vpos;;v;;r&#10;Definition&#10;    setCellMargins($left=&apos;&apos;, $top=&apos;&apos;, $right=&apos;&apos;, $bottom=&apos;&apos;)&#10;&#10;Description&#10;     Set the internal Cell margins.&#10;&#10;Parameters:&#10;     $left - (float) left margin&#10;     $top - (float) top margin&#10;     $right - (float) right margin&#10;     $bottom - (float) bottom margin;;d74,2681;;b1,0;;m $left;;p $top;;p $right;;p $bottom;;p">
</treenode>
<treenode node="SetCellPadding;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2626;2;2633;;;;vpos;;v;;r&#10;Definition&#10;    SetCellPadding($pad)&#10;&#10;Description&#10;     Set the same internal Cell padding for top, right, bottom, left-&#10;&#10;Parameters:&#10;     $pad - (float) internal padding;;d38,2626;;b1,0;;m $pad;;p">
</treenode>
<treenode node="setCellPaddings;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2645;2;2658;;;;vpos;;v;;r&#10;Definition&#10;    setCellPaddings($left=&apos;&apos;, $top=&apos;&apos;, $right=&apos;&apos;, $bottom=&apos;&apos;)&#10;&#10;Description&#10;     Set the internal Cell paddings.&#10;&#10;Parameters:&#10;     $left - (float) left padding&#10;     $top - (float) top padding&#10;     $right - (float) right padding&#10;     $bottom - (float) bottom padding;;d75,2645;;b1,0;;m $left;;p $top;;p $right;;p $bottom;;p">
</treenode>
<treenode node="setColor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3891;2;3966;;;;vpos;;v;;r&#10;Definition&#10;    setColor($type, $col1=0, $col2=-1, $col3=-1, $col4=-1, $ret=false, $name=&apos;&apos;)&#10;&#10;Description&#10;     Defines the color used by the specified type (&apos;draw&apos;, &apos;fill&apos;, &apos;text&apos;).&#10;&#10;Parameters:&#10;     $type - (string) Type of object affected by this color: (&apos;draw&apos;, &apos;fill&apos;, &apos;text&apos;)&#10;     $col1 - (float) GRAY level for single color, or Red color for RGB (0-255), or CYAN color for CMYK (0-100)&#10;     $col2 - (float) GREEN color for RGB (0-255), or MAGENTA color for CMYK (0-100)&#10;     $col3 - (float) BLUE color for RGB (0-255), or YELLOW color for CMYK (0-100)&#10;     $col4 - (float) KEY (BLACK) color for CMYK (0-100)&#10;     $ret - (boolean) If true do not send the command&#10;     $name - (string) spot color name (if any);;d94,3891;;b1,0;;m $type;;p $col1;;p $col2;;p $col3;;p $col4;;p $ret;;p $name;;p">
</treenode>
<treenode node="setColorArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3816;2;3834;;;;vpos;;v;;r&#10;Definition&#10;    setColorArray($type, $color, $ret=false)&#10;&#10;Description&#10;     Set the color array for the specified type (&apos;draw&apos;, &apos;fill&apos;, &apos;text&apos;). It can be expressed in RGB, CMYK or GRAY SCALE components. The method can be called before the first page is created and the value is retained from page to page.&#10;&#10;Parameters:&#10;     $type - (string) Type of object affected by this color: (&apos;draw&apos;, &apos;fill&apos;, &apos;text&apos;)&#10;     $color - (array) Array of colors (1=gray, 3=RGB, 4=CMYK or 5=spotcolor=CMYK+name values)&#10;     $ret - (boolean) If true do not send the PDF command;;d58,3816;;b1,0;;m $type;;p $color;;p $ret;;p">
</treenode>
<treenode node="setColumnsArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;21717;2;21723;;;;vpos;;v;;r&#10;Definition&#10;    setColumnsArray($columns)&#10;&#10;Description&#10;     Set columns array. Each column is represented by an array of arrays with the following keys: (w = width, s = space between columns, y = column top position).&#10;&#10;Parameters:&#10;     $columns - (array);;d43,21717;;b1,0;;m $columns;;p">
</treenode>
<treenode node="SetCompression;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2830;2;2836;;;;vpos;;v;;r&#10;Definition&#10;    SetCompression($compress=true)&#10;&#10;Description&#10;     Activates or deactivates page compression. When activated, the internal representation of each page is compressed, which leads to a compression ratio of about 2 for the resulting document. Compression is on by default. Note: the Zlib extension is required for this feature. If not present, compression will be turned off.&#10;&#10;Parameters:&#10;     $compress - (boolean) Boolean indicating if compression must be enabled;;d48,2830;;b1,0;;m $compress;;p">
</treenode>
<treenode node="setContentMark;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;3235;2;3244;;;;vpos;;v;;r&#10;Definition&#10;    setContentMark($page=0)&#10;&#10;Description&#10;     Set start-writing mark on selected page. Borders and fills are always created after content and inserted on the position marked by this method.&#10;&#10;Parameters:&#10;     $page - (int) page number (default is the current page);;d44,3235;;b2,0;;m $page;;p">
</treenode>
<treenode node="SetCreator;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2910;2;2912;;;;vpos;;v;;r&#10;Definition&#10;    SetCreator($creator)&#10;&#10;Description&#10;     Defines the creator of the document. This is typically the name of the application that generates the PDF.&#10;&#10;Parameters:&#10;     $creator - (string) The name of the creator;;d38,2910;;b1,0;;m $creator;;p">
</treenode>
<treenode node="SetDefaultMonospacedFont;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4671;2;4673;;;;vpos;;v;;r&#10;Definition&#10;    SetDefaultMonospacedFont($font)&#10;&#10;Description&#10;     Defines the default monospaced font.&#10;&#10;Parameters:&#10;     $font - (string) Font name;;d49,4671;;b1,0;;m $font;;p">
</treenode>
<treenode node="setDefaultTableColumns;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13961;2;13963;;;;vpos;;v;;r&#10;Definition&#10;    setDefaultTableColumns($cols=4)&#10;&#10;Description&#10;     Set the default number of columns in a row for HTML tables.&#10;&#10;Parameters:&#10;     $cols - (int) number of columns;;d49,13961;;b1,0;;m $cols;;p">
</treenode>
<treenode node="setDestination;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;12203;2;12237;;;;vpos;;v;;r&#10;Definition&#10;    setDestination($name, $y=-1, $page=&apos;&apos;, $x=-1)&#10;&#10;Description&#10;     Add a Named Destination. NOTE: destination names are unique, so only last entry will be saved.&#10;&#10;Parameters:&#10;     $name - (string) Destination name&#10;     $y - (float) Y position in user units of the destiantion on the selected page (default = -1 = current position;s 0 = page start;s)&#10;     $page - (int|string) Target page number (leave empty for current page)&#10;     $x - (float) X position in user units of the destiantion on the selected page (default = -1 = current position;s);;d63,12203;;b1,0;;m $name;;p $y;;p $page;;p $x;;p">
</treenode>
<treenode node="SetDisplayMode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2813;2;2821;;;;vpos;;v;;r&#10;Definition&#10;    SetDisplayMode($zoom, $layout=&apos;SinglePage&apos;, $mode=&apos;UseNone&apos;)&#10;&#10;Description&#10;     Defines the way the document is to be displayed by the viewer.&#10;&#10;Parameters:&#10;     $zoom - (mixed) The zoom to use&#10;     $layout - (string) The page layout&#10;     $mode - (string) A name object specifying how the document should be displayed when opened:&lt;ul&gt;&lt;li&gt;UseNone Neither document outline nor thumbnail images visible&lt;/li&gt;&lt;li&gt;UseOutlines Document outline visible&lt;/li&gt;&lt;li&gt;UseThumbs Thumbnail images visible&lt;/li&gt;&lt;li&gt;FullScreen Full-screen mode, with no menu bar, window controls, or any other window visible&lt;/li&gt;&lt;li&gt;UseOC (PDF 1;;d78,2813;;b1,0;;m $zoom;;p $layout;;p $mode;;p">
</treenode>
<treenode node="setDocCreationTimestamp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;10179;2;10184;;;;vpos;;v;;r&#10;Definition&#10;    setDocCreationTimestamp($time)&#10;&#10;Description&#10;     Set the document creation timestamp&#10;&#10;Parameters:&#10;     $time - (mixed) Document creation timestamp in seconds or date-time string;;d48,10179;;b1,0;;m $time;;p">
</treenode>
<treenode node="SetDocInfoUnicode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2855;2;2857;;;;vpos;;v;;r&#10;Definition&#10;    SetDocInfoUnicode($unicode=true)&#10;&#10;Description&#10;     Turn on/off Unicode mode for document information dictionary (meta tags). This has effect only when unicode mode is set to false.&#10;&#10;Parameters:&#10;     $unicode - (boolean) if true set the meta information in Unicode;;d50,2855;;b1,0;;m $unicode;;p">
</treenode>
<treenode node="setDocModificationTimestamp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;10192;2;10197;;;;vpos;;v;;r&#10;Definition&#10;    setDocModificationTimestamp($time)&#10;&#10;Description&#10;     Set the document modification timestamp&#10;&#10;Parameters:&#10;     $time - (mixed) Document modification timestamp in seconds or date-time string;;d52,10192;;b1,0;;m $time;;p">
</treenode>
<treenode node="SetDrawColor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3981;2;3983;;;;vpos;;vstring;;r&#10;Definition&#10;    SetDrawColor($col1=0, $col2=-1, $col3=-1, $col4=-1, $ret=false, $name=&apos;&apos;)&#10;&#10;Description&#10;     Defines the color used for all drawing operations (lines, rectangles and cell borders). It can be expressed in RGB components or gray scale. The method can be called before the first page is created and the value is retained from page to page.&#10;&#10;Parameters:&#10;     $col1 - (float) GRAY level for single color, or Red color for RGB (0-255), or CYAN color for CMYK (0-100)&#10;     $col2 - (float) GREEN color for RGB (0-255), or MAGENTA color for CMYK (0-100)&#10;     $col3 - (float) BLUE color for RGB (0-255), or YELLOW color for CMYK (0-100)&#10;     $col4 - (float) KEY (BLACK) color for CMYK (0-100)&#10;     $ret - (boolean) If true do not send the command&#10;     $name - (string) spot color name (if any)&#10;&#10;Return:&#10;   the PDF command;;d91,3981;;b1,0;;m $col1;;p $col2;;p $col3;;p $col4;;p $ret;;p $name;;p">
</treenode>
<treenode node="SetDrawColorArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3847;2;3849;;;;vpos;;vstring;;r&#10;Definition&#10;    SetDrawColorArray($color, $ret=false)&#10;&#10;Description&#10;     Defines the color used for all drawing operations (lines, rectangles and cell borders). It can be expressed in RGB, CMYK or GRAY SCALE components. The method can be called before the first page is created and the value is retained from page to page.&#10;&#10;Parameters:&#10;     $color - (array) Array of colors (1, 3 or 4 values)&#10;     $ret - (boolean) If true do not send the PDF command&#10;&#10;Return:&#10;   the PDF command;;d55,3847;;b1,0;;m $color;;p $ret;;p">
</treenode>
<treenode node="SetDrawSpotColor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3777;2;3779;;;;vpos;;v;;r&#10;Definition&#10;    SetDrawSpotColor($name, $tint=100)&#10;&#10;Description&#10;     Defines the spot color used for all drawing operations (lines, rectangles and cell borders).&#10;&#10;Parameters:&#10;     $name - (string) Name of the spot color&#10;     $tint - (float) Intensity of the color (from 0 to 100 ;s 100 = full intensity by default);;d52,3777;;b1,0;;m $name;;p $tint;;p">
</treenode>
<treenode node="setEqualColumns;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;21672;2;21697;;;;vpos;;v;;r&#10;Definition&#10;    setEqualColumns($numcols=0, $width=0, $y=&apos;&apos;)&#10;&#10;Description&#10;     Set multiple columns of the same size&#10;&#10;Parameters:&#10;     $numcols - (int) number of columns (set to zero to disable columns mode)&#10;     $width - (int) column width&#10;     $y - (int) column starting Y position (leave empty for current Y position);;d62,21672;;b1,0;;m $numcols;;p $width;;p $y;;p">
</treenode>
<treenode node="setExtGState;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;13825;2;13831;;;;vpos;;v;;r&#10;Definition&#10;    setExtGState($gs)&#10;&#10;Description&#10;     Add an extgstate&#10;&#10;Parameters:&#10;     $gs - (array) extgstate;;d38,13825;;b2,0;;m $gs;;p">
</treenode>
<treenode node="setExtraXMP;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;9499;2;9501;;;;vpos;;v;;r&#10;Definition&#10;    setExtraXMP($xmp)&#10;&#10;Description&#10;     Set additional XMP data to be added on the default XMP data just before the end of &quot;x:xmpmeta&quot; tag. IMPORTANT: This data is added as-is without controls, so you have to validate your data before using this method!&#10;&#10;Parameters:&#10;     $xmp - (string) Custom XMP data;;d35,9499;;b1,0;;m $xmp;;p">
</treenode>
<treenode node="SetFillColor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3998;2;4000;;;;vpos;;v;;r&#10;Definition&#10;    SetFillColor($col1=0, $col2=-1, $col3=-1, $col4=-1, $ret=false, $name=&apos;&apos;)&#10;&#10;Description&#10;     Defines the color used for all filling operations (filled rectangles and cell backgrounds). It can be expressed in RGB components or gray scale. The method can be called before the first page is created and the value is retained from page to page.&#10;&#10;Parameters:&#10;     $col1 - (float) GRAY level for single color, or Red color for RGB (0-255), or CYAN color for CMYK (0-100)&#10;     $col2 - (float) GREEN color for RGB (0-255), or MAGENTA color for CMYK (0-100)&#10;     $col3 - (float) BLUE color for RGB (0-255), or YELLOW color for CMYK (0-100)&#10;     $col4 - (float) KEY (BLACK) color for CMYK (0-100)&#10;     $ret - (boolean) If true do not send the command&#10;     $name - (string) Spot color name (if any);;d91,3998;;b1,0;;m $col1;;p $col2;;p $col3;;p $col4;;p $ret;;p $name;;p">
</treenode>
<treenode node="SetFillColorArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3861;2;3863;;;;vpos;;v;;r&#10;Definition&#10;    SetFillColorArray($color, $ret=false)&#10;&#10;Description&#10;     Defines the color used for all filling operations (filled rectangles and cell backgrounds). It can be expressed in RGB, CMYK or GRAY SCALE components. The method can be called before the first page is created and the value is retained from page to page.&#10;&#10;Parameters:&#10;     $color - (array) Array of colors (1, 3 or 4 values)&#10;     $ret - (boolean) If true do not send the PDF command;;d55,3861;;b1,0;;m $color;;p $ret;;p">
</treenode>
<treenode node="SetFillSpotColor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3789;2;3791;;;;vpos;;v;;r&#10;Definition&#10;    SetFillSpotColor($name, $tint=100)&#10;&#10;Description&#10;     Defines the spot color used for all filling operations (filled rectangles and cell backgrounds).&#10;&#10;Parameters:&#10;     $name - (string) Name of the spot color&#10;     $tint - (float) Intensity of the color (from 0 to 100 ;s 100 = full intensity by default);;d52,3789;;b1,0;;m $name;;p $tint;;p">
</treenode>
<treenode node="SetFont;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4426;2;4444;;;;vpos;;v;;r&#10;Definition&#10;    SetFont($family, $style=&apos;&apos;, $size=null, $fontfile=&apos;&apos;, $subset=&apos;default&apos;, $out=true)&#10;&#10;Description&#10;     Sets the font used to print character strings. The font can be either a standard one or a font added via the AddFont() method. Standard fonts use Windows encoding cp1252 (Western Europe). The method can be called before the first page is created and the font is retained from page to page. If you just wish to change the current font size, it is simpler to call SetFontSize(). Note: for the standard fonts, the font metric files must be accessible. There are three possibilities for this:&lt;ul&gt;&lt;li&gt;They are in the current directory (the one where the running script lies)&lt;/li&gt;&lt;li&gt;They are in one of the directories defined by the include_path parameter&lt;/li&gt;&lt;li&gt;They are in the directory defined by the K_PATH_FONTS constant&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&#10;&#10;Parameters:&#10;     $family - (string) Family font&#10;     $style - (string) Font style&#10;     $size - (float) Font size in points&#10;     $fontfile - (string) The font definition file&#10;     $subset - (mixed) if true embedd only a subset of the font (stores only the information related to the used characters);s if false embedd full font;s if &apos;default&apos; uses the default value set using setFontSubsetting()&#10;     $out - (boolean) if true output the font size command, otherwise only set the font properties;;d101,4426;;b1,0;;m $family;;p $style;;p $size;;p $fontfile;;p $subset;;p $out;;p">
</treenode>
<treenode node="setFontBuffer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;20788;2;20797;;;;vpos;;v;;r&#10;Definition&#10;    setFontBuffer($font, $data)&#10;&#10;Description&#10;     Set font buffer content.&#10;&#10;Parameters:&#10;     $font - (string) font key&#10;     $data - (array) font data;;d48,20788;;b2,0;;m $font;;p $data;;p">
</treenode>
<treenode node="SetFontSize;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4454;2;4486;;;;vpos;;v;;r&#10;Definition&#10;    SetFontSize($size, $out=true)&#10;&#10;Description&#10;     Defines the size of the current font.&#10;&#10;Parameters:&#10;     $size - (float) The font size in points&#10;     $out - (boolean) if true output the font size command, otherwise only set the font properties;;d47,4454;;b1,0;;m $size;;p $out;;p">
</treenode>
<treenode node="setFontSpacing;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22474;2;22476;;;;vpos;;v;;r&#10;Definition&#10;    setFontSpacing($spacing=0)&#10;&#10;Description&#10;     Set the amount to increase or decrease the space between characters in a text.&#10;&#10;Parameters:&#10;     $spacing - (float) amount to increase or decrease the space between characters in a text (0 = default spacing);;d44,22474;;b1,0;;m $spacing;;p">
</treenode>
<treenode node="setFontStretching;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22452;2;22454;;;;vpos;;v;;r&#10;Definition&#10;    setFontStretching($perc=100)&#10;&#10;Description&#10;     Set the percentage of character stretching.&#10;&#10;Parameters:&#10;     $perc - (int) percentage of stretching (100 = no stretching);;d46,22452;;b1,0;;m $perc;;p">
</treenode>
<treenode node="setFontSubBuffer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;20807;2;20812;;;;vpos;;v;;r&#10;Definition&#10;    setFontSubBuffer($font, $key, $data)&#10;&#10;Description&#10;     Set font buffer content.&#10;&#10;Parameters:&#10;     $font - (string) font key&#10;     $key - (string) font sub-key&#10;     $data - (array) font data;;d57,20807;;b2,0;;m $font;;p $key;;p $data;;p">
</treenode>
<treenode node="setFontSubsetting;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22102;2;22108;;;;vpos;;v;;r&#10;Definition&#10;    setFontSubsetting($enable=true)&#10;&#10;Description&#10;     Enable or disable default option for font subsetting.&#10;&#10;Parameters:&#10;     $enable - (boolean) if true enable font subsetting by default;;d49,22102;;b1,0;;m $enable;;p">
</treenode>
<treenode node="setFooter;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;3556;2;3604;;;;vpos;;v;;r&#10;Definition&#10;    setFooter()&#10;&#10;Description&#10;     This method is used to render the page footer.;;d32,3556;;b2,0;;m">
</treenode>
<treenode node="setFooterData;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3271;2;3274;;;;vpos;;v;;r&#10;Definition&#10;    setFooterData($tc=array(0,0,0), $lc=array(0,0,0))&#10;&#10;Description&#10;     Set footer data.&#10;&#10;Parameters:&#10;     $tc - (array) RGB array color for text&#10;     $lc - (array) RGB array color for line;;d67,3271;;b1,0;;m $tc;;p $lc;;p">
</treenode>
<treenode node="setFooterFont;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;10319;2;10321;;;;vpos;;v;;r&#10;Definition&#10;    setFooterFont($font)&#10;&#10;Description&#10;     Set footer font.&#10;&#10;Parameters:&#10;     $font - (array) Array describing the basic font parameters: (family, style, size);;d38,10319;;b1,0;;m $font;;p">
</treenode>
<treenode node="setFooterMargin;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3320;2;3322;;;;vpos;;v;;r&#10;Definition&#10;    setFooterMargin($fm=10)&#10;&#10;Description&#10;     Set footer margin. (minimum distance between footer and bottom page margin)&#10;&#10;Parameters:&#10;     $fm - (int) distance in user units;;d41,3320;;b1,0;;m $fm;;p">
</treenode>
<treenode node="setFormDefaultProp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;12613;2;12615;;;;vpos;;v;;r&#10;Definition&#10;    setFormDefaultProp($prop=array())&#10;&#10;Description&#10;     Set default properties for form fields.&#10;&#10;Parameters:&#10;     $prop - (array) javascript field properties;;d51,12613;;b1,0;;m $prop;;p">
</treenode>
<treenode node="setGraphicVars;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;20591;2;20649;;;;vpos;;v;;r&#10;Definition&#10;    setGraphicVars($gvars, $extended=false)&#10;&#10;Description&#10;     Set graphic variables.&#10;&#10;Parameters:&#10;     $gvars - (array) array of graphic variablesto restore&#10;     $extended - (boolean) if true restore extended graphic variables;;d60,20591;;b2,0;;m $gvars;;p $extended;;p">
</treenode>
<treenode node="setHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;3515;2;3549;;;;vpos;;v;;r&#10;Definition&#10;    setHeader()&#10;&#10;Description&#10;     This method is used to render the page header.;;d32,3515;;b2,0;;m">
</treenode>
<treenode node="setHeaderData;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3256;2;3263;;;;vpos;;v;;r&#10;Definition&#10;    setHeaderData($ln=&apos;&apos;, $lw=0, $ht=&apos;&apos;, $hs=&apos;&apos;, $tc=array(0,0,0), $lc=array(0,0,0))&#10;&#10;Description&#10;     Set header data.&#10;&#10;Parameters:&#10;     $ln - (string) header image logo&#10;     $lw - (string) header image logo width in mm&#10;     $ht - (string) string to print as title on document header&#10;     $hs - (string) string to print on document header&#10;     $tc - (array) RGB array color for text&#10;     $lc - (array) RGB array color for line;;d98,3256;;b1,0;;m $ln;;p $lw;;p $ht;;p $hs;;p $tc;;p $lc;;p">
</treenode>
<treenode node="setHeaderFont;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;10299;2;10301;;;;vpos;;v;;r&#10;Definition&#10;    setHeaderFont($font)&#10;&#10;Description&#10;     Set header font.&#10;&#10;Parameters:&#10;     $font - (array) Array describing the basic font parameters: (family, style, size);;d38,10299;;b1,0;;m $font;;p">
</treenode>
<treenode node="setHeaderMargin;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3300;2;3302;;;;vpos;;v;;r&#10;Definition&#10;    setHeaderMargin($hm=10)&#10;&#10;Description&#10;     Set header margin. (minimum distance between header and top page margin)&#10;&#10;Parameters:&#10;     $hm - (int) distance in user units;;d41,3300;;b1,0;;m $hm;;p">
</treenode>
<treenode node="setHeaderTemplateAutoreset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3382;2;3384;;;;vpos;;v;;r&#10;Definition&#10;    setHeaderTemplateAutoreset($val=true)&#10;&#10;Description&#10;     Set a flag to automatically reset the xobject template used by Header() method at each page.&#10;&#10;Parameters:&#10;     $val - (boolean) set to true to reset Header xobject template at each page, false otherwise;;d55,3382;;b1,0;;m $val;;p">
</treenode>
<treenode node="setHtmlLinksStyle;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;20229;2;20232;;;;vpos;;v;;r&#10;Definition&#10;    setHtmlLinksStyle($color=array(0,0,255), $fontstyle=&apos;U&apos;)&#10;&#10;Description&#10;     Set the color and font style for HTML links.&#10;&#10;Parameters:&#10;     $color - (array) RGB array of colors&#10;     $fontstyle - (string) additional font styles to add;;d74,20229;;b1,0;;m $color;;p $fontstyle;;p">
</treenode>
<treenode node="setHtmlVSpace;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;20198;2;20200;;;;vpos;;v;;r&#10;Definition&#10;    setHtmlVSpace($tagvs)&#10;&#10;Description&#10;     Set the vertical spaces for HTML tags. The array must have the following structure (example): $tagvs = array(&apos;h1&apos; =&gt; array(0 =&gt; array(&apos;h&apos; =&gt; &apos;&apos;, &apos;n&apos; =&gt; 2), 1 =&gt; array(&apos;h&apos; =&gt; 1.3, &apos;n&apos; =&gt; 1)));s The first array level contains the tag names, the second level contains 0 for opening tags or 1 for closing tags, the third level contains the vertical space unit (h) and the number spaces to add (n). If the h parameter is not specified, default values are used.&#10;&#10;Parameters:&#10;     $tagvs - (array) array of tags and relative vertical spaces;;d39,20198;;b1,0;;m $tagvs;;p">
</treenode>
<treenode node="setImageBuffer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;20742;2;20750;;;;vpos;;vint;;r&#10;Definition&#10;    setImageBuffer($image, $data)&#10;&#10;Description&#10;     Set image buffer content.&#10;&#10;Parameters:&#10;     $image - (string) image key&#10;     $data - (array) image data&#10;&#10;Return:&#10;   image index number;;d50,20742;;b2,0;;m $image;;p $data;;p">
</treenode>
<treenode node="setImageScale;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2460;2;2462;;;;vpos;;v;;r&#10;Definition&#10;    setImageScale($scale)&#10;&#10;Description&#10;     Set the adjusting factor to convert pixels to user units.&#10;&#10;Parameters:&#10;     $scale - (float) adjusting factor to convert pixels to user units;;d39,2460;;b1,0;;m $scale;;p">
</treenode>
<treenode node="setImageSubBuffer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;20760;2;20765;;;;vpos;;v;;r&#10;Definition&#10;    setImageSubBuffer($image, $key, $data)&#10;&#10;Description&#10;     Set image buffer content for a specified sub-key.&#10;&#10;Parameters:&#10;     $image - (string) image key&#10;     $key - (string) image sub-key&#10;     $data - (array) image data;;d59,20760;;b2,0;;m $image;;p $key;;p $data;;p">
</treenode>
<treenode node="setJPEGQuality;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13948;2;13953;;;;vpos;;v;;r&#10;Definition&#10;    setJPEGQuality($quality)&#10;&#10;Description&#10;     Set the default JPEG compression quality (1-100)&#10;&#10;Parameters:&#10;     $quality - (int) JPEG quality, integer between 1 and 100;;d42,13948;;b1,0;;m $quality;;p">
</treenode>
<treenode node="SetKeywords;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2899;2;2901;;;;vpos;;v;;r&#10;Definition&#10;    SetKeywords($keywords)&#10;&#10;Description&#10;     Associates keywords with the document, generally in the form &apos;keyword1 keyword2 ...&apos;.&#10;&#10;Parameters:&#10;     $keywords - (string) The list of keywords;;d40,2899;;b1,0;;m $keywords;;p">
</treenode>
<treenode node="setLanguageArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;10339;2;10346;;;;vpos;;v;;r&#10;Definition&#10;    setLanguageArray($language)&#10;&#10;Description&#10;     Set language array.&#10;&#10;Parameters:&#10;     $language - (array);;d45,10339;;b1,0;;m $language;;p">
</treenode>
<treenode node="setLastH;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2416;2;2418;;;;vpos;;v;;r&#10;Definition&#10;    setLastH($h)&#10;&#10;Description&#10;     Set the last cell height.&#10;&#10;Parameters:&#10;     $h - (float) cell height;;d30,2416;;b1,0;;m $h;;p">
</treenode>
<treenode node="SetLeftMargin;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2582;2;2588;;;;vpos;;v;;r&#10;Definition&#10;    SetLeftMargin($margin)&#10;&#10;Description&#10;     Defines the left margin. The method can be called before creating the first page. If the current abscissa gets out of page, it is brought back to the margin.&#10;&#10;Parameters:&#10;     $margin - (float) The margin;;d40,2582;;b1,0;;m $margin;;p">
</treenode>
<treenode node="SetLineStyle;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11319;2;11372;;;;vpos;;vstring;;r&#10;Definition&#10;    SetLineStyle($style, $ret=false)&#10;&#10;Description&#10;     Set line style.&#10;&#10;Parameters:&#10;     $style - (array) Line style&#10;     $ret - (boolean) if true do not send the command&#10;&#10;Return:&#10;   the PDF command;;d50,11319;;b1,0;;m $style;;p $ret;;p">
</treenode>
<treenode node="SetLineWidth;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11276;2;11283;;;;vpos;;v;;r&#10;Definition&#10;    SetLineWidth($width)&#10;&#10;Description&#10;     Defines the line width. By default, the value equals 0.2 mm. The method can be called before the first page is created and the value is retained from page to page.&#10;&#10;Parameters:&#10;     $width - (float) The width;;d38,11276;;b1,0;;m $width;;p">
</treenode>
<treenode node="SetLink;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4698;2;4712;;;;vpos;;v;;r&#10;Definition&#10;    SetLink($link, $y=0, $page=-1)&#10;&#10;Description&#10;     Defines the page and position a link points to.&#10;&#10;Parameters:&#10;     $link - (int) The link identifier returned by AddLink()&#10;     $y - (float) Ordinate of target position;s -1 indicates the current position&#10;     $page - (int) Number of target page;s -1 indicates the current page (default value);;d48,4698;;b1,0;;m $link;;p $y;;p $page;;p">
</treenode>
<treenode node="setListIndentWidth;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;20208;2;20210;;;;vpos;;v;;r&#10;Definition&#10;    setListIndentWidth($width)&#10;&#10;Description&#10;     Set custom width for list indentation.&#10;&#10;Parameters:&#10;     $width - (float) width of the indentation;;d44,20208;;b1,0;;m $width;;p">
</treenode>
<treenode node="setLIsymbol;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;20135;2;20148;;;;vpos;;v;;r&#10;Definition&#10;    setLIsymbol($symbol=&apos;!&apos;)&#10;&#10;Description&#10;     Set the default bullet to be used as LI bullet symbol&#10;&#10;Parameters:&#10;     $symbol - (string) character or string to be used (legal values are: &apos;&apos; = automatic, &apos;!&apos; = auto bullet, &apos;#&apos; = auto numbering, &apos;disc&apos;, &apos;disc&apos;, &apos;circle&apos;, &apos;square&apos;, &apos;1&apos;, &apos;decimal&apos;, &apos;decimal-leading-zero&apos;, &apos;i&apos;, &apos;lower-roman&apos;, &apos;I&apos;, &apos;upper-roman&apos;, &apos;a&apos;, &apos;lower-alpha&apos;, &apos;lower-latin&apos;, &apos;A&apos;, &apos;upper-alpha&apos;, &apos;upper-latin&apos;, &apos;lower-greek&apos;, &apos;img|type|width|height|image;;d42,20135;;b1,0;;m $symbol;;p">
</treenode>
<treenode node="SetMargins;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2560;2;2573;;;;vpos;;v;;r&#10;Definition&#10;    SetMargins($left, $top, $right=-1, $keepmargins=false)&#10;&#10;Description&#10;     Defines the left, top and right margins.&#10;&#10;Parameters:&#10;     $left - (float) Left margin&#10;     $top - (float) Top margin&#10;     $right - (float) Right margin&#10;     $keepmargins - (boolean) if true overwrites the default page margins;;d72,2560;;b1,0;;m $left;;p $top;;p $right;;p $keepmargins;;p">
</treenode>
<treenode node="setOpenCell;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;20218;2;20220;;;;vpos;;v;;r&#10;Definition&#10;    setOpenCell($isopen)&#10;&#10;Description&#10;     Set the top/bottom cell sides to be open or closed when the cell cross the page.&#10;&#10;Parameters:&#10;     $isopen - (boolean) if true keeps the top/bottom border open for the cell sides that cross the page;;d38,20218;;b1,0;;m $isopen;;p">
</treenode>
<treenode node="setOverprint;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13867;2;13884;;;;vpos;;v;;r&#10;Definition&#10;    setOverprint($stroking=true, $nonstroking=&apos;&apos;, $mode=0)&#10;&#10;Description&#10;     Set overprint mode for stroking (OP) and non-stroking (op) painting operations. (Check the &quot;Entries in a Graphics State Parameter Dictionary&quot; on PDF 32000-1:2008).&#10;&#10;Parameters:&#10;     $stroking - (boolean) If true apply overprint for stroking operations&#10;     $nonstroking - (boolean) If true apply overprint for painting operations other than stroking&#10;     $mode - (integer) Overprint mode: (0 = each source colour component value replaces the value previously painted for the corresponding device colorant;s 1 = a tint value of 0;;d72,13867;;b1,0;;m $stroking;;p $nonstroking;;p $mode;;p">
</treenode>
<treenode node="setPage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2994;2;3032;;;;vpos;;v;;r&#10;Definition&#10;    setPage($pnum, $resetmargins=false)&#10;&#10;Description&#10;     Move pointer at the specified document page and update page dimensions.&#10;&#10;Parameters:&#10;     $pnum - (int) page number (1 &#10;     $resetmargins - (boolean) if true reset left, right, top margins and Y position;;d53,2994;;b1,0;;m $pnum;;p $resetmargins;;p">
</treenode>
<treenode node="setPageBoxTypes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;7877;2;7884;;;;vpos;;v;;r&#10;Definition&#10;    setPageBoxTypes($boxes)&#10;&#10;Description&#10;     Set page boxes to be included on page descriptions.&#10;&#10;Parameters:&#10;     $boxes - (array) Array of page boxes to set on document: (&apos;MediaBox&apos;, &apos;CropBox&apos;, &apos;BleedBox&apos;, &apos;TrimBox&apos;, &apos;ArtBox&apos;);;d44,7877;;b2,0;;m $boxes;;p">
</treenode>
<treenode node="setPageBuffer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;20707;2;20718;;;;vpos;;v;;r&#10;Definition&#10;    setPageBuffer($page, $data, $append=false)&#10;&#10;Description&#10;     Set page buffer content.&#10;&#10;Parameters:&#10;     $page - (int) page number&#10;     $data - (string) page data&#10;     $append - (boolean) if true append data, false replace;;d63,20707;;b2,0;;m $page;;p $data;;p $append;;p">
</treenode>
<treenode node="setPageFormat;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;2102;2;2206;;;;vpos;;v;;r&#10;Definition&#10;    setPageFormat($format, $orientation=&apos;P&apos;)&#10;&#10;Description&#10;     Change the format of the current page&#10;&#10;Parameters:&#10;     $format - (mixed) The format used for pages&#10;     $orientation - (string) page orientation;;d61,2102;;b2,0;;m $format;;p $orientation;;p">
</treenode>
<treenode node="setPageMark;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3222;2;3226;;;;vpos;;v;;r&#10;Definition&#10;    setPageMark()&#10;&#10;Description&#10;     Set start-writing mark on current page stream used to put borders and fills. Borders and fills are always created after content and inserted on the position marked by this method. This function must be called after calling Image() function for a background image. Background images must be always inserted before calling Multicell() or WriteHTMLCell() or WriteHTML() functions.;;d31,3222;;b1,0;;m">
</treenode>
<treenode node="setPageOrientation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2216;2;2302;;;;vpos;;v;;r&#10;Definition&#10;    setPageOrientation($orientation, $autopagebreak=&apos;&apos;, $bottommargin=&apos;&apos;)&#10;&#10;Description&#10;     Set page orientation.&#10;&#10;Parameters:&#10;     $orientation - (string) page orientation&#10;     $autopagebreak - (boolean) Boolean indicating if auto-page-break mode should be on or off&#10;     $bottommargin - (float) bottom margin of the page;;d87,2216;;b1,0;;m $orientation;;p $autopagebreak;;p $bottommargin;;p">
</treenode>
<treenode node="setPageRegions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22512;2;22519;;;;vpos;;v;;r&#10;Definition&#10;    setPageRegions($regions=array())&#10;&#10;Description&#10;     Set no-write regions on page. A no-write region is a portion of the page with a rectangular or trapezium shape that will not be covered when writing text or html code. A region is always aligned on the left or right side of the page ad is defined using a vertical segment. You can set multiple regions for the same page.&#10;&#10;Parameters:&#10;     $regions - (array) array of no-write regions;;d50,22512;;b1,0;;m $regions;;p">
</treenode>
<treenode node="setPageUnit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2010;2;2045;;;;vpos;;v;;r&#10;Definition&#10;    setPageUnit($unit)&#10;&#10;Description&#10;     Set the units of measure for the document.&#10;&#10;Parameters:&#10;     $unit - (string) User measure unit;;d36,2010;;b1,0;;m $unit;;p">
</treenode>
<treenode node="setPDFVersion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13990;2;13997;;;;vpos;;v;;r&#10;Definition&#10;    setPDFVersion($version=&apos;1.7&apos;)&#10;&#10;Description&#10;     Set the PDF version (check PDF reference for valid values).&#10;&#10;Parameters:&#10;     $version - (string) PDF document version;;d47,13990;;b1,0;;m $version;;p">
</treenode>
<treenode node="setPrintFooter;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3347;2;3349;;;;vpos;;v;;r&#10;Definition&#10;    setPrintFooter($val=true)&#10;&#10;Description&#10;     Set a flag to print page footer.&#10;&#10;Parameters:&#10;     $val - (boolean) set to true to print the page footer (default), false otherwise;;d43,3347;;b1,0;;m $val;;p">
</treenode>
<treenode node="setPrintHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3338;2;3340;;;;vpos;;v;;r&#10;Definition&#10;    setPrintHeader($val=true)&#10;&#10;Description&#10;     Set a flag to print page header.&#10;&#10;Parameters:&#10;     $val - (boolean) set to true to print the page header (default), false otherwise;;d43,3338;;b1,0;;m $val;;p">
</treenode>
<treenode node="SetProtection;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;10836;2;10928;;;;vpos;;v;;r&#10;Definition&#10;    SetProtection($permissions=array(&apos;print&apos;, &apos;modify&apos;, &apos;copy&apos;, &apos;annot-forms&apos;, &apos;fill-forms&apos;, &apos;extract&apos;, &apos;assemble&apos;, &apos;print-high&apos;), $user_pass=&apos;&apos;, $owner_pass=null, $mode=0, $pubkeys=null)&#10;&#10;Description&#10;     Set document protection Remark: the protection against modification is for people who have the full Acrobat product. If you don&apos;t set any password, the document will open as usual. If you set a user password, the PDF viewer will ask for it before displaying the document. The master password, if different from the user one, can be used to get full access. Note: protecting a document requires to encrypt it, which increases the processing time a lot. This can cause a PHP time-out in some cases, especially if the document contains images or fonts.&#10;&#10;Parameters:&#10;     $permissions - (Array) the set of permissions (specify the ones you want to block):&lt;ul&gt;&lt;li&gt;print : Print the document;s&lt;/li&gt;&lt;li&gt;modify : Modify the contents of the document by operations other than those controlled by &apos;fill-forms&apos;, &apos;extract&apos; and &apos;assemble&apos;;s&lt;/li&gt;&lt;li&gt;copy : Copy or otherwise extract text and graphics from the document;s&lt;/li&gt;&lt;li&gt;annot-forms : Add or modify text annotations, fill in interactive form fields, and, if &apos;modify&apos; is also set, create or modify interactive form fields (including signature fields);s&lt;/li&gt;&lt;li&gt;fill-forms : Fill in existing interactive form fields (including signature fields), even if &apos;annot-forms&apos; is not specified;s&lt;/li&gt;&lt;li&gt;extract : Extract text and graphics (in support of accessibility to users with disabilities or for other purposes);s&lt;/li&gt;&lt;li&gt;assemble : Assemble the document (insert, rotate, or delete pages and create bookmarks or thumbnail images), even if &apos;modify&apos; is not set;s&lt;/li&gt;&lt;li&gt;print-high : Print the document to a representation from which a faithful digital copy of the PDF content could be generated&#10;     $user_pass - (String) user password&#10;     $owner_pass - (String) owner password&#10;     $mode - (int) encryption strength: 0 = RC4 40 bit;s 1 = RC4 128 bit;s 2 = AES 128 bit;s 3 = AES 256 bit&#10;     $pubkeys - (String) array of recipients containing public-key certificates (&apos;c&apos;) and permissions (&apos;p&apos;);;d201,10836;;b1,0;;m $permissions;;p $user_pass;;p $owner_pass;;p $mode;;p $pubkeys;;p">
</treenode>
<treenode node="setRasterizeVectorImages;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22091;2;22093;;;;vpos;;v;;r&#10;Definition&#10;    setRasterizeVectorImages($mode)&#10;&#10;Description&#10;     Enable/disable rasterization of vector images using ImageMagick library.&#10;&#10;Parameters:&#10;     $mode - (boolean) if true enable rasterization, false otherwise;;d49,22091;;b1,0;;m $mode;;p">
</treenode>
<treenode node="SetRightMargin;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2612;2;2617;;;;vpos;;v;;r&#10;Definition&#10;    SetRightMargin($margin)&#10;&#10;Description&#10;     Defines the right margin. The method can be called before creating the first page.&#10;&#10;Parameters:&#10;     $margin - (float) The margin;;d41,2612;;b1,0;;m $margin;;p">
</treenode>
<treenode node="setRTL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2347;2;2355;;;;vpos;;v;;r&#10;Definition&#10;    setRTL($enable, $resetx=true)&#10;&#10;Description&#10;     Enable or disable Right-To-Left language mode&#10;&#10;Parameters:&#10;     $enable - (Boolean) if true enable Right-To-Left language mode&#10;     $resetx - (Boolean) if true reset the X position on direction change;;d47,2347;;b1,0;;m $enable;;p $resetx;;p">
</treenode>
<treenode node="setSignature;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13411;2;13434;;;;vpos;;v;;r&#10;Definition&#10;    setSignature($signing_cert=&apos;&apos;, $private_key=&apos;&apos;, $private_key_password=&apos;&apos;, $extracerts=&apos;&apos;, $cert_type=2, $info=array(), $approval=&apos;&apos;)&#10;&#10;Description&#10;     Enable document signature (requires the OpenSSL Library). The digital signature improve document authenticity and integrity and allows o enable extra features on Acrobat Reader. To create self-signed signature: openssl req -x509 -nodes -days 365000 -newkey rsa:1024 -keyout tcpdf.crt -out tcpdf.crt To export crt to p12: openssl pkcs12 -export -in tcpdf.crt -out tcpdf.p12 To convert pfx certificate to pem: openssl pkcs12 -in tcpdf.pfx -out tcpdf.crt -nodes&#10;&#10;Parameters:&#10;     $signing_cert - (mixed) signing certificate (string or filename prefixed with &apos;file://&apos;)&#10;     $private_key - (mixed) private key (string or filename prefixed with &apos;file://&apos;)&#10;     $private_key_password - (string) password&#10;     $extracerts - (string) specifies the name of a file containing a bunch of extra certificates to include in the signature which can for example be used to help the recipient to verify the certificate that you used&#10;     $cert_type - (int) The access permissions granted for this document&#10;     $info - (array) array of option information: Name, Location, Reason, ContactInfo&#10;     $approval - (string) Enable approval signature eg;;d150,13411;;b1,0;;m $signing_cert;;p $private_key;;p $private_key_password;;p $extracerts;;p $cert_type;;p $info;;p $approval;;p">
</treenode>
<treenode node="setSignatureAppearance;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13448;2;13450;;;;vpos;;v;;r&#10;Definition&#10;    setSignatureAppearance($x=0, $y=0, $w=0, $h=0, $page=-1, $name=&apos;&apos;)&#10;&#10;Description&#10;     Set the digital signature appearance (a cliccable rectangle area to get signature properties)&#10;&#10;Parameters:&#10;     $x - (float) Abscissa of the upper-left corner&#10;     $y - (float) Ordinate of the upper-left corner&#10;     $w - (float) Width of the signature area&#10;     $h - (float) Height of the signature area&#10;     $page - (int) option page number (if &lt; 0 the current page is used)&#10;     $name - (string) Name of the signature;;d84,13448;;b1,0;;m $x;;p $y;;p $w;;p $h;;p $page;;p $name;;p">
</treenode>
<treenode node="setSpacesRE;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2322;2;2338;;;;vpos;;v;;r&#10;Definition&#10;    setSpacesRE($re=&apos;/[^\S\xa0]/&apos;)&#10;&#10;Description&#10;     Set regular expression to detect withespaces or word separators. The pattern delimiter must be the forward-slash character &quot;/&quot;. Some example patterns are: &lt;pre&gt; Non-Unicode or missing PCRE unicode support: &quot;/[^\S\xa0]/&quot; Unicode and PCRE unicode support: &quot;/(?!\xa0)[\s\p{Z}]/u&quot; Unicode and PCRE unicode support in Chinese mode: &quot;/(?!\xa0)[\s\p{Z}\p{Lo}]/u&quot; if PCRE unicode support is turned ON (&quot;\P&quot; is the negate class of &quot;\p&quot;): \s     : any whitespace character \p{Z}  : any separator \p{Lo} : Unicode letter or ideograph that does not have lowercase and uppercase variants. Is used to chunk chinese words. \xa0   : Unicode Character &apos;NO-BREAK SPACE&apos; (U+00A0) &lt;/pre&gt;&#10;&#10;Parameters:&#10;     $re - (string) regular expression (leave empty for default);;d48,2322;;b1,0;;m $re;;p">
</treenode>
<treenode node="setSpotColor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3731;2;3767;;;;vpos;;v;;r&#10;Definition&#10;    setSpotColor($type, $name, $tint=100)&#10;&#10;Description&#10;     Set the spot color for the specified type (&apos;draw&apos;, &apos;fill&apos;, &apos;text&apos;).&#10;&#10;Parameters:&#10;     $type - (string) Type of object affected by this color: (&apos;draw&apos;, &apos;fill&apos;, &apos;text&apos;)&#10;     $name - (string) Name of the spot color&#10;     $tint - (float) Intensity of the color (from 0 to 100 ;s 100 = full intensity by default);;d55,3731;;b1,0;;m $type;;p $name;;p $tint;;p">
</treenode>
<treenode node="setSRGBmode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2844;2;2846;;;;vpos;;v;;r&#10;Definition&#10;    setSRGBmode($mode=false)&#10;&#10;Description&#10;     Set flag to force sRGB_IEC61966-2.1 black scaled ICC color profile for the whole document.&#10;&#10;Parameters:&#10;     $mode - (boolean) If true force sRGB output intent;;d42,2844;;b1,0;;m $mode;;p">
</treenode>
<treenode node="setStartingPageNumber;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13570;2;13572;;;;vpos;;v;;r&#10;Definition&#10;    setStartingPageNumber($num=1)&#10;&#10;Description&#10;     Set the starting page number.&#10;&#10;Parameters:&#10;     $num - (int) Starting page number;;d47,13570;;b1,0;;m $num;;p">
</treenode>
<treenode node="SetSubject;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2877;2;2879;;;;vpos;;v;;r&#10;Definition&#10;    SetSubject($subject)&#10;&#10;Description&#10;     Defines the subject of the document.&#10;&#10;Parameters:&#10;     $subject - (string) The subject;;d38,2877;;b1,0;;m $subject;;p">
</treenode>
<treenode node="setSVGStyles;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;23032;2;23307;;;;vpos;;vobject;;r&#10;Definition&#10;    setSVGStyles($svgstyle, $prevsvgstyle, $x=0, $y=0, $w=1, $h=1, $clip_function=&apos;&apos;, $clip_params=array())&#10;&#10;Description&#10;     Apply the requested SVG styles (*** TO BE COMPLETED ***)&#10;&#10;Parameters:&#10;     $svgstyle - (array) array of SVG styles to apply&#10;     $prevsvgstyle - (array) array of previous SVG style&#10;     $x - (int) X origin of the bounding box&#10;     $y - (int) Y origin of the bounding box&#10;     $w - (int) width of the bounding box&#10;     $h - (int) height of the bounding box&#10;     $clip_function - (string) clip function&#10;     $clip_params - (array) array of parameters for clipping function&#10;&#10;Return:&#10;   style;;d124,23032;;b2,0;;m $svgstyle;;p $prevsvgstyle;;p $x;;p $y;;p $w;;p $h;;p $clip_function;;p $clip_params;;p">
</treenode>
<treenode node="setTableHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;3621;2;3679;;;;vpos;;v;;r&#10;Definition&#10;    setTableHeader()&#10;&#10;Description&#10;     This method is used to render the table header on new page (if any).;;d37,3621;;b2,0;;m">
</treenode>
<treenode node="setTempRTL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2373;2;2397;;;;vpos;;v;;r&#10;Definition&#10;    setTempRTL($mode)&#10;&#10;Description&#10;     Force temporary RTL language direction&#10;&#10;Parameters:&#10;     $mode - (mixed) can be false, &apos;L&apos; for LTR or &apos;R&apos; for RTL;;d35,2373;;b1,0;;m $mode;;p">
</treenode>
<treenode node="SetTextColor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4015;2;4017;;;;vpos;;v;;r&#10;Definition&#10;    SetTextColor($col1=0, $col2=-1, $col3=-1, $col4=-1, $ret=false, $name=&apos;&apos;)&#10;&#10;Description&#10;     Defines the color used for text. It can be expressed in RGB components or gray scale. The method can be called before the first page is created and the value is retained from page to page.&#10;&#10;Parameters:&#10;     $col1 - (float) GRAY level for single color, or Red color for RGB (0-255), or CYAN color for CMYK (0-100)&#10;     $col2 - (float) GREEN color for RGB (0-255), or MAGENTA color for CMYK (0-100)&#10;     $col3 - (float) BLUE color for RGB (0-255), or YELLOW color for CMYK (0-100)&#10;     $col4 - (float) KEY (BLACK) color for CMYK (0-100)&#10;     $ret - (boolean) If true do not send the command&#10;     $name - (string) Spot color name (if any);;d91,4015;;b1,0;;m $col1;;p $col2;;p $col3;;p $col4;;p $ret;;p $name;;p">
</treenode>
<treenode node="SetTextColorArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3874;2;3876;;;;vpos;;v;;r&#10;Definition&#10;    SetTextColorArray($color, $ret=false)&#10;&#10;Description&#10;     Defines the color used for text. It can be expressed in RGB components or gray scale. The method can be called before the first page is created and the value is retained from page to page.&#10;&#10;Parameters:&#10;     $color - (array) Array of colors (1, 3 or 4 values)&#10;     $ret - (boolean) If true do not send the PDF command;;d55,3874;;b1,0;;m $color;;p $ret;;p">
</treenode>
<treenode node="setTextRenderingMode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;21832;2;21879;;;;vpos;;v;;r&#10;Definition&#10;    setTextRenderingMode($stroke=0, $fill=true, $clip=false)&#10;&#10;Description&#10;     Set Text rendering mode.&#10;&#10;Parameters:&#10;     $stroke - (int) outline size in user units (0 = disable)&#10;     $fill - (boolean) if true fills the text (default)&#10;     $clip - (boolean) if true activate clipping mode;;d74,21832;;b1,0;;m $stroke;;p $fill;;p $clip;;p">
</treenode>
<treenode node="setTextShadow;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;21887;2;21921;;;;vpos;;v;;r&#10;Definition&#10;    setTextShadow($params=array(&apos;enabled&apos;=&gt;false, &apos;depth_w&apos;=&gt;0, &apos;depth_h&apos;=&gt;0, &apos;color&apos;=&gt;false, &apos;opacity&apos;=&gt;1, &apos;blend_mode&apos;=&gt;&apos;Normal&apos;))&#10;&#10;Description&#10;     Set parameters for drop shadow effect for text.&#10;&#10;Parameters:&#10;     $params - (array) Array of parameters: enabled (boolean) set to true to enable shadow;s depth_w (float) shadow width in user units;s depth_h (float) shadow height in user units;s color (array) shadow color or false to use the stroke color;s opacity (float) Alpha value: real value from 0 (transparent) to 1 (opaque);s blend_mode (string) blend mode, one of the following: Normal, Multiply, Screen, Overlay, Darken, Lighten, ColorDodge, ColorBurn, HardLight, SoftLight, Difference, Exclusion, Hue, Saturation, Color, Luminosity;;d146,21887;;b1,0;;m $params;;p">
</treenode>
<treenode node="SetTextSpotColor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3801;2;3803;;;;vpos;;v;;r&#10;Definition&#10;    SetTextSpotColor($name, $tint=100)&#10;&#10;Description&#10;     Defines the spot color used for text.&#10;&#10;Parameters:&#10;     $name - (string) Name of the spot color&#10;     $tint - (int) Intensity of the color (from 0 to 100 ;s 100 = full intensity by default);;d52,3801;;b1,0;;m $name;;p $tint;;p">
</treenode>
<treenode node="setTimeStamp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13514;2;13531;;;;vpos;;v;;r&#10;Definition&#10;    setTimeStamp($tsa_host=&apos;&apos;, $tsa_username=&apos;&apos;, $tsa_password=&apos;&apos;, $tsa_cert=&apos;&apos;)&#10;&#10;Description&#10;     Enable document timestamping (requires the OpenSSL Library). The trusted timestamping improve document security that means that no one should be able to change the document once it has been recorded. Use with digital signature only!&#10;&#10;Parameters:&#10;     $tsa_host - (string) Time Stamping Authority (TSA) server (prefixed with &apos;https://&apos;)&#10;     $tsa_username - (string) Specifies the username for TSA authorization (optional) OR specifies the TSA authorization PEM file (see: example_66&#10;     $tsa_password - (string) Specifies the password for TSA authorization (optional)&#10;     $tsa_cert - (string) Specifies the location of TSA certificate for authorization (optional for cURL);;d94,13514;;b1,0;;m $tsa_host;;p $tsa_username;;p $tsa_password;;p $tsa_cert;;p">
</treenode>
<treenode node="SetTitle;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2866;2;2868;;;;vpos;;v;;r&#10;Definition&#10;    SetTitle($title)&#10;&#10;Description&#10;     Defines the title of the document.&#10;&#10;Parameters:&#10;     $title - (string) The title;;d34,2866;;b1,0;;m $title;;p">
</treenode>
<treenode node="SetTopMargin;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;2597;2;2603;;;;vpos;;v;;r&#10;Definition&#10;    SetTopMargin($margin)&#10;&#10;Description&#10;     Defines the top margin. The method can be called before creating the first page.&#10;&#10;Parameters:&#10;     $margin - (float) The margin;;d39,2597;;b1,0;;m $margin;;p">
</treenode>
<treenode node="setUserRights;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13374;2;13392;;;;vpos;;v;;r&#10;Definition&#10;    setUserRights(&#10;   $enable=true,&#10;   $document=&apos;/FullSave&apos;,&#10;   $annots=&apos;/Create/Delete/Modify/Copy/Import/Export&apos;,&#10;   $form=&apos;/Add/Delete/FillIn/Import/Export/SubmitStandalone/SpawnTemplate&apos;,&#10;   $signature=&apos;/Modify&apos;,&#10;   $ef=&apos;/Create/Delete/Modify/Import&apos;,&#10;   $formex=&apos;&apos;)&#10;&#10;Description&#10;     Set User&apos;s Rights for PDF Reader WARNING: This is experimental and currently do not work. Check the PDF Reference 8.7.1 Transform Methods, Table 8.105 Entries in the UR transform parameters dictionary&#10;&#10;Parameters:&#10;     $enable - (boolean) if true enable user&apos;s rights on PDF reader&#10;     $document - (string) Names specifying additional document-wide usage rights for the document&#10;     $annots - (string) Names specifying additional annotation-related usage rights for the document&#10;     $form - (string) Names specifying additional form-field-related usage rights for the document&#10;     $signature - (string) Names specifying additional signature-related usage rights for the document&#10;     $ef - (string) Names specifying additional usage rights for named embedded files in the document&#10;     $formex - (string) Names specifying additional form-field-related usage rights;;d15,13381;;b1,0;;m $enable;;p $document;;p $annots;;p $form;;p $signature;;p $ef;;p $formex;;p">
</treenode>
<treenode node="setViewerPreferences;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;14008;2;14010;;;;vpos;;v;;r&#10;Definition&#10;    setViewerPreferences($preferences)&#10;&#10;Description&#10;     Set the viewer preferences dictionary controlling the way the document is to be presented on the screen or in print. (see Section 8.1 of PDF reference, &quot;Viewer Preferences&quot;). &lt;ul&gt;&lt;li&gt;HideToolbar boolean (Optional) A flag specifying whether to hide the viewer application&apos;s tool bars when the document is active. Default value: false.&lt;/li&gt;&lt;li&gt;HideMenubar boolean (Optional) A flag specifying whether to hide the viewer application&apos;s menu bar when the document is active. Default value: false.&lt;/li&gt;&lt;li&gt;HideWindowUI boolean (Optional) A flag specifying whether to hide user interface elements in the document&apos;s window (such as scroll bars and navigation controls), leaving only the document&apos;s contents displayed. Default value: false.&lt;/li&gt;&lt;li&gt;FitWindow boolean (Optional) A flag specifying whether to resize the document&apos;s window to fit the size of the first displayed page. Default value: false.&lt;/li&gt;&lt;li&gt;CenterWindow boolean (Optional) A flag specifying whether to position the document&apos;s window in the center of the screen. Default value: false.&lt;/li&gt;&lt;li&gt;DisplayDocTitle boolean (Optional;s PDF 1.4) A flag specifying whether the window&apos;s title bar should display the document title taken from the Title entry of the document information dictionary (see Section 10.2.1, &quot;Document Information Dictionary&quot;). If false, the title bar should instead display the name of the PDF file containing the document. Default value: false.&lt;/li&gt;&lt;li&gt;NonFullScreenPageMode name (Optional) The document&apos;s page mode, specifying how to display the document on exiting full-screen mode:&lt;ul&gt;&lt;li&gt;UseNone Neither document outline nor thumbnail images visible&lt;/li&gt;&lt;li&gt;UseOutlines Document outline visible&lt;/li&gt;&lt;li&gt;UseThumbs Thumbnail images visible&lt;/li&gt;&lt;li&gt;UseOC Optional content group panel visible&lt;/li&gt;&lt;/ul&gt;This entry is meaningful only if the value of the PageMode entry in the catalog dictionary (see Section 3.6.1, &quot;Document Catalog&quot;) is FullScreen;s it is ignored otherwise. Default value: UseNone.&lt;/li&gt;&lt;li&gt;ViewArea name (Optional;s PDF 1.4) The name of the page boundary representing the area of a page to be displayed when viewing the document on the screen. Valid values are (see Section 10.10.1, &quot;Page Boundaries&quot;).:&lt;ul&gt;&lt;li&gt;MediaBox&lt;/li&gt;&lt;li&gt;CropBox (default)&lt;/li&gt;&lt;li&gt;BleedBox&lt;/li&gt;&lt;li&gt;TrimBox&lt;/li&gt;&lt;li&gt;ArtBox&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;ViewClip name (Optional;s PDF 1.4) The name of the page boundary to which the contents of a page are to be clipped when viewing the document on the screen. Valid values are (see Section 10.10.1, &quot;Page Boundaries&quot;).:&lt;ul&gt;&lt;li&gt;MediaBox&lt;/li&gt;&lt;li&gt;CropBox (default)&lt;/li&gt;&lt;li&gt;BleedBox&lt;/li&gt;&lt;li&gt;TrimBox&lt;/li&gt;&lt;li&gt;ArtBox&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;PrintArea name (Optional;s PDF 1.4) The name of the page boundary representing the area of a page to be rendered when printing the document. Valid values are (see Section 10.10.1, &quot;Page Boundaries&quot;).:&lt;ul&gt;&lt;li&gt;MediaBox&lt;/li&gt;&lt;li&gt;CropBox (default)&lt;/li&gt;&lt;li&gt;BleedBox&lt;/li&gt;&lt;li&gt;TrimBox&lt;/li&gt;&lt;li&gt;ArtBox&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;PrintClip name (Optional;s PDF 1.4) The name of the page boundary to which the contents of a page are to be clipped when printing the document. Valid values are (see Section 10.10.1, &quot;Page Boundaries&quot;).:&lt;ul&gt;&lt;li&gt;MediaBox&lt;/li&gt;&lt;li&gt;CropBox (default)&lt;/li&gt;&lt;li&gt;BleedBox&lt;/li&gt;&lt;li&gt;TrimBox&lt;/li&gt;&lt;li&gt;ArtBox&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;PrintScaling name (Optional;s PDF 1.6) The page scaling option to be selected when a print dialog is displayed for this document. Valid values are: &lt;ul&gt;&lt;li&gt;None, which indicates that the print dialog should reflect no page scaling&lt;/li&gt;&lt;li&gt;AppDefault (default), which indicates that applications should use the current print scaling&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Duplex name (Optional;s PDF 1.7) The paper handling option to use when printing the file from the print dialog. The following values are valid:&lt;ul&gt;&lt;li&gt;Simplex - Print single-sided&lt;/li&gt;&lt;li&gt;DuplexFlipShortEdge - Duplex and flip on the short edge of the sheet&lt;/li&gt;&lt;li&gt;DuplexFlipLongEdge - Duplex and flip on the long edge of the sheet&lt;/li&gt;&lt;/ul&gt;Default value: none&lt;/li&gt;&lt;li&gt;PickTrayByPDFSize boolean (Optional;s PDF 1.7) A flag specifying whether the PDF page size is used to select the input paper tray. This setting influences only the preset values used to populate the print dialog presented by a PDF viewer application. If PickTrayByPDFSize is true, the check box in the print dialog associated with input paper tray is checked. Note: This setting has no effect on Mac OS systems, which do not provide the ability to pick the input tray by size.&lt;/li&gt;&lt;li&gt;PrintPageRange array (Optional;s PDF 1.7) The page numbers used to initialize the print dialog box when the file is printed. The first page of the PDF file is denoted by 1. Each pair consists of the first and last pages in the sub-range. An odd number of integers causes this entry to be ignored. Negative numbers cause the entire array to be ignored. Default value: as defined by PDF viewer application&lt;/li&gt;&lt;li&gt;NumCopies integer (Optional;s PDF 1.7) The number of copies to be printed when the print dialog is opened for this file. Supported values are the integers 2 through 5. Values outside this range are ignored. Default value: as defined by PDF viewer application, but typically 1&lt;/li&gt;&lt;/ul&gt;&#10;&#10;Parameters:&#10;     $preferences - (array) array of options;;d52,14008;;b1,0;;m $preferences;;p">
</treenode>
<treenode node="setVisibility;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13761;2;13785;;;;vpos;;v;;r&#10;Definition&#10;    setVisibility($v)&#10;&#10;Description&#10;     Set the visibility of the successive elements. This can be useful, for instance, to put a background image or color that will show on screen but won&apos;t print.&#10;&#10;Parameters:&#10;     $v - (string) visibility mode;;d35,13761;;b1,0;;m $v;;p">
</treenode>
<treenode node="SetX;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;7436;2;7457;;;;vpos;;v;;r&#10;Definition&#10;    SetX($x, $rtloff=false)&#10;&#10;Description&#10;     Defines the abscissa of the current position. If the passed value is negative, it is relative to the right of the page (or left if language is RTL).&#10;&#10;Parameters:&#10;     $x - (float) The value of the abscissa in user units&#10;     $rtloff - (boolean) if true always uses the page top-left corner as origin of axis;;d41,7436;;b1,0;;m $x;;p $rtloff;;p">
</treenode>
<treenode node="SetXY;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;7502;2;7505;;;;vpos;;v;;r&#10;Definition&#10;    SetXY($x, $y, $rtloff=false)&#10;&#10;Description&#10;     Defines the abscissa and ordinate of the current position. If the passed values are negative, they are relative respectively to the right and bottom of the page.&#10;&#10;Parameters:&#10;     $x - (float) The value of the abscissa&#10;     $y - (float) The value of the ordinate&#10;     $rtloff - (boolean) if true always uses the page top-left corner as origin of axis;;d46,7502;;b1,0;;m $x;;p $y;;p $rtloff;;p">
</treenode>
<treenode node="SetY;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;7469;2;7490;;;;vpos;;v;;r&#10;Definition&#10;    SetY($y, $resetx=true, $rtloff=false)&#10;&#10;Description&#10;     Moves the current abscissa back to the left margin and sets the ordinate. If the passed value is negative, it is relative to the bottom of the page.&#10;&#10;Parameters:&#10;     $y - (float) The value of the ordinate in user units&#10;     $resetx - (bool) if true (default) reset the X position&#10;     $rtloff - (boolean) if true always uses the page top-left corner as origin of axis;;d55,7469;;b1,0;;m $y;;p $resetx;;p $rtloff;;p">
</treenode>
<treenode node="Skew;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11213;2;11235;;;;vpos;;v;;r&#10;Definition&#10;    Skew($angle_x, $angle_y, $x=&apos;&apos;, $y=&apos;&apos;)&#10;&#10;Description&#10;     Skew.&#10;&#10;Parameters:&#10;     $angle_x - (float) angle in degrees between -90 (skew to the left) and 90 (skew to the right)&#10;     $angle_y - (float) angle in degrees between -90 (skew to the bottom) and 90 (skew to the top)&#10;     $x - (int) abscissa of the skewing center&#10;     $y - (int) ordinate of the skewing center;;d56,11213;;b1,0;;m $angle_x;;p $angle_y;;p $x;;p $y;;p">
</treenode>
<treenode node="SkewX;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11186;2;11188;;;;vpos;;v;;r&#10;Definition&#10;    SkewX($angle_x, $x=&apos;&apos;, $y=&apos;&apos;)&#10;&#10;Description&#10;     Skew horizontally.&#10;&#10;Parameters:&#10;     $angle_x - (float) angle in degrees between -90 (skew to the left) and 90 (skew to the right)&#10;     $x - (int) abscissa of the skewing center&#10;     $y - (int) ordinate of the skewing center;;d47,11186;;b1,0;;m $angle_x;;p $x;;p $y;;p">
</treenode>
<treenode node="SkewY;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11199;2;11201;;;;vpos;;v;;r&#10;Definition&#10;    SkewY($angle_y, $x=&apos;&apos;, $y=&apos;&apos;)&#10;&#10;Description&#10;     Skew vertically.&#10;&#10;Parameters:&#10;     $angle_y - (float) angle in degrees between -90 (skew to the bottom) and 90 (skew to the top)&#10;     $x - (int) abscissa of the skewing center&#10;     $y - (int) ordinate of the skewing center;;d47,11199;;b1,0;;m $angle_y;;p $x;;p $y;;p">
</treenode>
<treenode node="sortBookmarks;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;12346;2;12356;;;;vpos;;v;;r&#10;Definition&#10;    sortBookmarks()&#10;&#10;Description&#10;     Sort bookmarks for page and key.;;d36,12346;;b2,0;;m">
</treenode>
<treenode node="StarPolygon;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;12007;2;12033;;;;vpos;;v;;r&#10;Definition&#10;    StarPolygon($x0, $y0, $r, $nv, $ng, $angle=0, $draw_circle=false, $style=&apos;&apos;, $line_style=array(), $fill_color=array(), $circle_style=&apos;&apos;, $circle_outLine_style=array(), $circle_fill_color=array())&#10;&#10;Description&#10;     Draws a star polygon&#10;&#10;Parameters:&#10;     $x0 - (float) Abscissa of center point&#10;     $y0 - (float) Ordinate of center point&#10;     $r - (float) Radius of inscribed circle&#10;     $nv - (integer) Number of vertices&#10;     $ng - (integer) Number of gap (if ($ng % $nv = 1) then is a regular polygon)&#10;     $angle - : (float) Angle oriented (anti-clockwise)&#10;     $draw_circle - : (boolean) Draw inscribed circle or not&#10;     $style - (string) Style of rendering&#10;     $line_style - (array) Line style of polygon sides&#10;     $fill_color - (array) Fill color&#10;     $circle_style - (string) Style of rendering of inscribed circle (if draws)&#10;     $circle_outLine_style - (array) Line style of inscribed circle (if draws)&#10;     $circle_fill_color - (array) Fill color of inscribed circle (if draws);;d213,12007;;b1,0;;m $x0;;p $y0;;p $r;;p $nv;;p $ng;;p $angle;;p $draw_circle;;p $style;;p $line_style;;p $fill_color;;p $circle_style;;p $circle_outLine_style;;p $circle_fill_color;;p">
</treenode>
<treenode node="startLayer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13722;2;13735;;;;vpos;;v;;r&#10;Definition&#10;    startLayer($name=&apos;&apos;, $print=true, $view=true, $lock=true)&#10;&#10;Description&#10;     Start a new pdf layer.&#10;&#10;Parameters:&#10;     $name - (string) Layer name (only a-z letters and numbers)&#10;     $print - (boolean|null) Set to TRUE to print this layer, FALSE to not print and NULL to not set this option&#10;     $view - (boolean) Set to true to view this layer&#10;     $lock - (boolean) If true lock the layer;;d75,13722;;b1,0;;m $name;;p $print;;p $view;;p $lock;;p">
</treenode>
<treenode node="startPage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;3151;2;3212;;;;vpos;;v;;r&#10;Definition&#10;    startPage($orientation=&apos;&apos;, $format=&apos;&apos;, $tocpage=false)&#10;&#10;Description&#10;     Starts a new page to the document. The page must be closed using the endPage() function. The origin of the coordinate system is at the top-left corner and increasing ordinates go downwards.&#10;&#10;Parameters:&#10;     $orientation - (string) page orientation&#10;     $format - (mixed) The format used for pages&#10;     $tocpage - (boolean) if true the page is designated to contain the Table-Of-Content;;d72,3151;;b1,0;;m $orientation;;p $format;;p $tocpage;;p">
</treenode>
<treenode node="startPageGroup;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;13557;2;13562;;;;vpos;;v;;r&#10;Definition&#10;    startPageGroup($page=&apos;&apos;)&#10;&#10;Description&#10;     Create a new page group. NOTE: call this function before calling AddPage()&#10;&#10;Parameters:&#10;     $page - (int) starting group page (leave empty for next page);;d42,13557;;b1,0;;m $page;;p">
</treenode>
<treenode node="startSVGElementHandler;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;23702;2;24359;;;;vpos;;v;;r&#10;Definition&#10;    startSVGElementHandler($parser, $name, $attribs, $ctm=array())&#10;&#10;Description&#10;     Sets the opening SVG element handler function for the XML parser. (*** TO BE COMPLETED ***)&#10;&#10;Parameters:&#10;     $parser - (resource) The first parameter, parser, is a reference to the XML parser calling the handler&#10;     $name - (string) The second parameter, name, contains the name of the element for which this handler is called&#10;     $attribs - (array) The third parameter, attribs, contains an associative array with the element&apos;s attributes (if any)&#10;     $ctm - (array) tranformation matrix for clipping mode (starting transformation matrix);;d83,23702;;b2,0;;m $parser;;p $name;;p $attribs;;p $ctm;;p">
</treenode>
<treenode node="startTemplate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22225;2;22278;;;;vpos;;vint;;r&#10;Definition&#10;    startTemplate($w=0, $h=0, $group=false)&#10;&#10;Description&#10;     Start a new XObject Template. An XObject Template is a PDF block that is a self-contained description of any sequence of graphics objects (including path objects, text objects, and sampled images). An XObject Template may be painted multiple times, either on several pages or at several locations on the same page and produces the same results each time, subject only to the graphics state at the time it is invoked. Note: X,Y coordinates will be reset to 0,0.&#10;&#10;Parameters:&#10;     $w - (int) Template width in user units (empty string or zero = page width less margins)&#10;     $h - (int) Template height in user units (empty string or zero = page height less margins)&#10;     $group - (mixed) Set transparency group&#10;&#10;Return:&#10;   the XObject Template ID in case of success or false in case of error;;d57,22225;;b1,0;;m $w;;p $h;;p $group;;p">
</treenode>
<treenode node="startTransaction;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;21617;2;21627;;;;vpos;;v;;r&#10;Definition&#10;    startTransaction()&#10;&#10;Description&#10;     Stores a copy of the current TCPDF object used for undo operation.;;d36,21617;;b1,0;;m">
</treenode>
<treenode node="StartTransform;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;10942;2;10955;;;;vpos;;v;;r&#10;Definition&#10;    StartTransform()&#10;&#10;Description&#10;     Starts a 2D tranformation saving current graphic state. This function must be called before scaling, mirroring, translation, rotation and skewing. Use StartTransform() before, and StopTransform() after the transformations to restore the normal behavior.;;d34,10942;;b1,0;;m">
</treenode>
<treenode node="StopTransform;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;10965;2;10980;;;;vpos;;v;;r&#10;Definition&#10;    StopTransform()&#10;&#10;Description&#10;     Stops a 2D tranformation restoring previous graphic state. This function must be called after scaling, mirroring, translation, rotation and skewing. Use StartTransform() before, and StopTransform() after the transformations to restore the normal behavior.;;d33,10965;;b1,0;;m">
</treenode>
<treenode node="stringLeftTrim;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22130;2;22132;;;;vpos;;vleft;;r&#10;Definition&#10;    stringLeftTrim($str, $replace=&apos;&apos;)&#10;&#10;Description&#10;     Left trim the input string&#10;&#10;Parameters:&#10;     $str - (string) string to trim&#10;     $replace - (string) string that replace spaces&#10;&#10;Return:&#10;   trimmed string;;d51,22130;;b1,0;;m $str;;p $replace;;p">
</treenode>
<treenode node="stringRightTrim;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22143;2;22145;;;;vpos;;vright;;r&#10;Definition&#10;    stringRightTrim($str, $replace=&apos;&apos;)&#10;&#10;Description&#10;     Right trim the input string&#10;&#10;Parameters:&#10;     $str - (string) string to trim&#10;     $replace - (string) string that replace spaces&#10;&#10;Return:&#10;   trimmed string;;d52,22143;;b1,0;;m $str;;p $replace;;p">
</treenode>
<treenode node="stringTrim;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;22156;2;22160;;;;vpos;;vtrimmed;;r&#10;Definition&#10;    stringTrim($str, $replace=&apos;&apos;)&#10;&#10;Description&#10;     Trim the input string&#10;&#10;Parameters:&#10;     $str - (string) string to trim&#10;     $replace - (string) string that replace spaces&#10;&#10;Return:&#10;   string;;d47,22156;;b1,0;;m $str;;p $replace;;p">
</treenode>
<treenode node="SVGPath;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;23327;2;23677;;;;vpos;;varray;;r&#10;Definition&#10;    SVGPath($d, $style=&apos;&apos;)&#10;&#10;Description&#10;     Draws an SVG path&#10;&#10;Parameters:&#10;     $d - (string) attribute d of the path SVG element&#10;     $style - (string) Style of rendering&#10;&#10;Return:&#10;   of container box measures (x, y, w, h);;d43,23327;;b2,0;;m $d;;p $style;;p">
</treenode>
<treenode node="SVGTransform;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;23013;2;23015;;;;vpos;;v;;r&#10;Definition&#10;    SVGTransform($tm)&#10;&#10;Description&#10;     Apply SVG graphic transformation matrix.&#10;&#10;Parameters:&#10;     $tm - (array) original SVG transformation matrix;;d38,23013;;b2,0;;m $tm;;p">
</treenode>
<treenode node="swapMargins;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;20174;2;20184;;;;vpos;;v;;r&#10;Definition&#10;    swapMargins($reverse=true)&#10;&#10;Description&#10;     Swap the left and right margins.&#10;&#10;Parameters:&#10;     $reverse - (boolean) if true swap left and right margins;;d47,20174;;b2,0;;m $reverse;;p">
</treenode>
<treenode node="Text;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;4892;2;4901;;;;vpos;;v;;r&#10;Definition&#10;    Text($x, $y, $txt, $fstroke=false, $fclip=false, $ffill=true, $border=0, $ln=0, $align=&apos;&apos;, $fill=false, $link=&apos;&apos;, $stretch=0, $ignore_min_height=false, $calign=&apos;T&apos;, $valign=&apos;M&apos;, $rtloff=false)&#10;&#10;Description&#10;     Prints a text cell at the specified position. This method allows to place a string precisely on the page.&#10;&#10;Parameters:&#10;     $x - (float) Abscissa of the cell origin&#10;     $y - (float) Ordinate of the cell origin&#10;     $txt - (string) String to print&#10;     $fstroke - (int) outline size in user units (false = disable)&#10;     $fclip - (boolean) if true activate clipping mode (you must call StartTransform() before this function and StopTransform() to stop the clipping tranformation)&#10;     $ffill - (boolean) if true fills the text&#10;     $border - (mixed) Indicates if borders must be drawn around the cell&#10;     $ln - (int) Indicates where the current position should go after the call&#10;     $align - (string) Allows to center or align the text&#10;     $fill - (boolean) Indicates if the cell background must be painted (true) or transparent (false)&#10;     $link - (mixed) URL or identifier returned by AddLink()&#10;     $stretch - (int) font stretch mode: &lt;ul&gt;&lt;li&gt;0 = disabled&lt;/li&gt;&lt;li&gt;1 = horizontal scaling only if text is larger than cell width&lt;/li&gt;&lt;li&gt;2 = forced horizontal scaling to fit cell width&lt;/li&gt;&lt;li&gt;3 = character spacing only if text is larger than cell width&lt;/li&gt;&lt;li&gt;4 = forced character spacing to fit cell width&lt;/li&gt;&lt;/ul&gt; General font stretching and scaling values will be preserved when possible&#10;     $ignore_min_height - (boolean) if true ignore automatic minimum height value&#10;     $calign - (string) cell vertical alignment relative to the specified Y value&#10;     $valign - (string) text vertical alignment inside the cell&#10;     $rtloff - (boolean) if true uses the page top-left corner as origin of axis for $x and $y initial position;;d210,4892;;b1,0;;m $x;;p $y;;p $txt;;p $fstroke;;p $fclip;;p $ffill;;p $border;;p $ln;;p $align;;p $fill;;p $link;;p $stretch;;p $ignore_min_height;;p $calign;;p $valign;;p $rtloff;;p">
</treenode>
<treenode node="TextField;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;12642;2;12746;;;;vpos;;v;;r&#10;Definition&#10;    TextField($name, $w, $h, $prop=array(), $opt=array(), $x=&apos;&apos;, $y=&apos;&apos;, $js=false)&#10;&#10;Description&#10;     Creates a text field&#10;&#10;Parameters:&#10;     $name - (string) field name&#10;     $w - (float) Width of the rectangle&#10;     $h - (float) Height of the rectangle&#10;     $prop - (array) javascript field properties&#10;     $opt - (array) annotation parameters&#10;     $x - (float) Abscissa of the upper-left corner of the rectangle&#10;     $y - (float) Ordinate of the upper-left corner of the rectangle&#10;     $js - (boolean) if true put the field using JavaScript (requires Acrobat Writer to be rendered);;d96,12642;;b1,0;;m $name;;p $w;;p $h;;p $prop;;p $opt;;p $x;;p $y;;p $js;;p">
</treenode>
<treenode node="Transform;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;11244;2;11262;;;;vpos;;v;;r&#10;Definition&#10;    Transform($tm)&#10;&#10;Description&#10;     Apply graphic transformations.&#10;&#10;Parameters:&#10;     $tm - (array) transformation matrix;;d35,11244;;b2,0;;m $tm;;p">
</treenode>
<treenode node="Translate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11134;2;11145;;;;vpos;;v;;r&#10;Definition&#10;    Translate($t_x, $t_y)&#10;&#10;Description&#10;     Translate graphic object horizontally and vertically.&#10;&#10;Parameters:&#10;     $t_x - (int) movement to the right&#10;     $t_y - (int) movement to the bottom;;d39,11134;;b1,0;;m $t_x;;p $t_y;;p">
</treenode>
<treenode node="TranslateX;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11111;2;11113;;;;vpos;;v;;r&#10;Definition&#10;    TranslateX($t_x)&#10;&#10;Description&#10;     Translate graphic object horizontally.&#10;&#10;Parameters:&#10;     $t_x - (int) movement to the right (or left for RTL);;d34,11111;;b1,0;;m $t_x;;p">
</treenode>
<treenode node="TranslateY;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;11122;2;11124;;;;vpos;;v;;r&#10;Definition&#10;    TranslateY($t_y)&#10;&#10;Description&#10;     Translate graphic object vertically.&#10;&#10;Parameters:&#10;     $t_y - (int) movement to the bottom;;d34,11122;;b1,0;;m $t_y;;p">
</treenode>
<treenode node="unhtmlentities;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;10424;2;10426;;;;vpos;;vstring;;r&#10;Definition&#10;    unhtmlentities($text_to_convert)&#10;&#10;Description&#10;     Reverse function for htmlentities. Convert entities in UTF-8.&#10;&#10;Parameters:&#10;     $text_to_convert - (string) Text to convert&#10;&#10;Return:&#10;   converted text string;;d50,10424;;b1,0;;m $text_to_convert;;p">
</treenode>
<treenode node="unserializeTCPDFtagParameters;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f11;17069;2;17076;;;;vpos;;varray;;r&#10;Definition&#10;    unserializeTCPDFtagParameters($data)&#10;&#10;Description&#10;     Unserialize parameters to be used with TCPDF tag in HTML code.&#10;&#10;Parameters:&#10;     $data - (string) serialized data&#10;&#10;Return:&#10;   containing unserialized data;;d57,17069;;b2,0;;m $data;;p">
</treenode>
<treenode node="Write;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;6277;2;6701;;;;vpos;;vmixed;;r&#10;Definition&#10;    Write($h, $txt, $link=&apos;&apos;, $fill=false, $align=&apos;&apos;, $ln=false, $stretch=0, $firstline=false, $firstblock=false, $maxh=0, $wadj=0, $margin=&apos;&apos;)&#10;&#10;Description&#10;     This method prints text from the current position.&lt;br /&gt;&#10;&#10;Parameters:&#10;     $h - (float) Line height&#10;     $txt - (string) String to print&#10;     $link - (mixed) URL or identifier returned by AddLink()&#10;     $fill - (boolean) Indicates if the cell background must be painted (true) or transparent (false)&#10;     $align - (string) Allows to center or align the text&#10;     $ln - (boolean) if true set cursor at the bottom of the line, otherwise set cursor at the top of the line&#10;     $stretch - (int) font stretch mode: &lt;ul&gt;&lt;li&gt;0 = disabled&lt;/li&gt;&lt;li&gt;1 = horizontal scaling only if text is larger than cell width&lt;/li&gt;&lt;li&gt;2 = forced horizontal scaling to fit cell width&lt;/li&gt;&lt;li&gt;3 = character spacing only if text is larger than cell width&lt;/li&gt;&lt;li&gt;4 = forced character spacing to fit cell width&lt;/li&gt;&lt;/ul&gt; General font stretching and scaling values will be preserved when possible&#10;     $firstline - (boolean) if true prints only the first line and return the remaining string&#10;     $firstblock - (boolean) if true the string is the starting of a line&#10;     $maxh - (float) maximum height&#10;     $wadj - (float) first line width will be reduced by this amount (used in HTML mode)&#10;     $margin - (array) margin array of the parent container&#10;&#10;Return:&#10;   Return the number of cells or the remaining string if $firstline = true;;d157,6277;;b1,0;;m $h;;p $txt;;p $link;;p $fill;;p $align;;p $ln;;p $stretch;;p $firstline;;p $firstblock;;p $maxh;;p $wadj;;p $margin;;p">
</treenode>
<treenode node="write1DBarcode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;15194;2;15486;;;;vpos;;v;;r&#10;Definition&#10;    write1DBarcode($code, $type, $x=&apos;&apos;, $y=&apos;&apos;, $w=&apos;&apos;, $h=&apos;&apos;, $xres=&apos;&apos;, $style=array(), $align=&apos;&apos;)&#10;&#10;Description&#10;     Print a Linear Barcode.&#10;&#10;Parameters:&#10;     $code - (string) code to print&#10;     $type - (string) type of barcode (see tcpdf_barcodes_1d&#10;     $x - (int) x position in user units (empty string = current x position)&#10;     $y - (int) y position in user units (empty string = current y position)&#10;     $w - (int) width in user units (empty string = remaining page width)&#10;     $h - (int) height in user units (empty string = remaining page height)&#10;     $xres - (float) width of the smallest bar in user units (empty string = default value = 0&#10;     $style - (array) array of options:&lt;ul&gt;&#10;     $align - (string) Indicates the alignment of the pointer next to barcode insertion relative to barcode height;;d111,15194;;b1,0;;m $code;;p $type;;p $x;;p $y;;p $w;;p $h;;p $xres;;p $style;;p $align;;p">
</treenode>
<treenode node="write2DBarcode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;15513;2;15721;;;;vpos;;v;;r&#10;Definition&#10;    write2DBarcode($code, $type, $x=&apos;&apos;, $y=&apos;&apos;, $w=&apos;&apos;, $h=&apos;&apos;, $style=array(), $align=&apos;&apos;, $distort=false)&#10;&#10;Description&#10;     Print 2D Barcode.&#10;&#10;Parameters:&#10;     $code - (string) code to print&#10;     $type - (string) type of barcode (see tcpdf_barcodes_2d&#10;     $x - (int) x position in user units&#10;     $y - (int) y position in user units&#10;     $w - (int) width in user units&#10;     $h - (int) height in user units&#10;     $style - (array) array of options:&lt;ul&gt;&#10;     $align - (string) Indicates the alignment of the pointer next to barcode insertion relative to barcode height&#10;     $distort - (boolean) if true distort the barcode to fit width and height, otherwise preserve aspect ratio;;d117,15513;;b1,0;;m $code;;p $type;;p $x;;p $y;;p $w;;p $h;;p $style;;p $align;;p $distort;;p">
</treenode>
<treenode node="writeHTML;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;17117;2;18664;;;;vpos;;v;;r&#10;Definition&#10;    writeHTML($html, $ln=true, $fill=false, $reseth=false, $cell=false, $align=&apos;&apos;)&#10;&#10;Description&#10;     Allows to preserve some HTML formatting (limited support).&lt;br /&gt; IMPORTANT: The HTML must be well formatted - try to clean-up it using an application like HTML-Tidy before submitting. Supported tags are: a, b, blockquote, br, dd, del, div, dl, dt, em, font, h1, h2, h3, h4, h5, h6, hr, i, img, li, ol, p, pre, small, span, strong, sub, sup, table, tcpdf, td, th, thead, tr, tt, u, ul NOTE: all the HTML attributes must be enclosed in double-quote.&#10;&#10;Parameters:&#10;     $html - (string) text to display&#10;     $ln - (boolean) if true add a new line after text (default = true)&#10;     $fill - (boolean) Indicates if the background must be painted (true) or transparent (false)&#10;     $reseth - (boolean) if true reset the last cell height (default false)&#10;     $cell - (boolean) if true add the current left (or right for RTL) padding to each Write (default false)&#10;     $align - (string) Allows to center or align the text;;d96,17117;;b1,0;;m $html;;p $ln;;p $fill;;p $reseth;;p $cell;;p $align;;p">
</treenode>
<treenode node="writeHTMLCell;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf.php;f8;17100;2;17102;;;;vpos;;v;;r&#10;Definition&#10;    writeHTMLCell($w, $h, $x, $y, $html=&apos;&apos;, $border=0, $ln=0, $fill=false, $reseth=true, $align=&apos;&apos;, $autopadding=true)&#10;&#10;Description&#10;     Prints a cell (rectangular area) with optional borders, background color and html text string. The upper-left corner of the cell corresponds to the current position. After the call, the current position moves to the right or to the next line.&lt;br /&gt; If automatic page breaking is enabled and the cell goes beyond the limit, a page break is done before outputting. IMPORTANT: The HTML must be well formatted - try to clean-up it using an application like HTML-Tidy before submitting. Supported tags are: a, b, blockquote, br, dd, del, div, dl, dt, em, font, h1, h2, h3, h4, h5, h6, hr, i, img, li, ol, p, pre, small, span, strong, sub, sup, table, tcpdf, td, th, thead, tr, tt, u, ul NOTE: all the HTML attributes must be enclosed in double-quote.&#10;&#10;Parameters:&#10;     $w - (float) Cell width&#10;     $h - (float) Cell minimum height&#10;     $x - (float) upper-left corner X coordinate&#10;     $y - (float) upper-left corner Y coordinate&#10;     $html - (string) html text to print&#10;     $border - (mixed) Indicates if borders must be drawn around the cell&#10;     $ln - (int) Indicates where the current position should go after the call&#10;     $fill - (boolean) Indicates if the cell background must be painted (true) or transparent (false)&#10;     $reseth - (boolean) if true reset the last cell height (default true)&#10;     $align - (string) Allows to center or align the text&#10;     $autopadding - (boolean) if true, uses internal padding and automatically adjust it to account for line width;;d132,17100;;b1,0;;m $w;;p $h;;p $x;;p $y;;p $html;;p $border;;p $ln;;p $fill;;p $reseth;;p $align;;p $autopadding;;p">
</treenode>
</treenode>
<treenode node="TCPDF_COLORS;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_colors.php;f0;47;1;457;;;;vpos;;v;;r&#10;Definition&#10;    class TCPDF_COLORS&#10;&#10;Description&#10;      class TCPDF_COLORS PHP color class for TCPDF;;d19,47;;b0,0;;m">
<treenode node="_JScolor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_colors.php;f15;445;2;454;;;;vpos;;v;;r&#10;Definition&#10;    _JScolor($color)&#10;&#10;Description&#10;     Convert color to javascript color.&#10;&#10;Parameters:&#10;     $color - (string) color name or &quot;#RRGGBB&quot;;;d41,445;;b1,5;;m $color;;p">
</treenode>
<treenode node="convertHTMLColorToDec;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_colors.php;f15;272;2;405;;;;vpos;;varray;;r&#10;Definition&#10;    convertHTMLColorToDec($hcolor, &amp;$spotc, $defcol=array(&apos;R&apos;=&gt;128,&apos;G&apos;=&gt;128,&apos;B&apos;=&gt;128))&#10;&#10;Description&#10;     Returns an array (RGB or CMYK) from an html color name, or a six-digit (i.e. #3FE5AA), or three-digit (i.e. #7FF) hexadecimal color, or a javascript color array, or javascript color name.&#10;&#10;Parameters:&#10;     $hcolor - (string) HTML color&#10;     $spotc - (array) Reference to an array of spot colors&#10;     $defcol - (array) Color to return in case of error&#10;&#10;Return:&#10;   RGB or CMYK color, or false in case of error;;d107,272;;b1,5;;m $hcolor;;p $spotc;;p $defcol;;p">
</treenode>
<treenode node="getColorStringFromArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_colors.php;f15;414;2;436;;;;vpos;;v;;r&#10;Definition&#10;    getColorStringFromArray($c)&#10;&#10;Description&#10;     Convert a color array into a string representation.&#10;&#10;Parameters:&#10;     $c - (array) Array of colors;;d52,414;;b1,5;;m $c;;p">
</treenode>
<treenode node="getSpotColor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_colors.php;f15;248;2;262;;;;vpos;;v;;r&#10;Definition&#10;    getSpotColor($name, &amp;$spotc)&#10;&#10;Description&#10;     Return the Spot color array.&#10;&#10;Parameters:&#10;     $name - (string) Name of the spot color&#10;     $spotc - (array) Reference to an array of spot colors;;d53,248;;b1,5;;m $name;;p $spotc;;p">
</treenode>
</treenode>
<treenode node="TCPDF_FILTERS;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_filters.php;f0;50;1;476;;;;vpos;;v;;r&#10;Definition&#10;    class TCPDF_FILTERS&#10;&#10;Description&#10;      class TCPDF_FILTERS This is a PHP class for decoding common PDF filters (PDF 32000-2008 - 7.4 Filters).&lt;br&gt;;;d20,50;;b0,0;;m">
<treenode node="decodeFilter;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_filters.php;f15;78;2;125;;;;vpos;;vDecoded;;r&#10;Definition&#10;    decodeFilter($filter, $data)&#10;&#10;Description&#10;     Decode data using the specified filter type.&#10;&#10;Parameters:&#10;     $filter - (string) Filter name&#10;     $data - (string) Data to decode&#10;&#10;Return:&#10;   data string;;d53,78;;b1,5;;m $filter;;p $data;;p">
</treenode>
<treenode node="decodeFilterASCII85Decode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_filters.php;f15;189;2;263;;;;vpos;;vDecoded;;r&#10;Definition&#10;    decodeFilterASCII85Decode($data)&#10;&#10;Description&#10;     ASCII85Decode Decodes data encoded in an ASCII base-85 representation, reproducing the original binary data.&#10;&#10;Parameters:&#10;     $data - (string) Data to decode&#10;&#10;Return:&#10;   data string;;d57,189;;b1,5;;m $data;;p">
</treenode>
<treenode node="decodeFilterASCIIHexDecode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_filters.php;f15;149;2;179;;;;vpos;;vDecoded;;r&#10;Definition&#10;    decodeFilterASCIIHexDecode($data)&#10;&#10;Description&#10;     ASCIIHexDecode Decodes data encoded in an ASCII hexadecimal representation, reproducing the original binary data.&#10;&#10;Parameters:&#10;     $data - (string) Data to decode&#10;&#10;Return:&#10;   data string;;d58,149;;b1,5;;m $data;;p">
</treenode>
<treenode node="decodeFilterCCITTFaxDecode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_filters.php;f15;407;2;410;;;;vpos;;vDecoded;;r&#10;Definition&#10;    decodeFilterCCITTFaxDecode($data)&#10;&#10;Description&#10;     CCITTFaxDecode (NOT IMPLEMETED - RETURN AN EXCEPTION) Decompresses data encoded using the CCITT facsimile standard, reproducing the original data (typically monochrome image data at 1 bit per pixel).&#10;&#10;Parameters:&#10;     $data - (string) Data to decode&#10;&#10;Return:&#10;   data string;;d58,407;;b1,5;;m $data;;p">
</treenode>
<treenode node="decodeFilterCrypt;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_filters.php;f15;459;2;462;;;;vpos;;vDecoded;;r&#10;Definition&#10;    decodeFilterCrypt($data)&#10;&#10;Description&#10;     Crypt (NOT IMPLEMETED - RETURN AN EXCEPTION) Decrypts data encrypted by a security handler, reproducing the data as it was before encryption.&#10;&#10;Parameters:&#10;     $data - (string) Data to decode&#10;&#10;Return:&#10;   data string;;d49,459;;b1,5;;m $data;;p">
</treenode>
<treenode node="decodeFilterDCTDecode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_filters.php;f15;433;2;436;;;;vpos;;vDecoded;;r&#10;Definition&#10;    decodeFilterDCTDecode($data)&#10;&#10;Description&#10;     DCTDecode (NOT IMPLEMETED - RETURN AN EXCEPTION) Decompresses data encoded using a DCT (discrete cosine transform) technique based on the JPEG standard, reproducing image sample data that approximates the original data.&#10;&#10;Parameters:&#10;     $data - (string) Data to decode&#10;&#10;Return:&#10;   data string;;d53,433;;b1,5;;m $data;;p">
</treenode>
<treenode node="decodeFilterFlateDecode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_filters.php;f15;354;2;361;;;;vpos;;vDecoded;;r&#10;Definition&#10;    decodeFilterFlateDecode($data)&#10;&#10;Description&#10;     FlateDecode Decompresses data encoded using the zlib/deflate compression method, reproducing the original text or binary data.&#10;&#10;Parameters:&#10;     $data - (string) Data to decode&#10;&#10;Return:&#10;   data string;;d55,354;;b1,5;;m $data;;p">
</treenode>
<treenode node="decodeFilterJBIG2Decode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_filters.php;f15;420;2;423;;;;vpos;;vDecoded;;r&#10;Definition&#10;    decodeFilterJBIG2Decode($data)&#10;&#10;Description&#10;     JBIG2Decode (NOT IMPLEMETED - RETURN AN EXCEPTION) Decompresses data encoded using the JBIG2 standard, reproducing the original monochrome (1 bit per pixel) image data (or an approximation of that data).&#10;&#10;Parameters:&#10;     $data - (string) Data to decode&#10;&#10;Return:&#10;   data string;;d55,420;;b1,5;;m $data;;p">
</treenode>
<treenode node="decodeFilterJPXDecode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_filters.php;f15;446;2;449;;;;vpos;;vDecoded;;r&#10;Definition&#10;    decodeFilterJPXDecode($data)&#10;&#10;Description&#10;     JPXDecode (NOT IMPLEMETED - RETURN AN EXCEPTION) Decompresses data encoded using the wavelet-based JPEG2000 standard, reproducing the original image data.&#10;&#10;Parameters:&#10;     $data - (string) Data to decode&#10;&#10;Return:&#10;   data string;;d53,446;;b1,5;;m $data;;p">
</treenode>
<treenode node="decodeFilterLZWDecode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_filters.php;f15;273;2;344;;;;vpos;;vDecoded;;r&#10;Definition&#10;    decodeFilterLZWDecode($data)&#10;&#10;Description&#10;     LZWDecode Decompresses data encoded using the LZW (Lempel-Ziv-Welch) adaptive compression method, reproducing the original text or binary data.&#10;&#10;Parameters:&#10;     $data - (string) Data to decode&#10;&#10;Return:&#10;   data string;;d53,273;;b1,5;;m $data;;p">
</treenode>
<treenode node="decodeFilterRunLengthDecode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_filters.php;f15;370;2;397;;;;vpos;;v;;r&#10;Definition&#10;    decodeFilterRunLengthDecode($data)&#10;&#10;Description&#10;     RunLengthDecode Decompresses data encoded using a byte-oriented run-length encoding algorithm.&#10;&#10;Parameters:&#10;     $data - (string) Data to decode;;d59,370;;b1,5;;m $data;;p">
</treenode>
<treenode node="decodeFilterStandard;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_filters.php;f15;137;2;139;;;;vpos;;vDecoded;;r&#10;Definition&#10;    decodeFilterStandard($data)&#10;&#10;Description&#10;     Standard Default decoding filter (leaves data unchanged).&#10;&#10;Parameters:&#10;     $data - (string) Data to decode&#10;&#10;Return:&#10;   data string;;d52,137;;b1,5;;m $data;;p">
</treenode>
<treenode node="Error;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_filters.php;f15;472;2;474;;;;vpos;;v;;r&#10;Definition&#10;    Error($msg)&#10;&#10;Description&#10;     Throw an exception.&#10;&#10;Parameters:&#10;     $msg - (string) The error message;;d36,472;;b1,5;;m $msg;;p">
</treenode>
<treenode node="getAvailableFilters;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_filters.php;f15;66;2;68;;;;vpos;;v;;r&#10;Definition&#10;    getAvailableFilters()&#10;&#10;Description&#10;     Get a list of available decoding filters.;;d46,66;;b1,5;;m">
</treenode>
</treenode>
<treenode node="TCPDF_FONT_DATA;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_font_data.php;f0;47;1;18442;;;;vpos;;v;;r&#10;Definition&#10;    class TCPDF_FONT_DATA&#10;&#10;Description&#10;      class TCPDF_FONT_DATA Unicode data and encoding maps for TCPDF.;;d22,47;;b0,0;;m">
</treenode>
<treenode node="TCPDF_FONTS;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f0;47;1;2644;;;;vpos;;v;;r&#10;Definition&#10;    class TCPDF_FONTS&#10;&#10;Description&#10;      class TCPDF_FONTS Font methods for TCPDF library.;;d18,47;;b0,0;;m">
<treenode node="_getfontpath;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;1521;2;1529;;;;vpos;;vstring;;r&#10;Definition&#10;    _getfontpath()&#10;&#10;Description&#10;     Return fonts path;;d39,1521;;b1,5;;m">
</treenode>
<treenode node="_getTrueTypeFontSubset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;951;2;1385;;;;vpos;;v;;r&#10;Definition&#10;    _getTrueTypeFontSubset($font, $subsetchars)&#10;&#10;Description&#10;     Returns a subset of the TrueType font data without the unused glyphs.&#10;&#10;Parameters:&#10;     $font - (string) TrueType font data&#10;     $subsetchars - (array) Array of used characters (the glyphs to keep);;d68,951;;b1,5;;m $font;;p $subsetchars;;p">
</treenode>
<treenode node="_getTTFtableChecksum;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;929;2;940;;;;vpos;;vint;;r&#10;Definition&#10;    _getTTFtableChecksum($table, $length)&#10;&#10;Description&#10;     Returs the checksum of a TTF table.&#10;&#10;Parameters:&#10;     $table - (string) table to check&#10;     $length - (int) length of table in bytes&#10;&#10;Return:&#10;   checksum;;d62,929;;b1,5;;m $table;;p $length;;p">
</treenode>
<treenode node="_putfontwidths;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;1396;2;1490;;;;vpos;;vPDF;;r&#10;Definition&#10;    _putfontwidths($font, $cidoffset=0)&#10;&#10;Description&#10;     Outputs font widths&#10;&#10;Parameters:&#10;     $font - (array) font data&#10;     $cidoffset - (int) offset for CID values&#10;&#10;Return:&#10;   command string for font widths;;d60,1396;;b1,5;;m $font;;p $cidoffset;;p">
</treenode>
<treenode node="addTTFfont;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;71;2;918;;;;vpos;;v;;r&#10;Definition&#10;    addTTFfont($fontfile, $fonttype=&apos;&apos;, $enc=&apos;&apos;, $flags=32, $outpath=&apos;&apos;, $platid=3, $encid=1, $addcbbox=false, $link=false)&#10;&#10;Description&#10;     Convert and add the selected TrueType or Type1 font to the fonts folder (that must be writeable).&#10;&#10;Parameters:&#10;     $fontfile - (string) Font file (full path)&#10;     $fonttype - (string) Font type&#10;     $enc - (string) Name of the encoding table to use&#10;     $flags - (int) Unsigned 32-bit integer containing flags specifying various characteristics of the font (PDF32000:2008 - 9&#10;     $outpath - (string) Output path for generated font files (must be writeable by the web server)&#10;     $platid - (int) Platform ID for CMAP table to extract (when building a Unicode font for Windows this value should be 3, for Macintosh should be 1)&#10;     $encid - (int) Encoding ID for CMAP table to extract (when building a Unicode font for Windows this value should be 1, for Macintosh should be 0)&#10;     $addcbbox - (boolean) If true includes the character bounding box information on the php font file&#10;     $link - (boolean) If true link to system font instead of copying the font data (not transportable) - Note: do not work with Type1 fonts;;d144,71;;b1,5;;m $fontfile;;p $fonttype;;p $enc;;p $flags;;p $outpath;;p $platid;;p $encid;;p $addcbbox;;p $link;;p">
</treenode>
<treenode node="arrUTF8ToUTF16BE;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;1743;2;1767;;;;vpos;;vstring;;r&#10;Definition&#10;    arrUTF8ToUTF16BE($unicode, $setbom=false)&#10;&#10;Description&#10;     Converts array of UTF-8 characters to UTF16-BE string.&lt;br&gt; Based on: http://www.faqs.org/rfcs/rfc2781.html &lt;pre&gt; Encoding UTF-16:&#10;&#10;Parameters:&#10;     $unicode - (array) array containing UTF-8 unicode values&#10;     $setbom - (boolean) if true set the Byte Order Mark (BOM = 0xFEFF);;d66,1743;;b1,5;;m $unicode;;p $setbom;;p">
</treenode>
<treenode node="getFontFullPath;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;1542;2;1553;;;;vpos;;vstring;;r&#10;Definition&#10;    getFontFullPath($file, $fontdir=false)&#10;&#10;Description&#10;     Return font full path&#10;&#10;Parameters:&#10;     $file - (string) Font file name&#10;     $fontdir - (string) Font directory (set to false fto search on default directories)&#10;&#10;Return:&#10;   Font full path or empty string;;d63,1542;;b1,5;;m $file;;p $fontdir;;p">
</treenode>
<treenode node="getFontRefSize;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;1565;2;1605;;;;vpos;;vfloat;;r&#10;Definition&#10;    getFontRefSize($size, $refsize=12)&#10;&#10;Description&#10;     Get a reference font size.&#10;&#10;Parameters:&#10;     $size - (string) String containing font size value&#10;     $refsize - (float) Reference font size in points&#10;&#10;Return:&#10;   value in points;;d59,1565;;b1,5;;m $size;;p $refsize;;p">
</treenode>
<treenode node="getUniord;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;1927;2;1984;;;;vpos;;vinteger;;r&#10;Definition&#10;    getUniord($uch)&#10;&#10;Description&#10;     Converts UTF-8 character to integer value.&lt;br&gt; Invalid byte sequences will be replaced with 0xFFFD (replacement character)&lt;br&gt; Based on: http://www.faqs.org/rfcs/rfc3629.html &lt;pre&gt; Char. number range  |        UTF-8 octet sequence (hexadecimal)    |              (binary) --------------------+----------------------------------------------- 0000 0000-0000 007F | 0xxxxxxx 0000 0080-0000 07FF | 110xxxxx 10xxxxxx 0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx 0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx ---------------------------------------------------------------------&#10;&#10;Parameters:&#10;     $uch - (string) character string to process&#10;&#10;Return:&#10;   Unicode value;;d40,1927;;b1,5;;m $uch;;p">
</treenode>
<treenode node="UniArrSubString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;1816;2;1828;;;;vpos;;vReturn;;r&#10;Definition&#10;    UniArrSubString($uniarr, $start=&apos;&apos;, $end=&apos;&apos;)&#10;&#10;Description&#10;     Extract a slice of the $uniarr array and return it as string.&#10;&#10;Parameters:&#10;     $uniarr - (string) The input array of characters&#10;     $start - (int) the starting element of $strarr&#10;     $end - (int) first element that will not be returned&#10;&#10;Return:&#10;   part of a string;;d69,1816;;b1,5;;m $uniarr;;p $start;;p $end;;p">
</treenode>
<treenode node="unichr;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;1665;2;1683;;;;vpos;;vReturns;;r&#10;Definition&#10;    unichr($c, $unicode=true)&#10;&#10;Description&#10;     Returns the unicode caracter specified by the value&#10;&#10;Parameters:&#10;     $c - (int) UTF-8 value&#10;     $unicode - (boolean) True if we are in unicode mode, false otherwise&#10;&#10;Return:&#10;   the specified character;;d50,1665;;b1,5;;m $c;;p $unicode;;p">
</treenode>
<treenode node="unichrASCII;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;1701;2;1703;;;;vpos;;vReturns;;r&#10;Definition&#10;    unichrASCII($c)&#10;&#10;Description&#10;     Returns the unicode caracter specified by ASCII value&#10;&#10;Parameters:&#10;     $c - (int) UTF-8 value&#10;&#10;Return:&#10;   the specified character;;d40,1701;;b1,5;;m $c;;p">
</treenode>
<treenode node="unichrUnicode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;1691;2;1693;;;;vpos;;vReturns;;r&#10;Definition&#10;    unichrUnicode($c)&#10;&#10;Description&#10;     Returns the unicode caracter specified by UTF-8 value&#10;&#10;Parameters:&#10;     $c - (int) UTF-8 value&#10;&#10;Return:&#10;   the specified character;;d42,1691;;b1,5;;m $c;;p">
</treenode>
<treenode node="uniord;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;1887;2;1892;;;;vpos;;vinteger;;r&#10;Definition&#10;    uniord($uch)&#10;&#10;Description&#10;     Converts UTF-8 character to integer value.&lt;br&gt; Uses the getUniord() method if the value is not cached.&#10;&#10;Parameters:&#10;     $uch - (string) character string to process&#10;&#10;Return:&#10;   Unicode value;;d37,1887;;b1,5;;m $uch;;p">
</treenode>
<treenode node="updateCIDtoGIDmap;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;1505;2;1514;;;;vpos;;v;;r&#10;Definition&#10;    updateCIDtoGIDmap($map, $cid, $gid)&#10;&#10;Description&#10;     Update the CIDToGIDMap string with a new value.&#10;&#10;Parameters:&#10;     $map - (string) CIDToGIDMap&#10;     $cid - (int) CID value&#10;     $gid - (int) GID value;;d60,1505;;b1,5;;m $map;;p $cid;;p $gid;;p">
</treenode>
<treenode node="UTF8ArrayToUniArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;1777;2;1782;;;;vpos;;vReturn;;r&#10;Definition&#10;    UTF8ArrayToUniArray($ta, $isunicode=true)&#10;&#10;Description&#10;     Convert an array of UTF8 values to array of unicode characters&#10;&#10;Parameters:&#10;     $ta - (array) The input array of UTF8 values&#10;     $isunicode - (boolean) True for Unicode mode, false otherwise&#10;&#10;Return:&#10;   array of unicode characters;;d66,1777;;b1,5;;m $ta;;p $isunicode;;p">
</treenode>
<treenode node="UTF8ArrSubString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;1793;2;1805;;;;vpos;;vReturn;;r&#10;Definition&#10;    UTF8ArrSubString($strarr, $start=&apos;&apos;, $end=&apos;&apos;, $unicode=true)&#10;&#10;Description&#10;     Extract a slice of the $strarr array and return it as string.&#10;&#10;Parameters:&#10;     $strarr - (string) The input array of characters&#10;     $start - (int) the starting element of $strarr&#10;     $end - (int) first element that will not be returned&#10;     $unicode - (boolean) True if we are in unicode mode, false otherwise&#10;&#10;Return:&#10;   part of a string;;d85,1793;;b1,5;;m $strarr;;p $start;;p $end;;p $unicode;;p">
</treenode>
<treenode node="UTF8ArrToLatin1;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;1863;2;1878;;;;vpos;;varray;;r&#10;Definition&#10;    UTF8ArrToLatin1($unicode)&#10;&#10;Description&#10;     Converts UTF-8 characters array to array of Latin1 string&lt;br&gt;&#10;&#10;Parameters:&#10;     $unicode - (array) array containing UTF-8 unicode values;;d50,1863;;b1,5;;m $unicode;;p">
</treenode>
<treenode node="UTF8ArrToLatin1Arr;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;1838;2;1853;;;;vpos;;varray;;r&#10;Definition&#10;    UTF8ArrToLatin1Arr($unicode)&#10;&#10;Description&#10;     Converts UTF-8 characters array to array of Latin1 characters array&lt;br&gt;&#10;&#10;Parameters:&#10;     $unicode - (array) array containing UTF-8 unicode values;;d53,1838;;b1,5;;m $unicode;;p">
</treenode>
<treenode node="utf8Bidi;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;2087;2;2642;;;;vpos;;varray;;r&#10;Definition&#10;    utf8Bidi($ta, $str=&apos;&apos;, $forcertl=false, $isunicode=true, &amp;$currentfont)&#10;&#10;Description&#10;     Reverse the RLT substrings using the Bidirectional Algorithm (http://unicode.org/reports/tr9/).&#10;&#10;Parameters:&#10;     $ta - (array) array of characters composing the string&#10;     $str - (string) string to process&#10;     $forcertl - (bool) if &apos;R&apos; forces RTL, if &apos;L&apos; forces LTR&#10;     $isunicode - (boolean) True if the document is in Unicode mode, false otherwise&#10;     $currentfont - (array) Reference to current font array&#10;&#10;Return:&#10;   of unicode chars;;d96,2087;;b1,5;;m $ta;;p $str;;p $forcertl;;p $isunicode;;p $currentfont;;p">
</treenode>
<treenode node="utf8StrArrRev;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;2071;2;2073;;;;vpos;;vstring;;r&#10;Definition&#10;    utf8StrArrRev($arr, $str=&apos;&apos;, $setbom=false, $forcertl=false, $isunicode=true, &amp;$currentfont)&#10;&#10;Description&#10;     Reverse the RLT substrings array using the Bidirectional Algorithm (http://unicode.org/reports/tr9/).&#10;&#10;Parameters:&#10;     $arr - (array) array of unicode values&#10;     $str - (string) string to manipulate (or empty value)&#10;     $setbom - (bool) if true set the Byte Order Mark (BOM = 0xFEFF)&#10;     $forcertl - (bool) if true forces RTL text direction&#10;     $isunicode - (boolean) True if the document is in Unicode mode, false otherwise&#10;     $currentfont - (array) Reference to current font array;;d117,2071;;b1,5;;m $arr;;p $str;;p $setbom;;p $forcertl;;p $isunicode;;p $currentfont;;p">
</treenode>
<treenode node="UTF8StringToArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;1996;2;2007;;;;vpos;;varray;;r&#10;Definition&#10;    UTF8StringToArray($str, $isunicode=true, &amp;$currentfont)&#10;&#10;Description&#10;     Converts UTF-8 strings to codepoints array.&lt;br&gt; Invalid byte sequences will be replaced with 0xFFFD (replacement character)&lt;br&gt;&#10;&#10;Parameters:&#10;     $str - (string) string to process&#10;     $isunicode - (boolean) True when the documetn is in Unicode mode, false otherwise&#10;     $currentfont - (array) Reference to current font array&#10;&#10;Return:&#10;   containing codepoints (UTF-8 characters values);;d80,1996;;b1,5;;m $str;;p $isunicode;;p $currentfont;;p">
</treenode>
<treenode node="utf8StrRev;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;2054;2;2056;;;;vpos;;vstring;;r&#10;Definition&#10;    utf8StrRev($str, $setbom=false, $forcertl=false, $isunicode=true, &amp;$currentfont)&#10;&#10;Description&#10;     Reverse the RLT substrings using the Bidirectional Algorithm (http://unicode.org/reports/tr9/).&#10;&#10;Parameters:&#10;     $str - (string) string to manipulate&#10;     $setbom - (bool) if true set the Byte Order Mark (BOM = 0xFEFF)&#10;     $forcertl - (bool) if true forces RTL text direction&#10;     $isunicode - (boolean) True if the document is in Unicode mode, false otherwise&#10;     $currentfont - (array) Reference to current font array;;d105,2054;;b1,5;;m $str;;p $setbom;;p $forcertl;;p $isunicode;;p $currentfont;;p">
</treenode>
<treenode node="UTF8ToLatin1;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;2018;2;2021;;;;vpos;;vstring;;r&#10;Definition&#10;    UTF8ToLatin1($str, $isunicode=true, &amp;$currentfont)&#10;&#10;Description&#10;     Converts UTF-8 strings to Latin1 when using the standard 14 core fonts.&lt;br&gt;&#10;&#10;Parameters:&#10;     $str - (string) string to process&#10;     $isunicode - (boolean) True when the documetn is in Unicode mode, false otherwise&#10;     $currentfont - (array) Reference to current font array;;d75,2018;;b1,5;;m $str;;p $isunicode;;p $currentfont;;p">
</treenode>
<treenode node="UTF8ToUTF16BE;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_fonts.php;f15;2034;2;2040;;;;vpos;;vstring;;r&#10;Definition&#10;    UTF8ToUTF16BE($str, $setbom=false, $isunicode=true, &amp;$currentfont)&#10;&#10;Description&#10;     Converts UTF-8 strings to UTF16-BE.&lt;br&gt;&#10;&#10;Parameters:&#10;     $str - (string) string to process&#10;     $setbom - (boolean) if true set the Byte Order Mark (BOM = 0xFEFF)&#10;     $isunicode - (boolean) True when the documetn is in Unicode mode, false otherwise&#10;     $currentfont - (array) Reference to current font array;;d91,2034;;b1,5;;m $str;;p $setbom;;p $isunicode;;p $currentfont;;p">
</treenode>
</treenode>
<treenode node="TCPDF_IMAGES;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_images.php;f0;51;1;359;;;;vpos;;v;;r&#10;Definition&#10;    class TCPDF_IMAGES&#10;&#10;Description&#10;      class TCPDF_IMAGES Static image methods used by the TCPDF class.;;d19,51;;b0,0;;m">
<treenode node="_parsejpeg;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_images.php;f15;161;2;236;;;;vpos;;varray;;r&#10;Definition&#10;    _parsejpeg($file)&#10;&#10;Description&#10;     Extract info from a JPEG file without using the GD library.&#10;&#10;Parameters:&#10;     $file - (string) image file to parse&#10;&#10;Return:&#10;   structure containing the image data;;d42,161;;b1,5;;m $file;;p">
</treenode>
<treenode node="_parsepng;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_images.php;f15;244;2;357;;;;vpos;;varray;;r&#10;Definition&#10;    _parsepng($file)&#10;&#10;Description&#10;     Extract info from a PNG file without using the GD library.&#10;&#10;Parameters:&#10;     $file - (string) image file to parse&#10;&#10;Return:&#10;   structure containing the image data;;d41,244;;b1,5;;m $file;;p">
</treenode>
<treenode node="_toJPEG;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_images.php;f15;146;2;153;;;;vpos;;v;;r&#10;Definition&#10;    _toJPEG($image, $quality, $tempfile)&#10;&#10;Description&#10;     Convert the loaded image to a JPEG and then return a structure for the PDF creator. This function requires GD library and write access to the directory defined on K_PATH_CACHE constant.&#10;&#10;Parameters:&#10;     $image - (image) Image object&#10;     $quality - (int) JPEG quality&#10;     $tempfile - (string) Temporary file name;;d61,146;;b1,5;;m $image;;p $quality;;p $tempfile;;p">
</treenode>
<treenode node="_toPNG;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_images.php;f15;123;2;135;;;;vpos;;v;;r&#10;Definition&#10;    _toPNG($image, $tempfile)&#10;&#10;Description&#10;     Convert the loaded image to a PNG and then return a structure for the PDF creator. This function requires GD library and write access to the directory defined on K_PATH_CACHE constant.&#10;&#10;Parameters:&#10;     $image - (image) Image object&#10;     $tempfile - (string) Temporary file name;;d50,123;;b1,5;;m $image;;p $tempfile;;p">
</treenode>
<treenode node="getImageFileType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_images.php;f15;70;2;88;;;;vpos;;vstring;;r&#10;Definition&#10;    getImageFileType($imgfile, $iminfo=array())&#10;&#10;Description&#10;     Return the image type given the file name or array returned by getimagesize() function.&#10;&#10;Parameters:&#10;     $imgfile - (string) image file name&#10;     $iminfo - (array) array of image information returned by getimagesize() function&#10;&#10;Return:&#10;   image type;;d68,70;;b1,5;;m $imgfile;;p $iminfo;;p">
</treenode>
<treenode node="setGDImageTransparency;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_images.php;f15;98;2;112;;;;vpos;;v;;r&#10;Definition&#10;    setGDImageTransparency($new_image, $image)&#10;&#10;Description&#10;     Set the transparency for the given GD image.&#10;&#10;Parameters:&#10;     $new_image - (image) GD image object&#10;     $image - (image) GD image object;;d67,98;;b1,5;;m $new_image;;p $image;;p">
</treenode>
</treenode>
<treenode node="TCPDF_IMPORT;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_import.php;f0;58;1;99;;;;vpos;;vTCPDF;;c;;r&#10;Definition&#10;    class TCPDF_IMPORT extends TCPDF&#10;&#10;Description&#10;      class TCPDF_IMPORT !!! THIS CLASS IS UNDER DEVELOPMENT !!! PHP class extension of the TCPDF (http://www.tcpdf.org) library to import existing PDF documents.&lt;br&gt;;;d33,58;;b0,0;;m">
<treenode node="importPDF;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_import.php;f8;67;2;97;;;;vpos;;vtrue;;r&#10;Definition&#10;    importPDF($filename)&#10;&#10;Description&#10;     Import an existing PDF document&#10;&#10;Parameters:&#10;     $filename - (string) Filename of the PDF document to import&#10;&#10;Return:&#10;   in case of success, false otherwise;;d38,67;;b1,0;;m $filename;;p">
</treenode>
</treenode>
<treenode node="TCPDF_PARSER;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_parser.php;f0;53;1;810;;;;vpos;;v;;r&#10;Definition&#10;    class TCPDF_PARSER&#10;&#10;Description&#10;      class TCPDF_PARSER This is a PHP class for parsing PDF documents.&lt;br&gt;;;d19,53;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_parser.php;f8;101;2;128;;;;vpos;;v;;r&#10;Definition&#10;    __construct($data, $cfg=array())&#10;&#10;Description&#10;     Parse a PDF document an return an array of objects.&#10;&#10;Parameters:&#10;     $data - (string) PDF data to parse&#10;     $cfg - (array) Array of configuration parameters:;;d50,101;;b1,0;;m $data;;p $cfg;;p">
</treenode>
<treenode node="decodeStream;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_parser.php;f11;742;2;794;;;;vpos;;varray;;r&#10;Definition&#10;    decodeStream($sdic, $stream)&#10;&#10;Description&#10;     Decode the specified stream.&#10;&#10;Parameters:&#10;     $sdic - (array) Stream&apos;s dictionary array&#10;     $stream - (string) Stream to decode&#10;&#10;Return:&#10;   containing decoded stream data and remaining filters;;d49,742;;b2,0;;m $sdic;;p $stream;;p">
</treenode>
<treenode node="decodeXref;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_parser.php;f11;210;2;272;;;;vpos;;vArray;;r&#10;Definition&#10;    decodeXref($startxref, $xref=array())&#10;&#10;Description&#10;     Decode the Cross-Reference section&#10;&#10;Parameters:&#10;     $startxref - (int) Offset at which the xref section starts (position of the &apos;xref&apos; keyword)&#10;     $xref - (array) Previous xref array (if any)&#10;&#10;Return:&#10;   containing xref and trailer data;;d58,210;;b2,0;;m $startxref;;p $xref;;p">
</treenode>
<treenode node="decodeXrefStream;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_parser.php;f11;282;2;487;;;;vpos;;vArray;;r&#10;Definition&#10;    decodeXrefStream($startxref, $xref=array())&#10;&#10;Description&#10;     Decode the Cross-Reference Stream section&#10;&#10;Parameters:&#10;     $startxref - (int) Offset at which the xref section starts&#10;     $xref - (array) Previous xref array (if any)&#10;&#10;Return:&#10;   containing xref and trailer data;;d64,282;;b2,0;;m $startxref;;p $xref;;p">
</treenode>
<treenode node="Error;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_parser.php;f8;802;2;808;;;;vpos;;v;;r&#10;Definition&#10;    Error($msg)&#10;&#10;Description&#10;     Throw an exception or print an error message and die if the K_TCPDF_PARSER_THROW_EXCEPTION_ERROR constant is set to true.&#10;&#10;Parameters:&#10;     $msg - (string) The error message;;d29,802;;b1,0;;m $msg;;p">
</treenode>
<treenode node="getIndirectObject;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_parser.php;f11;676;2;710;;;;vpos;;varray;;r&#10;Definition&#10;    getIndirectObject($obj_ref, $offset=0, $decoding=true)&#10;&#10;Description&#10;     Get content of indirect object.&#10;&#10;Parameters:&#10;     $obj_ref - (string) Object number and generation number separated by underscore character&#10;     $offset - (int) Object offset&#10;     $decoding - (boolean) If true decode streams&#10;&#10;Return:&#10;   containing object data;;d75,676;;b2,0;;m $obj_ref;;p $offset;;p $decoding;;p">
</treenode>
<treenode node="getObjectVal;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_parser.php;f11;719;2;732;;;;vpos;;varray;;r&#10;Definition&#10;    getObjectVal($obj)&#10;&#10;Description&#10;     Get the content of object, resolving indect object reference if necessary.&#10;&#10;Parameters:&#10;     $obj - (string) Object value&#10;&#10;Return:&#10;   containing object data;;d39,719;;b2,0;;m $obj;;p">
</treenode>
<treenode node="getParsedData;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_parser.php;f8;156;2;158;;;;vpos;;v;;r&#10;Definition&#10;    getParsedData()&#10;&#10;Description&#10;     Return an array of parsed PDF document objects.;;d33,156;;b1,0;;m">
</treenode>
<treenode node="getRawObject;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_parser.php;f11;496;2;665;;;;vpos;;varray;;r&#10;Definition&#10;    getRawObject($offset=0)&#10;&#10;Description&#10;     Get object type, raw value and offset to next object&#10;&#10;Parameters:&#10;     $offset - (int) Object offset&#10;&#10;Return:&#10;   containing object type, raw value and offset to next object;;d44,496;;b2,0;;m $offset;;p">
</treenode>
<treenode node="getXrefData;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_parser.php;f11;168;2;200;;;;vpos;;vArray;;r&#10;Definition&#10;    getXrefData($offset=0, $xref=array())&#10;&#10;Description&#10;     Get Cross-Reference (xref) table and trailer data from PDF document data.&#10;&#10;Parameters:&#10;     $offset - (int) xref offset (if know)&#10;     $xref - (array) previous xref array (if any)&#10;&#10;Return:&#10;   containing xref and trailer data;;d58,168;;b2,0;;m $offset;;p $xref;;p">
</treenode>
<treenode node="setConfig;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_parser.php;f11;138;2;148;;;;vpos;;v;;r&#10;Definition&#10;    setConfig($cfg)&#10;&#10;Description&#10;     Set the configuration parameters.&#10;&#10;Parameters:&#10;     $cfg - (array) Array of configuration parameters:;;d36,138;;b2,0;;m $cfg;;p">
</treenode>
</treenode>
<treenode node="TCPDF_STATIC;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f0;51;1;2601;;;;vpos;;v;;r&#10;Definition&#10;    class TCPDF_STATIC&#10;&#10;Description&#10;      class TCPDF_STATIC Static methods used by the TCPDF class.;;d19,51;;b0,0;;m">
<treenode node="_AES;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;443;2;456;;;;vpos;;vString;;r&#10;Definition&#10;    _AES($key, $text)&#10;&#10;Description&#10;     Returns the input text exrypted using AES algorithm and the specified key. This method requires openssl or mcrypt. Text is padded to 16bytes blocks&#10;&#10;Parameters:&#10;     $key - (string) encryption key&#10;     $text - (String) input text to be encrypted&#10;&#10;Return:&#10;   encrypted text;;d42,443;;b1,5;;m $key;;p $text;;p">
</treenode>
<treenode node="_AESnopad;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;468;2;477;;;;vpos;;vString;;r&#10;Definition&#10;    _AESnopad($key, $text)&#10;&#10;Description&#10;     Returns the input text exrypted using AES algorithm and the specified key. This method requires openssl or mcrypt. Text is not padded&#10;&#10;Parameters:&#10;     $key - (string) encryption key&#10;     $text - (String) input text to be encrypted&#10;&#10;Return:&#10;   encrypted text;;d47,468;;b1,5;;m $key;;p $text;;p">
</treenode>
<treenode node="_escape;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;304;2;307;;;;vpos;;vstring;;r&#10;Definition&#10;    _escape($s)&#10;&#10;Description&#10;     Add &quot;\&quot; before &quot;\&quot;, &quot;(&quot; and &quot;)&quot;&#10;&#10;Parameters:&#10;     $s - (string) string to escape&#10;&#10;Return:&#10;   escaped string;;d36,304;;b1,5;;m $s;;p">
</treenode>
<treenode node="_escapeXML;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;316;2;320;;;;vpos;;vconverted;;r&#10;Definition&#10;    _escapeXML($str)&#10;&#10;Description&#10;     Escape some special characters (&amp;lt;s &amp;gt;s &amp;amp;s) for XML output.&#10;&#10;Parameters:&#10;     $str - (string) Input string to convert&#10;&#10;Return:&#10;   string;;d41,316;;b1,5;;m $str;;p">
</treenode>
<treenode node="_freadint;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;2085;2;2088;;;;vpos;;v;;r&#10;Definition&#10;    _freadint($f)&#10;&#10;Description&#10;     Read a 4-byte (32 bit) integer from file.&#10;&#10;Parameters:&#10;     $f - (string) file name;;d38,2085;;b1,5;;m $f;;p">
</treenode>
<treenode node="_getBYTE;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;2053;2;2056;;;;vpos;;vint;;r&#10;Definition&#10;    _getBYTE($str, $offset)&#10;&#10;Description&#10;     Get BYTE from string (8-bit unsigned integer).&#10;&#10;Parameters:&#10;     $str - (string) String from where to extract value&#10;     $offset - (int) Point from where to read the data&#10;&#10;Return:&#10;   8 bit value;;d48,2053;;b1,5;;m $str;;p $offset;;p">
</treenode>
<treenode node="_getFIXED;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;2035;2;2042;;;;vpos;;vint;;r&#10;Definition&#10;    _getFIXED($str, $offset)&#10;&#10;Description&#10;     Get FIXED from string (32-bit signed fixed-point number (16.16).&#10;&#10;Parameters:&#10;     $str - (string) string from where to extract value&#10;     $offset - (int) point from where to read the data&#10;&#10;Return:&#10;   16 bit value;;d49,2035;;b1,5;;m $str;;p $offset;;p">
</treenode>
<treenode node="_getFWORD;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;2004;2;2010;;;;vpos;;vint;;r&#10;Definition&#10;    _getFWORD($str, $offset)&#10;&#10;Description&#10;     Get FWORD from string (Big Endian 16-bit signed integer).&#10;&#10;Parameters:&#10;     $str - (string) String from where to extract value&#10;     $offset - (int) Point from where to read the data&#10;&#10;Return:&#10;   16 bit value;;d49,2004;;b1,5;;m $str;;p $offset;;p">
</treenode>
<treenode node="_getSHORT;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1990;2;1993;;;;vpos;;vint;;r&#10;Definition&#10;    _getSHORT($str, $offset)&#10;&#10;Description&#10;     Get SHORT from string (Big Endian 16-bit signed integer).&#10;&#10;Parameters:&#10;     $str - (string) String from where to extract value&#10;     $offset - (int) Point from where to read the data&#10;&#10;Return:&#10;   16 bit value;;d49,1990;;b1,5;;m $str;;p $offset;;p">
</treenode>
<treenode node="_getUFWORD;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;2021;2;2024;;;;vpos;;vint;;r&#10;Definition&#10;    _getUFWORD($str, $offset)&#10;&#10;Description&#10;     Get UFWORD from string (Big Endian 16-bit unsigned integer).&#10;&#10;Parameters:&#10;     $str - (string) string from where to extract value&#10;     $offset - (int) point from where to read the data&#10;&#10;Return:&#10;   16 bit value;;d50,2021;;b1,5;;m $str;;p $offset;;p">
</treenode>
<treenode node="_getULONG;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1962;2;1965;;;;vpos;;vint;;r&#10;Definition&#10;    _getULONG($str, $offset)&#10;&#10;Description&#10;     Get ULONG from string (Big Endian 32-bit unsigned integer).&#10;&#10;Parameters:&#10;     $str - (string) string from where to extract value&#10;     $offset - (int) point from where to read the data&#10;&#10;Return:&#10;   32 bit value;;d49,1962;;b1,5;;m $str;;p $offset;;p">
</treenode>
<treenode node="_getUSHORT;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1976;2;1979;;;;vpos;;vint;;r&#10;Definition&#10;    _getUSHORT($str, $offset)&#10;&#10;Description&#10;     Get USHORT from string (Big Endian 16-bit unsigned integer).&#10;&#10;Parameters:&#10;     $str - (string) string from where to extract value&#10;     $offset - (int) point from where to read the data&#10;&#10;Return:&#10;   16 bit value;;d50,1976;;b1,5;;m $str;;p $offset;;p">
</treenode>
<treenode node="_md5_16;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;429;2;431;;;;vpos;;vString;;r&#10;Definition&#10;    _md5_16($str)&#10;&#10;Description&#10;     Encrypts a string using MD5 and returns it&apos;s value as a binary string.&#10;&#10;Parameters:&#10;     $str - (string) input string&#10;&#10;Return:&#10;   MD5 encrypted binary string;;d38,429;;b1,5;;m $str;;p">
</treenode>
<treenode node="_RC4;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;491;2;525;;;;vpos;;vString;;r&#10;Definition&#10;    _RC4($key, $text, &amp;$last_enc_key, &amp;$last_enc_key_c)&#10;&#10;Description&#10;     Returns the input text encrypted using RC4 algorithm and the specified key. RC4 is the standard encryption algorithm used in PDF format&#10;&#10;Parameters:&#10;     $key - (string) Encryption key&#10;     $text - (String) Input text to be encrypted&#10;     $last_enc_key - (String) Reference to last RC4 key encrypted&#10;     $last_enc_key_c - (String) Reference to last RC4 computed key&#10;&#10;Return:&#10;   encrypted text;;d76,491;;b1,5;;m $key;;p $text;;p $last_enc_key;;p $last_enc_key_c;;p">
</treenode>
<treenode node="convertHexStringToString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;572;2;584;;;;vpos;;vString;;r&#10;Definition&#10;    convertHexStringToString($bs)&#10;&#10;Description&#10;     Convert hexadecimal string to string&#10;&#10;Parameters:&#10;     $bs - (string) byte-string to convert;;d54,572;;b1,5;;m $bs;;p">
</treenode>
<treenode node="convertStringToHexString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;594;2;601;;;;vpos;;vbyte;;r&#10;Definition&#10;    convertStringToHexString($s)&#10;&#10;Description&#10;     Convert string to hexadecimal string (byte string)&#10;&#10;Parameters:&#10;     $s - (string) string to convert&#10;&#10;Return:&#10;   string;;d53,594;;b1,5;;m $s;;p">
</treenode>
<treenode node="empty_string;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;282;2;284;;;;vpos;;vboolean;;r&#10;Definition&#10;    empty_string($str)&#10;&#10;Description&#10;     Determine whether a string is empty.&#10;&#10;Parameters:&#10;     $str - (string) string to be checked&#10;&#10;Return:&#10;   true if string is empty;;d43,282;;b1,5;;m $str;;p">
</treenode>
<treenode node="encodeNameObject;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;628;2;640;;;;vpos;;v;;r&#10;Definition&#10;    encodeNameObject($name)&#10;&#10;Description&#10;     Encode a name object.&#10;&#10;Parameters:&#10;     $name - (string) Name object to encode;;d48,628;;b1,5;;m $name;;p">
</treenode>
<treenode node="extractCSSproperties;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1042;2;1123;;;;vpos;;vAn;;r&#10;Definition&#10;    extractCSSproperties($cssdata)&#10;&#10;Description&#10;     Extracts the CSS properties from a CSS string.&#10;&#10;Parameters:&#10;     $cssdata - (string) string containing CSS definitions&#10;&#10;Return:&#10;   array where the keys are the CSS selectors and the values are the CSS properties;;d55,1042;;b1,5;;m $cssdata;;p">
</treenode>
<treenode node="fileGetContents;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1865;2;1949;;;;vpos;;vThe;;r&#10;Definition&#10;    fileGetContents($file)&#10;&#10;Description&#10;     Reads entire file into a string. The file can be also an URL.&#10;&#10;Parameters:&#10;     $file - (string) Name of the file or URL to read&#10;&#10;Return:&#10;   function returns the read data or FALSE on failure;;d47,1865;;b1,5;;m $file;;p">
</treenode>
<treenode node="fixHTMLCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1138;2;1193;;;;vpos;;vstring;;r&#10;Definition&#10;    fixHTMLCode($html, $default_css=&apos;&apos;, $tagvs=&apos;&apos;, $tidy_options=&apos;&apos;, &amp;$tagvspaces)&#10;&#10;Description&#10;     Cleanup HTML code (requires HTML Tidy library).&#10;&#10;Parameters:&#10;     $html - (string) htmlcode to fix&#10;     $default_css - (string) CSS commands to add&#10;     $tagvs - (array) parameters for setHtmlVSpace method&#10;     $tidy_options - (array) options for tidy_parse_string function&#10;     $tagvspaces - (array) Array of vertical spaces for tags&#10;&#10;Return:&#10;   XHTML code cleaned up;;d103,1138;;b1,5;;m $html;;p $default_css;;p $tagvs;;p $tidy_options;;p $tagvspaces;;p">
</treenode>
<treenode node="fopenLocal;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1847;2;1854;;;;vpos;;vReturns;;r&#10;Definition&#10;    fopenLocal($filename, $mode)&#10;&#10;Description&#10;     Wrapper to use fopen only with local files&#10;&#10;Parameters:&#10;    filename - (string) Name of the file to open&#10;     $mode - (string)&#10;&#10;Return:&#10;   a file pointer resource on success, or FALSE on error;;d53,1847;;b1,5;;mfilename;;p $mode;;p">
</treenode>
<treenode node="formatPageNumber;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1018;2;1020;;;;vpos;;v;;r&#10;Definition&#10;    formatPageNumber($num)&#10;&#10;Description&#10;     Format the page numbers. This method can be overriden for custom formats.&#10;&#10;Parameters:&#10;     $num - (int) page number;;d47,1018;;b1,5;;m $num;;p">
</treenode>
<treenode node="formatTOCPageNumber;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1030;2;1032;;;;vpos;;v;;r&#10;Definition&#10;    formatTOCPageNumber($num)&#10;&#10;Description&#10;     Format the page numbers on the Table Of Content. This method can be overriden for custom formats.&#10;&#10;Parameters:&#10;     $num - (int) page number;;d50,1030;;b1,5;;m $num;;p">
</treenode>
<treenode node="get_mqr;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;152;2;161;;;;vpos;;vReturns;;r&#10;Definition&#10;    get_mqr()&#10;&#10;Description&#10;     Gets the current active configuration setting of magic_quotes_runtime (if the get_magic_quotes_runtime function exist)&#10;&#10;Return:&#10;   0 if magic quotes runtime is off or get_magic_quotes_runtime doesn&apos;t exist, 1 otherwise;;d34,152;;b1,5;;m">
</treenode>
<treenode node="getAnnotOptFromJSProp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;652;2;1009;;;;vpos;;varray;;r&#10;Definition&#10;    getAnnotOptFromJSProp($prop, &amp;$spot_colors, $rtl=false)&#10;&#10;Description&#10;     Convert JavaScript form fields properties array to Annotation Properties array.&#10;&#10;Parameters:&#10;     $prop - (array) javascript field properties&#10;     $spot_colors - (array) Reference to spot colors array&#10;     $rtl - (boolean) True if in Right-To-Left text direction mode, false otherwise&#10;&#10;Return:&#10;   of annotation properties;;d80,652;;b1,5;;m $prop;;p $spot_colors;;p $rtl;;p">
</treenode>
<treenode node="getBorderMode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;210;2;273;;;;vpos;;vborder;;r&#10;Definition&#10;    getBorderMode($brd, $position=&apos;start&apos;, $opencell=true)&#10;&#10;Description&#10;     Get the border mode accounting for multicell position (opens bottom side of multicell crossing pages)&#10;&#10;Parameters:&#10;     $brd - (mixed) Indicates if borders must be drawn around the cell block&#10;     $position - (string) multicell position: &apos;start&apos;, &apos;middle&apos;, &apos;end&apos;&#10;     $opencell - (boolean) True when the cell is left open at the page bottom, false otherwise&#10;&#10;Return:&#10;   mode array;;d79,210;;b1,5;;m $brd;;p $position;;p $opencell;;p">
</treenode>
<treenode node="getCSSdataArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1364;2;1400;;;;vpos;;varray;;r&#10;Definition&#10;    getCSSdataArray($dom, $key, $css)&#10;&#10;Description&#10;     Returns the styles array that apply for the selected HTML tag.&#10;&#10;Parameters:&#10;     $dom - (array) array of HTML tags and properties&#10;     $key - (int) key of the current HTML tag&#10;     $css - (array) array of CSS properties&#10;&#10;Return:&#10;   containing CSS properties;;d58,1364;;b1,5;;m $dom;;p $key;;p $css;;p">
</treenode>
<treenode node="getEncPermissionsString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;611;2;618;;;;vpos;;vString;;r&#10;Definition&#10;    getEncPermissionsString($protection)&#10;&#10;Description&#10;     Convert encryption P value to a string of bytes, low-order byte first.&#10;&#10;Parameters:&#10;     $protection - (string) 32bit encryption permission value (P value);;d61,611;;b1,5;;m $protection;;p">
</treenode>
<treenode node="getFormattedDate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;394;2;396;;;;vpos;;vstring;;r&#10;Definition&#10;    getFormattedDate($time)&#10;&#10;Description&#10;     Returns a formatted date-time.&#10;&#10;Parameters:&#10;     $time - (int) Time in seconds&#10;&#10;Return:&#10;   escaped date string;;d48,394;;b1,5;;m $time;;p">
</treenode>
<treenode node="getHyphenPatternsFromTEX;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1521;2;1544;;;;vpos;;varray;;r&#10;Definition&#10;    getHyphenPatternsFromTEX($file)&#10;&#10;Description&#10;     Returns an array of hyphenation patterns.&#10;&#10;Parameters:&#10;     $file - (string) TEX file containing hypenation patterns&#10;&#10;Return:&#10;   of hyphenation patterns;;d56,1521;;b1,5;;m $file;;p">
</treenode>
<treenode node="getObjFilename;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;294;2;296;;;;vpos;;vstring;;r&#10;Definition&#10;    getObjFilename($type=&apos;tmp&apos;, $file_id=&apos;&apos;)&#10;&#10;Description&#10;     Returns a temporary filename for caching object on filesystem.&#10;&#10;Parameters:&#10;     $type - (string) Type of file (name of the subdir on the tcpdf cache folder)&#10;     $file_id - (string) TCPDF file_id&#10;&#10;Return:&#10;   filename;;d65,294;;b1,5;;m $type;;p $file_id;;p">
</treenode>
<treenode node="getPageLayoutMode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;2524;2;2559;;;;vpos;;v;;r&#10;Definition&#10;    getPageLayoutMode($layout=&apos;SinglePage&apos;)&#10;&#10;Description&#10;     Get the canonical page layout mode.&#10;&#10;Parameters:&#10;     $layout - (string) The page layout;;d64,2524;;b1,5;;m $layout;;p">
</treenode>
<treenode node="getPageMode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;2567;2;2598;;;;vpos;;v;;r&#10;Definition&#10;    getPageMode($mode=&apos;UseNone&apos;)&#10;&#10;Description&#10;     Get the canonical page layout mode.&#10;&#10;Parameters:&#10;     $mode - (string) A name object specifying how the document should be displayed when opened:&lt;ul&gt;&lt;li&gt;UseNone Neither document outline nor thumbnail images visible&lt;/li&gt;&lt;li&gt;UseOutlines Document outline visible&lt;/li&gt;&lt;li&gt;UseThumbs Thumbnail images visible&lt;/li&gt;&lt;li&gt;FullScreen Full-screen mode, with no menu bar, window controls, or any other window visible&lt;/li&gt;&lt;li&gt;UseOC (PDF 1;;d53,2567;;b1,5;;m $mode;;p">
</treenode>
<treenode node="getPageSizeFromFormat;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;2455;2;2460;;;;vpos;;varray;;r&#10;Definition&#10;    getPageSizeFromFormat($format)&#10;&#10;Description&#10;     Get page dimensions from format name.&#10;&#10;Parameters:&#10;     $format - (mixed) The format name&#10;&#10;Return:&#10;   containing page width and height in points;;d55,2455;;b1,5;;m $format;;p">
</treenode>
<treenode node="getPathPaintOperator;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1567;2;1635;;;;vpos;;v;;r&#10;Definition&#10;    getPathPaintOperator($style, $default=&apos;S&apos;)&#10;&#10;Description&#10;     Get the Path-Painting Operators.&#10;&#10;Parameters:&#10;     $style - (string) Style of rendering&#10;     $default - (string) default style;;d67,1567;;b1,5;;m $style;;p $default;;p">
</treenode>
<treenode node="getRandomSeed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;406;2;420;;;;vpos;;vstring;;r&#10;Definition&#10;    getRandomSeed($seed=&apos;&apos;)&#10;&#10;Description&#10;     Returns a string containing random data to be used as a seed for encryption methods.&#10;&#10;Parameters:&#10;     $seed - (string) starting seed value&#10;&#10;Return:&#10;   containing random data;;d48,406;;b1,5;;m $seed;;p">
</treenode>
<treenode node="getSVGTransformMatrix;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1665;2;1750;;;;vpos;;varray;;r&#10;Definition&#10;    getSVGTransformMatrix($attribute)&#10;&#10;Description&#10;     Get the tranformation matrix from SVG transform attribute&#10;&#10;Parameters:&#10;     $attribute - (string) transformation&#10;&#10;Return:&#10;   of transformations;;d58,1665;;b1,5;;m $attribute;;p">
</treenode>
<treenode node="getTagStyleFromCSSarray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1409;2;1431;;;;vpos;;vstring;;r&#10;Definition&#10;    getTagStyleFromCSSarray($css)&#10;&#10;Description&#10;     Compact CSS data array into single string.&#10;&#10;Parameters:&#10;     $css - (array) array of CSS properties&#10;&#10;Return:&#10;   containing merged CSS properties;;d54,1409;;b1,5;;m $css;;p">
</treenode>
<treenode node="getTCPDFProducer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;126;2;128;;;;vpos;;vTCPDF;;r&#10;Definition&#10;    getTCPDFProducer()&#10;&#10;Description&#10;     Return the current TCPDF producer.&#10;&#10;Return:&#10;   producer string;;d43,126;;b1,5;;m">
</treenode>
<treenode node="getTCPDFVersion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;116;2;118;;;;vpos;;vTCPDF;;r&#10;Definition&#10;    getTCPDFVersion()&#10;&#10;Description&#10;     Return the current TCPDF version.&#10;&#10;Return:&#10;   version string;;d42,116;;b1,5;;m">
</treenode>
<treenode node="getTimestamp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;379;2;385;;;;vpos;;vint;;r&#10;Definition&#10;    getTimestamp($date)&#10;&#10;Description&#10;     Returns timestamp in seconds from formatted date-time.&#10;&#10;Parameters:&#10;     $date - (string) Formatted date-time&#10;&#10;Return:&#10;   seconds;;d44,379;;b1,5;;m $date;;p">
</treenode>
<treenode node="getTransformationMatrixProduct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1646;2;1655;;;;vpos;;vtransformation;;r&#10;Definition&#10;    getTransformationMatrixProduct($ta, $tb)&#10;&#10;Description&#10;     Get the product of two SVG tranformation matrices&#10;&#10;Parameters:&#10;     $ta - (array) first SVG tranformation matrix&#10;     $tb - (array) second SVG tranformation matrix&#10;&#10;Return:&#10;   array;;d65,1646;;b1,5;;m $ta;;p $tb;;p">
</treenode>
<treenode node="getUserPermissionCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;535;2;562;;;;vpos;;v;;r&#10;Definition&#10;    getUserPermissionCode($permissions, $mode=0)&#10;&#10;Description&#10;     Return the permission code used on encryption (P value).&#10;&#10;Parameters:&#10;     $permissions - (Array) the set of permissions (specify the ones you want to block)&#10;     $mode - (int) encryption strength: 0 = RC4 40 bit;s 1 = RC4 128 bit;s 2 = AES 128 bit;s 3 = AES 256 bit;;d69,535;;b1,5;;m $permissions;;p $mode;;p">
</treenode>
<treenode node="getVectorsAngle;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1762;2;1774;;;;vpos;;v;;r&#10;Definition&#10;    getVectorsAngle($x1, $y1, $x2, $y2)&#10;&#10;Description&#10;     Returns the angle in radiants between two vectors&#10;&#10;Parameters:&#10;     $x1 - (int) X coordinate of first vector point&#10;     $y1 - (int) Y coordinate of first vector point&#10;     $x2 - (int) X coordinate of second vector point&#10;     $y2 - (int) Y coordinate of second vector point;;d60,1762;;b1,5;;m $x1;;p $y1;;p $x2;;p $y2;;p">
</treenode>
<treenode node="intToRoman;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1440;2;1495;;;;vpos;;vstring;;r&#10;Definition&#10;    intToRoman($number)&#10;&#10;Description&#10;     Returns the Roman representation of an integer number&#10;&#10;Parameters:&#10;     $number - (int) number to convert&#10;&#10;Return:&#10;   roman representation of the specified number;;d44,1440;;b1,5;;m $number;;p">
</treenode>
<treenode node="isValidCSSSelectorForTag;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1204;2;1353;;;;vpos;;vtrue;;r&#10;Definition&#10;    isValidCSSSelectorForTag($dom, $key, $selector)&#10;&#10;Description&#10;     Returns true if the CSS selector is valid for the selected HTML tag&#10;&#10;Parameters:&#10;     $dom - (array) array of HTML tags and properties&#10;     $key - (int) key of the current HTML tag&#10;     $selector - (string) CSS selector string&#10;&#10;Return:&#10;   if the selector is valid, false otherwise;;d72,1204;;b1,5;;m $dom;;p $key;;p $selector;;p">
</treenode>
<treenode node="isValidURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;170;2;173;;;;vpos;;vBoolean;;r&#10;Definition&#10;    isValidURL($url)&#10;&#10;Description&#10;     Check if the URL exist.&#10;&#10;Parameters:&#10;     $url - (string) URL to check&#10;&#10;Return:&#10;   true if the URl exist, false otherwise;;d41,170;;b1,5;;m $url;;p">
</treenode>
<treenode node="objclone;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;329;2;335;;;;vpos;;vcloned;;r&#10;Definition&#10;    objclone($object)&#10;&#10;Description&#10;     Creates a copy of a class object&#10;&#10;Parameters:&#10;     $object - (object) class object to be cloned&#10;&#10;Return:&#10;   object;;d42,329;;b1,5;;m $object;;p">
</treenode>
<treenode node="pregSplit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1822;2;1838;;;;vpos;;vReturns;;r&#10;Definition&#10;    pregSplit($pattern, $modifiers, $subject, $limit=NULL, $flags=NULL)&#10;&#10;Description&#10;     Split string by a regular expression. This is a wrapper for the preg_split function to avoid the bug: https://bugs.php.net/bug.php?id=45850&#10;&#10;Parameters:&#10;     $pattern - (string) The regular expression pattern to search for without the modifiers, as a string&#10;     $modifiers - (string) The modifiers part of the pattern,&#10;     $subject - (string) The input string&#10;     $limit - (int) If specified, then only substrings up to limit are returned with the rest of the string being placed in the last substring&#10;     $flags - (int) The flags as specified on the preg_split PHP function&#10;&#10;Return:&#10;   an array containing substrings of subject split along boundaries matched by pattern;;d92,1822;;b1,5;;m $pattern;;p $modifiers;;p $subject;;p $limit;;p $flags;;p">
</treenode>
<treenode node="removeSHY;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;192;2;198;;;;vpos;;vstring;;r&#10;Definition&#10;    removeSHY($txt=&apos;&apos;, $unicode=true)&#10;&#10;Description&#10;     Removes SHY characters from text. Unicode Data:&lt;ul&gt; &lt;li&gt;Name : SOFT HYPHEN, commonly abbreviated as SHY&lt;/li&gt; &lt;li&gt;HTML Entity (decimal): &quot;&amp;amp;s#173;s&quot;&lt;/li&gt; &lt;li&gt;HTML Entity (hex): &quot;&amp;amp;s#xad;s&quot;&lt;/li&gt; &lt;li&gt;HTML Entity (named): &quot;&amp;amp;sshy;s&quot;&lt;/li&gt; &lt;li&gt;How to type in Microsoft Windows: [Alt +00AD] or [Alt 0173]&lt;/li&gt; &lt;li&gt;UTF-8 (hex): 0xC2 0xAD (c2ad)&lt;/li&gt; &lt;li&gt;UTF-8 character: chr(194).chr(173)&lt;/li&gt; &lt;/ul&gt;&#10;&#10;Parameters:&#10;     $txt - (string) input string&#10;     $unicode - (boolean) True if we are in unicode mode, false otherwise&#10;&#10;Return:&#10;   without SHY characters;;d58,192;;b1,5;;m $txt;;p $unicode;;p">
</treenode>
<treenode node="replacePageNumAliases;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;360;2;370;;;;vpos;;vreplaced;;r&#10;Definition&#10;    replacePageNumAliases($page, $replace, $diff=0)&#10;&#10;Description&#10;     Replace page number aliases with number.&#10;&#10;Parameters:&#10;     $page - (string) Page content&#10;     $replace - (array) Array of replacements (array keys are replacement strings, values are alias arrays)&#10;     $diff - (int) If passed, this will be set to the total char number difference between alias and replacements&#10;&#10;Return:&#10;   page content and updated $diff parameter as array;;d72,360;;b1,5;;m $page;;p $replace;;p $diff;;p">
</treenode>
<treenode node="revstrpos;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;1506;2;1511;;;;vpos;;vReturns;;r&#10;Definition&#10;    revstrpos($haystack, $needle, $offset = 0)&#10;&#10;Description&#10;     Find position of last occurrence of a substring in a string&#10;&#10;Parameters:&#10;     $haystack - (string) The string to search in&#10;     $needle - (string) substring to search&#10;     $offset - (int) May be specified to begin searching an arbitrary number of characters into the string&#10;&#10;Return:&#10;   the position where the needle exists;;d67,1506;;b1,5;;m $haystack;;p $needle;;p $offset;;p">
</treenode>
<treenode node="rfread;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;2067;2;2077;;;;vpos;;vReturns;;r&#10;Definition&#10;    rfread($handle, $length)&#10;&#10;Description&#10;     Binary-safe and URL-safe file read. Reads up to length bytes from the file pointer referenced by handle. Reading stops as soon as one of the following conditions is met: length bytes have been read;s EOF (end of file) is reached.&#10;&#10;Parameters:&#10;     $handle - (resource)&#10;     $length - (int)&#10;&#10;Return:&#10;   the read string or FALSE in case of error;;d49,2067;;b1,5;;m $handle;;p $length;;p">
</treenode>
<treenode node="sendOutputData;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;344;2;350;;;;vpos;;v;;r&#10;Definition&#10;    sendOutputData($data, $length)&#10;&#10;Description&#10;     Output input data and compress it if possible.&#10;&#10;Parameters:&#10;     $data - (string) Data to output&#10;     $length - (int) Data length in bytes;;d55,344;;b1,5;;m $data;;p $length;;p">
</treenode>
<treenode node="set_mqr;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;136;2;144;;;;vpos;;v;;r&#10;Definition&#10;    set_mqr($mqr)&#10;&#10;Description&#10;     Sets the current active configuration setting of magic_quotes_runtime (if the set_magic_quotes_runtime function exist)&#10;&#10;Parameters:&#10;     $mqr - (boolean) FALSE for off, TRUE for on;;d38,136;;b1,5;;m $mqr;;p">
</treenode>
<treenode node="setPageBoxes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;2477;2;2493;;;;vpos;;vpagedim;;r&#10;Definition&#10;    setPageBoxes($page, $type, $llx, $lly, $urx, $ury, $points=false, $k, $pagedim=array())&#10;&#10;Description&#10;     Set page boundaries.&#10;&#10;Parameters:&#10;     $page - (int) page number&#10;     $type - (string) valid values are: &lt;ul&gt;&lt;li&gt;&apos;MediaBox&apos; : the boundaries of the physical medium on which the page shall be displayed or printed;s&lt;/li&gt;&lt;li&gt;&apos;CropBox&apos; : the visible region of default user space;s&lt;/li&gt;&lt;li&gt;&apos;BleedBox&apos; : the region to which the contents of the page shall be clipped when output in a production environment;s&lt;/li&gt;&lt;li&gt;&apos;TrimBox&apos; : the intended dimensions of the finished page after trimming;s&lt;/li&gt;&lt;li&gt;&apos;ArtBox&apos; : the page&apos;s meaningful content (including potential white space)&#10;     $llx - (float) lower-left x coordinate in user units&#10;     $lly - (float) lower-left y coordinate in user units&#10;     $urx - (float) upper-right x coordinate in user units&#10;     $ury - (float) upper-right y coordinate in user units&#10;     $points - (boolean) If true uses user units as unit of measure, otherwise uses PDF points&#10;     $k - (float) Scale factor (number of points in user unit)&#10;     $pagedim - (array) Array of page dimensions&#10;&#10;Return:&#10;   array of page dimensions;;d112,2477;;b1,5;;m $page;;p $type;;p $llx;;p $lly;;p $urx;;p $ury;;p $points;;p $k;;p $pagedim;;p">
</treenode>
<treenode node="swapPageBoxCoordinates;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\tcpdf_static.php;f15;2503;2;2516;;;;vpos;;vpagedim;;r&#10;Definition&#10;    swapPageBoxCoordinates($page, $pagedim)&#10;&#10;Description&#10;     Swap X and Y coordinates of page boxes (change page boxes orientation).&#10;&#10;Parameters:&#10;     $page - (int) page number&#10;     $pagedim - (array) Array of page dimensions&#10;&#10;Return:&#10;   array of page dimensions;;d64,2503;;b1,5;;m $page;;p $pagedim;;p">
</treenode>
</treenode>
<treenode node="TCPDF2DBarcode;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_2d.php;f0;49;1;344;;;;vpos;;v;;r&#10;Definition&#10;    class TCPDF2DBarcode&#10;&#10;Description&#10;      class TCPDF2DBarcode PHP class to creates array representations for 2D barcodes to be used with TCPDF (http://www.tcpdf.org).;;d21,49;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_2d.php;f8;67;2;69;;;;vpos;;v;;r&#10;Definition&#10;    __construct($code, $type)&#10;&#10;Description&#10;     This is the class constructor. Return an array representations for 2D barcodes:&lt;ul&gt; &lt;li&gt;$arrcode[&apos;code&apos;] code to be printed on text label&lt;/li&gt; &lt;li&gt;$arrcode[&apos;num_rows&apos;] required number of rows&lt;/li&gt; &lt;li&gt;$arrcode[&apos;num_cols&apos;] required number of columns&lt;/li&gt; &lt;li&gt;$arrcode[&apos;bcode&apos;][$r][$c] value of the cell is $r row and $c column (0 = transparent, 1 = black)&lt;/li&gt;&lt;/ul&gt;&#10;&#10;Parameters:&#10;     $code - (string) code to print&#10;     $type - (string) type of barcode: &lt;ul&gt;&lt;li&gt;DATAMATRIX : Datamatrix (ISO/IEC 16022)&lt;/li&gt;&lt;li&gt;PDF417 : PDF417 (ISO/IEC 15438:2006)&lt;/li&gt;&lt;li&gt;PDF417,a,e,t,s,f,o0,o1,o2,o3,o4,o5,o6 : PDF417 with parameters: a = aspect ratio (width/height);s e = error correction level (0-8);s t = total number of macro segments;s s = macro segment index (0-99998);s f = file ID;s o0 = File Name (text);s o1 = Segment Count (numeric);s o2 = Time Stamp (numeric);s o3 = Sender (text);s o4 = Addressee (text);s o5 = File Size (numeric);s o6 = Checksum (numeric);;d43,67;;b1,0;;m $code;;p $type;;p">
</treenode>
<treenode node="getBarcodeArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_2d.php;f8;75;2;77;;;;vpos;;varray;;r&#10;Definition&#10;    getBarcodeArray()&#10;&#10;Description&#10;     Return an array representations of barcode.;;d35,75;;b1,0;;m">
</treenode>
<treenode node="getBarcodeHTML;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_2d.php;f8;143;2;162;;;;vpos;;vstring;;r&#10;Definition&#10;    getBarcodeHTML($w=10, $h=10, $color=&apos;black&apos;)&#10;&#10;Description&#10;     Return an HTML representation of barcode.&#10;&#10;Parameters:&#10;     $w - (int) Width of a single rectangle element in pixels&#10;     $h - (int) Height of a single rectangle element in pixels&#10;     $color - (string) Foreground color for bar elements (background is transparent)&#10;&#10;Return:&#10;   HTML code;;d62,143;;b1,0;;m $w;;p $h;;p $color;;p">
</treenode>
<treenode node="getBarcodePNG;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_2d.php;f8;171;2;182;;;;vpos;;v;;r&#10;Definition&#10;    getBarcodePNG($w=3, $h=3, $color=array(0,0,0))&#10;&#10;Description&#10;     Send a PNG image representation of barcode (requires GD or Imagick library).&#10;&#10;Parameters:&#10;     $w - (int) Width of a single rectangle element in pixels&#10;     $h - (int) Height of a single rectangle element in pixels&#10;     $color - (array) RGB (0-255) foreground color for bar elements (background is transparent);;d64,171;;b1,0;;m $w;;p $h;;p $color;;p">
</treenode>
<treenode node="getBarcodePngData;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_2d.php;f8;192;2;243;;;;vpos;;vimage;;r&#10;Definition&#10;    getBarcodePngData($w=3, $h=3, $color=array(0,0,0))&#10;&#10;Description&#10;     Return a PNG image representation of barcode (requires GD or Imagick library).&#10;&#10;Parameters:&#10;     $w - (int) Width of a single rectangle element in pixels&#10;     $h - (int) Height of a single rectangle element in pixels&#10;     $color - (array) RGB (0-255) foreground color for bar elements (background is transparent)&#10;&#10;Return:&#10;   or false in case of error;;d68,192;;b1,0;;m $w;;p $h;;p $color;;p">
</treenode>
<treenode node="getBarcodeSVG;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_2d.php;f8;86;2;97;;;;vpos;;v;;r&#10;Definition&#10;    getBarcodeSVG($w=3, $h=3, $color=&apos;black&apos;)&#10;&#10;Description&#10;     Send barcode as SVG image object to the standard output.&#10;&#10;Parameters:&#10;     $w - (int) Width of a single rectangle element in user units&#10;     $h - (int) Height of a single rectangle element in user units&#10;     $color - (string) Foreground color (in SVG format) for bar elements (background is transparent);;d59,86;;b1,0;;m $w;;p $h;;p $color;;p">
</treenode>
<treenode node="getBarcodeSVGcode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_2d.php;f8;107;2;133;;;;vpos;;vstring;;r&#10;Definition&#10;    getBarcodeSVGcode($w=3, $h=3, $color=&apos;black&apos;)&#10;&#10;Description&#10;     Return a SVG string representation of barcode.&#10;&#10;Parameters:&#10;     $w - (int) Width of a single rectangle element in user units&#10;     $h - (int) Height of a single rectangle element in user units&#10;     $color - (string) Foreground color (in SVG format) for bar elements (background is transparent)&#10;&#10;Return:&#10;   SVG code;;d63,107;;b1,0;;m $w;;p $h;;p $color;;p">
</treenode>
<treenode node="setBarcode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_2d.php;f8;251;2;343;;;;vpos;;varray;;r&#10;Definition&#10;    setBarcode($code, $type)&#10;&#10;Description&#10;     Set the barcode.&#10;&#10;Parameters:&#10;     $code - (string) code to print&#10;     $type - (string) type of barcode: &lt;ul&gt;&lt;li&gt;DATAMATRIX : Datamatrix (ISO/IEC 16022)&lt;/li&gt;&lt;li&gt;PDF417 : PDF417 (ISO/IEC 15438:2006)&lt;/li&gt;&lt;li&gt;PDF417,a,e,t,s,f,o0,o1,o2,o3,o4,o5,o6 : PDF417 with parameters: a = aspect ratio (width/height);s e = error correction level (0-8);s t = total number of macro segments;s s = macro segment index (0-99998);s f = file ID;s o0 = File Name (text);s o1 = Segment Count (numeric);s o2 = Time Stamp (numeric);s o3 = Sender (text);s o4 = Addressee (text);s o5 = File Size (numeric);s o6 = Checksum (numeric);;d42,251;;b1,0;;m $code;;p $type;;p">
</treenode>
</treenode>
<treenode node="TCPDFBarcode;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f0;49;1;2353;;;;vpos;;v;;r&#10;Definition&#10;    class TCPDFBarcode&#10;&#10;Description&#10;      class TCPDFBarcode PHP class to creates array representations for common 1D barcodes to be used with TCPDF (http://www.tcpdf.org).&lt;br&gt;;;d19,49;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f8;72;2;74;;;;vpos;;v;;r&#10;Definition&#10;    __construct($code, $type)&#10;&#10;Description&#10;     This is the class constructor. Return an array representations for common 1D barcodes:&lt;ul&gt; &lt;li&gt;$arrcode[&apos;code&apos;] code to be printed on text label&lt;/li&gt; &lt;li&gt;$arrcode[&apos;maxh&apos;] max barcode height&lt;/li&gt; &lt;li&gt;$arrcode[&apos;maxw&apos;] max barcode width&lt;/li&gt; &lt;li&gt;$arrcode[&apos;bcode&apos;][$k] single bar or space in $k position&lt;/li&gt; &lt;li&gt;$arrcode[&apos;bcode&apos;][$k][&apos;t&apos;] bar type: true = bar, false = space.&lt;/li&gt; &lt;li&gt;$arrcode[&apos;bcode&apos;][$k][&apos;w&apos;] bar width in units.&lt;/li&gt; &lt;li&gt;$arrcode[&apos;bcode&apos;][$k][&apos;h&apos;] bar height in units.&lt;/li&gt; &lt;li&gt;$arrcode[&apos;bcode&apos;][$k][&apos;p&apos;] bar top position (0 = top, 1 = middle)&lt;/li&gt;&lt;/ul&gt;&#10;&#10;Parameters:&#10;     $code - (string) code to print&#10;     $type - (string) type of barcode: &lt;ul&gt;&lt;li&gt;C39 : CODE 39 - ANSI MH10;;d43,72;;b1,0;;m $code;;p $type;;p">
</treenode>
<treenode node="barcode_c128;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;957;2;1279;;;;vpos;;varray;;r&#10;Definition&#10;    barcode_c128($code, $type=&apos;&apos;)&#10;&#10;Description&#10;     C128 barcodes. Very capable code, excellent density, high reliability;s in very wide use world-wide&#10;&#10;Parameters:&#10;     $code - (string) code to represent&#10;     $type - (string) barcode type: A, B, C or empty for automatic switch (AUTO mode)&#10;&#10;Return:&#10;   barcode representation;;d50,957;;b2,0;;m $code;;p $type;;p">
</treenode>
<treenode node="barcode_codabar;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;1818;2;1865;;;;vpos;;varray;;r&#10;Definition&#10;    barcode_codabar($code)&#10;&#10;Description&#10;     CODABAR barcodes. Older code often used in library systems, sometimes in blood banks&#10;&#10;Parameters:&#10;     $code - (string) code to represent&#10;&#10;Return:&#10;   barcode representation;;d43,1818;;b2,0;;m $code;;p">
</treenode>
<treenode node="barcode_code11;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;1874;2;1956;;;;vpos;;varray;;r&#10;Definition&#10;    barcode_code11($code)&#10;&#10;Description&#10;     CODE11 barcodes. Used primarily for labeling telecommunications equipment&#10;&#10;Parameters:&#10;     $code - (string) code to represent&#10;&#10;Return:&#10;   barcode representation;;d42,1874;;b2,0;;m $code;;p">
</treenode>
<treenode node="barcode_code39;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;392;2;477;;;;vpos;;varray;;r&#10;Definition&#10;    barcode_code39($code, $extended=false, $checksum=false)&#10;&#10;Description&#10;     CODE 39 - ANSI MH10.8M-1983 - USD-3 - 3 of 9. General-purpose code in very wide use world-wide&#10;&#10;Parameters:&#10;     $code - (string) code to represent&#10;     $extended - (boolean) if true uses the extended mode&#10;     $checksum - (boolean) if true add a checksum to the code&#10;&#10;Return:&#10;   barcode representation;;d76,392;;b2,0;;m $code;;p $extended;;p $checksum;;p">
</treenode>
<treenode node="barcode_code93;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;559;2;679;;;;vpos;;varray;;r&#10;Definition&#10;    barcode_code93($code)&#10;&#10;Description&#10;     CODE 93 - USS-93 Compact code similar to Code 39&#10;&#10;Parameters:&#10;     $code - (string) code to represent&#10;&#10;Return:&#10;   barcode representation;;d42,559;;b2,0;;m $code;;p">
</treenode>
<treenode node="barcode_eanext;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;1519;2;1584;;;;vpos;;varray;;r&#10;Definition&#10;    barcode_eanext($code, $len=5)&#10;&#10;Description&#10;     UPC-Based Extensions 2-Digit Ext.: Used to indicate magazines and newspaper issue numbers 5-Digit Ext.: Used to mark suggested retail price of books&#10;&#10;Parameters:&#10;     $code - (string) code to represent&#10;     $len - (string) barcode type: 2 = 2-Digit, 5 = 5-Digit&#10;&#10;Return:&#10;   barcode representation;;d50,1519;;b2,0;;m $code;;p $len;;p">
</treenode>
<treenode node="barcode_eanupc;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;1326;2;1508;;;;vpos;;varray;;r&#10;Definition&#10;    barcode_eanupc($code, $len=13)&#10;&#10;Description&#10;     EAN13 and UPC-A barcodes. EAN13: European Article Numbering international retail product code UPC-A: Universal product code seen on almost all retail products in the USA and Canada UPC-E: Short version of UPC symbol&#10;&#10;Parameters:&#10;     $code - (string) code to represent&#10;     $len - (string) barcode type: 6 = UPC-E, 8 = EAN8, 13 = EAN13, 12 = UPC-A&#10;&#10;Return:&#10;   barcode representation;;d51,1326;;b2,0;;m $code;;p $len;;p">
</treenode>
<treenode node="barcode_i25;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;893;2;947;;;;vpos;;varray;;r&#10;Definition&#10;    barcode_i25($code, $checksum=false)&#10;&#10;Description&#10;     Interleaved 2 of 5 barcodes. Compact numeric code, widely used in industry, air cargo Contains digits (0 to 9) and encodes the data in the width of both bars and spaces.&#10;&#10;Parameters:&#10;     $code - (string) code to represent&#10;     $checksum - (boolean) if true add a checksum to the code&#10;&#10;Return:&#10;   barcode representation;;d56,893;;b2,0;;m $code;;p $checksum;;p">
</treenode>
<treenode node="barcode_imb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;2053;2;2169;;;;vpos;;varray;;r&#10;Definition&#10;    barcode_imb($code)&#10;&#10;Description&#10;     IMB - Intelligent Mail Barcode - Onecode - USPS-B-3200 (requires PHP bcmath extension) Intelligent Mail barcode is a 65-bar code for use on mail in the United States. The fields are described as follows:&lt;ul&gt;&lt;li&gt;The Barcode Identifier shall be assigned by USPS to encode the presort identification that is currently printed in human readable form on the optional endorsement line (OEL) as well as for future USPS use. This shall be two digits, with the second digit in the range of 0–4. The allowable encoding ranges shall be 00–04, 10–14, 20–24, 30–34, 40–44, 50–54, 60–64, 70–74, 80–84, and 90–94.&lt;/li&gt;&lt;li&gt;The Service Type Identifier shall be assigned by USPS for any combination of services requested on the mailpiece. The allowable encoding range shall be 000http://it2.php.net/manual/en/function.dechex.php–999. Each 3-digit value shall correspond to a particular mail class with a particular combination of service(s). Each service program, such as OneCode Confirm and OneCode ACS, shall provide the list of Service Type Identifier values.&lt;/li&gt;&lt;li&gt;The Mailer or Customer Identifier shall be assigned by USPS as a unique, 6 or 9 digit number that identifies a business entity. The allowable encoding range for the 6 digit Mailer ID shall be 000000- 899999, while the allowable encoding range for the 9 digit Mailer ID shall be 900000000-999999999.&lt;/li&gt;&lt;li&gt;The Serial or Sequence Number shall be assigned by the mailer for uniquely identifying and tracking mailpieces. The allowable encoding range shall be 000000000–999999999 when used with a 6 digit Mailer ID and 000000-999999 when used with a 9 digit Mailer ID. e. The Delivery Point ZIP Code shall be assigned by the mailer for routing the mailpiece. This shall replace POSTNET for routing the mailpiece to its final delivery point. The length may be 0, 5, 9, or 11 digits. The allowable encoding ranges shall be no ZIP Code, 00000–99999,  000000000–999999999, and 00000000000–99999999999.&lt;/li&gt;&lt;/ul&gt;&#10;&#10;Parameters:&#10;     $code - (string) code to print, separate the ZIP (routing code) from the rest using a minus char &apos;-&apos; (BarcodeID_ServiceTypeID_MailerID_SerialNumber-RoutingCode)&#10;&#10;Return:&#10;   barcode representation;;d39,2053;;b2,0;;m $code;;p">
</treenode>
<treenode node="barcode_imb_pre;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;2178;2;2220;;;;vpos;;varray;;r&#10;Definition&#10;    barcode_imb_pre($code)&#10;&#10;Description&#10;     IMB - Intelligent Mail Barcode - Onecode - USPS-B-3200&#10;&#10;Parameters:&#10;     $code - (string) pre-formatted IMB barcode (65 chars &quot;FADT&quot;)&#10;&#10;Return:&#10;   barcode representation;;d43,2178;;b2,0;;m $code;;p">
</treenode>
<treenode node="barcode_msi;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;762;2;810;;;;vpos;;varray;;r&#10;Definition&#10;    barcode_msi($code, $checksum=false)&#10;&#10;Description&#10;     MSI. Variation of Plessey code, with similar applications Contains digits (0 to 9) and encodes the data only in the width of bars.&#10;&#10;Parameters:&#10;     $code - (string) code to represent&#10;     $checksum - (boolean) if true add a checksum to the code (modulo 11)&#10;&#10;Return:&#10;   barcode representation;;d56,762;;b2,0;;m $code;;p $checksum;;p">
</treenode>
<treenode node="barcode_pharmacode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;1965;2;1982;;;;vpos;;varray;;r&#10;Definition&#10;    barcode_pharmacode($code)&#10;&#10;Description&#10;     Pharmacode Contains digits (0 to 9)&#10;&#10;Parameters:&#10;     $code - (string) code to represent&#10;&#10;Return:&#10;   barcode representation;;d46,1965;;b2,0;;m $code;;p">
</treenode>
<treenode node="barcode_pharmacode2t;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;1991;2;2042;;;;vpos;;varray;;r&#10;Definition&#10;    barcode_pharmacode2t($code)&#10;&#10;Description&#10;     Pharmacode two-track Contains digits (0 to 9)&#10;&#10;Parameters:&#10;     $code - (string) code to represent&#10;&#10;Return:&#10;   barcode representation;;d48,1991;;b2,0;;m $code;;p">
</treenode>
<treenode node="barcode_postnet;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;1594;2;1656;;;;vpos;;varray;;r&#10;Definition&#10;    barcode_postnet($code, $planet=false)&#10;&#10;Description&#10;     POSTNET and PLANET barcodes. Used by U.S. Postal Service for automated mail sorting&#10;&#10;Parameters:&#10;     $code - (string) zip code to represent&#10;     $planet - (boolean) if true print the PLANET barcode, otherwise print POSTNET&#10;&#10;Return:&#10;   barcode representation;;d58,1594;;b2,0;;m $code;;p $planet;;p">
</treenode>
<treenode node="barcode_rms4cc;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;1667;2;1809;;;;vpos;;varray;;r&#10;Definition&#10;    barcode_rms4cc($code, $kix=false)&#10;&#10;Description&#10;     RMS4CC - CBC - KIX RMS4CC (Royal Mail 4-state Customer Code) - CBC (Customer Bar Code) - KIX (Klant index - Customer index) RM4SCC is the name of the barcode symbology used by the Royal Mail for its Cleanmail service.&#10;&#10;Parameters:&#10;     $code - (string) code to print&#10;     $kix - (boolean) if true prints the KIX variation (doesn&apos;t use the start and end symbols, and the checksum) - in this case the house number must be sufficed with an X and placed at the end of the code&#10;&#10;Return:&#10;   barcode representation;;d54,1667;;b2,0;;m $code;;p $kix;;p">
</treenode>
<treenode node="barcode_s25;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;821;2;853;;;;vpos;;varray;;r&#10;Definition&#10;    barcode_s25($code, $checksum=false)&#10;&#10;Description&#10;     Standard 2 of 5 barcodes. Used in airline ticket marking, photofinishing Contains digits (0 to 9) and encodes the data only in the width of bars.&#10;&#10;Parameters:&#10;     $code - (string) code to represent&#10;     $checksum - (boolean) if true add a checksum to the code&#10;&#10;Return:&#10;   barcode representation;;d56,821;;b2,0;;m $code;;p $checksum;;p">
</treenode>
<treenode node="binseq_to_array;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;863;2;882;;;;vpos;;varray;;r&#10;Definition&#10;    binseq_to_array($seq, $bararray)&#10;&#10;Description&#10;     Convert binary barcode sequence to TCPDF barcode array.&#10;&#10;Parameters:&#10;     $seq - (string) barcode as binary sequence&#10;     $bararray - (array) barcode array&#10;&#10;Return:&#10;   barcode representation;;d53,863;;b2,0;;m $seq;;p $bararray;;p">
</treenode>
<treenode node="checksum_code39;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;536;2;550;;;;vpos;;vchar;;r&#10;Definition&#10;    checksum_code39($code)&#10;&#10;Description&#10;     Calculate CODE 39 checksum (modulo 43).&#10;&#10;Parameters:&#10;     $code - (string) code to represent&#10;&#10;Return:&#10;   checksum;;d43,536;;b2,0;;m $code;;p">
</treenode>
<treenode node="checksum_code93;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;687;2;728;;;;vpos;;vstring;;r&#10;Definition&#10;    checksum_code93($code)&#10;&#10;Description&#10;     Calculate CODE 93 checksum (modulo 47).&#10;&#10;Parameters:&#10;     $code - (string) code to represent&#10;&#10;Return:&#10;   checksum code;;d43,687;;b2,0;;m $code;;p">
</treenode>
<treenode node="checksum_s25;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;736;2;751;;;;vpos;;vint;;r&#10;Definition&#10;    checksum_s25($code)&#10;&#10;Description&#10;     Checksum for standard 2 of 5 barcodes.&#10;&#10;Parameters:&#10;     $code - (string) code to process&#10;&#10;Return:&#10;   checksum;;d40,736;;b2,0;;m $code;;p">
</treenode>
<treenode node="dec_to_hex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f8;2228;2;2244;;;;vpos;;vstring;;r&#10;Definition&#10;    dec_to_hex($number)&#10;&#10;Description&#10;     Convert large integer number to hexadecimal representation. (requires PHP bcmath extension)&#10;&#10;Parameters:&#10;     $number - (string) number to convert specified as a string&#10;&#10;Return:&#10;   hexadecimal representation;;d37,2228;;b1,0;;m $number;;p">
</treenode>
<treenode node="encode_code39_ext;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;485;2;528;;;;vpos;;vencoded;;r&#10;Definition&#10;    encode_code39_ext($code)&#10;&#10;Description&#10;     Encode a string to be used for CODE 39 Extended mode.&#10;&#10;Parameters:&#10;     $code - (string) code to represent&#10;&#10;Return:&#10;   string;;d45,485;;b2,0;;m $code;;p">
</treenode>
<treenode node="get128ABsequence;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;1287;2;1314;;;;vpos;;varray;;r&#10;Definition&#10;    get128ABsequence($code)&#10;&#10;Description&#10;     Split text code in A/B sequence for 128 code&#10;&#10;Parameters:&#10;     $code - (string) code to split&#10;&#10;Return:&#10;   sequence;;d44,1287;;b2,0;;m $code;;p">
</treenode>
<treenode node="getBarcodeArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f8;81;2;83;;;;vpos;;varray;;r&#10;Definition&#10;    getBarcodeArray()&#10;&#10;Description&#10;     Return an array representations of barcode.;;d35,81;;b1,0;;m">
</treenode>
<treenode node="getBarcodeHTML;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f8;146;2;162;;;;vpos;;vstring;;r&#10;Definition&#10;    getBarcodeHTML($w=2, $h=30, $color=&apos;black&apos;)&#10;&#10;Description&#10;     Return an HTML representation of barcode.&#10;&#10;Parameters:&#10;     $w - (int) Width of a single bar element in pixels&#10;     $h - (int) Height of a single bar element in pixels&#10;     $color - (string) Foreground color for bar elements (background is transparent)&#10;&#10;Return:&#10;   HTML code;;d61,146;;b1,0;;m $w;;p $h;;p $color;;p">
</treenode>
<treenode node="getBarcodePNG;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f8;171;2;181;;;;vpos;;v;;r&#10;Definition&#10;    getBarcodePNG($w=2, $h=30, $color=array(0,0,0))&#10;&#10;Description&#10;     Send a PNG image representation of barcode (requires GD or Imagick library).&#10;&#10;Parameters:&#10;     $w - (int) Width of a single bar element in pixels&#10;     $h - (int) Height of a single bar element in pixels&#10;     $color - (array) RGB (0-255) foreground color for bar elements (background is transparent);;d65,171;;b1,0;;m $w;;p $h;;p $color;;p">
</treenode>
<treenode node="getBarcodePngData;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f8;191;2;239;;;;vpos;;vimage;;r&#10;Definition&#10;    getBarcodePngData($w=2, $h=30, $color=array(0,0,0))&#10;&#10;Description&#10;     Return a PNG image representation of barcode (requires GD or Imagick library).&#10;&#10;Parameters:&#10;     $w - (int) Width of a single bar element in pixels&#10;     $h - (int) Height of a single bar element in pixels&#10;     $color - (array) RGB (0-255) foreground color for bar elements (background is transparent)&#10;&#10;Return:&#10;   or false in case of error;;d69,191;;b1,0;;m $w;;p $h;;p $color;;p">
</treenode>
<treenode node="getBarcodeSVG;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f8;92;2;103;;;;vpos;;v;;r&#10;Definition&#10;    getBarcodeSVG($w=2, $h=30, $color=&apos;black&apos;)&#10;&#10;Description&#10;     Send barcode as SVG image object to the standard output.&#10;&#10;Parameters:&#10;     $w - (int) Minimum width of a single bar in user units&#10;     $h - (int) Height of barcode in user units&#10;     $color - (string) Foreground color (in SVG format) for bar elements (background is transparent);;d60,92;;b1,0;;m $w;;p $h;;p $color;;p">
</treenode>
<treenode node="getBarcodeSVGcode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f8;113;2;136;;;;vpos;;vstring;;r&#10;Definition&#10;    getBarcodeSVGcode($w=2, $h=30, $color=&apos;black&apos;)&#10;&#10;Description&#10;     Return a SVG string representation of barcode.&#10;&#10;Parameters:&#10;     $w - (int) Minimum width of a single bar in user units&#10;     $h - (int) Height of barcode in user units&#10;     $color - (string) Foreground color (in SVG format) for bar elements (background is transparent)&#10;&#10;Return:&#10;   SVG code;;d64,113;;b1,0;;m $w;;p $h;;p $color;;p">
</treenode>
<treenode node="hex_to_dec;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f8;2252;2;2261;;;;vpos;;vstring;;r&#10;Definition&#10;    hex_to_dec($hex)&#10;&#10;Description&#10;     Convert large hexadecimal number to decimal representation (string). (requires PHP bcmath extension)&#10;&#10;Parameters:&#10;     $hex - (string) hexadecimal number to convert specified as a string&#10;&#10;Return:&#10;   hexadecimal representation;;d34,2252;;b1,0;;m $hex;;p">
</treenode>
<treenode node="imb_crc11fcs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;2269;2;2297;;;;vpos;;vint;;r&#10;Definition&#10;    imb_crc11fcs($code_arr)&#10;&#10;Description&#10;     Intelligent Mail Barcode calculation of Frame Check Sequence&#10;&#10;Parameters:&#10;     $code_arr - (string) array of hexadecimal values (13 bytes holding 102 bits right justified)&#10;&#10;Return:&#10;   11 bit Frame Check Sequence as integer (decimal base);;d44,2269;;b2,0;;m $code_arr;;p">
</treenode>
<treenode node="imb_reverse_us;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;2305;2;2313;;;;vpos;;vint;;r&#10;Definition&#10;    imb_reverse_us($num)&#10;&#10;Description&#10;     Reverse unsigned short value&#10;&#10;Parameters:&#10;     $num - (int) value to reversr&#10;&#10;Return:&#10;   reversed value;;d41,2305;;b2,0;;m $num;;p">
</treenode>
<treenode node="imb_tables;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f11;2322;2;2351;;;;vpos;;varray;;r&#10;Definition&#10;    imb_tables($n, $size)&#10;&#10;Description&#10;     generate Nof13 tables used for Intelligent Mail Barcode&#10;&#10;Parameters:&#10;     $n - (int) is the type of table: 2 for 2of13 table, 5 for 5of13table&#10;     $size - (int) size of table (78 for n=2 and 1287 for n=5)&#10;&#10;Return:&#10;   requested table;;d42,2322;;b2,0;;m $n;;p $size;;p">
</treenode>
<treenode node="setBarcode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tcpdf_barcodes_1d.php;f8;248;2;381;;;;vpos;;varray;;r&#10;Definition&#10;    setBarcode($code, $type)&#10;&#10;Description&#10;     Set the barcode.&#10;&#10;Parameters:&#10;     $code - (string) code to print&#10;     $type - (string) type of barcode: &lt;ul&gt;&lt;li&gt;C39 : CODE 39 - ANSI MH10&#10;&#10;Return:&#10;   barcode array;;d42,248;;b1,0;;m $code;;p $type;;p">
</treenode>
</treenode>
<treenode node="TOC_TCPDF;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_059.php;f0;32;1;62;;;;vpos;;vTCPDF;;c;;r&#10;Definition&#10;    class TOC_TCPDF extends TCPDF&#10;&#10;Description&#10;     TCPDF class extension with custom header and footer for TOC page;;d30,32;;b0,0;;m">
<treenode node="Footer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_059.php;f8;52;2;60;;;;vpos;;v;;r&#10;Definition&#10;    Footer()&#10;&#10;Description&#10;     Overwrite Footer() method.;;d26,52;;b1,0;;m">
</treenode>
<treenode node="Header;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\examples\example_059.php;f8;38;2;46;;;;vpos;;v;;r&#10;Definition&#10;    Header()&#10;&#10;Description&#10;     Overwrite Header() method.;;d26,38;;b1,0;;m">
</treenode>
</treenode>
<treenode node="UploadException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\exceptions\NewFile.php;f0;4;1;42;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\exceptions\upload_exception.php;f0;4;1;41;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\exceptions\upload_exceptions.php;f0;4;1;41;;;;vpos;;vException;;c;;r;;d0,5;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\exceptions\NewFile.php;f11;6;5;9;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\exceptions\upload_exception.php;f11;6;5;9;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\exceptions\upload_exceptions.php;f11;6;5;9;;;;vpos;;v;;r;;d39,6;;b1,0;;mcode;;p">
</treenode>
<treenode node="codeToMessage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\exceptions\NewFile.php;f12;11;5;41;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\exceptions\upload_exception.php;f12;11;5;40;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\exceptions\upload_exceptions.php;f12;11;5;40;;;;vpos;;v;;r;;d4,12;;b3,0;;mcode;;p">
</treenode>
</treenode>
<treenode node="View;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\view.php;f0;4;1;21;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="generate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\view.php;f8;17;2;20;;;;vpos;;vmixed;;r&#10;Definition&#10;    generate($content_view, $layout_view, $title, $data = null)&#10;&#10;Description&#10;     Generates web page.;;d1,18;;b1,0;;mcontent_view;;playout_view;;ptitle;;pdata;;p">
</treenode>
</treenode>
<treenode node="XfdfFile;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\XfdfFile.php;f0;15;1;108;;;;vpos;;vFile;;c;;r&#10;Definition&#10;    class XfdfFile extends File&#10;&#10;Description&#10;     XfdfFile;;d0,16;;b0,0;;m">
<treenode node="XFDF_FOOTER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\XfdfFile.php;f9;25;21;25;;;;vpos;;v;;r&lt;&lt;&lt;FDF&#10;&lt;/fields&gt;&#10;&lt;/xfdf&gt;&#10;FDF;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="XFDF_HEADER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\XfdfFile.php;f9;18;21;18;;;;vpos;;v;;r&lt;&lt;&lt;FDF&#10;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;xfdf xmlns=&quot;http://ns.adobe.com/xfdf/&quot; xml:space=&quot;preserve&quot;&gt;&#10;&lt;fields&gt;&#10;FDF;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\XfdfFile.php;f11;39;5;87;;;;vpos;;v;;r&#10;Definition&#10;    __construct($data, $suffix = null, $prefix = null, $directory = null, $encoding = &apos;UTF-8&apos;)&#10;&#10;Description&#10;     Constructor&#10;&#10;Parameters:&#10;    array $data - the form data as name =&gt; value&#10;    string|null $suffix - the optional suffix for the tmp file&#10;    string|null $suffix - the optional prefix for the tmp file&#10;    string|null $directory - directory where the file should be created&#10;    string|null $encoding - of the data;;d4,40;;b1,0;;marray $data;;pstring|null $suffix;;pstring|null $suffix;;pstring|null $directory;;pstring|null $encoding;;p">
</treenode>
<treenode node="writeFields;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\XfdfFile.php;f14;96;5;107;;;;vpos;;v;;r&#10;Definition&#10;    writeFields($fp, $fields)&#10;&#10;Description&#10;     Write the fields to the given filepointer&#10;&#10;Parameters:&#10;    int $fp&#10;    mixed[] $fields - an array of field values;;d4,97;;b2,0;;mint $fp;;pmixed[] $fields;;p">
</treenode>
</treenode>
<treenode node="XfdfFileTest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\XfdfFileTest.php;f0;3;1;28;;;;vpos;;vTestCase;;c;;r;;d0,4;;b0,0;;m">
<treenode node="testXfdfFileCreation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\XfdfFileTest.php;f11;5;5;27;;;;vpos;;v;;r;;d43,5;;b1,0;;m">
</treenode>
</treenode>
<treenode node="XML_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\xml_helper.php;f0;4;1;61;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="getProperties;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;45;5;56;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\xml_helper.php;f15;49;5;60;;;;vpos;;varray;;r&#10;Definition&#10;    getProperties($xml)&#10;&#10;Description&#10;     Gets properties from XML.;;d4,50;;b1,5;;mxml;;p">
</treenode>
<treenode node="loadXml;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;15;2;38;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\xml_helper.php;f15;15;2;42;;;;vpos;;vxml;;r&#10;Definition&#10;    loadXml($server, $file, $filter = null, $username = null, $password = null)&#10;&#10;Description&#10;     Loads XML from URL.;;d1,16;;b1,5;;mserver;;pfile;;pfilter;;pusername;;ppassword;;p">
</treenode>
</treenode>
<treenode node="CAS_autoload;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Autoload.php;f0;23;1;73;;;;vpos;;vbool;;r&#10;Definition&#10;    CAS_autoload($class)&#10;&#10;Description&#10;     Autoload a class&#10;&#10;Parameters:&#10;    string $class - Classname to load;;d0,24;;b0,0;;mstring $class;;p">
</treenode>
<treenode node="error_processor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\index_new.php;f0;43;1;46;;C:\wamp\wamp64\www\vhost_portalbsu\index.php;f1;36;2;41;;;;vpos;;v;;r;;d1,37;;b0,0;;merrno;;perrstr;;perrfile;;perrline;;perrcontext;;p">
</treenode>
<treenode node="getRegion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\views\ajax\NewFile.php;f0;4;1;11;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\web\ajax\NewFile.php;f0;4;1;11;;;;vpos;;v;;r;;d26,72;;b0,0;;mcode;;p">
</treenode>
<treenode node="gettmpdir;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f0;247;1;252;;;;vpos;;v;;r&#10;Definition&#10;    gettmpdir()&#10;&#10;Description&#10;     The default directory for the debug file under Unix.;;d21,247;;b0,0;;m">
</treenode>
<treenode node="includeFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f0;441;1;444;;;;vpos;;v;;r&#10;Definition&#10;    includeFile($file)&#10;&#10;Description&#10;     Scope isolated include.;;d0,442;;b0,0;;mfile;;p">
</treenode>
<treenode node="showHelp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\tools\tcpdf_addfont.php;f0;59;1;125;;;;vpos;;v;;r&#10;Definition&#10;    showHelp()&#10;&#10;Description&#10;     Display help guide for this command.;;d20,59;;b0,0;;m">
</treenode>
<treenode node="stepError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\views\main.php;f1;297;2;302;;;;vpos;;v;;r;;d1,298;;b0,0;;mrequired;;p">
</treenode>
<treenode node="stepSuccess;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\views\main.php;f1;286;2;296;;;;vpos;;v;;r;;d1,287;;b0,0;;mcount_msg;;pcount;;p">
</treenode>
<treenode node="str_split;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\TCPDF\include\barcodes\qrcode.php;f1;259;2;270;;;;vpos;;vIf;;r&#10;Definition&#10;    str_split($string, $split_length=1)&#10;&#10;Description&#10;     Convert a string to an array (needed for PHP4 compatibility)&#10;&#10;Parameters:&#10;     $string - (string) The input string&#10;     $split_length - (int) Maximum length of the chunk&#10;&#10;Return:&#10;   the optional split_length  parameter is specified, the returned array will be broken down into chunks with each being split_length  in length, otherwise each chunk will be one character in length;;d46,259;;b0,0;;m $string;;p $split_length;;p">
</treenode>
</phptree>
</codestructure>