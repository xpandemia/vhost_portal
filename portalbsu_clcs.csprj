<codestructure version="5.14">
<phptree>
<treenode node="ACTION;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\bootstrap.php;f8;112;14;112;;;;vpos;;v;;r$actionName;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ADRREG;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_.php;f8;6;14;6;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f8;6;14;6;;;;vpos;;v;;rarray(&#10;     &apos;name&apos; =&gt; &apos;Адрес регистрации&apos;,&#10;     &apos;plc&apos; =&gt; &apos;Индекс, Область, Район, Город или Населённый пункт, Улица, Дом, Корпус, Квартира&apos;,&#10;     &apos;help&apos; =&gt; &apos;Адрес регистрации должно содержать &lt;b&gt;только цифры, русские буквы, тире, точки, запятые или пробелы&lt;/b&gt;, и быть не более &lt;b&gt;255&lt;/b&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ADRRES;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f8;10;14;10;;;;vpos;;v;;rarray(&#10;     &apos;name&apos; =&gt; &apos;Адрес проживания&apos;,&#10;     &apos;plc&apos; =&gt; &apos;Индекс, Область, Район, Город или Населённый пункт, Улица, Дом, Корпус, Квартира&apos;,&#10;     &apos;help&apos; =&gt; &apos;Адрес проживания должно содержать &lt;b&gt;только цифры, русские буквы, тире, точки, запятые или пробелы&lt;/b&gt;, и быть не более &lt;b&gt;255&lt;/b&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="APP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;69;11;69;;;;vpos;;v;;rarray(&#10;					&apos;id&apos; =&gt; &apos;form_app&apos;,&#10;					&apos;hdr&apos; =&gt; &apos;Заявление&apos;,&#10;					&apos;ctr&apos; =&gt; &apos;Application&apos;,&#10;					&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="APP_CODE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\index.php;f8;3;16;3;;;;vpos;;v;;r&apos;portalbsu&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="APP_DEVELOPER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\index.php;f8;5;21;5;;;;vpos;;v;;r&apos;Никитин Олег Сергеевич&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="APP_DEVELOPER_EMAIL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\index.php;f8;7;27;7;;;;vpos;;v;;r&apos;nikitin_o@bsu.edu.ru&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="APP_DEVELOPER_PHONE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\index.php;f8;6;27;6;;;;vpos;;v;;r&apos;8(903) 578-31-62&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="APP_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\index.php;f8;2;16;2;;;;vpos;;v;;r&apos;Личный кабинет абитуриента&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="APP_VERSION;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\index.php;f8;4;19;4;;;;vpos;;v;;r&apos;0.3.1&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="BASEPATH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\index.php;f8;84;16;84;;;;vpos;;v;;r&apos;http://&apos;.$_SERVER[&apos;SERVER_NAME&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="BEHAVIOR;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\bootstrap.php;f8;56;16;56;;;;vpos;;v;;r$behavior;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="BIRTHPLACE_HELP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;9;23;9;;;;vpos;;v;;r&apos;Место рождения должно содержать &lt;b&gt;только русские буквы, тире, точки, запятые или пробелы&lt;/b&gt;, и быть не более &lt;b&gt;240&lt;/b&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="BIRTHPLACE_PLC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;14;22;14;;;;vpos;;v;;r&apos;Место рождения&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAPTCHA_LEN;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\captcha_helper.php;f8;4;19;4;;;;vpos;;v;;r6;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAS_CONTEXT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\cas_config.php;f8;14;19;14;;;;vpos;;v;;r&apos;/cas&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAS_DOMAIN;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\cas_config.php;f8;4;18;4;;;;vpos;;v;;r&apos;bsu.edu.ru&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAS_Exception;PHP:Interface Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Exception.php;f0;54;1;57;;;;vpos;;v;;r&#10;Definition&#10;    interface CAS_Exception&#10;&#10;Description&#10;     A root exception interface for all exceptions in phpCAS.;;d0,55;;b0,0;;m">
</treenode>
<treenode node="CAS_HOST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\cas_config.php;f8;11;16;11;;;;vpos;;v;;r&apos;auth.bsu.edu.ru&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAS_Languages_LanguageInterface;PHP:Interface Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\LanguageInterface.php;f0;43;1;94;;;;vpos;;v;;r&#10;Definition&#10;    interface CAS_Languages_LanguageInterface&#10;&#10;Description&#10;     Language Interface class for all internationalization files;;d0,44;;b0,0;;m">
<treenode node="getAuthenticationFailed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\LanguageInterface.php;f11;78;45;78;;;;vpos;;vstring;;r&#10;Description&#10;     Get authentication failed string&#10;&#10;Return:&#10;   authentication failed;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\LanguageInterface.php;f11;57;45;57;;;;vpos;;vstring;;r&#10;Description&#10;     Get authentication wanted string&#10;&#10;Return:&#10;   authentication wanted;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\LanguageInterface.php;f11;64;31;64;;;;vpos;;vstring;;r&#10;Description&#10;     Get logout string&#10;&#10;Return:&#10;   logout;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\LanguageInterface.php;f11;92;43;92;;;;vpos;;vstring;;r&#10;Description&#10;     Get the service unavailable string&#10;&#10;Return:&#10;   service unavailable;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\LanguageInterface.php;f11;71;49;71;;;;vpos;;vstring;;r&#10;Description&#10;     Get the should have been redirected string&#10;&#10;Return:&#10;   should habe been redirected;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\LanguageInterface.php;f11;50;36;50;;;;vpos;;vstring;;r&#10;Description&#10;     Get the using server string&#10;&#10;Return:&#10;   using server;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\LanguageInterface.php;f11;85;48;85;;;;vpos;;vstring;;r&#10;Description&#10;     Get the your were not authenticated string&#10;&#10;Return:&#10;   not authenticated;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_PGT_STORAGE_DB_DEFAULT_TABLE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f8;29;40;29;;;;vpos;;v;;r&#10;Description&#10;     Licensed to Jasig under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAS_PGT_STORAGE_FILE_DEFAULT_PATH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;154;41;154;;;;vpos;;v;;r&#10;Description&#10;     Default path used when storing PGT&apos;s to file;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAS_PORT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\cas_config.php;f8;17;16;17;;;;vpos;;v;;r443;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAS_ProxiedService;PHP:Interface Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService.php;f0;46;1;70;;;;vpos;;v;;r&#10;Definition&#10;    interface CAS_ProxiedService&#10;&#10;Description&#10;     This interface defines methods that allow proxy-authenticated service handlers to interact with phpCAS.;;d0,47;;b0,0;;m">
<treenode node="getServiceUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService.php;f11;55;36;55;;;;vpos;;vstring;;r&#10;Description&#10;     Answer a service identifier (URL) for whom we should fetch a proxy ticket.;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="setProxyTicket;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService.php;f11;68;49;68;;;;vpos;;vvoid;;r&#10;Description&#10;     Register a proxy ticket with the ProxiedService that it can use when making requests.&#10;&#10;Parameters:&#10;    string $proxyTicket - Proxy ticket string;;d-1,-1;;b1,0;;mstring $proxyTicket;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Http;PHP:Interface Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http.php;f0;40;1;89;;;;vpos;;v;;r&#10;Definition&#10;    interface CAS_ProxiedService_Http&#10;&#10;Description&#10;     This interface defines methods that clients should use for configuring, sending, and receiving proxied HTTP requests.;;d0,41;;b0,0;;m">
<treenode node="getResponseBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http.php;f11;87;38;87;;;;vpos;;vstring;;r&#10;Description&#10;     Answer the body of response.;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getResponseHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http.php;f11;79;41;79;;;;vpos;;varray;;r&#10;Description&#10;     Answer the headers of the response.&#10;&#10;Return:&#10;   An array of header strings;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http.php;f11;67;27;67;;;;vpos;;vbool;;r&#10;Description&#10;     Perform the request.&#10;&#10;Return:&#10;   TRUE on success, FALSE on failure;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="setUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http.php;f11;55;33;55;;;;vpos;;vvoid;;r&#10;Description&#10;     Set the URL of the Request&#10;&#10;Parameters:&#10;    string $url - Url to set;;d-1,-1;;b1,0;;mstring $url;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Testable;PHP:Interface Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Testable.php;f0;55;1;73;;;;vpos;;v;;r&#10;Definition&#10;    interface CAS_ProxiedService_Testable&#10;&#10;Description&#10;     This interface defines methods that allow proxy-authenticated service handlers to be tested in unit tests.;;d0,56;;b0,0;;m">
<treenode node="setCasClient;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Testable.php;f11;71;56;71;;;;vpos;;vvoid;;r&#10;Description&#10;     Use a particular CAS_Client-&gt;initializeProxiedService() rather than the static phpCAS::initializeProxiedService().&#10;&#10;Parameters:&#10;    CAS_Client $casClient - Cas client object;;d-1,-1;;b1,0;;mCAS_Client $casClient;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxyChain_Interface;PHP:Interface Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\Interface.php;f0;40;1;52;;;;vpos;;v;;r&#10;Definition&#10;    interface CAS_ProxyChain_Interface&#10;&#10;Description&#10;     An interface for classes that define a list of allowed proxies in front of the current application.;;d0,41;;b0,0;;m">
<treenode node="matches;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\Interface.php;f11;50;40;50;;;;vpos;;vbool;;r&#10;Description&#10;     Match a list of proxies.&#10;&#10;Parameters:&#10;    array $list - The list of proxies in front of this service;;d-1,-1;;b1,0;;marray $list;;p">
</treenode>
</treenode>
<treenode node="CAS_Request_MultiRequestInterface;PHP:Interface Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\MultiRequestInterface.php;f0;41;1;82;;;;vpos;;v;;r&#10;Definition&#10;    interface CAS_Request_MultiRequestInterface&#10;&#10;Description&#10;     This interface defines a class library for performing multiple web requests in batches. Implementations of this interface may perform requests serially or in parallel.;;d0,42;;b0,0;;m">
<treenode node="addRequest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\MultiRequestInterface.php;f11;61;70;61;;;;vpos;;vvoid;;r&#10;Description&#10;     Add a new Request to this batch. Note, implementations will likely restrict requests to their own concrete class hierarchy.&#10;&#10;Parameters:&#10;    CAS_Request_RequestInterface $request - request interface;;d-1,-1;;b1,0;;mCAS_Request_RequestInterface $request;;p">
</treenode>
<treenode node="getNumRequests;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\MultiRequestInterface.php;f11;68;37;68;;;;vpos;;vnumber;;r&#10;Description&#10;     Retrieve the number of requests added to this batch.&#10;&#10;Return:&#10;   of request elements;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\MultiRequestInterface.php;f11;81;27;81;;;;vpos;;vbool;;r&#10;Description&#10;     Perform the request. After sending, all requests will have their responses poulated.&#10;&#10;Return:&#10;   TRUE on success, FALSE on failure;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_Request_RequestInterface;PHP:Interface Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f0;39;1;178;;;;vpos;;v;;r&#10;Definition&#10;    interface CAS_Request_RequestInterface&#10;&#10;Description&#10;     This interface defines a class library for performing web requests.;;d0,40;;b0,0;;m">
<treenode node="addCookie;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;65;45;65;;;;vpos;;vvoid;;r&#10;Description&#10;     Add a cookie to the request.&#10;&#10;Parameters:&#10;    string $name - name of cookie&#10;    string $value - value of cookie;;d-1,-1;;b1,0;;mstring $name;;pstring $value;;p">
</treenode>
<treenode node="addCookies;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;77;47;77;;;;vpos;;vvoid;;r&#10;Description&#10;     Add an array of cookies to the request. The cookie array is of the form array(&apos;cookie_name&apos; =&gt; &apos;cookie_value&apos;, &apos;cookie_name2&apos; =&gt; cookie_value2&apos;)&#10;&#10;Parameters:&#10;    array $cookies - cookies to add;;d-1,-1;;b1,0;;marray $cookies;;p">
</treenode>
<treenode node="addHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;87;39;87;;;;vpos;;vvoid;;r&#10;Description&#10;     Add a header string to the request.&#10;&#10;Parameters:&#10;    string $header - header to add;;d-1,-1;;b1,0;;mstring $header;;p">
</treenode>
<treenode node="addHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;97;47;97;;;;vpos;;vvoid;;r&#10;Description&#10;     Add an array of header strings to the request.&#10;&#10;Parameters:&#10;    array $headers - headers to add;;d-1,-1;;b1,0;;marray $headers;;p">
</treenode>
<treenode node="getErrorMessage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;177;38;177;;;;vpos;;vstring;;r&#10;Description&#10;     Answer a message describing any errors if the request failed.;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getResponseBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;169;38;169;;;;vpos;;vstring;;r&#10;Description&#10;     Answer the body of response.;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getResponseHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;153;41;153;;;;vpos;;varray;;r&#10;Description&#10;     Answer the headers of the response.&#10;&#10;Return:&#10;   An array of header strings;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getResponseStatusCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;161;44;161;;;;vpos;;vint;;r&#10;Description&#10;     Answer HTTP status code of the response;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="makePost;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;105;31;105;;;;vpos;;vvoid;;r&#10;Description&#10;     Make the request a POST request rather than the default GET request.;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;141;27;141;;;;vpos;;vbool;;r&#10;Description&#10;     Perform the request.&#10;&#10;Return:&#10;   TRUE on success, FALSE on failure;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="setPostBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;115;39;115;;;;vpos;;vvoid;;r&#10;Description&#10;     Add a POST body to the request&#10;&#10;Parameters:&#10;    string $body - body to add;;d-1,-1;;b1,0;;mstring $body;;p">
</treenode>
<treenode node="setSslCaCert;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;127;67;127;;;;vpos;;vvoid;;r&#10;Description&#10;     Specify the path to an SSL CA certificate to validate the server with.&#10;&#10;Parameters:&#10;    string $caCertPath - path to cert file&#10;    boolean $validate_cn - validate CN of SSL certificate;;d-1,-1;;b1,0;;mstring $caCertPath;;pboolean $validate_cn;;p">
</treenode>
<treenode node="setUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\RequestInterface.php;f11;54;33;54;;;;vpos;;vvoid;;r&#10;Description&#10;     Set the URL of the Request&#10;&#10;Parameters:&#10;    string $url - url to set;;d-1,-1;;b1,0;;mstring $url;;p">
</treenode>
</treenode>
<treenode node="CAS_VERSION_1_0;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;73;23;73;;;;vpos;;v;;r&#10;Description&#10;     CAS version 1.0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAS_VERSION_2_0;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;77;23;77;;;;vpos;;v;;r&apos;2.0&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CAS_VERSION_3_0;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;81;23;81;;;;vpos;;v;;r&#10;Description&#10;     CAS version 3.0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CONTACT_EMAIL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;6;21;6;;;;vpos;;v;;rarray(&#10;       &apos;name&apos; =&gt; &apos;Адрес эл. почты&apos;,&#10;       &apos;plc&apos; =&gt; &apos;user@domain&apos;,&#10;       &apos;help&apos; =&gt; &apos;Адрес электронной почты должен быть в формате &lt;b&gt;user@domain&lt;/b&gt;, содержать &lt;b&gt;только латинские буквы&lt;/b&gt; и не более &lt;b&gt;45&lt;/b&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CONTACT_PHONE_ADD;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;14;25;14;;;;vpos;;v;;rarray(&#10;         &apos;name&apos; =&gt; &apos;Номер дополнительного телефона&apos;,&#10;         &apos;plc&apos; =&gt; &apos;89031234567 Папа, 89101234567 Мама&apos;,&#10;         &apos;help&apos; =&gt; &apos;Номер дополнительного телефона должен содержать &lt;b&gt;только русские буквы, цифры, запятые и пробелы&lt;/b&gt; и быть не более &lt;b&gt;45&lt;/b&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CONTACT_PHONE_HOME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;10;26;10;;;;vpos;;v;;rarray(&#10;         &apos;name&apos; =&gt; &apos;Номер домашнего телефона&apos;,&#10;         &apos;plc&apos; =&gt; &apos;код города12345&apos;,&#10;         &apos;help&apos; =&gt; &apos;Номер домашнего телефона должен содержать &lt;b&gt;только цифры&lt;/b&gt; и быть не более &lt;b&gt;45&lt;/b&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CONTROLLER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\bootstrap.php;f8;106;18;106;;;;vpos;;v;;r$controllerName;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DB_HOST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\db_config.php;f8;11;15;11;;;;vpos;;v;;r&apos;localhost&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DB_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\db_config.php;f8;14;15;14;;;;vpos;;v;;r&apos;portalbsu&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DB_PASSWORD;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\db_config.php;f8;13;19;13;;;;vpos;;v;;r&apos;&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DB_TABLES;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\db_config.php;f8;18;17;18;;;;vpos;;v;;rarray(&#10;      &apos;address&apos;,&#10;      &apos;admission_campaign&apos;,&#10;      &apos;application&apos;,&#10;      &apos;application_achievs&apos;,&#10;      &apos;application_places&apos;,&#10;      &apos;application_places_exams&apos;,&#10;      &apos;application_status&apos;,&#10;      &apos;contacts&apos;,&#10;      &apos;dict_countries&apos;,&#10;      &apos;dict_discipline&apos;,&#10;      &apos;dict_docships&apos;,&#10;      &apos;dict_doctypes&apos;,&#10;      &apos;dict_educforms&apos;,&#10;      &apos;dict_educlevels&apos;,&#10;      &apos;dict_eductypes&apos;,&#10;      &apos;dict_ege&apos;,&#10;      &apos;dict_entrance_exams&apos;,&#10;      &apos;dict_foreign_langs&apos;,&#10;      &apos;dict_ind_achievs&apos;,&#10;      &apos;dict_ind_achievs_ac&apos;,&#10;      &apos;dictionary_manager&apos;,&#10;      &apos;dictionary_manager_log&apos;,&#10;      &apos;dict_scans&apos;,&#10;      &apos;dict_speciality&apos;,&#10;      &apos;dict_testing_scopes&apos;,&#10;      &apos;dict_university&apos;,&#10;      &apos;docs&apos;,&#10;      &apos;docs_educ&apos;,&#10;      &apos;educlevels_doctypes&apos;,&#10;      &apos;eductypes_doctypes&apos;,&#10;      &apos;ege&apos;,&#10;      &apos;ege_disciplines&apos;,&#10;      &apos;foreign_langs&apos;,&#10;      &apos;ind_achievs&apos;,&#10;      &apos;kladr&apos;,&#10;      &apos;kladr_abbrs&apos;,&#10;      &apos;passport&apos;,&#10;      &apos;personal&apos;,&#10;      &apos;resume&apos;,&#10;      &apos;scans&apos;,&#10;      &apos;user&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DB_USER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\db_config.php;f8;12;15;12;;;;vpos;;v;;r&apos;root&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DEFAULT_DEBUG_DIR;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;253;25;253;;;;vpos;;v;;rgettmpdir(;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DEFAULT_ERROR;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;141;21;141;;;;vpos;;v;;r&#10;Description&#10;     SAML Attributes;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DICT_MANAGER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;77;20;77;;;;vpos;;v;;rarray(&#10;							&apos;id&apos; =&gt; &apos;form_dict_manager&apos;,&#10;							&apos;hdr&apos; =&gt; &apos;Управление справочниками&apos;,&#10;							&apos;ctr&apos; =&gt; &apos;DictionaryManager&apos;,&#10;							&apos;act&apos; =&gt; &apos;Renew&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DOCS_EDUC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;45;17;45;;;;vpos;;v;;rarray(&#10;						&apos;id&apos; =&gt; &apos;form_docseduc&apos;,&#10;						&apos;hdr&apos; =&gt; &apos;Документ об образовании&apos;,&#10;						&apos;ctr&apos; =&gt; &apos;DocsEduc&apos;,&#10;						&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="E_USER_DEPRECATED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f12;48;29;48;;;;vpos;;v;;rE_USER_NOTICE;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="EDUCLEVELS_DOCTYPES;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;83;27;83;;;;vpos;;v;;rarray(&#10;									&apos;id&apos; =&gt; &apos;form_educlevels_doctypes&apos;,&#10;									&apos;hdr&apos; =&gt; &apos;Связь документов с уровнями подготовки&apos;,&#10;									&apos;ctr&apos; =&gt; &apos;EduclevelsDoctypes&apos;,&#10;									&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="EDUCTYPES_DOCTYPES;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;89;26;89;;;;vpos;;v;;rarray(&#10;									&apos;id&apos; =&gt; &apos;form_eductypes_doctypes&apos;,&#10;									&apos;hdr&apos; =&gt; &apos;Связь документов с видами образования&apos;,&#10;									&apos;ctr&apos; =&gt; &apos;EductypesDoctypes&apos;,&#10;									&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="EGE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;51;11;51;;;;vpos;;v;;rarray(&#10;					&apos;id&apos; =&gt; &apos;form_ege&apos;,&#10;					&apos;hdr&apos; =&gt; &apos;Результаты ЕГЭ&apos;,&#10;					&apos;ctr&apos; =&gt; &apos;Ege&apos;,&#10;					&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="EGE_DSP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;57;15;57;;;;vpos;;v;;rarray(&#10;						&apos;id&apos; =&gt; &apos;form_egedsp&apos;,&#10;						&apos;hdr&apos; =&gt; &apos;Дисциплина ЕГЭ&apos;,&#10;						&apos;ctr&apos; =&gt; &apos;EgeDisciplines&apos;,&#10;						&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="EMAIL_HELP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;7;18;7;;;;vpos;;v;;r&apos;Адрес электронной почты должен быть в формате &lt;b&gt;user@domain&lt;/b&gt;, содержать &lt;b&gt;только латинские буквы&lt;/b&gt; и не более &lt;b&gt;45&lt;/b&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="EMAIL_PLC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;12;17;12;;;;vpos;;v;;r&apos;user@domain&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ENVIRONMENT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\bootstrap.php;f8;64;19;64;;;;vpos;;v;;r$environment;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FILES_EXT_APP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\files_config.php;f8;18;21;18;;;;vpos;;v;;r[&#10;      &apos;jpg&apos; =&gt; &apos;image/jpeg&apos;,&#10;      &apos;png&apos; =&gt; &apos;image/png&apos;,&#10;      &apos;gif&apos; =&gt; &apos;image/gif&apos;,&#10;      &apos;pdf&apos; =&gt; &apos;application/pdf&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FILES_EXT_SCANS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\files_config.php;f8;13;23;13;;;;vpos;;v;;r[&#10;       &apos;jpg&apos; =&gt; &apos;image/jpeg&apos;,&#10;       &apos;png&apos; =&gt; &apos;image/png&apos;,&#10;       &apos;gif&apos; =&gt; &apos;image/gif&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FILES_SIZE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\files_config.php;f8;12;18;12;;;;vpos;;v;;r[&apos;size&apos; =&gt; &apos;MB&apos;, &apos;value&apos; =&gt; 2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FILES_TEMP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\file_config.php;f8;11;18;11;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\files_config.php;f8;11;18;11;;;;vpos;;v;;rROOT_DIR.&apos;/files/temp/&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FIRSTNAME_HELP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;6;22;6;;;;vpos;;v;;r&apos;Имя должно содержать &lt;b&gt;только русские буквы&lt;/b&gt;, и быть не более &lt;b&gt;50&lt;/b&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FIRSTNAME_PLC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;11;21;11;;;;vpos;;v;;r&apos;Имя&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="fSIGNUP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;21;15;21;;;;vpos;;v;;rarray(&#10;						&apos;id&apos; =&gt; &apos;form_signup&apos;,&#10;						&apos;hdr&apos; =&gt; &apos;Регистрация&apos;,&#10;						&apos;ctr&apos; =&gt; &apos;Signup&apos;,&#10;						&apos;act&apos; =&gt; &apos;Signup&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IND_ACHIEVS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;63;19;63;;;;vpos;;v;;rarray(&#10;							&apos;id&apos; =&gt; &apos;form_indachievs&apos;,&#10;							&apos;hdr&apos; =&gt; &apos;Индивидуальное достижение&apos;,&#10;							&apos;ctr&apos; =&gt; &apos;IndAchievs&apos;,&#10;							&apos;act&apos; =&gt; &apos;Save&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LASTNAME_HELP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;8;21;8;;;;vpos;;v;;r&apos;Фамилия должна содержать &lt;b&gt;только русские буквы&lt;/b&gt;, и быть не более &lt;b&gt;50&lt;/b&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LASTNAME_PLC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;13;20;13;;;;vpos;;v;;r&apos;Фамилия&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LOGIN;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;13;13;13;;;;vpos;;v;;rarray(&#10;						&apos;id&apos; =&gt; &apos;form_login&apos;,&#10;						&apos;hdr&apos; =&gt; &apos;Авторизация&apos;,&#10;						&apos;ctr&apos; =&gt; &apos;Login&apos;,&#10;						&apos;act&apos; =&gt; &apos;Login&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LOGON;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\bootstrap.php;f8;92;13;92;;;;vpos;;v;;r$logon;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAIL_DOMAIN;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;26;19;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAIL_FROM;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;15;17;15;;;;vpos;;v;;r&apos;nikitin_o@bsu.edu.ru&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAIL_FROM_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;16;22;16;;;;vpos;;v;;r&apos;Admin&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAIL_HOST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;11;17;11;;;;vpos;;v;;r&apos;mail.bsu.edu.ru&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAIL_PASSWORD;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;13;21;13;;;;vpos;;v;;r&apos;153043qaz&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAIL_PORT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;14;17;14;;;;vpos;;v;;r25;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAIL_REPLY;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;17;18;17;;;;vpos;;v;;r&apos;nikitin_o@bsu.edu.ru&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAIL_REPLY_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;18;23;18;;;;vpos;;v;;r&apos;Admin&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAIL_USER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;12;17;12;;;;vpos;;v;;r&apos;nikitin_o@bsu.edu.ru&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MIDDLENAME_HELP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;7;23;7;;;;vpos;;v;;r&apos;Отчество должно содержать &lt;b&gt;только русские буквы&lt;/b&gt;, и быть не более &lt;b&gt;50&lt;/b&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MIDDLENAME_PLC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;12;22;12;;;;vpos;;v;;r&apos;Отчество&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ODATA_1C;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\1c_config.php;f8;11;16;11;;;;vpos;;v;;r&apos;s21.bsu.edu.ru/priem_test/odata/standard.odata&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PASSWORD_1C;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\1c_config.php;f8;14;19;14;;;;vpos;;v;;r&apos;avitsena159&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_ALPHA;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;6;21;6;;;;vpos;;v;;r&apos;/^[a-zA-Z]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_ALPHA_NUMB;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;12;26;12;;;;vpos;;v;;r&apos;/^[a-zA-Z0-9]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_ALPHA_NUMB_ALL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;14;30;14;;;;vpos;;v;;r&apos;/^[a-zA-ZёЁа-яА-Я0-9]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_ALPHA_NUMB_RUS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;13;30;13;;;;vpos;;v;;r&apos;/^[ёЁа-яА-Я0-9]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_ALPHA_RUS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;7;25;7;;;;vpos;;v;;r&apos;/^[ёЁа-яА-Я]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_DATE_LIGHT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;21;26;21;;;;vpos;;v;;r&apos;/^(0[1-9]|1[0-9]|2[0-9]|3[01]).(0[1-9]|1[012]).[0-9]{4}$/&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_DATE_STRONG;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;22;27;22;;;;vpos;;v;;r&apos;/^(?:(?:0[1-9]|1[0-9]|2[0-9]).(?:0[1-9]|1[0-2])|(?:(?:30).(?!02)(?:0[1-9]|1[0-2]))|(?:31.(?:0[13578]|1[02]))).(?:19|20)[0-9]{2}$/&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_EMAIL_LIGHT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;17;27;17;;;;vpos;;v;;r&apos;/^[a-zA-Z0-9_\-.]+@[a-zA-Z0-9_\-.]+$/&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_EMAIL_STRONG;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;18;28;18;;;;vpos;;v;;r&apos;/^[a-zA-Z0-9_\-.]+@[a-zA-Z0-9_\-]+\.[a-zA-Z0-9_\-]+$/&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_INFO;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;10;20;10;;;;vpos;;v;;r&apos;/^[a-zA-Z0-9-\.\,\#\/\s&quot;&quot;]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_INFO_RUS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;11;24;11;;;;vpos;;v;;r&apos;/^[ёЁа-яА-Я0-9-.,№\/\s&quot;&quot;]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_NUMB;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;5;20;5;;;;vpos;;v;;r&apos;/^[0-9]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_PHONE_ADD;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;20;25;20;;;;vpos;;v;;r&apos;/^[ёЁа-яА-Я0-9,\s]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_PHONE_HOME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;19;26;19;;;;vpos;;v;;r&apos;/^[0-9-()]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_SPEC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;15;20;15;;;;vpos;;v;;r&apos;/^[a-zA-Z0-9-\s]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_SPEC_RUS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;16;24;16;;;;vpos;;v;;r&apos;/^[ёЁа-яА-Я0-9-\s]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_TEXT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;8;20;8;;;;vpos;;v;;r&apos;/^[a-zA-Z-\.\,\s&quot;&quot;]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PATTERN_TEXT_RUS;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;9;24;9;;;;vpos;;v;;r&apos;/^[ёЁа-яА-Я-.,\s&quot;&quot;]*$/u&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PDF_PDFTK;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\NewFile.php;f8;11;17;11;;;;vpos;;v;;r&apos;&quot;C:\Program Files (x86)\PDFtk\bin\pdftk&quot;&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_LANG_CATALAN;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;220;27;220;;;;vpos;;v;;r&apos;CAS_Languages_Catalan&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_LANG_CHINESE_SIMPLIFIED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;221;38;221;;;;vpos;;v;;r&apos;CAS_Languages_ChineseSimplified&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_LANG_DEFAULT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;233;27;233;;;;vpos;;v;;r&#10;Description&#10;     phpCAS default language (when phpCAS::setLang() is not used);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_LANG_ENGLISH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;214;27;214;;;;vpos;;v;;r&#10;Description&#10;      addtogroup publicLang;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_LANG_FRENCH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;215;26;215;;;;vpos;;v;;r&apos;CAS_Languages_French&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_LANG_GERMAN;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;217;26;217;;;;vpos;;v;;r&apos;CAS_Languages_German&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_LANG_GREEK;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;216;25;216;;;;vpos;;v;;r&apos;CAS_Languages_Greek&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_LANG_JAPANESE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;218;28;218;;;;vpos;;v;;r&apos;CAS_Languages_Japanese&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_LANG_SPANISH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;219;27;219;;;;vpos;;v;;r&apos;CAS_Languages_Spanish&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_PROXIED_SERVICE_HTTP_GET;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;194;39;194;;;;vpos;;v;;r&#10;Description&#10;     phpCAS::getProxiedService() type for HTTP GET;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_PROXIED_SERVICE_HTTP_POST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;198;40;198;;;;vpos;;v;;r&#10;Description&#10;     phpCAS::getProxiedService() type for HTTP POST;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_PROXIED_SERVICE_IMAP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;202;35;202;;;;vpos;;v;;r&#10;Description&#10;     phpCAS::getProxiedService() type for IMAP;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_SERVICE_NOT_AVAILABLE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;186;36;186;;;;vpos;;v;;r&#10;Description&#10;     phpCAS::service() error code when the service was not available.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_SERVICE_OK;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;167;25;167;;;;vpos;;v;;r&#10;Description&#10;     phpCAS::service() error code on success;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_SERVICE_PT_BAD_SERVER_RESPONSE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;177;45;177;;;;vpos;;v;;r&#10;Description&#10;     phpCAS::service() error code when the PT could not retrieve because the response of the CAS server was ill-formed.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_SERVICE_PT_FAILURE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;182;33;182;;;;vpos;;v;;r&#10;Description&#10;     phpCAS::service() error code when the PT could not retrieve because the CAS server did not want to.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_SERVICE_PT_NO_SERVER_RESPONSE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;172;44;172;;;;vpos;;v;;r&#10;Description&#10;     phpCAS::service() error code when the PT could not retrieve because the CAS server did not respond.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHPCAS_VERSION;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;63;22;63;;;;vpos;;v;;r&#10;Description&#10;     phpCAS version. accessible for the user by phpCAS::getVersion().;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PWD_CONFIRM_HELP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;9;24;9;;;;vpos;;v;;r&apos;Пароль должен содержать &lt;b&gt;только латинские буквы и цифры&lt;/b&gt;, и быть &lt;b&gt;6-10&lt;/b&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PWD_CONFIRM_PLC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;14;23;14;;;;vpos;;v;;r&apos;Повторите пароль&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PWD_HELP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;8;16;8;;;;vpos;;v;;r&apos;Пароль должен содержать &lt;b&gt;только латинские буквы и цифры&lt;/b&gt;, и быть &lt;b&gt;6-10&lt;/b&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PWD_PLC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;13;15;13;;;;vpos;;v;;r&apos;Пароль&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="RESET_PWD;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;33;17;33;;;;vpos;;v;;rarray(&#10;						&apos;id&apos; =&gt; &apos;form_reset_pwd&apos;,&#10;						&apos;hdr&apos; =&gt; &apos;Изменение пароля&apos;,&#10;						&apos;ctr&apos; =&gt; &apos;ResetPwd&apos;,&#10;						&apos;act&apos; =&gt; &apos;ResetPwd&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="RESET_PWD_REQUEST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;27;25;27;;;;vpos;;v;;rarray(&#10;								&apos;id&apos; =&gt; &apos;form_reset_pwd_request&apos;,&#10;								&apos;hdr&apos; =&gt; &apos;Запрос изменения пароля&apos;,&#10;								&apos;ctr&apos; =&gt; &apos;ResetPwdRequest&apos;,&#10;								&apos;act&apos; =&gt; &apos;SendEmail&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="RESUME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\form_config.php;f8;39;14;39;;;;vpos;;v;;rarray(&#10;						&apos;id&apos; =&gt; &apos;form_resume&apos;,&#10;						&apos;hdr&apos; =&gt; &apos;Анкета&apos;,&#10;						&apos;ctr&apos; =&gt; &apos;Resume&apos;,&#10;						&apos;act&apos; =&gt; &apos;Resume&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ROOT_DIR;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\index.php;f8;90;16;90;;;;vpos;;v;;r$_SERVER[&apos;DOCUMENT_ROOT&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAML_ASSERTION_ARTIFACT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;116;31;116;;;;vpos;;v;;r&#10;Description&#10;     SAMLP artifact tag (for the ticket);;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAML_ASSERTION_ARTIFACT_CLOSE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;121;37;121;;;;vpos;;v;;r&#10;Description&#10;     SAMLP close;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAML_ATTRIBUTES;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;136;23;136;;;;vpos;;v;;r&#10;Description&#10;     SAML Attributes;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAML_SOAP_BODY;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;105;22;105;;;;vpos;;v;;r&#10;Description&#10;     SOAP body for SAML POST;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAML_SOAP_BODY_CLOSE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;126;28;126;;;;vpos;;v;;r&#10;Description&#10;     SOAP body close;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAML_SOAP_ENV;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;100;21;100;;;;vpos;;v;;r&#10;Description&#10;     SOAP envelope for SAML POST;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAML_SOAP_ENV_CLOSE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;131;27;131;;;;vpos;;v;;r&#10;Description&#10;     SOAP envelope close;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAML_VERSION_1_1;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;90;24;90;;;;vpos;;v;;r&#10;Description&#10;     SAML protocol;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAML_XML_HEADER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;95;23;95;;;;vpos;;v;;r&#10;Description&#10;     XML header for SAML POST;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAMLP_REQUEST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;110;21;110;;;;vpos;;v;;r&#10;Description&#10;     SAMLP request;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SAMLP_REQUEST_CLOSE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f8;111;27;111;;;;vpos;;v;;r&apos;&lt;/samlp:Request&gt;&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SIGNUP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\bootstrap.php;f8;100;14;100;;;;vpos;;v;;r$signup;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SMTP_DEBUG;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\mail_config.php;f8;25;18;25;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="UNITNAME_HELP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f8;6;21;6;;;;vpos;;v;;r&apos;Наименование подразделения должно содержать &lt;b&gt;только русские буквы, тире, точки, запятые или пробелы&lt;/b&gt;, и быть не более &lt;b&gt;100&lt;/b&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="UNITNAME_PLC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f8;8;20;8;;;;vpos;;v;;r&apos;Наименование подразделения&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="USER_1C;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\1c_config.php;f8;13;15;13;;;;vpos;;v;;r&apos;nikitin_o&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="USERNAME_HELP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;6;21;6;;;;vpos;;v;;r&apos;Логин должен содержать &lt;b&gt;только латинские буквы&lt;/b&gt;, и быть не более &lt;b&gt;45&lt;/b&gt; символов длиной.&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="USERNAME_PLC;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;11;20;11;;;;vpos;;v;;r&apos;Логин&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="WSDL_1C;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\config\1c_config.php;f8;12;15;12;;;;vpos;;v;;r&apos;http://s21.bsu.edu.ru/priem_test/ws/WebAbit.1cws?wsdl&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="Basic_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\basic_helper.php;f0;4;1;102;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="appUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;29;2;32;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\basic_helper.php;f15;29;2;32;;;;vpos;;vstring;;r&#10;Definition&#10;    appUrl($controller, $action)&#10;&#10;Description&#10;     Creates URL with behavior/controller/action.;;d1,30;;b1,5;;mcontroller;;paction;;p">
</treenode>
<treenode node="baseUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;15;2;22;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\basic_helper.php;f15;15;2;22;;;;vpos;;vstring;;r&#10;Definition&#10;    baseUrl($url = &apos;&apos;)&#10;&#10;Description&#10;     Creates URL with BASEPATH.;;d1,16;;b1,5;;murl;;p">
</treenode>
<treenode node="msgError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;97;2;101;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\basic_helper.php;f15;97;2;101;;;;vpos;;vvoid;;r&#10;Definition&#10;    msgError($msg)&#10;&#10;Description&#10;     Sets global error message.;;d1,98;;b1,5;;mmsg;;p">
</treenode>
<treenode node="msgReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;75;2;79;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\basic_helper.php;f15;75;2;79;;;;vpos;;vvoid;;r&#10;Definition&#10;    msgReset()&#10;&#10;Description&#10;     Resets global messages.;;d1,76;;b1,5;;m">
</treenode>
<treenode node="msgSuccess;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;86;2;90;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\basic_helper.php;f15;86;2;90;;;;vpos;;vvoid;;r&#10;Definition&#10;    msgSuccess($msg)&#10;&#10;Description&#10;     Sets global success message.;;d1,87;;b1,5;;mmsg;;p">
</treenode>
<treenode node="redirect;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;39;2;54;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\basic_helper.php;f15;39;2;54;;;;vpos;;vvoid;;r&#10;Definition&#10;    redirect($header, $response_code, $controller, $action, $success = null, $error = null)&#10;&#10;Description&#10;     Redirects to page.;;d1,40;;b1,5;;mheader;;presponse_code;;pcontroller;;paction;;psuccess;;perror;;p">
</treenode>
<treenode node="redirectHome;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;61;2;68;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\basic_helper.php;f15;61;2;68;;;;vpos;;vvoid;;r&#10;Definition&#10;    redirectHome()&#10;&#10;Description&#10;     Redirects to page.;;d1,62;;b1,5;;m">
</treenode>
</treenode>
<treenode node="Calc_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\calc_helper.php;f0;4;1;22;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="getAge;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\calc_helper.php;f15;15;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;15;2;21;;;;vpos;;vint;;r&#10;Definition&#10;    getAge($dt, $format)&#10;&#10;Description&#10;     Gets age between date and today.;;d1,16;;b1,5;;mdt;;pformat;;p">
</treenode>
</treenode>
<treenode node="Captcha_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\captcha_helper.php;f0;6;1;37;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
<treenode node="create;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\captcha_helper.php;f19;17;2;36;;;;vpos;;vstring;;r&#10;Definition&#10;    create()&#10;&#10;Description&#10;     Creates CAPTCHA.;;d1,18;;b1,5;;m">
</treenode>
</treenode>
<treenode node="CAS_AuthenticationException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\AuthenticationException.php;f0;47;1;109;;;;vpos;;vRuntimeException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_AuthenticationException&#10;extends RuntimeException&#10;implements CAS_Exception&#10;&#10;Description&#10;     This interface defines methods that allow proxy-authenticated service handlers to interact with phpCAS.;;d0,50;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\AuthenticationException.php;f11;67;5;107;;;;vpos;;v;;r&#10;Definition&#10;    __construct($client,$failure,$cas_url,$no_response,&#10;        $bad_response=&apos;&apos;,$cas_response=&apos;&apos;,$err_code=&apos;&apos;,$err_msg=&apos;&apos;&#10;    )&#10;&#10;Description&#10;     This method is used to print the HTML output when the user was not authenticated.&#10;&#10;Parameters:&#10;    CAS_Client $client - phpcas client&#10;    string $failure - the failure that occured&#10;    string $cas_url - the URL the CAS server was asked for&#10;    bool $no_response - the response from the CAS server (other&#10;    bool $bad_response - bad response from the CAS server ($err_code&#10;    string $cas_response - the response of the CAS server&#10;    int $err_code - the error code given by the CAS server&#10;    string $err_msg - the error message given by the CAS server;;d6,69;;b1,0;;mCAS_Client $client;;pstring $failure;;pstring $cas_url;;pbool $no_response;;pbool $bad_response;;pstring $cas_response;;pint $err_code;;pstring $err_msg;;p">
</treenode>
</treenode>
<treenode node="CAS_Client;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f0;50;1;3967;;;;vpos;;v;;r&#10;Definition&#10;    class CAS_Client&#10;&#10;Description&#10;     The CAS_Client class is a client interface that provides CAS authentication to PHP applications.;;d0,51;;b0,0;;m">
<treenode node="HOSTNAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f9;3819;18;3819;;;;vpos;;v;;r&#10;Description&#10;     Constants used for determining rebroadcast node type.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IP;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f9;3820;12;3820;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LOGOUT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f9;3884;16;3884;;;;vpos;;v;;r&#10;Description&#10;     Constants used for determining rebroadcast type (logout or pgtIou/pgtId).;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PGTIOU;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f9;3885;16;3885;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;901;5;1032;;;;vpos;;va;;r&#10;Definition&#10;    __construct(&#10;        $server_version,&#10;        $proxy,&#10;        $server_hostname,&#10;        $server_port,&#10;        $server_uri,&#10;        $changeSessionID = true&#10;    )&#10;&#10;Description&#10;     CAS_Client constructor.&#10;&#10;Parameters:&#10;    string $server_version - the version of the CAS server&#10;    bool $proxy - true if the CAS client is a CAS proxy&#10;    string $server_hostname - the hostname of the CAS server&#10;    int $server_port - the port the CAS server is running on&#10;    string $server_uri - the URI the CAS server is responding on&#10;    bool $changeSessionID - Allow phpCAS to change the session_id&#10;&#10;Return:&#10;   newly created CAS_Client object;;d6,908;;b1,0;;mstring $server_version;;pbool $proxy;;pstring $server_hostname;;pint $server_port;;pstring $server_uri;;pbool $changeSessionID;;p">
</treenode>
<treenode node="_addAttributeToArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3460;5;3474;;;;vpos;;vvoid;;r&#10;Definition&#10;    _addAttributeToArray(array &amp;$attributeArray, $name, $value)&#10;&#10;Description&#10;     Add an attribute value to an array of attributes.&#10;&#10;Parameters:&#10;    array - &amp;$attributeArray reference to array&#10;    string $name - name of attribute&#10;    string $value - value of attribute;;d4,3461;;b3,0;;marray;;pstring $name;;pstring $value;;p">
</treenode>
<treenode node="_authError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3758;5;3803;;;;vpos;;vvoid;;r&#10;Definition&#10;    _authError(&#10;        $failure,&#10;        $cas_url,&#10;        $no_response,&#10;        $bad_response=&apos;&apos;,&#10;        $cas_response=&apos;&apos;,&#10;        $err_code=&apos;&apos;,&#10;        $err_msg=&apos;&apos;&#10;    )&#10;&#10;Description&#10;     This method is used to print the HTML output when the user was not authenticated.&#10;&#10;Parameters:&#10;    string $failure - the failure that occured&#10;    string $cas_url - the URL the CAS server was asked for&#10;    bool $no_response - the response from the CAS server (other&#10;    bool $bad_response - bad response from the CAS server ($err_code&#10;    string $cas_response - the response of the CAS server&#10;    int $err_code - the error code given by the CAS server&#10;    string $err_msg - the error message given by the CAS server;;d6,3766;;b3,0;;mstring $failure;;pstring $cas_url;;pbool $no_response;;pbool $bad_response;;pstring $cas_response;;pint $err_code;;pstring $err_msg;;p">
</treenode>
<treenode node="_buildQueryUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3661;5;3666;;;;vpos;;vurl;;r&#10;Definition&#10;    _buildQueryUrl($url, $query)&#10;&#10;Description&#10;     This method is used to append query parameters to an url. Since the url might already contain parameter it has to be detected and to build a proper URL&#10;&#10;Parameters:&#10;    string $url - base url to add the query params to&#10;    string $query - params in query form with &amp; separated&#10;&#10;Return:&#10;   with query params;;d4,3662;;b3,0;;mstring $url;;pstring $query;;p">
</treenode>
<treenode node="_buildSAMLPayload;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2844;5;2857;;;;vpos;;vthe;;r&#10;Definition&#10;    _buildSAMLPayload()&#10;&#10;Description&#10;     This method is used to build the SAML POST body sent to /samlValidate URL.&#10;&#10;Return:&#10;   SOAP-encased SAMLP artifact (the ticket);;d4,2845;;b3,0;;m">
</treenode>
<treenode node="_callback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2399;5;2426;;;;vpos;;vvoid;;r&#10;Definition&#10;    _callback()&#10;&#10;Description&#10;     This method is called by CAS_Client::CAS_Client() when running in callback mode. It stores the PGT and its PGT Iou, prints its output and halts.;;d4,2400;;b3,0;;m">
</treenode>
<treenode node="_ensureAuthenticationCalled;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;791;5;796;;;;vpos;;vvoid;;r&#10;Definition&#10;    _ensureAuthenticationCalled()&#10;&#10;Description&#10;     Ensure that authentication was checked. Terminate with exception if no authentication was performed;;d4,792;;b3,0;;m">
</treenode>
<treenode node="_getCallbackURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2359;5;2373;;;;vpos;;vThe;;r&#10;Definition&#10;    _getCallbackURL()&#10;&#10;Description&#10;     This method returns the URL that should be used for the PGT callback (in fact the URL of the current request without any CGI parameter, except if phpCAS::setFixedCallbackURL() was used).&#10;&#10;Return:&#10;   callback URL;;d4,2360;;b3,0;;m">
</treenode>
<treenode node="_getClientUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3576;5;3609;;;;vpos;;vstring;;r&#10;Definition&#10;    _getClientUrl()&#10;&#10;Description&#10;     Try to figure out the phpCas client URL with possible Proxys / Ports etc.&#10;&#10;Return:&#10;   Server URL with domain:port;;d4,3577;;b3,0;;m">
</treenode>
<treenode node="_getNodeType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3830;5;3840;;;;vpos;;vstring;;r&#10;Definition&#10;    _getNodeType($nodeURL)&#10;&#10;Description&#10;     Determine the node type from the URL.&#10;&#10;Parameters:&#10;    String $nodeURL - The node URL&#10;&#10;Return:&#10;   hostname;;d4,3831;;b3,0;;mString $nodeURL;;p">
</treenode>
<treenode node="_getPGT;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2270;5;2273;;;;vpos;;vstring;;r&#10;Definition&#10;    _getPGT()&#10;&#10;Description&#10;     This method returns the Proxy Granting Ticket given by the CAS server.&#10;&#10;Return:&#10;   the Proxy Granting Ticket;;d4,2271;;b3,0;;m">
</treenode>
<treenode node="_getServerBaseURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;312;5;324;;;;vpos;;vstring;;r&#10;Definition&#10;    _getServerBaseURL()&#10;&#10;Description&#10;     This method is used to retrieve the base URL of the CAS server.&#10;&#10;Return:&#10;   a URL;;d4,313;;b3,0;;m">
</treenode>
<treenode node="_getServerHostname;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;282;5;285;;;;vpos;;vstring;;r&#10;Definition&#10;    _getServerHostname()&#10;&#10;Description&#10;     This method is used to retrieve the hostname of the CAS server.&#10;&#10;Return:&#10;   the hostname of the CAS server;;d4,283;;b3,0;;m">
</treenode>
<treenode node="_getServerPort;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;292;5;295;;;;vpos;;vstring;;r&#10;Definition&#10;    _getServerPort()&#10;&#10;Description&#10;     This method is used to retrieve the port of the CAS server.&#10;&#10;Return:&#10;   the port of the CAS server;;d4,293;;b3,0;;m">
</treenode>
<treenode node="_getServerURI;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;302;5;305;;;;vpos;;vstring;;r&#10;Definition&#10;    _getServerURI()&#10;&#10;Description&#10;     This method is used to retrieve the URI of the CAS server.&#10;&#10;Return:&#10;   a URI;;d4,303;;b3,0;;m">
</treenode>
<treenode node="_getUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;1133;5;1143;;;;vpos;;vstring;;r&#10;Definition&#10;    _getUser()&#10;&#10;Description&#10;     This method returns the CAS user&apos;s login name.&#10;&#10;Return:&#10;   the login name of the authenticated user;;d4,1134;;b3,0;;m">
</treenode>
<treenode node="_hasAttribute;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;1220;5;1224;;;;vpos;;vbool;;r&#10;Definition&#10;    _hasAttribute($key)&#10;&#10;Description&#10;     Check whether a specific attribute with a name is available&#10;&#10;Parameters:&#10;    string $key - name of attribute&#10;&#10;Return:&#10;   is attribute available;;d4,1221;;b3,0;;mstring $key;;p">
</treenode>
<treenode node="_hasPGT;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2292;5;2295;;;;vpos;;vtrue;;r&#10;Definition&#10;    _hasPGT()&#10;&#10;Description&#10;     This method tells if a Proxy Granting Ticket was stored.&#10;&#10;Return:&#10;   if a Proxy Granting Ticket has been stored;;d4,2293;;b3,0;;m">
</treenode>
<treenode node="_htmlFilterOutput;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;74;5;80;;;;vpos;;vvoid;;r&#10;Definition&#10;    _htmlFilterOutput($str)&#10;&#10;Description&#10;     This method filters a string by replacing special tokens by appropriate values and prints it. The corresponding tokens are taken into account: - __CAS_VERSION__ - __PHPCAS_VERSION__ - __SERVER_BASE_URL__&#10;&#10;Parameters:&#10;    string $str - the string to filter and output;;d4,75;;b3,0;;mstring $str;;p">
</treenode>
<treenode node="_initPGTStorage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2454;5;2463;;;;vpos;;vvoid;;r&#10;Definition&#10;    _initPGTStorage()&#10;&#10;Description&#10;     This method is used to initialize the storage of PGT&apos;s. Halts on error.;;d4,2455;;b3,0;;m">
</treenode>
<treenode node="_isCallbackMode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2338;5;2341;;;;vpos;;vA;;r&#10;Definition&#10;    _isCallbackMode()&#10;&#10;Description&#10;     This method returns true when the CAs client is running i callback mode, false otherwise.&#10;&#10;Return:&#10;   boolean;;d4,2339;;b3,0;;m">
</treenode>
<treenode node="_isHttps;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3616;5;3630;;;;vpos;;vbool;;r&#10;Definition&#10;    _isHttps()&#10;&#10;Description&#10;     This method checks to see if the request is secured via HTTPS&#10;&#10;Return:&#10;   true if https, false otherwise;;d4,3617;;b3,0;;m">
</treenode>
<treenode node="_isLogoutRequest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;1719;5;1722;;;;vpos;;vbool;;r&#10;Definition&#10;    _isLogoutRequest()&#10;&#10;Description&#10;     Check of the current request is a logout request&#10;&#10;Return:&#10;   is logout request;;d4,1720;;b3,0;;m">
</treenode>
<treenode node="_loadPGT;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2489;5;2495;;;;vpos;;vmul;;r&#10;Definition&#10;    _loadPGT($pgt_iou)&#10;&#10;Description&#10;     This method reads a PGT from its Iou and deletes the corresponding storage entry.&#10;&#10;Parameters:&#10;    string $pgt_iou - the PGT Iou&#10;&#10;Return:&#10;   The PGT corresponding to the Iou, false when not found;;d4,2490;;b3,0;;mstring $pgt_iou;;p">
</treenode>
<treenode node="_readExtraAttributesCas20;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3310;5;3449;;;;vpos;;vbool;;r&#10;Definition&#10;    _readExtraAttributesCas20($success_elements)&#10;&#10;Description&#10;     This method will parse the DOM and pull out the attributes from the XML payload and put them into an array, then put the array into the session.&#10;&#10;Parameters:&#10;    string $success_elements - payload of the response&#10;&#10;Return:&#10;   true when successfull, halt otherwise by calling;;d4,3311;;b3,0;;mstring $success_elements;;p">
</treenode>
<treenode node="_readURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2789;5;2837;;;;vpos;;vtrue;;r&#10;Definition&#10;    _readURL($url, &amp;$headers, &amp;$body, &amp;$err_msg)&#10;&#10;Description&#10;     This method is used to acces a remote URL.&#10;&#10;Parameters:&#10;    string $url - the URL to access&#10;    string - &amp;$headers an array containing the HTTP header lines of the&#10;    string - &amp;$body    the body of the response, as a string (empty on&#10;    string - &amp;$err_msg an error message, filled on failure&#10;&#10;Return:&#10;   on success, false otherwise (in this later case, $err_msg;;d4,2790;;b3,0;;mstring $url;;pstring;;pstring;;pstring;;p">
</treenode>
<treenode node="_rebroadcast;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3894;5;3964;;;;vpos;;vvoid;;r&#10;Definition&#10;    _rebroadcast($type)&#10;&#10;Description&#10;     This method rebroadcasts logout/pgtIou requests. Can be LOGOUT,PGTIOU&#10;&#10;Parameters:&#10;    int $type - type of rebroadcasting;;d4,3895;;b3,0;;mint $type;;p">
</treenode>
<treenode node="_removeParameterFromQueryString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3642;5;3649;;;;vpos;;vstring;;r&#10;Definition&#10;    _removeParameterFromQueryString($parameterName, $queryString)&#10;&#10;Description&#10;     Removes a parameter from a query string&#10;&#10;Parameters:&#10;    string $parameterName - name of parameter&#10;    string $queryString - query string&#10;&#10;Return:&#10;   new query string;;d4,3643;;b3,0;;mstring $parameterName;;pstring $queryString;;p">
</treenode>
<treenode node="_renameSession;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3675;5;3701;;;;vpos;;vvoid;;r&#10;Definition&#10;    _renameSession($ticket)&#10;&#10;Description&#10;     Renaming the session&#10;&#10;Parameters:&#10;    string $ticket - name of the ticket;;d4,3676;;b3,0;;mstring $ticket;;p">
</treenode>
<treenode node="_sessionIdForTicket;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3714;5;3719;;;;vpos;;vstring;;r&#10;Definition&#10;    _sessionIdForTicket($ticket)&#10;&#10;Description&#10;     Answer a valid session-id given a CAS ticket.&#10;&#10;Parameters:&#10;    string $ticket - name of the ticket;;d4,3715;;b3,0;;mstring $ticket;;p">
</treenode>
<treenode node="_setCallbackMode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2327;5;2330;;;;vpos;;vvoid;;r&#10;Definition&#10;    _setCallbackMode($callback_mode)&#10;&#10;Description&#10;     This method sets/unsets callback mode.&#10;&#10;Parameters:&#10;    bool $callback_mode - true to set callback mode, false otherwise;;d4,2328;;b3,0;;mbool $callback_mode;;p">
</treenode>
<treenode node="_setChangeSessionID;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;1061;5;1064;;;;vpos;;vvoid;;r&#10;Definition&#10;    _setChangeSessionID($allowed)&#10;&#10;Description&#10;     Set a parameter whether to allow phpCas to change session_id&#10;&#10;Parameters:&#10;    bool $allowed - allow phpCas to change session_id;;d4,1062;;b3,0;;mbool $allowed;;p">
</treenode>
<treenode node="_setPGT;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2282;5;2285;;;;vpos;;vvoid;;r&#10;Definition&#10;    _setPGT($pgt)&#10;&#10;Description&#10;     This method stores the Proxy Granting Ticket.&#10;&#10;Parameters:&#10;    string $pgt - The Proxy Granting Ticket;;d4,2283;;b3,0;;mstring $pgt;;p">
</treenode>
<treenode node="_setProxies;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;3109;5;3122;;;;vpos;;vvoid;;r&#10;Definition&#10;    _setProxies($proxies)&#10;&#10;Description&#10;     Set the Proxy array, probably from persistant storage.&#10;&#10;Parameters:&#10;    array $proxies - An array of proxies;;d4,3110;;b3,0;;marray $proxies;;p">
</treenode>
<treenode node="_setSessionAttributes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2161;5;2207;;;;vpos;;vbool;;r&#10;Definition&#10;    _setSessionAttributes($text_response)&#10;&#10;Description&#10;     This method will parse the DOM and pull out the attributes from the SAML payload and put them into an array, then put the array into the session.&#10;&#10;Parameters:&#10;    string $text_response - the SAML payload&#10;&#10;Return:&#10;   true when successfull and false if no attributes a found;;d4,2162;;b3,0;;mstring $text_response;;p">
</treenode>
<treenode node="_setUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;1104;5;1107;;;;vpos;;vvoid;;r&#10;Definition&#10;    _setUser($user)&#10;&#10;Description&#10;     This method sets the CAS user&apos;s login name.&#10;&#10;Parameters:&#10;    string $user - the login name of the authenticated user;;d4,1105;;b3,0;;mstring $user;;p">
</treenode>
<treenode node="_storePGT;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2473;5;2479;;;;vpos;;vvoid;;r&#10;Definition&#10;    _storePGT($pgt,$pgt_iou)&#10;&#10;Description&#10;     This method stores a PGT. Halts on error.&#10;&#10;Parameters:&#10;    string $pgt - the PGT to store&#10;    string $pgt_iou - its corresponding Iou;;d4,2474;;b3,0;;mstring $pgt;;pstring $pgt_iou;;p">
</treenode>
<treenode node="_validatePGT;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;2603;5;2642;;;;vpos;;vbool;;r&#10;Definition&#10;    _validatePGT(&amp;$validate_url,$text_response,$tree_response)&#10;&#10;Description&#10;     This method is used to validate a PGT;s halt on failure.&#10;&#10;Parameters:&#10;    string - &amp;$validate_url the URL of the request to the CAS server&#10;    string $text_response - the response of the CAS server, as is&#10;    string $tree_response - the response of the CAS server, as a DOM XML&#10;&#10;Return:&#10;   true when successfull and issue a CAS_AuthenticationException;;d4,2604;;b3,0;;mstring;;pstring $text_response;;pstring $tree_response;;p">
</treenode>
<treenode node="_wasPreviouslyAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;1548;5;1640;;;;vpos;;vtrue;;r&#10;Definition&#10;    _wasPreviouslyAuthenticated()&#10;&#10;Description&#10;     This method tells if the user has already been (previously) authenticated by looking into the session variables.&#10;&#10;Return:&#10;   when the user has already been authenticated;s false otherwise;;d4,1549;;b3,0;;m">
</treenode>
<treenode node="addRebroadcastHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3873;5;3879;;;;vpos;;vvoid;;r&#10;Definition&#10;    addRebroadcastHeader($header)&#10;&#10;Description&#10;     This method is used to add header parameters when rebroadcasting pgtIou/pgtId or logoutRequest.&#10;&#10;Parameters:&#10;    string $header - Header to send when rebroadcasting;;d4,3874;;b1,0;;mstring $header;;p">
</treenode>
<treenode node="addRebroadcastNode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3849;5;3858;;;;vpos;;vvoid;;r&#10;Definition&#10;    addRebroadcastNode($rebroadcastNodeUrl)&#10;&#10;Description&#10;     Store the rebroadcast node for pgtIou/pgtId and logout requests.&#10;&#10;Parameters:&#10;    string $rebroadcastNodeUrl - The rebroadcast node URL;;d4,3850;;b1,0;;mstring $rebroadcastNodeUrl;;p">
</treenode>
<treenode node="checkAuthentication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1326;5;1376;;;;vpos;;vtrue;;r&#10;Definition&#10;    checkAuthentication()&#10;&#10;Description&#10;     This method is called to check whether the user is authenticated or not.&#10;&#10;Return:&#10;   when the user is authenticated, false when a previous;;d4,1327;;b1,0;;m">
</treenode>
<treenode node="ensureAuthenticationCallSuccessful;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;821;5;833;;;;vpos;;vvoid;;r&#10;Definition&#10;    ensureAuthenticationCallSuccessful()&#10;&#10;Description&#10;     Ensure that authentication was checked. Terminate with exception if no authentication was performed;;d4,822;;b1,0;;m">
</treenode>
<treenode node="ensureIsProxy;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;744;5;749;;;;vpos;;vvoid;;r&#10;Definition&#10;    ensureIsProxy()&#10;&#10;Description&#10;     Ensure that this is actually a proxy object or fail with an exception;;d4,745;;b1,0;;m">
</treenode>
<treenode node="forceAuthentication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1275;5;1294;;;;vpos;;vtrue;;r&#10;Definition&#10;    forceAuthentication()&#10;&#10;Description&#10;     This method is called to be sure that the user is authenticated. When not authenticated, halt by redirecting to the CAS server;s otherwise return true.&#10;&#10;Return:&#10;   when the user is authenticated;s otherwise halt;;d4,1276;;b1,0;;m">
</treenode>
<treenode node="getAllowedProxyChains;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3136;5;3142;;;;vpos;;vCAS_ProxyChain_AllowedList;;r&#10;Definition&#10;    getAllowedProxyChains ()&#10;&#10;Description&#10;     Answer the CAS_ProxyChain_AllowedList object for this client.;;d4,3137;;b1,0;;m">
</treenode>
<treenode node="getAttribute;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1233;5;1241;;;;vpos;;vstring;;r&#10;Definition&#10;    getAttribute($key)&#10;&#10;Description&#10;     Get a specific attribute by name&#10;&#10;Parameters:&#10;    string $key - name of attribute&#10;&#10;Return:&#10;   attribute values;;d4,1234;;b1,0;;mstring $key;;p">
</treenode>
<treenode node="getAttributes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1171;5;1184;;;;vpos;;varry;;r&#10;Definition&#10;    getAttributes()&#10;&#10;Description&#10;     Get an key values arry of attributes&#10;&#10;Return:&#10;   of attributes;;d4,1172;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationCallerFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;843;5;847;;;;vpos;;varray;;r&#10;Definition&#10;    getAuthenticationCallerFile ()&#10;&#10;Description&#10;     Answer information about the authentication caller.&#10;&#10;Return:&#10;   Keys are &apos;file&apos;, &apos;line&apos;, and &apos;method&apos;;;d4,844;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationCallerLine;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;857;5;861;;;;vpos;;varray;;r&#10;Definition&#10;    getAuthenticationCallerLine ()&#10;&#10;Description&#10;     Answer information about the authentication caller.&#10;&#10;Return:&#10;   Keys are &apos;file&apos;, &apos;line&apos;, and &apos;method&apos;;;d4,858;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationCallerMethod;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;871;5;875;;;;vpos;;varray;;r&#10;Definition&#10;    getAuthenticationCallerMethod ()&#10;&#10;Description&#10;     Answer information about the authentication caller.&#10;&#10;Return:&#10;   Keys are &apos;file&apos;, &apos;line&apos;, and &apos;method&apos;;;d4,872;;b1,0;;m">
</treenode>
<treenode node="getChangeSessionID;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1071;5;1074;;;;vpos;;vbool;;r&#10;Definition&#10;    getChangeSessionID()&#10;&#10;Description&#10;     Get whether phpCas is allowed to change session_id;;d4,1072;;b1,0;;m">
</treenode>
<treenode node="getLangObj;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;221;5;225;;;;vpos;;vCAS_Languages_LanguageInterface;;r&#10;Definition&#10;    getLangObj()&#10;&#10;Description&#10;     Create the language&#10;&#10;Return:&#10;   object implementing the class;;d4,222;;b1,0;;m">
</treenode>
<treenode node="getProxiedService;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2881;5;2915;;;;vpos;;vCAS_ProxiedService;;r&#10;Definition&#10;    getProxiedService ($type)&#10;&#10;Description&#10;     Answer a proxy-authenticated service handler.&#10;&#10;Parameters:&#10;    string $type - The service type;;d4,2882;;b1,0;;mstring $type;;p">
</treenode>
<treenode node="getProxies;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3096;5;3099;;;;vpos;;varray;;r&#10;Definition&#10;    getProxies()&#10;&#10;Description&#10;     Answer an array of proxies that are sitting in front of this application.;;d4,3097;;b1,0;;m">
</treenode>
<treenode node="getServerLoginURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;336;5;355;;;;vpos;;va;;r&#10;Definition&#10;    getServerLoginURL($gateway=false,$renew=false)&#10;&#10;Description&#10;     This method is used to retrieve the login URL of the CAS server.&#10;&#10;Parameters:&#10;    bool $gateway - true to check authentication, false to force it&#10;    bool $renew - true to force the authentication with the CAS server&#10;&#10;Return:&#10;   URL;;d4,337;;b1,0;;mbool $gateway;;pbool $renew;;p">
</treenode>
<treenode node="getServerLogoutURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;540;5;547;;;;vpos;;vstring;;r&#10;Definition&#10;    getServerLogoutURL()&#10;&#10;Description&#10;     This method is used to retrieve the logout URL of the CAS server.&#10;&#10;Return:&#10;   logout URL;;d4,541;;b1,0;;m">
</treenode>
<treenode node="getServerProxyURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;518;5;533;;;;vpos;;vstring;;r&#10;Definition&#10;    getServerProxyURL()&#10;&#10;Description&#10;     This method is used to retrieve the proxy URL of the CAS server.&#10;&#10;Return:&#10;   proxy URL;;d4,519;;b1,0;;m">
</treenode>
<treenode node="getServerProxyValidateURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;487;5;510;;;;vpos;;vstring;;r&#10;Definition&#10;    getServerProxyValidateURL()&#10;&#10;Description&#10;     This method is used to retrieve the proxy validating URL of the CAS server.&#10;&#10;Return:&#10;   proxyValidate URL;;d4,488;;b1,0;;m">
</treenode>
<treenode node="getServerSamlValidateURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;462;5;480;;;;vpos;;vstring;;r&#10;Definition&#10;    getServerSamlValidateURL()&#10;&#10;Description&#10;     This method is used to retrieve the SAML validating URL of the CAS server.&#10;&#10;Return:&#10;   samlValidate URL;;d4,463;;b1,0;;m">
</treenode>
<treenode node="getServerServiceValidateURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;430;5;456;;;;vpos;;vstring;;r&#10;Definition&#10;    getServerServiceValidateURL()&#10;&#10;Description&#10;     This method is used to retrieve the service validating URL of the CAS server.&#10;&#10;Return:&#10;   serviceValidate URL;;d4,431;;b1,0;;m">
</treenode>
<treenode node="getServerVersion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;272;5;275;;;;vpos;;vstring;;r&#10;Definition&#10;    getServerVersion()&#10;&#10;Description&#10;     This method is used to retrieve the version of the CAS server.&#10;&#10;Return:&#10;   the version of the CAS server;;d4,273;;b1,0;;m">
</treenode>
<treenode node="getTicket;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f12;1869;5;1872;;;;vpos;;vstring;;r&#10;Definition&#10;    getTicket()&#10;&#10;Description&#10;     This method returns the Service Ticket provided in the URL of the request.&#10;&#10;Return:&#10;   service ticket;;d4,1870;;b1,0;;m">
</treenode>
<treenode node="getURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3523;5;3552;;;;vpos;;vThe;;r&#10;Definition&#10;    getURL()&#10;&#10;Description&#10;     This method returns the URL of the current request (without any ticket CGI parameter).&#10;&#10;Return:&#10;   URL;;d4,3524;;b1,0;;m">
</treenode>
<treenode node="getUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1117;5;1123;;;;vpos;;vstring;;r&#10;Definition&#10;    getUser()&#10;&#10;Description&#10;     This method returns the CAS user&apos;s login name.&#10;&#10;Return:&#10;   the login name of the authenticated user;;d4,1118;;b1,0;;m">
</treenode>
<treenode node="handleLogoutRequests;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1734;5;1837;;;;vpos;;vvoid;;r&#10;Definition&#10;    handleLogoutRequests($check_client=true, $allowed_clients=false)&#10;&#10;Description&#10;     This method handles logout requests.&#10;&#10;Parameters:&#10;    bool $check_client - true to check the client bofore handling&#10;    bool $allowed_clients - an array of host names allowed to send;;d4,1735;;b1,0;;mbool $check_client;;pbool $allowed_clients;;p">
</treenode>
<treenode node="hasAttribute;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1205;5;1211;;;;vpos;;vbool;;r&#10;Definition&#10;    hasAttribute($key)&#10;&#10;Description&#10;     Check whether a specific attribute with a name is available&#10;&#10;Parameters:&#10;    string $key - name of attribute&#10;&#10;Return:&#10;   is attribute available;;d4,1206;;b1,0;;mstring $key;;p">
</treenode>
<treenode node="hasAttributes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1191;5;1197;;;;vpos;;vbool;;r&#10;Definition&#10;    hasAttributes()&#10;&#10;Description&#10;     Check whether attributes are available&#10;&#10;Return:&#10;   attributes available;;d4,1192;;b1,0;;m">
</treenode>
<treenode node="hasTicket;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1891;5;1894;;;;vpos;;vbool;;r&#10;Definition&#10;    hasTicket()&#10;&#10;Description&#10;     This method tells if a Service Ticket was stored.&#10;&#10;Return:&#10;   if a Service Ticket has been stored;;d4,1892;;b1,0;;m">
</treenode>
<treenode node="initializeProxiedService;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2932;5;2951;;;;vpos;;vvoid;;r&#10;Definition&#10;    initializeProxiedService (CAS_ProxiedService $proxiedService)&#10;&#10;Description&#10;     Initialize a proxied-service handler with the proxy-ticket it should use.&#10;&#10;Parameters:&#10;    CAS_ProxiedService $proxiedService - service handler;;d4,2933;;b1,0;;mCAS_ProxiedService $proxiedService;;p">
</treenode>
<treenode node="isAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1387;5;1528;;;;vpos;;vtrue;;r&#10;Definition&#10;    isAuthenticated($renew=false)&#10;&#10;Description&#10;     This method is called to check if the user is authenticated (previously or by tickets given in the URL).&#10;&#10;Parameters:&#10;    bool $renew - true to force the authentication with the CAS server&#10;&#10;Return:&#10;   when the user is authenticated;;d4,1388;;b1,0;;mbool $renew;;p">
</treenode>
<treenode node="isProxy;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2241;5;2244;;;;vpos;;vtrue;;r&#10;Definition&#10;    isProxy()&#10;&#10;Description&#10;     Tells if a CAS client is a CAS proxy or not&#10;&#10;Return:&#10;   when the CAS client is a CAs proxy, false otherwise;;d4,2242;;b1,0;;m">
</treenode>
<treenode node="isSessionAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1535;5;1538;;;;vpos;;vtrue;;r&#10;Definition&#10;    isSessionAuthenticated ()&#10;&#10;Description&#10;     This method tells if the current session is authenticated.&#10;&#10;Return:&#10;   if authenticated based soley on $_SESSION variable;;d4,1536;;b1,0;;m">
</treenode>
<treenode node="logout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1680;5;1712;;;;vpos;;vvoid;;r&#10;Definition&#10;    logout($params)&#10;&#10;Description&#10;     This method is used to logout from CAS.&#10;&#10;Parameters:&#10;    array $params - an array that contains the optional url and service;;d4,1681;;b1,0;;marray $params;;p">
</treenode>
<treenode node="markAuthenticationCall;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;760;5;770;;;;vpos;;vnull;;r&#10;Definition&#10;    markAuthenticationCall ($auth)&#10;&#10;Description&#10;     Mark the caller of authentication. This will help client integraters determine problems with their code flow if they call a function such as getUser() before authentication has occurred.&#10;&#10;Parameters:&#10;    bool $auth - True if authentication was successful, false otherwise;;d4,761;;b1,0;;mbool $auth;;p">
</treenode>
<treenode node="printHTMLFooter;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;128;5;140;;;;vpos;;vvoid;;r&#10;Definition&#10;    printHTMLFooter()&#10;&#10;Description&#10;     This method prints the footer of the HTML output (after filtering). If CAS_Client::setHTMLFooter() was not used, a default footer is output.;;d4,129;;b1,0;;m">
</treenode>
<treenode node="printHTMLHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;100;5;110;;;;vpos;;vvoid;;r&#10;Definition&#10;    printHTMLHeader($title)&#10;&#10;Description&#10;     This method prints the header of the HTML output (after filtering). If CAS_Client::setHTMLHeader() was not used, a default header is output.&#10;&#10;Parameters:&#10;    string $title - the title of the page;;d4,101;;b1,0;;mstring $title;;p">
</treenode>
<treenode node="redirectToCas;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1652;5;1669;;;;vpos;;vvoid;;r&#10;Definition&#10;    redirectToCas($gateway=false,$renew=false)&#10;&#10;Description&#10;     This method is used to redirect the client to the CAS server. It is used by CAS_Client::forceAuthentication() and CAS_Client::checkAuthentication().&#10;&#10;Parameters:&#10;    bool $gateway - true to check authentication, false to force it&#10;    bool $renew - true to force the authentication with the CAS server;;d4,1653;;b1,0;;mbool $gateway;;pbool $renew;;p">
</treenode>
<treenode node="renewAuthentication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1250;5;1267;;;;vpos;;vtrue;;r&#10;Definition&#10;    renewAuthentication()&#10;&#10;Description&#10;     This method is called to renew the authentication of the user If the user is authenticated, renew the connection If not, redirect to CAS&#10;&#10;Return:&#10;   when the user is authenticated;s otherwise halt;;d4,1251;;b1,0;;m">
</treenode>
<treenode node="retrievePT;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2657;5;2763;;;;vpos;;va;;r&#10;Definition&#10;    retrievePT($target_service,&amp;$err_code,&amp;$err_msg)&#10;&#10;Description&#10;     This method is used to retrieve PT&apos;s from the CAS server thanks to a PGT.&#10;&#10;Parameters:&#10;    string $target_service - the service to ask for with the PT&#10;    string - &amp;$err_code      an error code (PHPCAS_SERVICE_OK on success)&#10;    string - &amp;$err_msg       an error message (empty on success)&#10;&#10;Return:&#10;   Proxy Ticket, or false on error;;d4,2658;;b1,0;;mstring $target_service;;pstring;;pstring;;p">
</treenode>
<treenode node="serviceMail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3017;5;3057;;;;vpos;;vobject;;r&#10;Definition&#10;    serviceMail($url,$serviceUrl,$flags,&amp;$err_code,&amp;$err_msg,&amp;$pt)&#10;&#10;Description&#10;     This method is used to access an IMAP/POP3/NNTP service.&#10;&#10;Parameters:&#10;    string $url - a string giving the URL of the service, including&#10;    string $serviceUrl - a string giving for CAS retrieve Proxy ticket&#10;    string $flags - options given to imap_open()&#10;    int - &amp;$err_code  an error code Possible values are&#10;    string - &amp;$err_msg   an error message on failure&#10;    string - &amp;$pt        the Proxy Ticket (PT) retrieved from the CAS&#10;&#10;Return:&#10;   an IMAP stream on success, false otherwise (in this later;;d4,3018;;b1,0;;mstring $url;;pstring $serviceUrl;;pstring $flags;;pint;;pstring;;pstring;;p">
</treenode>
<treenode node="serviceWeb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2967;5;2996;;;;vpos;;vtrue;;r&#10;Definition&#10;    serviceWeb($url,&amp;$err_code,&amp;$output)&#10;&#10;Description&#10;     This method is used to access an HTTP[S] service.&#10;&#10;Parameters:&#10;    string $url - the service to access&#10;    int - &amp;$err_code an error code Possible values are&#10;    string - &amp;$output   the output of the service (also used to give an error&#10;&#10;Return:&#10;   on success, false otherwise (in this later case, $err_code;;d4,2968;;b1,0;;mstring $url;;pint;;pstring;;p">
</treenode>
<treenode node="setAttributes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1161;5;1164;;;;vpos;;vvoid;;r&#10;Definition&#10;    setAttributes($attributes)&#10;&#10;Description&#10;     Set an array of attributes&#10;&#10;Parameters:&#10;    array $attributes - a key value array of attributes;;d4,1162;;b1,0;;marray $attributes;;p">
</treenode>
<treenode node="setBaseURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3561;5;3568;;;;vpos;;vstring;;r&#10;Definition&#10;    setBaseURL($url)&#10;&#10;Description&#10;     This method sets the base URL of the CAS server.&#10;&#10;Parameters:&#10;    string $url - the base URL&#10;&#10;Return:&#10;   base url;;d4,3562;;b1,0;;mstring $url;;p">
</treenode>
<treenode node="setCacheTimesForAuthRecheck;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1311;5;1317;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCacheTimesForAuthRecheck($n)&#10;&#10;Description&#10;     Set the number of times authentication will be cached before rechecked.&#10;&#10;Parameters:&#10;    int $n - number of times to wait for a recheck;;d4,1312;;b1,0;;mint $n;;p">
</treenode>
<treenode node="setCallbackURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2382;5;2391;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCallbackURL($url)&#10;&#10;Description&#10;     This method sets the callback url.&#10;&#10;Parameters:&#10;    string $url - url to set callback;;d4,2383;;b1,0;;mstring $url;;p">
</treenode>
<treenode node="setCasAttributeParserCallback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;663;5;667;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCasAttributeParserCallback($function, array $additionalArgs = array())&#10;&#10;Description&#10;     Set a callback function to be run when parsing CAS attributes&#10;&#10;Parameters:&#10;    string $function - callback function to call&#10;    array $additionalArgs - optional array of arguments;;d4,664;;b1,0;;mstring $function;;parray $additionalArgs;;p">
</treenode>
<treenode node="setCasServerCACert;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1943;5;1957;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCasServerCACert($cert, $validate_cn)&#10;&#10;Description&#10;     Set the CA certificate of the CAS server.&#10;&#10;Parameters:&#10;    string $cert - the PEM certificate file name of the CA that emited&#10;    bool $validate_cn - valiate CN of the CAS server certificate;;d4,1944;;b1,0;;mstring $cert;;pbool $validate_cn;;p">
</treenode>
<treenode node="setExtraCurlOption;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;578;5;581;;;;vpos;;vvoid;;r&#10;Definition&#10;    setExtraCurlOption($key, $value)&#10;&#10;Description&#10;     This method is used to set additional user curl options.&#10;&#10;Parameters:&#10;    string $key - name of the curl option&#10;    string $value - value of the curl option;;d4,579;;b1,0;;mstring $key;;pstring $value;;p">
</treenode>
<treenode node="setHTMLFooter;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;165;5;172;;;;vpos;;vvoid;;r&#10;Definition&#10;    setHTMLFooter($footer)&#10;&#10;Description&#10;     This method set the HTML footer used for all outputs.&#10;&#10;Parameters:&#10;    string $footer - the HTML footer;;d4,166;;b1,0;;mstring $footer;;p">
</treenode>
<treenode node="setHTMLHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;149;5;156;;;;vpos;;vvoid;;r&#10;Definition&#10;    setHTMLHeader($header)&#10;&#10;Description&#10;     This method set the HTML header used for all outputs.&#10;&#10;Parameters:&#10;    string $header - the HTML header;;d4,150;;b1,0;;mstring $header;;p">
</treenode>
<treenode node="setLang;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;200;5;215;;;;vpos;;vvoid;;r&#10;Definition&#10;    setLang($lang)&#10;&#10;Description&#10;     This method is used to set the language used by phpCAS.&#10;&#10;Parameters:&#10;    string $lang - representing the language;;d4,201;;b1,0;;mstring $lang;;p">
</treenode>
<treenode node="setNoCasServerValidation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1964;5;1967;;;;vpos;;vvoid;;r&#10;Definition&#10;    setNoCasServerValidation()&#10;&#10;Description&#10;     Set no SSL validation for the CAS server.;;d4,1965;;b1,0;;m">
</treenode>
<treenode node="setNoClearTicketsFromUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;637;5;640;;;;vpos;;vvoid;;r&#10;Definition&#10;    setNoClearTicketsFromUrl ()&#10;&#10;Description&#10;     Configure the client to not send redirect headers and call exit() on authentication success. The normal redirect is used to remove the service ticket from the client&apos;s URL, but for running unit tests we need to continue without exiting.;;d4,638;;b1,0;;m">
</treenode>
<treenode node="setPGTStorage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2505;5;2521;;;;vpos;;vvoid;;r&#10;Definition&#10;    setPGTStorage($storage)&#10;&#10;Description&#10;     This method can be used to set a custom PGT storage object.&#10;&#10;Parameters:&#10;    CAS_PGTStorage_AbstractStorage $storage - a PGT storage object that;;d4,2506;;b1,0;;mCAS_PGTStorage_AbstractStorage $storage;;p">
</treenode>
<treenode node="setPGTStorageDb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2540;5;2562;;;;vpos;;vvoid;;r&#10;Definition&#10;    setPGTStorageDb(&#10;        $dsn_or_pdo, $username=&apos;&apos;, $password=&apos;&apos;, $table=&apos;&apos;, $driver_options=null&#10;    )&#10;&#10;Description&#10;     This method is used to tell phpCAS to store the response of the CAS server to PGT requests in a database.&#10;&#10;Parameters:&#10;    string $dsn_or_pdo - a dsn string to use for creating a PDO&#10;    string $username - the username to use when connecting to the&#10;    string $password - the password to use when connecting to the&#10;    string $table - the table to use for storing and retrieving&#10;    string $driver_options - any driver options to use when connecting;;d6,2542;;b1,0;;mstring $dsn_or_pdo;;pstring $username;;pstring $password;;pstring $table;;pstring $driver_options;;p">
</treenode>
<treenode node="setPGTStorageFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2572;5;2583;;;;vpos;;vvoid;;r&#10;Definition&#10;    setPGTStorageFile($path=&apos;&apos;)&#10;&#10;Description&#10;     This method is used to tell phpCAS to store the response of the CAS server to PGT requests onto the filesystem.&#10;&#10;Parameters:&#10;    string $path - the path where the PGT&apos;s should be stored;;d4,2573;;b1,0;;mstring $path;;p">
</treenode>
<treenode node="setPostAuthenticateCallback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;697;5;701;;;;vpos;;vvoid;;r&#10;Definition&#10;    setPostAuthenticateCallback ($function, array $additionalArgs = array())&#10;&#10;Description&#10;     Set a callback function to be run when a user authenticates.&#10;&#10;Parameters:&#10;    string $function - callback function to call&#10;    array $additionalArgs - optional array of arguments;;d4,698;;b1,0;;mstring $function;;parray $additionalArgs;;p">
</treenode>
<treenode node="setRequestImplementation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;610;5;619;;;;vpos;;vvoid;;r&#10;Definition&#10;    setRequestImplementation ($className)&#10;&#10;Description&#10;     Override the default implementation used to make web requests in readUrl(). This class must implement the CAS_Request_RequestInterface.&#10;&#10;Parameters:&#10;    string $className - name of the RequestImplementation class;;d4,611;;b1,0;;mstring $className;;p">
</treenode>
<treenode node="setServerLoginURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;364;5;371;;;;vpos;;vstring;;r&#10;Definition&#10;    setServerLoginURL($url)&#10;&#10;Description&#10;     This method sets the login URL of the CAS server.&#10;&#10;Parameters:&#10;    string $url - the login URL&#10;&#10;Return:&#10;   login url;;d4,365;;b1,0;;mstring $url;;p">
</treenode>
<treenode node="setServerLogoutURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;556;5;563;;;;vpos;;vstring;;r&#10;Definition&#10;    setServerLogoutURL($url)&#10;&#10;Description&#10;     This method sets the logout URL of the CAS server.&#10;&#10;Parameters:&#10;    string $url - the logout URL&#10;&#10;Return:&#10;   logout url;;d4,557;;b1,0;;mstring $url;;p">
</treenode>
<treenode node="setServerProxyValidateURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;398;5;405;;;;vpos;;vstring;;r&#10;Definition&#10;    setServerProxyValidateURL($url)&#10;&#10;Description&#10;     This method sets the proxyValidate URL of the CAS server.&#10;&#10;Parameters:&#10;    string $url - the proxyValidate URL&#10;&#10;Return:&#10;   proxyValidate URL;;d4,399;;b1,0;;mstring $url;;p">
</treenode>
<treenode node="setServerSamlValidateURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;415;5;422;;;;vpos;;vstring;;r&#10;Definition&#10;    setServerSamlValidateURL($url)&#10;&#10;Description&#10;     This method sets the samlValidate URL of the CAS server.&#10;&#10;Parameters:&#10;    string $url - the samlValidate URL&#10;&#10;Return:&#10;   samlValidate URL;;d4,416;;b1,0;;mstring $url;;p">
</treenode>
<treenode node="setServerServiceValidateURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;381;5;388;;;;vpos;;vstring;;r&#10;Definition&#10;    setServerServiceValidateURL($url)&#10;&#10;Description&#10;     This method sets the serviceValidate URL of the CAS server.&#10;&#10;Parameters:&#10;    string $url - the serviceValidate URL&#10;&#10;Return:&#10;   serviceValidate URL;;d4,382;;b1,0;;mstring $url;;p">
</treenode>
<treenode node="setSessionIdSalt;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3735;5;3737;;;;vpos;;vvoid;;r&#10;Definition&#10;    setSessionIdSalt($salt)&#10;&#10;Description&#10;     Set a salt/seed for the session-id hash to make it harder to guess.&#10;&#10;Parameters:&#10;    string $salt;;d44,3735;;b1,0;;mstring $salt;;p">
</treenode>
<treenode node="setSingleSignoutCallback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;727;5;731;;;;vpos;;vvoid;;r&#10;Definition&#10;    setSingleSignoutCallback ($function, array $additionalArgs = array())&#10;&#10;Description&#10;     Set a callback function to be run when a single-signout request is received.&#10;&#10;Parameters:&#10;    string $function - callback function to call&#10;    array $additionalArgs - optional array of arguments;;d4,728;;b1,0;;mstring $function;;parray $additionalArgs;;p">
</treenode>
<treenode node="setTicket;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1881;5;1884;;;;vpos;;vvoid;;r&#10;Definition&#10;    setTicket($st)&#10;&#10;Description&#10;     This method stores the Service Ticket.&#10;&#10;Parameters:&#10;    string $st - The Service Ticket;;d4,1882;;b1,0;;mstring $st;;p">
</treenode>
<treenode node="setURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3508;5;3515;;;;vpos;;vvoid;;r&#10;Definition&#10;    setURL($url)&#10;&#10;Description&#10;     This method sets the URL of the current request&#10;&#10;Parameters:&#10;    string $url - url to set for service;;d4,3509;;b1,0;;mstring $url;;p">
</treenode>
<treenode node="validateCAS10;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;1984;5;2035;;;;vpos;;vbool;;r&#10;Definition&#10;    validateCAS10(&amp;$validate_url,&amp;$text_response,&amp;$tree_response,$renew=false)&#10;&#10;Description&#10;     This method is used to validate a CAS 1,0 ticket;s halt on failure, and sets $validate_url, $text_reponse and $tree_response on success.&#10;&#10;Parameters:&#10;    string - &amp;$validate_url  reference to the the URL of the request to&#10;    string - &amp;$text_response reference to the response of the CAS&#10;    string - &amp;$tree_response reference to the response of the CAS&#10;    bool $renew - true to force the authentication with the CAS server&#10;&#10;Return:&#10;   true when successfull and issue a CAS_AuthenticationException;;d4,1985;;b1,0;;mstring;;pstring;;pstring;;pbool $renew;;p">
</treenode>
<treenode node="validateCAS20;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;3165;5;3298;;;;vpos;;vbool;;r&#10;Definition&#10;    validateCAS20(&amp;$validate_url,&amp;$text_response,&amp;$tree_response, $renew=false)&#10;&#10;Description&#10;     This method is used to validate a cas 2.0 ST or PT;s halt on failure Used for all CAS 2.0 validations&#10;&#10;Parameters:&#10;    string - &amp;$validate_url  the url of the reponse&#10;    string - &amp;$text_response the text of the repsones&#10;    string - &amp;$tree_response the domxml tree of the respones&#10;    bool $renew - true to force the authentication with the CAS server&#10;&#10;Return:&#10;   true when successfull and issue a CAS_AuthenticationException;;d4,3166;;b1,0;;mstring;;pstring;;pstring;;pbool $renew;;p">
</treenode>
<treenode node="validateSA;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;2064;5;2151;;;;vpos;;vbool;;r&#10;Definition&#10;    validateSA(&amp;$validate_url,&amp;$text_response,&amp;$tree_response,$renew=false)&#10;&#10;Description&#10;     This method is used to validate a SAML TICKET;s halt on failure, and sets $validate_url, $text_reponse and $tree_response on success. These parameters are used later by CAS_Client::_validatePGT() for CAS proxies.&#10;&#10;Parameters:&#10;    string - &amp;$validate_url  reference to the the URL of the request to&#10;    string - &amp;$text_response reference to the response of the CAS&#10;    string - &amp;$tree_response reference to the response of the CAS&#10;    bool $renew - true to force the authentication with the CAS server&#10;&#10;Return:&#10;   true when successfull and issue a CAS_AuthenticationException;;d4,2065;;b1,0;;mstring;;pstring;;pstring;;pbool $renew;;p">
</treenode>
<treenode node="wasAuthenticationCalled;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;778;5;781;;;;vpos;;vbool;;r&#10;Definition&#10;    wasAuthenticationCalled ()&#10;&#10;Description&#10;     Answer true if authentication has been checked.;;d4,779;;b1,0;;m">
</treenode>
<treenode node="wasAuthenticationCallSuccessful;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Client.php;f11;806;5;810;;;;vpos;;vbool;;r&#10;Definition&#10;    wasAuthenticationCallSuccessful ()&#10;&#10;Description&#10;     Answer the result of the authentication call.;;d4,807;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_CookieJar;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f0;40;1;382;;;;vpos;;v;;r&#10;Definition&#10;    class CAS_CookieJar&#10;&#10;Description&#10;     This class provides access to service cookies and handles parsing of response headers to pull out cookie values.;;d0,41;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f11;53;5;56;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct (array &amp;$storageArray)&#10;&#10;Description&#10;     Create a new cookie jar by passing it a reference to an array in which it should store cookies.&#10;&#10;Parameters:&#10;    array - &amp;$storageArray Array to store cookies;;d4,54;;b1,0;;marray;;p">
</treenode>
<treenode node="cookieMatchesTarget;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f14;316;5;380;;;;vpos;;vbool;;r&#10;Definition&#10;    cookieMatchesTarget ($cookie, $target)&#10;&#10;Description&#10;     Answer true if cookie is applicable to a target.&#10;&#10;Parameters:&#10;    array $cookie - An array of cookie attributes&#10;    array $target - An array of URL attributes as generated by parse_url();;d4,317;;b2,0;;marray $cookie;;parray $target;;p">
</treenode>
<treenode node="discardCookie;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f14;271;5;288;;;;vpos;;vvoid;;r&#10;Definition&#10;    discardCookie ($cookie)&#10;&#10;Description&#10;     Discard an existing cookie&#10;&#10;Parameters:&#10;    array $cookie - An cookie;;d4,272;;b2,0;;marray $cookie;;p">
</treenode>
<treenode node="expireCookies;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f14;297;5;304;;;;vpos;;vvoid;;r&#10;Definition&#10;    expireCookies ()&#10;&#10;Description&#10;     Go through our stored cookies and remove any that are expired.;;d4,298;;b2,0;;m">
</treenode>
<treenode node="getCookies;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f11;101;5;122;;;;vpos;;varray;;r&#10;Definition&#10;    getCookies ($request_url)&#10;&#10;Description&#10;     Retrieve cookies applicable for a web service request. Cookie applicability is based on RFC 2965: http://www.ietf.org/rfc/rfc2965.txt&#10;&#10;Parameters:&#10;    string $request_url - The url that the cookies will be for&#10;&#10;Return:&#10;   An array containing cookies;;d4,102;;b1,0;;mstring $request_url;;p">
</treenode>
<treenode node="parseCookieHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f14;160;5;243;;;;vpos;;varray;;r&#10;Definition&#10;    parseCookieHeader ($line, $defaultDomain)&#10;&#10;Description&#10;     Parse a single cookie header line.&#10;&#10;Parameters:&#10;    string $line - The header line&#10;    string $defaultDomain - The domain to use if none is specified in;;d4,161;;b2,0;;mstring $line;;pstring $defaultDomain;;p">
</treenode>
<treenode node="parseCookieHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f14;135;5;147;;;;vpos;;varray;;r&#10;Definition&#10;    parseCookieHeaders( $header, $defaultDomain )&#10;&#10;Description&#10;     Parse Cookies without PECL From the comments in http://php.net/manual/en/function.http-parse-cookie.php&#10;&#10;Parameters:&#10;    array $header - array of header lines&#10;    string $defaultDomain - The domain to use if none is specified in&#10;&#10;Return:&#10;   of cookies;;d4,136;;b2,0;;marray $header;;pstring $defaultDomain;;p">
</treenode>
<treenode node="storeCookie;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f14;254;5;260;;;;vpos;;vvoid;;r&#10;Definition&#10;    storeCookie ($cookie)&#10;&#10;Description&#10;     Add, update, or remove a cookie.&#10;&#10;Parameters:&#10;    array $cookie - A cookie array as created by parseCookieHeaders();;d4,255;;b2,0;;marray $cookie;;p">
</treenode>
<treenode node="storeCookies;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\CookieJar.php;f11;69;5;89;;;;vpos;;vvoid;;r&#10;Definition&#10;    storeCookies ($request_url, $response_headers)&#10;&#10;Description&#10;     Store cookies for a web service request. Cookie storage is based on RFC 2965: http://www.ietf.org/rfc/rfc2965.txt&#10;&#10;Parameters:&#10;    string $request_url - The URL that generated the response headers&#10;    array $response_headers - An array of the HTTP response header strings;;d4,70;;b1,0;;mstring $request_url;;parray $response_headers;;p">
</treenode>
</treenode>
<treenode node="CAS_GracefullTerminationException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\GracefullTerminationException.php;f0;42;1;84;;;;vpos;;vRuntimeException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_GracefullTerminationException&#10;extends RuntimeException&#10;implements CAS_Exception&#10;&#10;Description&#10;     An exception for terminatinating execution or to throw for unit testing;;d0,45;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\GracefullTerminationException.php;f11;59;5;68;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct ($message = &apos;Terminate Gracefully&apos;, $code = 0)&#10;&#10;Description&#10;     Test if exceptions should be thrown or if we should just exit. In production usage we want to just exit cleanly when prompting the user for a redirect without filling the error logs with uncaught exceptions. In unit testing scenarios we cannot exit or we won&apos;t be able to continue with our tests.&#10;&#10;Parameters:&#10;    string $message - Message Text&#10;    string $code - Error code;;d4,60;;b1,0;;mstring $message;;pstring $code;;p">
</treenode>
<treenode node="throwInsteadOfExiting;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\GracefullTerminationException.php;f18;79;5;82;;;;vpos;;vvoid;;r&#10;Definition&#10;    throwInsteadOfExiting()&#10;&#10;Description&#10;     Force phpcas to thow Exceptions instead of calling exit() Needed for unit testing. Generally shouldn&apos;t be used in production due to an increase in Apache error logging if CAS_GracefulTerminiationExceptions are not caught and handled.;;d4,80;;b1,5;;m">
</treenode>
</treenode>
<treenode node="CAS_InvalidArgumentException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\InvalidArgumentException.php;f0;39;1;44;;;;vpos;;vInvalidArgumentException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_InvalidArgumentException&#10;extends InvalidArgumentException&#10;implements CAS_Exception&#10;&#10;Description&#10;     Exception that denotes invalid arguments were passed.;;d0,42;;b0,0;;m">
</treenode>
<treenode node="CAS_Languages_Catalan;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Catalan.php;f0;42;1;113;;;;vpos;;vCAS_Languages_LanguageInterface;;c;;r&#10;Definition&#10;    class CAS_Languages_Catalan implements CAS_Languages_LanguageInterface&#10;&#10;Description&#10;     Catalan language class;;d0,43;;b0,0;;m">
<treenode node="getAuthenticationFailed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Catalan.php;f11;89;5;92;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationFailed()&#10;&#10;Description&#10;     Get authentication failed string&#10;&#10;Return:&#10;   authentication failed;;d4,90;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Catalan.php;f11;59;5;62;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationWanted()&#10;&#10;Description&#10;     Get authentication wanted string&#10;&#10;Return:&#10;   authentication wanted;;d4,60;;b1,0;;m">
</treenode>
<treenode node="getLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Catalan.php;f11;69;5;72;;;;vpos;;vstring;;r&#10;Definition&#10;    getLogout()&#10;&#10;Description&#10;     Get logout string&#10;&#10;Return:&#10;   logout;;d4,70;;b1,0;;m">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Catalan.php;f11;109;5;112;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUnavailable()&#10;&#10;Description&#10;     Get the service unavailable string&#10;&#10;Return:&#10;   service unavailable;;d4,110;;b1,0;;m">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Catalan.php;f11;79;5;82;;;;vpos;;vstring;;r&#10;Definition&#10;    getShouldHaveBeenRedirected()&#10;&#10;Description&#10;     Get the should have been redirected string&#10;&#10;Return:&#10;   should habe been redirected;;d4,80;;b1,0;;m">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Catalan.php;f11;49;5;52;;;;vpos;;vstring;;r&#10;Definition&#10;    getUsingServer()&#10;&#10;Description&#10;     Get the using server string&#10;&#10;Return:&#10;   using server;;d4,50;;b1,0;;m">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Catalan.php;f11;99;5;102;;;;vpos;;vstring;;r&#10;Definition&#10;    getYouWereNotAuthenticated()&#10;&#10;Description&#10;     Get the your were not authenticated string&#10;&#10;Return:&#10;   not authenticated;;d4,100;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_Languages_ChineseSimplified;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\ChineseSimplified.php;f0;42;1;113;;;;vpos;;vCAS_Languages_LanguageInterface;;c;;r&#10;Definition&#10;    class CAS_Languages_ChineseSimplified implements CAS_Languages_LanguageInterface&#10;&#10;Description&#10;     Chinese Simplified language class;;d0,43;;b0,0;;m">
<treenode node="getAuthenticationFailed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\ChineseSimplified.php;f11;89;5;92;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationFailed()&#10;&#10;Description&#10;     Get authentication failed string&#10;&#10;Return:&#10;   authentication failed;;d4,90;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\ChineseSimplified.php;f11;59;5;62;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationWanted()&#10;&#10;Description&#10;     Get authentication wanted string&#10;&#10;Return:&#10;   authentication wanted;;d4,60;;b1,0;;m">
</treenode>
<treenode node="getLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\ChineseSimplified.php;f11;69;5;72;;;;vpos;;vstring;;r&#10;Definition&#10;    getLogout()&#10;&#10;Description&#10;     Get logout string&#10;&#10;Return:&#10;   logout;;d4,70;;b1,0;;m">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\ChineseSimplified.php;f11;109;5;112;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUnavailable()&#10;&#10;Description&#10;     Get the service unavailable string&#10;&#10;Return:&#10;   service unavailable;;d4,110;;b1,0;;m">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\ChineseSimplified.php;f11;79;5;82;;;;vpos;;vstring;;r&#10;Definition&#10;    getShouldHaveBeenRedirected()&#10;&#10;Description&#10;     Get the should have been redirected string&#10;&#10;Return:&#10;   should habe been redirected;;d4,80;;b1,0;;m">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\ChineseSimplified.php;f11;49;5;52;;;;vpos;;vstring;;r&#10;Definition&#10;    getUsingServer()&#10;&#10;Description&#10;     Get the using server string&#10;&#10;Return:&#10;   using server;;d4,50;;b1,0;;m">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\ChineseSimplified.php;f11;99;5;102;;;;vpos;;vstring;;r&#10;Definition&#10;    getYouWereNotAuthenticated()&#10;&#10;Description&#10;     Get the your were not authenticated string&#10;&#10;Return:&#10;   not authenticated;;d4,100;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_Languages_English;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\English.php;f0;42;1;113;;;;vpos;;vCAS_Languages_LanguageInterface;;c;;r&#10;Definition&#10;    class CAS_Languages_English implements CAS_Languages_LanguageInterface&#10;&#10;Description&#10;     English language class;;d0,43;;b0,0;;m">
<treenode node="getAuthenticationFailed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\English.php;f11;89;5;92;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationFailed()&#10;&#10;Description&#10;     Get authentication failed string&#10;&#10;Return:&#10;   authentication failed;;d4,90;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\English.php;f11;59;5;62;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationWanted()&#10;&#10;Description&#10;     Get authentication wanted string&#10;&#10;Return:&#10;   authentication wanted;;d4,60;;b1,0;;m">
</treenode>
<treenode node="getLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\English.php;f11;69;5;72;;;;vpos;;vstring;;r&#10;Definition&#10;    getLogout()&#10;&#10;Description&#10;     Get logout string&#10;&#10;Return:&#10;   logout;;d4,70;;b1,0;;m">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\English.php;f11;109;5;112;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUnavailable()&#10;&#10;Description&#10;     Get the service unavailable string&#10;&#10;Return:&#10;   service unavailable;;d4,110;;b1,0;;m">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\English.php;f11;79;5;82;;;;vpos;;vstring;;r&#10;Definition&#10;    getShouldHaveBeenRedirected()&#10;&#10;Description&#10;     Get the should have been redirected string&#10;&#10;Return:&#10;   should habe been redirected;;d4,80;;b1,0;;m">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\English.php;f11;49;5;52;;;;vpos;;vstring;;r&#10;Definition&#10;    getUsingServer()&#10;&#10;Description&#10;     Get the using server string&#10;&#10;Return:&#10;   using server;;d4,50;;b1,0;;m">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\English.php;f11;99;5;102;;;;vpos;;vstring;;r&#10;Definition&#10;    getYouWereNotAuthenticated()&#10;&#10;Description&#10;     Get the your were not authenticated string&#10;&#10;Return:&#10;   not authenticated;;d4,100;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_Languages_French;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\French.php;f0;42;1;113;;;;vpos;;vCAS_Languages_LanguageInterface;;c;;r&#10;Definition&#10;    class CAS_Languages_French implements CAS_Languages_LanguageInterface&#10;&#10;Description&#10;     French language class;;d0,43;;b0,0;;m">
<treenode node="getAuthenticationFailed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\French.php;f11;89;5;92;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationFailed()&#10;&#10;Description&#10;     Get authentication failed string&#10;&#10;Return:&#10;   authentication failed;;d4,90;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\French.php;f11;59;5;62;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationWanted()&#10;&#10;Description&#10;     Get authentication wanted string&#10;&#10;Return:&#10;   authentication wanted;;d4,60;;b1,0;;m">
</treenode>
<treenode node="getLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\French.php;f11;69;5;72;;;;vpos;;vstring;;r&#10;Definition&#10;    getLogout()&#10;&#10;Description&#10;     Get logout string&#10;&#10;Return:&#10;   logout;;d4,70;;b1,0;;m">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\French.php;f11;109;5;112;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUnavailable()&#10;&#10;Description&#10;     Get the service unavailable string&#10;&#10;Return:&#10;   service unavailable;;d4,110;;b1,0;;m">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\French.php;f11;79;5;82;;;;vpos;;vstring;;r&#10;Definition&#10;    getShouldHaveBeenRedirected()&#10;&#10;Description&#10;     Get the should have been redirected string&#10;&#10;Return:&#10;   should habe been redirected;;d4,80;;b1,0;;m">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\French.php;f11;49;5;52;;;;vpos;;vstring;;r&#10;Definition&#10;    getUsingServer()&#10;&#10;Description&#10;     Get the using server string&#10;&#10;Return:&#10;   using server;;d4,50;;b1,0;;m">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\French.php;f11;99;5;102;;;;vpos;;vstring;;r&#10;Definition&#10;    getYouWereNotAuthenticated()&#10;&#10;Description&#10;     Get the your were not authenticated string&#10;&#10;Return:&#10;   not authenticated;;d4,100;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_Languages_German;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\German.php;f0;42;1;113;;;;vpos;;vCAS_Languages_LanguageInterface;;c;;r&#10;Definition&#10;    class CAS_Languages_German implements CAS_Languages_LanguageInterface&#10;&#10;Description&#10;     German language class;;d0,43;;b0,0;;m">
<treenode node="getAuthenticationFailed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\German.php;f11;89;5;92;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationFailed()&#10;&#10;Description&#10;     Get authentication failed string&#10;&#10;Return:&#10;   authentication failed;;d4,90;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\German.php;f11;59;5;62;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationWanted()&#10;&#10;Description&#10;     Get authentication wanted string&#10;&#10;Return:&#10;   authentication wanted;;d4,60;;b1,0;;m">
</treenode>
<treenode node="getLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\German.php;f11;69;5;72;;;;vpos;;vstring;;r&#10;Definition&#10;    getLogout()&#10;&#10;Description&#10;     Get logout string&#10;&#10;Return:&#10;   logout;;d4,70;;b1,0;;m">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\German.php;f11;109;5;112;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUnavailable()&#10;&#10;Description&#10;     Get the service unavailable string&#10;&#10;Return:&#10;   service unavailable;;d4,110;;b1,0;;m">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\German.php;f11;79;5;82;;;;vpos;;vstring;;r&#10;Definition&#10;    getShouldHaveBeenRedirected()&#10;&#10;Description&#10;     Get the should have been redirected string&#10;&#10;Return:&#10;   should habe been redirected;;d4,80;;b1,0;;m">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\German.php;f11;49;5;52;;;;vpos;;vstring;;r&#10;Definition&#10;    getUsingServer()&#10;&#10;Description&#10;     Get the using server string&#10;&#10;Return:&#10;   using server;;d4,50;;b1,0;;m">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\German.php;f11;99;5;102;;;;vpos;;vstring;;r&#10;Definition&#10;    getYouWereNotAuthenticated()&#10;&#10;Description&#10;     Get the your were not authenticated string&#10;&#10;Return:&#10;   not authenticated;;d4,100;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_Languages_Greek;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Greek.php;f0;42;1;113;;;;vpos;;vCAS_Languages_LanguageInterface;;c;;r&#10;Definition&#10;    class CAS_Languages_Greek implements CAS_Languages_LanguageInterface&#10;&#10;Description&#10;     Greek language class;;d0,43;;b0,0;;m">
<treenode node="getAuthenticationFailed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Greek.php;f11;89;5;92;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationFailed()&#10;&#10;Description&#10;     Get authentication failed string&#10;&#10;Return:&#10;   authentication failed;;d4,90;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Greek.php;f11;59;5;62;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationWanted()&#10;&#10;Description&#10;     Get authentication wanted string&#10;&#10;Return:&#10;   authentication wanted;;d4,60;;b1,0;;m">
</treenode>
<treenode node="getLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Greek.php;f11;69;5;72;;;;vpos;;vstring;;r&#10;Definition&#10;    getLogout()&#10;&#10;Description&#10;     Get logout string&#10;&#10;Return:&#10;   logout;;d4,70;;b1,0;;m">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Greek.php;f11;109;5;112;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUnavailable()&#10;&#10;Description&#10;     Get the service unavailable string&#10;&#10;Return:&#10;   service unavailable;;d4,110;;b1,0;;m">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Greek.php;f11;79;5;82;;;;vpos;;vstring;;r&#10;Definition&#10;    getShouldHaveBeenRedirected()&#10;&#10;Description&#10;     Get the should have been redirected string&#10;&#10;Return:&#10;   should habe been redirected;;d4,80;;b1,0;;m">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Greek.php;f11;49;5;52;;;;vpos;;vstring;;r&#10;Definition&#10;    getUsingServer()&#10;&#10;Description&#10;     Get the using server string&#10;&#10;Return:&#10;   using server;;d4,50;;b1,0;;m">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Greek.php;f11;99;5;102;;;;vpos;;vstring;;r&#10;Definition&#10;    getYouWereNotAuthenticated()&#10;&#10;Description&#10;     Get the your were not authenticated string&#10;&#10;Return:&#10;   not authenticated;;d4,100;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_Languages_Japanese;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Japanese.php;f0;40;1;111;;;;vpos;;vCAS_Languages_LanguageInterface;;c;;r&#10;Definition&#10;    class CAS_Languages_Japanese implements CAS_Languages_LanguageInterface&#10;&#10;Description&#10;     Japanese language class. Now Encoding is UTF-8.;;d0,41;;b0,0;;m">
<treenode node="getAuthenticationFailed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Japanese.php;f11;87;5;90;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationFailed()&#10;&#10;Description&#10;     Get authentication failed string&#10;&#10;Return:&#10;   authentication failed;;d4,88;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Japanese.php;f11;57;5;60;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationWanted()&#10;&#10;Description&#10;     Get authentication wanted string&#10;&#10;Return:&#10;   authentication wanted;;d4,58;;b1,0;;m">
</treenode>
<treenode node="getLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Japanese.php;f11;67;5;70;;;;vpos;;vstring;;r&#10;Definition&#10;    getLogout()&#10;&#10;Description&#10;     Get logout string&#10;&#10;Return:&#10;   logout;;d4,68;;b1,0;;m">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Japanese.php;f11;107;5;110;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUnavailable()&#10;&#10;Description&#10;     Get the service unavailable string&#10;&#10;Return:&#10;   service unavailable;;d4,108;;b1,0;;m">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Japanese.php;f11;77;5;80;;;;vpos;;vstring;;r&#10;Definition&#10;    getShouldHaveBeenRedirected()&#10;&#10;Description&#10;     Get the should have been redirected string&#10;&#10;Return:&#10;   should habe been redirected;;d4,78;;b1,0;;m">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Japanese.php;f11;47;5;50;;;;vpos;;vstring;;r&#10;Definition&#10;    getUsingServer()&#10;&#10;Description&#10;     Get the using server string&#10;&#10;Return:&#10;   using server;;d4,48;;b1,0;;m">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Japanese.php;f11;97;5;100;;;;vpos;;vstring;;r&#10;Definition&#10;    getYouWereNotAuthenticated()&#10;&#10;Description&#10;     Get the your were not authenticated string&#10;&#10;Return:&#10;   not authenticated;;d4,98;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_Languages_Spanish;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Spanish.php;f0;43;1;115;;;;vpos;;vCAS_Languages_LanguageInterface;;c;;r&#10;Definition&#10;    class CAS_Languages_Spanish implements CAS_Languages_LanguageInterface&#10;&#10;Description&#10;     Spanish language class;;d0,44;;b0,0;;m">
<treenode node="getAuthenticationFailed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Spanish.php;f11;91;5;94;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationFailed()&#10;&#10;Description&#10;     Get authentication failed string&#10;&#10;Return:&#10;   authentication failed;;d4,92;;b1,0;;m">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Spanish.php;f11;61;5;64;;;;vpos;;vstring;;r&#10;Definition&#10;    getAuthenticationWanted()&#10;&#10;Description&#10;     Get authentication wanted string&#10;&#10;Return:&#10;   authentication wanted;;d4,62;;b1,0;;m">
</treenode>
<treenode node="getLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Spanish.php;f11;71;5;74;;;;vpos;;vstring;;r&#10;Definition&#10;    getLogout()&#10;&#10;Description&#10;     Get logout string&#10;&#10;Return:&#10;   logout;;d4,72;;b1,0;;m">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Spanish.php;f11;111;5;114;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUnavailable()&#10;&#10;Description&#10;     Get the service unavailable string&#10;&#10;Return:&#10;   service unavailable;;d4,112;;b1,0;;m">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Spanish.php;f11;81;5;84;;;;vpos;;vstring;;r&#10;Definition&#10;    getShouldHaveBeenRedirected()&#10;&#10;Description&#10;     Get the should have been redirected string&#10;&#10;Return:&#10;   should habe been redirected;;d4,82;;b1,0;;m">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Spanish.php;f11;51;5;54;;;;vpos;;vstring;;r&#10;Definition&#10;    getUsingServer()&#10;&#10;Description&#10;     Get the using server string&#10;&#10;Return:&#10;   using server;;d4,52;;b1,0;;m">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Languages\Spanish.php;f11;101;5;104;;;;vpos;;vstring;;r&#10;Definition&#10;    getYouWereNotAuthenticated()&#10;&#10;Description&#10;     Get the your were not authenticated string&#10;&#10;Return:&#10;   not authenticated;;d4,102;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_OutOfSequenceBeforeAuthenticationCallException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\OutOfSequenceBeforeAuthenticationCallException.php;f0;42;1;55;;;;vpos;;vCAS_OutOfSequenceException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_OutOfSequenceBeforeAuthenticationCallException&#10;extends CAS_OutOfSequenceException&#10;implements CAS_Exception&#10;&#10;Description&#10;     This class defines Exceptions that should be thrown when the sequence of operations is invalid. In this case it should be thrown when an authentication call has not yet happened.;;d0,45;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\OutOfSequenceBeforeAuthenticationCallException.php;f11;51;5;54;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct ()&#10;&#10;Description&#10;     Return standard error meessage;;d4,52;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_OutOfSequenceBeforeClientException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\OutOfSequenceBeforeClientException.php;f0;42;1;57;;;;vpos;;vCAS_OutOfSequenceException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_OutOfSequenceBeforeClientException&#10;extends CAS_OutOfSequenceException&#10;implements CAS_Exception&#10;&#10;Description&#10;     This class defines Exceptions that should be thrown when the sequence of operations is invalid. In this case it should be thrown when the client() or proxy() call has not yet happened and no client or proxy object exists.;;d0,45;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\OutOfSequenceBeforeClientException.php;f11;51;5;56;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct ()&#10;&#10;Description&#10;     Return standard error message;;d4,52;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_OutOfSequenceBeforeProxyException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\OutOfSequenceBeforeProxyException.php;f0;42;1;58;;;;vpos;;vCAS_OutOfSequenceException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_OutOfSequenceBeforeProxyException&#10;extends CAS_OutOfSequenceException&#10;implements CAS_Exception&#10;&#10;Description&#10;     This class defines Exceptions that should be thrown when the sequence of operations is invalid. In this case it should be thrown when the proxy() call has not yet happened and no proxy object exists.;;d0,45;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\OutOfSequenceBeforeProxyException.php;f11;52;5;57;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct ()&#10;&#10;Description&#10;     Return standard error message;;d4,53;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_OutOfSequenceException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\OutOfSequenceException.php;f0;43;1;48;;;;vpos;;vBadMethodCallException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_OutOfSequenceException&#10;extends BadMethodCallException&#10;implements CAS_Exception&#10;&#10;Description&#10;     This class defines Exceptions that should be thrown when the sequence of operations is invalid. Examples are: - Requesting the response before executing a request. - Changing the URL of a request after executing the request.;;d0,46;;b0,0;;m">
</treenode>
<treenode node="CAS_PGTStorage_AbstractStorage;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f9;45;1;219;;;;vpos;;v;;r&#10;Definition&#10;    class CAS_PGTStorage_AbstractStorage&#10;&#10;Description&#10;     Basic class for PGT storage The CAS_PGTStorage_AbstractStorage class is a generic class for PGT storage. This class should not be instanciated itself but inherited by specific PGT storage classes.;;d0,46;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f4;66;5;75;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct($cas_parent)&#10;&#10;Description&#10;     The constructor of the class, should be called only by inherited classes.&#10;&#10;Parameters:&#10;    CAS_Client $cas_parent - the CAS _client instance that creates the;;d4,67;;b0,0;;mCAS_Client $cas_parent;;p">
</treenode>
<treenode node="getErrorMessage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f4;143;5;146;;;;vpos;;van;;r&#10;Definition&#10;    getErrorMessage()&#10;&#10;Description&#10;     This method returns an error message set by PGTStorage::setErrorMessage().&#10;&#10;Return:&#10;   error message when set by PGTStorage::setErrorMessage(), FALSE;;d4,144;;b0,0;;m">
</treenode>
<treenode node="getStorageInfo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f4;102;5;105;;;;vpos;;vvoid;;r&#10;Definition&#10;    getStorageInfo()&#10;&#10;Description&#10;     This virtual method returns an informational string giving informations on the parameters of the storage.(used for debugging purposes).;;d4,103;;b0,0;;m">
</treenode>
<treenode node="getStorageType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f4;89;5;92;;;;vpos;;vvoid;;r&#10;Definition&#10;    getStorageType()&#10;&#10;Description&#10;     This virtual method returns an informational string giving the type of storage used by the object (used for debugging purposes).;;d4,90;;b0,0;;m">
</treenode>
<treenode node="init;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f4;177;5;180;;;;vpos;;vvoid;;r&#10;Definition&#10;    init()&#10;&#10;Description&#10;     This virtual method initializes the object.;;d4,178;;b0,0;;m">
</treenode>
<treenode node="isInitialized;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f4;167;5;170;;;;vpos;;va;;r&#10;Definition&#10;    isInitialized()&#10;&#10;Description&#10;     This method tells if the storage has already been intialized.&#10;&#10;Return:&#10;   boolean;;d4,168;;b0,0;;m">
</treenode>
<treenode node="read;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f4;212;5;215;;;;vpos;;vvoid;;r&#10;Definition&#10;    read($pgt_iou)&#10;&#10;Description&#10;     This virtual method reads a PGT corresponding to a PGT Iou and deletes the corresponding storage entry.&#10;&#10;Parameters:&#10;    string $pgt_iou - the PGT iou;;d4,213;;b0,0;;mstring $pgt_iou;;p">
</treenode>
<treenode node="setErrorMessage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f4;130;5;133;;;;vpos;;vvoid;;r&#10;Definition&#10;    setErrorMessage($error_message)&#10;&#10;Description&#10;     This method sets en error message, which can be read later by PGTStorage::getErrorMessage().&#10;&#10;Parameters:&#10;    string $error_message - an error message;;d4,131;;b0,0;;mstring $error_message;;p">
</treenode>
<treenode node="write;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\AbstractStorage.php;f4;197;5;200;;;;vpos;;vvoid;;r&#10;Definition&#10;    write($pgt,$pgt_iou)&#10;&#10;Description&#10;     This virtual method stores a PGT and its corresponding PGT Iuo.&#10;&#10;Parameters:&#10;    string $pgt - the PGT&#10;    string $pgt_iou - the PGT iou;;d4,198;;b0,0;;mstring $pgt;;pstring $pgt_iou;;p">
</treenode>
</treenode>
<treenode node="CAS_PGTStorage_Db;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f0;45;1;437;;;;vpos;;vCAS_PGTStorage_AbstractStorage;;c;;r&#10;Definition&#10;    class CAS_PGTStorage_Db extends CAS_PGTStorage_AbstractStorage&#10;&#10;Description&#10;     Basic class for PGT database storage The CAS_PGTStorage_Db class is a class for PGT database storage.;;d0,46;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f11;137;5;167;;;;vpos;;v;;r&#10;Definition&#10;    __construct(&#10;        $cas_parent, $dsn_or_pdo, $username=&apos;&apos;, $password=&apos;&apos;, $table=&apos;&apos;,&#10;        $driver_options=null&#10;    )&#10;&#10;Description&#10;     The class constructor.&#10;&#10;Parameters:&#10;    CAS_Client $cas_parent - the CAS_Client instance that creates&#10;    string $dsn_or_pdo - a dsn string to use for creating a PDO&#10;    string $username - the username to use when connecting to&#10;    string $password - the password to use when connecting to&#10;    string $table - the table to use for storing and&#10;    string $driver_options - any driver options to use when;;d6,140;;b1,0;;mCAS_Client $cas_parent;;pstring $dsn_or_pdo;;pstring $username;;pstring $password;;pstring $table;;pstring $driver_options;;p">
</treenode>
<treenode node="_getPdo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f12;62;5;65;;;;vpos;;vthe;;r&#10;Definition&#10;    _getPdo()&#10;&#10;Description&#10;     This method returns the PDO object to use for database interactions.&#10;&#10;Return:&#10;   PDO object;;d4,63;;b3,0;;m">
</treenode>
<treenode node="_getTable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f12;85;5;88;;;;vpos;;vthe;;r&#10;Definition&#10;    _getTable()&#10;&#10;Description&#10;     This method returns the table to use when storing/retrieving PGT&apos;s&#10;&#10;Return:&#10;   name of the pgt storage table;;d4,86;;b3,0;;m">
</treenode>
<treenode node="_resetErrorMode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f12;233;5;238;;;;vpos;;vvoid;;r&#10;Definition&#10;    _resetErrorMode()&#10;&#10;Description&#10;     this method will reset the error mode on the PDO object;;d4,234;;b3,0;;m">
</treenode>
<treenode node="_setErrorMode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f12;220;5;226;;;;vpos;;vvoid;;r&#10;Definition&#10;    _setErrorMode()&#10;&#10;Description&#10;     This method will enable the Exception error mode on the PDO object;;d4,221;;b3,0;;m">
</treenode>
<treenode node="createTable;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f11;302;5;337;;;;vpos;;vvoid;;r&#10;Definition&#10;    createTable()&#10;&#10;Description&#10;     This method creates the database table used to store pgt&apos;s and pgtiou&apos;s;;d4,303;;b1,0;;m">
</treenode>
<treenode node="createTableSql;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f14;252;5;256;;;;vpos;;vthe;;r&#10;Definition&#10;    createTableSql()&#10;&#10;Description&#10;     This method returns the query used to create a pgt storage table&#10;&#10;Return:&#10;   create table SQL, no bind params in query;;d4,253;;b2,0;;m">
</treenode>
<treenode node="deletePgtSql;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f14;288;5;291;;;;vpos;;vthe;;r&#10;Definition&#10;    deletePgtSql()&#10;&#10;Description&#10;     This method returns the query used to delete a pgt.&#10;&#10;Return:&#10;   delete PGT SQL, :pgt_iou is the only bind param contained in;;d4,289;;b2,0;;m">
</treenode>
<treenode node="getStorageInfo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f11;112;5;115;;;;vpos;;van;;r&#10;Definition&#10;    getStorageInfo()&#10;&#10;Description&#10;     This method returns an informational string giving informations on the parameters of the storage.(used for debugging purposes).&#10;&#10;Return:&#10;   informational string;;d4,113;;b1,0;;m">
</treenode>
<treenode node="getStorageType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f11;100;5;103;;;;vpos;;van;;r&#10;Definition&#10;    getStorageType()&#10;&#10;Description&#10;     This method returns an informational string giving the type of storage used by the object (used for debugging purposes).&#10;&#10;Return:&#10;   informational string;;d4,101;;b1,0;;m">
</treenode>
<treenode node="init;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f11;178;5;203;;;;vpos;;vvoid;;r&#10;Definition&#10;    init()&#10;&#10;Description&#10;     This method is used to initialize the storage. Halts on error.;;d4,179;;b1,0;;m">
</treenode>
<treenode node="read;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f11;391;5;433;;;;vpos;;vthe;;r&#10;Definition&#10;    read($pgt_iou)&#10;&#10;Description&#10;     This method reads a PGT corresponding to a PGT Iou and deletes the corresponding db entry.&#10;&#10;Parameters:&#10;    string $pgt_iou - the PGT iou&#10;&#10;Return:&#10;   corresponding PGT, or FALSE on error;;d4,392;;b1,0;;mstring $pgt_iou;;p">
</treenode>
<treenode node="retrievePgtSql;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f14;277;5;280;;;;vpos;;vthe;;r&#10;Definition&#10;    retrievePgtSql()&#10;&#10;Description&#10;     This method returns the query used to retrieve a pgt. the first column of the first row should contain the pgt&#10;&#10;Return:&#10;   retrieve PGT SQL, :pgt_iou is the only bind param contained;;d4,278;;b2,0;;m">
</treenode>
<treenode node="storePgtSql;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f14;264;5;268;;;;vpos;;vthe;;r&#10;Definition&#10;    storePgtSql()&#10;&#10;Description&#10;     This method returns the query used to store a pgt&#10;&#10;Return:&#10;   store PGT SQL, :pgt and :pgt_iou are the bind params contained;;d4,265;;b2,0;;m">
</treenode>
<treenode node="write;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\Db.php;f11;348;5;381;;;;vpos;;vvoid;;r&#10;Definition&#10;    write($pgt, $pgt_iou)&#10;&#10;Description&#10;     This method stores a PGT and its corresponding PGT Iou in the database. Echoes a warning on error.&#10;&#10;Parameters:&#10;    string $pgt - the PGT&#10;    string $pgt_iou - the PGT iou;;d4,349;;b1,0;;mstring $pgt;;pstring $pgt_iou;;p">
</treenode>
</treenode>
<treenode node="CAS_PGTStorage_File;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\File.php;f0;44;1;259;;;;vpos;;vCAS_PGTStorage_AbstractStorage;;c;;r&#10;Definition&#10;    class CAS_PGTStorage_File extends CAS_PGTStorage_AbstractStorage&#10;&#10;Description&#10;     The CAS_PGTStorage_File class is a class for PGT file storage. An instance of this class is returned by CAS_Client::SetPGTStorageFile().;;d0,45;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\File.php;f4;114;5;143;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct($cas_parent,$path)&#10;&#10;Description&#10;     The class constructor, called by CAS_Client::SetPGTStorageFile().&#10;&#10;Parameters:&#10;    CAS_Client $cas_parent - the CAS_Client instance that creates the object&#10;    string $path - the path where the PGT&apos;s should be stored;;d4,115;;b0,0;;mCAS_Client $cas_parent;;pstring $path;;p">
</treenode>
<treenode node="getPath;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\File.php;f4;67;5;70;;;;vpos;;vthe;;r&#10;Definition&#10;    getPath()&#10;&#10;Description&#10;     This method returns the name of the directory where PGT&apos;s should be stored on the filesystem.&#10;&#10;Return:&#10;   name of a directory (with leading and trailing &apos;/&apos;);;d4,68;;b0,0;;m">
</treenode>
<treenode node="getPGTIouFilename;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\File.php;f4;179;5;187;;;;vpos;;va;;r&#10;Definition&#10;    getPGTIouFilename($pgt_iou)&#10;&#10;Description&#10;     This method returns the filename corresponding to a PGT Iou.&#10;&#10;Parameters:&#10;    string $pgt_iou - the PGT iou&#10;&#10;Return:&#10;   filename;;d4,180;;b0,0;;mstring $pgt_iou;;p">
</treenode>
<treenode node="getStorageInfo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\File.php;f4;95;5;98;;;;vpos;;van;;r&#10;Definition&#10;    getStorageInfo()&#10;&#10;Description&#10;     This method returns an informational string giving informations on the parameters of the storage.(used for debugging purposes).&#10;&#10;Return:&#10;   informational string;;d4,96;;b0,0;;m">
</treenode>
<treenode node="getStorageType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\File.php;f4;83;5;86;;;;vpos;;van;;r&#10;Definition&#10;    getStorageType()&#10;&#10;Description&#10;     This method returns an informational string giving the type of storage used by the object (used for debugging purposes).&#10;&#10;Return:&#10;   informational string;;d4,84;;b0,0;;m">
</treenode>
<treenode node="init;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\File.php;f4;155;5;165;;;;vpos;;vvoid;;r&#10;Definition&#10;    init()&#10;&#10;Description&#10;     This method is used to initialize the storage. Halts on error.;;d4,156;;b0,0;;m">
</treenode>
<treenode node="read;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\File.php;f4;233;5;255;;;;vpos;;vthe;;r&#10;Definition&#10;    read($pgt_iou)&#10;&#10;Description&#10;     This method reads a PGT corresponding to a PGT Iou and deletes the corresponding file.&#10;&#10;Parameters:&#10;    string $pgt_iou - the PGT iou&#10;&#10;Return:&#10;   corresponding PGT, or FALSE on error;;d4,234;;b0,0;;mstring $pgt_iou;;p">
</treenode>
<treenode node="write;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\PGTStorage\File.php;f4;200;5;221;;;;vpos;;vvoid;;r&#10;Definition&#10;    write($pgt,$pgt_iou)&#10;&#10;Description&#10;     This method stores a PGT and its corresponding PGT Iou into a file. Echoes a warning on error.&#10;&#10;Parameters:&#10;    string $pgt - the PGT&#10;    string $pgt_iou - the PGT iou;;d4,201;;b0,0;;mstring $pgt;;pstring $pgt_iou;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Abstract;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Abstract.php;f9;40;1;147;;;;vpos;;vCAS_ProxiedService;;cCAS_ProxiedService_Testable;;c;;r&#10;Definition&#10;    class CAS_ProxiedService_Abstract&#10;implements CAS_ProxiedService, CAS_ProxiedService_Testable&#10;&#10;Description&#10;     This class implements common methods for ProxiedService implementations included with phpCAS.;;d0,42;;b0,0;;m">
<treenode node="getProxyTicket;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Abstract.php;f14;82;5;91;;;;vpos;;vstring;;r&#10;Definition&#10;    getProxyTicket ()&#10;&#10;Description&#10;     Answer the proxy ticket to be used when making requests.;;d4,83;;b2,0;;m">
</treenode>
<treenode node="initializeProxyTicket;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Abstract.php;f14;132;5;145;;;;vpos;;vvoid;;r&#10;Definition&#10;    initializeProxyTicket()&#10;&#10;Description&#10;     Fetch our proxy ticket.;;d4,133;;b2,0;;m">
</treenode>
<treenode node="setCasClient;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Abstract.php;f11;111;5;120;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCasClient (CAS_Client $casClient)&#10;&#10;Description&#10;     Use a particular CAS_Client-&gt;initializeProxiedService() rather than the static phpCAS::initializeProxiedService().&#10;&#10;Parameters:&#10;    CAS_Client $casClient - cas client;;d4,112;;b1,0;;mCAS_Client $casClient;;p">
</treenode>
<treenode node="setProxyTicket;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Abstract.php;f11;60;5;73;;;;vpos;;vvoid;;r&#10;Definition&#10;    setProxyTicket ($proxyTicket)&#10;&#10;Description&#10;     Register a proxy ticket with the Proxy that it can use when making requests.&#10;&#10;Parameters:&#10;    string $proxyTicket - proxy ticket;;d4,61;;b1,0;;mstring $proxyTicket;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Exception;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Exception.php;f0;39;1;44;;;;vpos;;vException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_ProxiedService_Exception&#10;extends Exception&#10;implements CAS_Exception&#10;&#10;Description&#10;     An Exception for problems communicating with a proxied service.;;d0,42;;b0,0;;m">
</treenode>
<treenode node="CAS_ProxiedService_Http_Abstract;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f9;40;1;358;;;;vpos;;vCAS_ProxiedService_Abstract;;cCAS_ProxiedService_Http;;c;;r&#10;Definition&#10;    class CAS_ProxiedService_Http_Abstract extends&#10;CAS_ProxiedService_Abstract implements CAS_ProxiedService_Http&#10;&#10;Description&#10;     This class implements common methods for ProxiedService implementations included with phpCAS.;;d0,42;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f11;65;5;70;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct(CAS_Request_RequestInterface $requestHandler,&#10;        CAS_CookieJar $cookieJar&#10;    )&#10;&#10;Description&#10;     Constructor.&#10;&#10;Parameters:&#10;    CAS_Request_RequestInterface $requestHandler - request handler object&#10;    CAS_CookieJar $cookieJar - cookieJar object;;d6,67;;b1,0;;mCAS_Request_RequestInterface $requestHandler;;pCAS_CookieJar $cookieJar;;p">
</treenode>
<treenode node="getCookies;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f11;353;5;356;;;;vpos;;varray;;r&#10;Definition&#10;    getCookies()&#10;&#10;Description&#10;     Answer the cookies from the response. This may include cookies set during redirect responses.&#10;&#10;Return:&#10;   An array containing cookies;;d4,354;;b1,0;;m">
</treenode>
<treenode node="getRedirectUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f14;270;5;280;;;;vpos;;vstring;;r&#10;Definition&#10;    getRedirectUrl(array $responseHeaders)&#10;&#10;Description&#10;     Answer a redirect URL if a redirect header is found, otherwise null.&#10;&#10;Parameters:&#10;    array $responseHeaders - response header to extract a redirect from&#10;&#10;Return:&#10;   or null;;d4,271;;b2,0;;marray $responseHeaders;;p">
</treenode>
<treenode node="getResponseBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f11;336;5;345;;;;vpos;;vstring;;r&#10;Definition&#10;    getResponseBody()&#10;&#10;Description&#10;     Answer the body of response.;;d4,337;;b1,0;;m">
</treenode>
<treenode node="getResponseHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f11;302;5;311;;;;vpos;;varray;;r&#10;Definition&#10;    getResponseHeaders()&#10;&#10;Description&#10;     Answer the headers of the response.&#10;&#10;Return:&#10;   An array of header strings;;d4,303;;b1,0;;m">
</treenode>
<treenode node="getResponseStatusCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f11;319;5;328;;;;vpos;;vint;;r&#10;Definition&#10;    getResponseStatusCode()&#10;&#10;Description&#10;     Answer HTTP status code of the response;;d4,320;;b1,0;;m">
</treenode>
<treenode node="getServiceUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f11;84;5;93;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUrl()&#10;&#10;Description&#10;     Answer a service identifier (URL) for whom we should fetch a proxy ticket.;;d4,85;;b1,0;;m">
</treenode>
<treenode node="hasBeenSent;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f14;291;5;294;;;;vpos;;vbool;;r&#10;Definition&#10;    hasBeenSent()&#10;&#10;Description&#10;     Answer true if our request has been sent yet.;;d4,292;;b2,0;;m">
</treenode>
<treenode node="makeRequest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f14;207;5;250;;;;vpos;;vvoid;;r&#10;Definition&#10;    makeRequest($url)&#10;&#10;Description&#10;     Build and perform a request, following redirects&#10;&#10;Parameters:&#10;    string $url - url for the request;;d4,208;;b2,0;;mstring $url;;p">
</treenode>
<treenode node="populateRequest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f23;259;5;261;;;;vpos;;vvoid;;r&#10;Description&#10;     Add any other parts of the request needed by concrete classes&#10;&#10;Parameters:&#10;    CAS_Request_RequestInterface $request - request interface object;;d-1,-1;;b2,0;;mCAS_Request_RequestInterface $request;;p">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f11;138;5;163;;;;vpos;;vvoid;;r&#10;Definition&#10;    send()&#10;&#10;Description&#10;     Perform the request.;;d4,139;;b1,0;;m">
</treenode>
<treenode node="setUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Abstract.php;f11;107;5;119;;;;vpos;;vvoid;;r&#10;Definition&#10;    setUrl($url)&#10;&#10;Description&#10;     Set the URL of the Request&#10;&#10;Parameters:&#10;    string $url - url to set;;d4,108;;b1,0;;mstring $url;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Http_Get;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Get.php;f0;67;1;83;;;;vpos;;vCAS_ProxiedService_Http_Abstract;;c;;r&#10;Definition&#10;    class CAS_ProxiedService_Http_Get&#10;extends CAS_ProxiedService_Http_Abstract&#10;&#10;Description&#10;     This class is used to make proxied service requests via the HTTP GET method.;;d0,69;;b0,0;;m">
<treenode node="populateRequest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Get.php;f14;78;5;82;;;;vpos;;vvoid;;r&#10;Definition&#10;    populateRequest (CAS_Request_RequestInterface $request)&#10;&#10;Description&#10;     Add any other parts of the request needed by concrete classes&#10;&#10;Parameters:&#10;    CAS_Request_RequestInterface $request - request interface;;d4,79;;b2,0;;mCAS_Request_RequestInterface $request;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Http_Post;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Post.php;f0;69;1;150;;;;vpos;;vCAS_ProxiedService_Http_Abstract;;c;;r&#10;Definition&#10;    class CAS_ProxiedService_Http_Post&#10;extends CAS_ProxiedService_Http_Abstract&#10;&#10;Description&#10;     This class is used to make proxied service requests via the HTTP POST method.;;d0,71;;b0,0;;m">
<treenode node="populateRequest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Post.php;f14;132;5;147;;;;vpos;;vvoid;;r&#10;Definition&#10;    populateRequest (CAS_Request_RequestInterface $request)&#10;&#10;Description&#10;     Add any other parts of the request needed by concrete classes&#10;&#10;Parameters:&#10;    CAS_Request_RequestInterface $request - request interface class;;d4,133;;b2,0;;mCAS_Request_RequestInterface $request;;p">
</treenode>
<treenode node="setBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Post.php;f11;114;5;123;;;;vpos;;vvoid;;r&#10;Definition&#10;    setBody ($body)&#10;&#10;Description&#10;     Set the body of this POST request.&#10;&#10;Parameters:&#10;    string $body - body to set;;d4,115;;b1,0;;mstring $body;;p">
</treenode>
<treenode node="setContentType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Http\Post.php;f11;95;5;104;;;;vpos;;vvoid;;r&#10;Definition&#10;    setContentType ($contentType)&#10;&#10;Description&#10;     Set the content type of this POST request.&#10;&#10;Parameters:&#10;    string $contentType - content type;;d4,96;;b1,0;;mstring $contentType;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Imap;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f0;39;1;278;;;;vpos;;vCAS_ProxiedService_Abstract;;c;;r&#10;Definition&#10;    class CAS_ProxiedService_Imap&#10;extends CAS_ProxiedService_Abstract&#10;&#10;Description&#10;     Provides access to a proxy-authenticated IMAP stream;;d0,41;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f11;57;5;64;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct ($username)&#10;&#10;Description&#10;     Constructor.&#10;&#10;Parameters:&#10;    string $username - Username;;d4,58;;b1,0;;mstring $username;;p">
</treenode>
<treenode node="getImapProxyTicket;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f11;269;5;277;;;;vpos;;vstring;;r&#10;Definition&#10;    getImapProxyTicket ()&#10;&#10;Description&#10;     CAS_Client::serviceMail() needs to return the proxy ticket for some reason, so this method provides access to it.;;d4,270;;b1,0;;m">
</treenode>
<treenode node="getServiceUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f11;78;5;87;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceUrl ()&#10;&#10;Description&#10;     Answer a service identifier (URL) for whom we should fetch a proxy ticket.;;d4,79;;b1,0;;m">
</treenode>
<treenode node="getStream;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f11;251;5;259;;;;vpos;;vresource;;r&#10;Definition&#10;    getStream ()&#10;&#10;Description&#10;     Answer the IMAP stream;;d4,252;;b1,0;;m">
</treenode>
<treenode node="hasBeenOpened;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f14;231;5;234;;;;vpos;;vbool;;r&#10;Definition&#10;    hasBeenOpened ()&#10;&#10;Description&#10;     Answer true if our request has been sent yet.;;d4,232;;b2,0;;m">
</treenode>
<treenode node="open;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f11;191;5;224;;;;vpos;;vresource;;r&#10;Definition&#10;    open ()&#10;&#10;Description&#10;     Open the IMAP stream (similar to imap_open()).&#10;&#10;Return:&#10;   Returns an IMAP stream on success;;d4,192;;b1,0;;m">
</treenode>
<treenode node="setMailbox;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f11;130;5;142;;;;vpos;;vvoid;;r&#10;Definition&#10;    setMailbox ($mailbox)&#10;&#10;Description&#10;     Set the mailbox to open. See the $mailbox parameter of imap_open().&#10;&#10;Parameters:&#10;    string $mailbox - Mailbox to set;;d4,131;;b1,0;;mstring $mailbox;;p">
</treenode>
<treenode node="setOptions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f11;160;5;172;;;;vpos;;vvoid;;r&#10;Definition&#10;    setOptions ($options)&#10;&#10;Description&#10;     Set the options for opening the stream. See the $options parameter of imap_open().&#10;&#10;Parameters:&#10;    int $options - Options for the stream;;d4,161;;b1,0;;mint $options;;p">
</treenode>
<treenode node="setServiceUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxiedService\Imap.php;f11;101;5;113;;;;vpos;;vvoid;;r&#10;Definition&#10;    setServiceUrl ($url)&#10;&#10;Description&#10;     Set the URL of the service to pass to CAS for proxy-ticket retrieval.&#10;&#10;Parameters:&#10;    string $url - Url to set;;d4,102;;b1,0;;mstring $url;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxyChain;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain.php;f0;41;1;126;;;;vpos;;vCAS_ProxyChain_Interface;;c;;r&#10;Definition&#10;    class CAS_ProxyChain&#10;implements CAS_ProxyChain_Interface&#10;&#10;Description&#10;     A normal proxy-chain definition that lists each level of the chain as either a string or regular expression.;;d0,43;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain.php;f11;59;5;63;;;;vpos;;v;;r&#10;Definition&#10;    __construct(array $chain)&#10;&#10;Description&#10;     A chain is an array of strings or regexp strings that will be matched against. Regexp will be matched with preg_match and strings will be matched from the beginning. A string must fully match the beginning of an proxy url. So you can define a full domain as acceptable or go further down. Proxies have to be defined in reverse from the service to the user. If a user hits service A get proxied via B to service C the list of acceptable proxies on C would be array(B,A);s&#10;&#10;Parameters:&#10;    array $chain - A chain of proxies;;d4,60;;b1,0;;marray $chain;;p">
</treenode>
<treenode node="isSizeValid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain.php;f14;122;5;125;;;;vpos;;vbool;;r&#10;Definition&#10;    isSizeValid (array $list)&#10;&#10;Description&#10;     Validate the size of the the list as compared to our chain.&#10;&#10;Parameters:&#10;    array $list - List of proxies;;d4,123;;b2,0;;marray $list;;p">
</treenode>
<treenode node="matches;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain.php;f11;72;5;113;;;;vpos;;vbool;;r&#10;Definition&#10;    matches(array $list)&#10;&#10;Description&#10;     Match a list of proxies.&#10;&#10;Parameters:&#10;    array $list - The list of proxies in front of this service;;d4,73;;b1,0;;marray $list;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxyChain_AllowedList;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\AllowedList.php;f0;42;1;117;;;;vpos;;v;;r&#10;Definition&#10;    class CAS_ProxyChain_AllowedList&#10;&#10;Description&#10;     ProxyChain is a container for storing chains of valid proxies that can be used to validate proxied requests to a service;;d0,43;;b0,0;;m">
<treenode node="allowProxyChain;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\AllowedList.php;f11;64;5;67;;;;vpos;;vvoid;;r&#10;Definition&#10;    allowProxyChain(CAS_ProxyChain_Interface $chain)&#10;&#10;Description&#10;     Add a chain of proxies to the list of possible chains&#10;&#10;Parameters:&#10;    CAS_ProxyChain_Interface $chain - A chain of proxies;;d4,65;;b1,0;;mCAS_ProxyChain_Interface $chain;;p">
</treenode>
<treenode node="contains;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\AllowedList.php;f11;102;5;116;;;;vpos;;vif;;r&#10;Definition&#10;    contains(array $list)&#10;&#10;Description&#10;     Validate the proxies from the proxy ticket validation against the chains that were definded.&#10;&#10;Parameters:&#10;    array $list - List of proxies from the proxy ticket validation&#10;&#10;Return:&#10;   any chain fully matches the supplied list;;d4,103;;b1,0;;marray $list;;p">
</treenode>
<treenode node="isProxyingAllowed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\AllowedList.php;f11;52;5;55;;;;vpos;;vbool;;r&#10;Definition&#10;    isProxyingAllowed()&#10;&#10;Description&#10;     Check whether proxies are allowed by configuration;;d4,53;;b1,0;;m">
</treenode>
<treenode node="isProxyListAllowed;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\AllowedList.php;f11;76;5;92;;;;vpos;;vbool;;r&#10;Definition&#10;    isProxyListAllowed(array $proxies)&#10;&#10;Description&#10;     Check if the proxies found in the response match the allowed proxies&#10;&#10;Parameters:&#10;    array $proxies - list of proxies to check&#10;&#10;Return:&#10;   whether the proxies match the allowed proxies;;d4,77;;b1,0;;marray $proxies;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxyChain_Any;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\Any.php;f0;46;1;63;;;;vpos;;vCAS_ProxyChain_Interface;;c;;r&#10;Definition&#10;    class CAS_ProxyChain_Any&#10;implements CAS_ProxyChain_Interface&#10;&#10;Description&#10;     A proxy-chain definition that will match any list of proxies.;;d0,48;;b0,0;;m">
<treenode node="matches;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\Any.php;f11;57;5;61;;;;vpos;;vbool;;r&#10;Definition&#10;    matches(array $list)&#10;&#10;Description&#10;     Match a list of proxies.&#10;&#10;Parameters:&#10;    array $list - The list of proxies in front of this service;;d4,58;;b1,0;;marray $list;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxyChain_Trusted;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\Trusted.php;f0;41;1;58;;;;vpos;;vCAS_ProxyChain;;cCAS_ProxyChain_Interface;;c;;r&#10;Definition&#10;    class CAS_ProxyChain_Trusted&#10;extends CAS_ProxyChain&#10;implements CAS_ProxyChain_Interface&#10;&#10;Description&#10;     A proxy-chain definition that defines a chain up to a trusted proxy and delegates the resposibility of validating the rest of the chain to that trusted proxy.;;d0,44;;b0,0;;m">
<treenode node="isSizeValid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyChain\Trusted.php;f14;53;5;56;;;;vpos;;vbool;;r&#10;Definition&#10;    isSizeValid (array $list)&#10;&#10;Description&#10;     Validate the size of the the list as compared to our chain.&#10;&#10;Parameters:&#10;    array $list - list of proxies;;d4,54;;b2,0;;marray $list;;p">
</treenode>
</treenode>
<treenode node="CAS_ProxyTicketException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyTicketException.php;f0;40;1;70;;;;vpos;;vBadMethodCallException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_ProxyTicketException&#10;extends BadMethodCallException&#10;implements CAS_Exception&#10;&#10;Description&#10;     An Exception for errors related to fetching or validating proxy tickets.;;d0,43;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\ProxyTicketException.php;f11;53;5;69;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct ($message, $code = PHPCAS_SERVICE_PT_FAILURE)&#10;&#10;Description&#10;     Constructor&#10;&#10;Parameters:&#10;    string $message - Message text&#10;    int $code - Error code;;d4,54;;b1,0;;mstring $message;;pint $code;;p">
</treenode>
</treenode>
<treenode node="CAS_Request_AbstractRequest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f9;39;1;378;;;;vpos;;vCAS_Request_RequestInterface;;c;;r&#10;Definition&#10;    class CAS_Request_AbstractRequest&#10;implements CAS_Request_RequestInterface&#10;&#10;Description&#10;     Provides support for performing web-requests via curl;;d0,41;;b0,0;;m">
<treenode node="addCookie;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;87;5;96;;;;vpos;;vvoid;;r&#10;Definition&#10;    addCookie ($name, $value)&#10;&#10;Description&#10;     Add a cookie to the request.&#10;&#10;Parameters:&#10;    string $name - Name of entry&#10;    string $value - value of entry;;d4,88;;b1,0;;mstring $name;;pstring $value;;p">
</treenode>
<treenode node="addCookies;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;108;5;117;;;;vpos;;vvoid;;r&#10;Definition&#10;    addCookies (array $cookies)&#10;&#10;Description&#10;     Add an array of cookies to the request. The cookie array is of the form array(&apos;cookie_name&apos; =&gt; &apos;cookie_value&apos;, &apos;cookie_name2&apos; =&gt; cookie_value2&apos;)&#10;&#10;Parameters:&#10;    array $cookies - cookies to add;;d4,109;;b1,0;;marray $cookies;;p">
</treenode>
<treenode node="addHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;127;5;136;;;;vpos;;vvoid;;r&#10;Definition&#10;    addHeader ($header)&#10;&#10;Description&#10;     Add a header string to the request.&#10;&#10;Parameters:&#10;    string $header - Header to add;;d4,128;;b1,0;;mstring $header;;p">
</treenode>
<treenode node="addHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;146;5;155;;;;vpos;;vvoid;;r&#10;Definition&#10;    addHeaders (array $headers)&#10;&#10;Description&#10;     Add an array of header strings to the request.&#10;&#10;Parameters:&#10;    array $headers - headers to add;;d4,147;;b1,0;;marray $headers;;p">
</treenode>
<treenode node="getErrorMessage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;369;5;377;;;;vpos;;vstring;;r&#10;Definition&#10;    getErrorMessage ()&#10;&#10;Description&#10;     Answer a message describing any errors if the request failed.;;d4,370;;b1,0;;m">
</treenode>
<treenode node="getResponseBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;352;5;361;;;;vpos;;vstring;;r&#10;Definition&#10;    getResponseBody ()&#10;&#10;Description&#10;     Answer the body of response.;;d4,353;;b1,0;;m">
</treenode>
<treenode node="getResponseHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;309;5;317;;;;vpos;;varray;;r&#10;Definition&#10;    getResponseHeaders ()&#10;&#10;Description&#10;     Answer the headers of the response.&#10;&#10;Return:&#10;   An array of header strings;;d4,310;;b1,0;;m">
</treenode>
<treenode node="getResponseStatusCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;325;5;344;;;;vpos;;vint;;r&#10;Definition&#10;    getResponseStatusCode ()&#10;&#10;Description&#10;     Answer HTTP status code of the response;;d4,326;;b1,0;;m">
</treenode>
<treenode node="makePost;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;163;5;172;;;;vpos;;vvoid;;r&#10;Definition&#10;    makePost ()&#10;&#10;Description&#10;     Make the request a POST request rather than the default GET request.;;d4,164;;b1,0;;m">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;228;5;242;;;;vpos;;vbool;;r&#10;Definition&#10;    send ()&#10;&#10;Description&#10;     Perform the request.&#10;&#10;Return:&#10;   TRUE on success, FALSE on failure;;d4,229;;b1,0;;m">
</treenode>
<treenode node="sendRequest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f23;249;46;249;;;;vpos;;vbool;;r&#10;Description&#10;     Send the request and store the results.&#10;&#10;Return:&#10;   TRUE on success, FALSE on failure;;d-1,-1;;b2,0;;m">
</treenode>
<treenode node="setPostBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;182;5;196;;;;vpos;;vvoid;;r&#10;Definition&#10;    setPostBody ($body)&#10;&#10;Description&#10;     Add a POST body to the request&#10;&#10;Parameters:&#10;    string $body - body to add;;d4,183;;b1,0;;mstring $body;;p">
</treenode>
<treenode node="setSslCaCert;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;207;5;216;;;;vpos;;vvoid;;r&#10;Definition&#10;    setSslCaCert ($caCertPath,$validate_cn=true)&#10;&#10;Description&#10;     Specify the path to an SSL CA certificate to validate the server with.&#10;&#10;Parameters:&#10;    string $caCertPath - path to cert&#10;    bool $validate_cn - valdiate CN of certificate;;d4,208;;b1,0;;mstring $caCertPath;;pbool $validate_cn;;p">
</treenode>
<treenode node="setUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f11;67;5;76;;;;vpos;;vvoid;;r&#10;Definition&#10;    setUrl ($url)&#10;&#10;Description&#10;     Set the URL of the Request&#10;&#10;Parameters:&#10;    string $url - Url to set;;d4,68;;b1,0;;mstring $url;;p">
</treenode>
<treenode node="storeErrorMessage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f14;294;5;297;;;;vpos;;vvoid;;r&#10;Definition&#10;    storeErrorMessage ($message)&#10;&#10;Description&#10;     Add a string to our error message.&#10;&#10;Parameters:&#10;    string $message - message to add;;d4,295;;b2,0;;mstring $message;;p">
</treenode>
<treenode node="storeResponseBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f14;282;5;285;;;;vpos;;vvoid;;r&#10;Definition&#10;    storeResponseBody ($body)&#10;&#10;Description&#10;     Store the response body.&#10;&#10;Parameters:&#10;    string $body - body to store;;d4,283;;b2,0;;mstring $body;;p">
</treenode>
<treenode node="storeResponseHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f14;270;5;273;;;;vpos;;vvoid;;r&#10;Definition&#10;    storeResponseHeader ($header)&#10;&#10;Description&#10;     Store a single response header to our array.&#10;&#10;Parameters:&#10;    string $header - header to store;;d4,271;;b2,0;;mstring $header;;p">
</treenode>
<treenode node="storeResponseHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\AbstractRequest.php;f14;258;5;261;;;;vpos;;vvoid;;r&#10;Definition&#10;    storeResponseHeaders (array $headers)&#10;&#10;Description&#10;     Store the response headers.&#10;&#10;Parameters:&#10;    array $headers - headers to store;;d4,259;;b2,0;;marray $headers;;p">
</treenode>
</treenode>
<treenode node="CAS_Request_CurlMultiRequest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlMultiRequest.php;f0;41;1;145;;;;vpos;;vCAS_Request_MultiRequestInterface;;c;;r&#10;Definition&#10;    class CAS_Request_CurlMultiRequest&#10;implements CAS_Request_MultiRequestInterface&#10;&#10;Description&#10;     This interface defines a class library for performing multiple web requests in batches. Implementations of this interface may perform requests serially or in parallel.;;d0,43;;b0,0;;m">
<treenode node="addRequest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlMultiRequest.php;f11;63;5;77;;;;vpos;;vvoid;;r&#10;Definition&#10;    addRequest (CAS_Request_RequestInterface $request)&#10;&#10;Description&#10;     Add a new Request to this batch. Note, implementations will likely restrict requests to their own concrete class hierarchy.&#10;&#10;Parameters:&#10;    CAS_Request_RequestInterface $request - reqest to add;;d4,64;;b1,0;;mCAS_Request_RequestInterface $request;;p">
</treenode>
<treenode node="getNumRequests;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlMultiRequest.php;f11;84;5;92;;;;vpos;;vnumber;;r&#10;Definition&#10;    getNumRequests()&#10;&#10;Description&#10;     Retrieve the number of requests added to this batch.&#10;&#10;Return:&#10;   of request elements;;d4,85;;b1,0;;m">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlMultiRequest.php;f11;105;5;144;;;;vpos;;vbool;;r&#10;Definition&#10;    send ()&#10;&#10;Description&#10;     Perform the request. After sending, all requests will have their responses poulated.&#10;&#10;Return:&#10;   TRUE on success, FALSE on failure;;d4,106;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CAS_Request_CurlRequest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlRequest.php;f0;39;1;199;;;;vpos;;vCAS_Request_AbstractRequest;;cCAS_Request_RequestInterface;;c;;r&#10;Definition&#10;    class CAS_Request_CurlRequest&#10;extends CAS_Request_AbstractRequest&#10;implements CAS_Request_RequestInterface&#10;&#10;Description&#10;     Provides support for performing web-requests via curl;;d0,42;;b0,0;;m">
<treenode node="_curlReadHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlRequest.php;f12;194;5;198;;;;vpos;;vvoid;;r&#10;Definition&#10;    _curlReadHeaders ($ch, $header)&#10;&#10;Description&#10;     Internal method for capturing the headers from a curl request.&#10;&#10;Parameters:&#10;    handle $ch - handle of curl&#10;    string $header - header;;d4,195;;b3,0;;mhandle $ch;;pstring $header;;p">
</treenode>
<treenode node="_storeResponseBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlRequest.php;f12;181;5;184;;;;vpos;;vvoid;;r&#10;Definition&#10;    _storeResponseBody ($body)&#10;&#10;Description&#10;     Store the response body. This method should NOT be used outside of the CurlRequest or the CurlMultiRequest.&#10;&#10;Parameters:&#10;    string $body - body to stor;;d4,182;;b3,0;;mstring $body;;p">
</treenode>
<treenode node="initAndConfigure;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlRequest.php;f11;101;5;170;;;;vpos;;vresource;;r&#10;Definition&#10;    initAndConfigure()&#10;&#10;Description&#10;     Internal method to initialize our cURL handle and configure the request. This method should NOT be used outside of the CurlRequest or the CurlMultiRequest.&#10;&#10;Return:&#10;   The cURL handle on success, false on failure;;d4,102;;b1,0;;m">
</treenode>
<treenode node="sendRequest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlRequest.php;f14;62;5;92;;;;vpos;;vbool;;r&#10;Definition&#10;    sendRequest ()&#10;&#10;Description&#10;     Send the request and store the results.&#10;&#10;Return:&#10;   true on success, false on failure;;d4,63;;b2,0;;m">
</treenode>
<treenode node="setCurlOptions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\CurlRequest.php;f11;51;5;54;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCurlOptions (array $options)&#10;&#10;Description&#10;     Set additional curl options&#10;&#10;Parameters:&#10;    array $options - option to set;;d4,52;;b1,0;;marray $options;;p">
</treenode>
</treenode>
<treenode node="CAS_Request_Exception;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Request\Exception.php;f0;39;1;44;;;;vpos;;vException;;cCAS_Exception;;c;;r&#10;Definition&#10;    class CAS_Request_Exception&#10;extends Exception&#10;implements CAS_Exception&#10;&#10;Description&#10;     An Exception for problems performing requests;;d0,42;;b0,0;;m">
</treenode>
<treenode node="CAS_TypeMismatchException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\TypeMismatchException.php;f0;39;1;68;;;;vpos;;vCAS_InvalidArgumentException;;c;;r&#10;Definition&#10;    class CAS_TypeMismatchException&#10;extends CAS_InvalidArgumentException&#10;&#10;Description&#10;     Exception that denotes invalid arguments were passed.;;d0,41;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\TypeMismatchException.php;f11;53;5;67;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct (&#10;        $argument, $argumentName, $type, $message = &apos;&apos;, $code = 0&#10;    )&#10;&#10;Description&#10;     Constructor, provides a nice message.&#10;&#10;Parameters:&#10;    mixed $argument - Argument&#10;    string $argumentName - Argument Name&#10;    string $type - Type&#10;    string $message - Error Message&#10;    integer $code - Code;;d6,55;;b1,0;;mmixed $argument;;pstring $argumentName;;pstring $type;;pstring $message;;pinteger $code;;p">
</treenode>
</treenode>
<treenode node="ClassLoader;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f0;42;1;434;;;;vpos;;v;;r&#10;Definition&#10;    class ClassLoader&#10;&#10;Description&#10;     ClassLoader implements a PSR-0, PSR-4 and classmap class loader.;;d0,43;;b0,0;;m">
<treenode node="add;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;108;5;143;;;;vpos;;v;;r&#10;Definition&#10;    add($prefix, $paths, $prepend = false)&#10;&#10;Description&#10;     Registers a set of PSR-0 directories for a given prefix, either appending or prepending to the ones previously set for this prefix.&#10;&#10;Parameters:&#10;    string $prefix - The prefix&#10;    array|string $paths - The PSR-0 root directories&#10;    bool $prepend - Whether to prepend the directories;;d4,109;;b1,0;;mstring $prefix;;parray|string $paths;;pbool $prepend;;p">
</treenode>
<treenode node="addClassMap;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;91;5;98;;;;vpos;;v;;r&#10;Definition&#10;    addClassMap(array $classMap)&#10;&#10;Description&#10;      Class to filename map&#10;&#10;Parameters:&#10;    array $classMap - Class to filename map;;d4,92;;b1,0;;marray $classMap;;p">
</treenode>
<treenode node="addPsr4;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;155;5;191;;;;vpos;;v;;r&#10;Definition&#10;    addPsr4($prefix, $paths, $prepend = false)&#10;&#10;Description&#10;     Registers a set of PSR-4 directories for a given namespace, either appending or prepending to the ones previously set for this namespace.&#10;&#10;Parameters:&#10;    string $prefix - The prefix/namespace, with trailing &apos;\\&apos;&#10;    array|string $paths - The PSR-4 base directories&#10;    bool $prepend - Whether to prepend the directories;;d4,156;;b1,0;;mstring $prefix;;parray|string $paths;;pbool $prepend;;p">
</treenode>
<treenode node="findFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;334;5;367;;;;vpos;;vstring;;r&#10;Definition&#10;    findFile($class)&#10;&#10;Description&#10;     Finds the path to the file where the class is defined.&#10;&#10;Parameters:&#10;    string $class - The name of the class&#10;&#10;Return:&#10;   |false The path if found, false otherwise;;d4,335;;b1,0;;mstring $class;;p">
</treenode>
<treenode node="findFileWithExtension;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f12;369;5;433;;;;vpos;;v;;r;;d4,370;;b3,0;;mclass;;pext;;p">
</treenode>
<treenode node="getApcuPrefix;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;289;5;292;;;;vpos;;vstring;;r&#10;Definition&#10;    getApcuPrefix()&#10;&#10;Description&#10;     The APCu prefix in use, or null if APCu caching is not enabled.&#10;&#10;Return:&#10;   |null;;d4,290;;b1,0;;m">
</treenode>
<treenode node="getClassMap;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;83;5;86;;;;vpos;;v;;r;;d4,84;;b1,0;;m">
</treenode>
<treenode node="getFallbackDirs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;73;5;76;;;;vpos;;v;;r;;d4,74;;b1,0;;m">
</treenode>
<treenode node="getFallbackDirsPsr4;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;78;5;81;;;;vpos;;v;;r;;d4,79;;b1,0;;m">
</treenode>
<treenode node="getPrefixes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;59;5;66;;;;vpos;;v;;r;;d4,60;;b1,0;;m">
</treenode>
<treenode node="getPrefixesPsr4;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;68;5;71;;;;vpos;;v;;r;;d4,69;;b1,0;;m">
</treenode>
<treenode node="getUseIncludePath;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;248;5;251;;;;vpos;;vbool;;r&#10;Definition&#10;    getUseIncludePath()&#10;&#10;Description&#10;     Can be used to check if the autoloader uses the include path to check for classes.;;d4,249;;b1,0;;m">
</treenode>
<treenode node="isClassMapAuthoritative;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;269;5;272;;;;vpos;;vbool;;r&#10;Definition&#10;    isClassMapAuthoritative()&#10;&#10;Description&#10;     Should class lookup fail if not found in the current class map?;;d4,270;;b1,0;;m">
</treenode>
<treenode node="loadClass;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;318;5;325;;;;vpos;;vbool;;r&#10;Definition&#10;    loadClass($class)&#10;&#10;Description&#10;     Loads the given class or interface.&#10;&#10;Parameters:&#10;    string $class - The name of the class&#10;&#10;Return:&#10;   |null True if loaded, null otherwise;;d4,319;;b1,0;;mstring $class;;p">
</treenode>
<treenode node="register;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;299;5;302;;;;vpos;;v;;r&#10;Definition&#10;    register($prepend = false)&#10;&#10;Description&#10;     Registers this instance as an autoloader.&#10;&#10;Parameters:&#10;    bool $prepend - Whether to prepend the autoloader or not;;d4,300;;b1,0;;mbool $prepend;;p">
</treenode>
<treenode node="set;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;200;5;207;;;;vpos;;v;;r&#10;Definition&#10;    set($prefix, $paths)&#10;&#10;Description&#10;     Registers a set of PSR-0 directories for a given prefix, replacing any others previously set for this prefix.&#10;&#10;Parameters:&#10;    string $prefix - The prefix&#10;    array|string $paths - The PSR-0 base directories;;d4,201;;b1,0;;mstring $prefix;;parray|string $paths;;p">
</treenode>
<treenode node="setApcuPrefix;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;279;5;282;;;;vpos;;v;;r&#10;Definition&#10;    setApcuPrefix($apcuPrefix)&#10;&#10;Description&#10;     APCu prefix to use to cache found/not-found classes, if the extension is enabled.&#10;&#10;Parameters:&#10;    string|null $apcuPrefix;;d4,280;;b1,0;;mstring|null $apcuPrefix;;p">
</treenode>
<treenode node="setClassMapAuthoritative;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;259;5;262;;;;vpos;;v;;r&#10;Definition&#10;    setClassMapAuthoritative($classMapAuthoritative)&#10;&#10;Description&#10;     Turns off searching the prefix and fallback directories for classes that have not been registered with the class map.&#10;&#10;Parameters:&#10;    bool $classMapAuthoritative;;d4,260;;b1,0;;mbool $classMapAuthoritative;;p">
</treenode>
<treenode node="setPsr4;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;218;5;230;;;;vpos;;v;;r&#10;Definition&#10;    setPsr4($prefix, $paths)&#10;&#10;Description&#10;     Registers a set of PSR-4 directories for a given namespace, replacing any others previously set for this namespace.&#10;&#10;Parameters:&#10;    string $prefix - The prefix/namespace, with trailing &apos;\\&apos;&#10;    array|string $paths - The PSR-4 base directories;;d4,219;;b1,0;;mstring $prefix;;parray|string $paths;;p">
</treenode>
<treenode node="setUseIncludePath;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;237;5;240;;;;vpos;;v;;r&#10;Definition&#10;    setUseIncludePath($useIncludePath)&#10;&#10;Description&#10;     Turns on searching the include path for class files.&#10;&#10;Parameters:&#10;    bool $useIncludePath;;d4,238;;b1,0;;mbool $useIncludePath;;p">
</treenode>
<treenode node="unregister;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f11;307;5;310;;;;vpos;;v;;r&#10;Definition&#10;    unregister()&#10;&#10;Description&#10;     Unregisters this instance as an autoloader.;;d4,308;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Command;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f0;12;1;395;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f0;14;1;230;;;;vpos;;v;;r&#10;Definition&#10;    class Command&#10;&#10;Description&#10;     Command;;d0,13;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;109;5;116;;;;vpos;;v;;r&#10;Definition&#10;    __construct($options = null)&#10;&#10;Description&#10;      either a command string or an options array (see setOptions())&#10;&#10;Parameters:&#10;    string|array $options - either a command string or an options array (see setOptions());;d4,110;;b1,0;;mstring|array $options;;p">
</treenode>
<treenode node="__toString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;391;5;394;;;;vpos;;vstring;;r&#10;Definition&#10;    __toString()&#10;&#10;Description&#10;      the current command string to execute&#10;&#10;Return:&#10;   the current command string to execute;;d4,392;;b1,0;;m">
</treenode>
<treenode node="addArg;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;239;5;268;;;;vpos;;vstatic;;r&#10;Definition&#10;    addArg($key, $value = null, $escape = null)&#10;&#10;Description&#10;      the argument key to add e.g. `--feature` or `--name=`. If the key does not end with and `=`, the $value will be separated by a space, if any. Keys are not escaped unless $value is null and $escape is `true`.&#10;&#10;Parameters:&#10;    string $key - the argument key to add e&#10;    string|array|null $value - the optional argument value which will get escaped if $escapeArgs is true&#10;    bool|null $escape - if set, this overrides the $escapeArgs setting and enforces escaping/no escaping&#10;&#10;Return:&#10;   for method chaining;;d4,240;;b1,0;;mstring $key;;pstring|array|null $value;;pbool|null $escape;;p">
</treenode>
<treenode node="addFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f11;53;5;62;;;;vpos;;vCommand;;r&#10;Definition&#10;    addFile($name, $handle, $password = null)&#10;&#10;Description&#10;      the PDF file to add for processing&#10;&#10;Parameters:&#10;    string $name - the PDF file to add for processing&#10;    string $handle - one or more uppercase letters A&#10;    string|null $password - the owner (or user) password if any&#10;&#10;Return:&#10;   the command instance for method chaining;;d4,54;;b1,0;;mstring $name;;pstring $handle;;pstring|null $password;;p">
</treenode>
<treenode node="addOption;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f11;70;5;74;;;;vpos;;vCommand;;r&#10;Definition&#10;    addOption($option, $argument = null, $escape = null)&#10;&#10;Description&#10;      the pdftk option to add&#10;&#10;Parameters:&#10;    string $option - the pdftk option to add&#10;    string|File|null $argument - the argument to add, either string, File instance or null if none&#10;    null|bool - whether to escape the option&#10;&#10;Return:&#10;   the command instance for method chaining;;d4,71;;b1,0;;mstring $option;;pstring|File|null $argument;;pnull|bool;;p">
</treenode>
<treenode node="addPageRange;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f11;136;5;153;;;;vpos;;vCommand;;r&#10;Definition&#10;    addPageRange($start, $end = null, $handle = null, $qualifier = null, $rotation = null)&#10;&#10;Description&#10;     Add a page range as used by some operations&#10;&#10;Parameters:&#10;    int|string|array $start - the start page number or an array of page numbers&#10;    int|string|null $end - the end page number or null for single page (or list if $start is an array)&#10;    string|null $handle - the handle of the file to use&#10;    string|null $qualifier - the page number qualifier, either &apos;even&apos; or &apos;odd&apos; or null for none&#10;    string $rotation - the rotation to apply to the pages&#10;&#10;Return:&#10;   the command instance for method chaining;;d4,137;;b1,0;;mint|string|array $start;;pint|string|null $end;;pstring|null $handle;;pstring|null $qualifier;;pstring $rotation;;p">
</treenode>
<treenode node="checkExecutionStatus;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f14;224;5;229;;;;vpos;;v;;r&#10;Definition&#10;    checkExecutionStatus()&#10;&#10;Description&#10;     Ensure that the command was not exectued yet. Throws exception otherwise.;;d4,225;;b2,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;319;5;378;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f11;159;5;166;;;;vpos;;vbool;;r&#10;Definition&#10;    execute()&#10;&#10;Description&#10;     Execute the command&#10;&#10;Return:&#10;   whether execution was successful;;d4,320;;b1,0;;m">
</treenode>
<treenode node="getArgs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;224;5;227;;;;vpos;;vstring;;r&#10;Definition&#10;    getArgs()&#10;&#10;Description&#10;      the command args that where set through setArgs() or added with addArg() separated by spaces&#10;&#10;Return:&#10;   the command args that where set through setArgs() or added with addArg() separated by spaces;;d4,225;;b1,0;;m">
</treenode>
<treenode node="getCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;188;5;191;;;;vpos;;vstring;;r&#10;Definition&#10;    getCommand()&#10;&#10;Description&#10;      |null the command that was set through setCommand() or passed to the constructor. Null if none.&#10;&#10;Return:&#10;   |null the command that was set through setCommand() or passed to the constructor;;d4,189;;b1,0;;m">
</treenode>
<treenode node="getError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;283;5;286;;;;vpos;;vstring;;r&#10;Definition&#10;    getError($trim = true)&#10;&#10;Description&#10;      whether to `trim()` the return value. The default is `true`.&#10;&#10;Parameters:&#10;    bool $trim - whether to `trim()` the return value&#10;&#10;Return:&#10;   the error message, either stderr or internal message;;d4,284;;b1,0;;mbool $trim;;p">
</treenode>
<treenode node="getExecCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;197;5;209;;;;vpos;;vstring;;r&#10;Definition&#10;    getExecCommand()&#10;&#10;Description&#10;      |bool the full command string to execute. If no command was set with setCommand() or passed to the constructor it will return false.&#10;&#10;Return:&#10;   |bool the full command string to execute;;d4,198;;b1,0;;m">
</treenode>
<treenode node="getExecuted;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;308;5;311;;;;vpos;;vstring;;r&#10;Definition&#10;    getExecuted()&#10;&#10;Description&#10;      whether the command was successfully executed&#10;&#10;Return:&#10;   whether the command was successfully executed;;d4,309;;b1,0;;m">
</treenode>
<treenode node="getExitCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;300;5;303;;;;vpos;;vint;;r&#10;Definition&#10;    getExitCode()&#10;&#10;Description&#10;      |null the exit code or null if command was not executed yet&#10;&#10;Return:&#10;   |null the exit code or null if command was not executed yet;;d4,301;;b1,0;;m">
</treenode>
<treenode node="getFileCount;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f11;120;5;123;;;;vpos;;vint;;r&#10;Definition&#10;    getFileCount()&#10;&#10;Description&#10;      the number of files added to the command&#10;&#10;Return:&#10;   the number of files added to the command;;d4,121;;b1,0;;m">
</treenode>
<treenode node="getIsWindows;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;383;5;386;;;;vpos;;vbool;;r&#10;Definition&#10;    getIsWindows()&#10;&#10;Description&#10;      whether we are on a Windows OS&#10;&#10;Return:&#10;   whether we are on a Windows OS;;d4,384;;b1,0;;m">
</treenode>
<treenode node="getOperation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f11;90;5;93;;;;vpos;;vstring;;r&#10;Definition&#10;    getOperation()&#10;&#10;Description&#10;      |null the current operation or null if none set&#10;&#10;Return:&#10;   |null the current operation or null if none set;;d4,91;;b1,0;;m">
</treenode>
<treenode node="getOperationArgument;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f11;111;5;115;;;;vpos;;vstring;;r&#10;Definition&#10;    getOperationArgument()&#10;&#10;Description&#10;      |array|null the current operation argument as string or array or null if none set&#10;&#10;Return:&#10;   |array|null the current operation argument as string or array or null if none set;;d4,112;;b1,0;;m">
</treenode>
<treenode node="getOutput;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;274;5;277;;;;vpos;;vstring;;r&#10;Definition&#10;    getOutput($trim = true)&#10;&#10;Description&#10;      whether to `trim()` the return value. The default is `true`.&#10;&#10;Parameters:&#10;    bool $trim - whether to `trim()` the return value&#10;&#10;Return:&#10;   the command output (stdout);;d4,275;;b1,0;;mbool $trim;;p">
</treenode>
<treenode node="getStdErr;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;292;5;295;;;;vpos;;vstring;;r&#10;Definition&#10;    getStdErr($trim = true)&#10;&#10;Description&#10;      whether to `trim()` the return value. The default is `true`.&#10;&#10;Parameters:&#10;    bool $trim - whether to `trim()` the return value&#10;&#10;Return:&#10;   the stderr output;;d4,293;;b1,0;;mbool $trim;;p">
</treenode>
<treenode node="processInputFiles;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f14;171;5;186;;;;vpos;;v;;r&#10;Definition&#10;    processInputFiles()&#10;&#10;Description&#10;     Process input PDF files and create respective command arguments;;d4,172;;b2,0;;m">
</treenode>
<treenode node="processOperation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f14;210;5;219;;;;vpos;;v;;r&#10;Definition&#10;    processOperation()&#10;&#10;Description&#10;     Process opearation and create respective command arguments;;d4,211;;b2,0;;m">
</treenode>
<treenode node="processOptions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f14;192;5;205;;;;vpos;;v;;r&#10;Definition&#10;    processOptions($filename = null)&#10;&#10;Description&#10;     Process options and create respective command arguments&#10;&#10;Parameters:&#10;    string|null $filename - if provided an &apos;output&apos; option will be added;;d4,193;;b2,0;;mstring|null $filename;;p">
</treenode>
<treenode node="setArgs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;215;5;219;;;;vpos;;vstatic;;r&#10;Definition&#10;    setArgs($args)&#10;&#10;Description&#10;      the command arguments as string. Note that these will not get escaped!&#10;&#10;Parameters:&#10;    string $args - the command arguments as string&#10;&#10;Return:&#10;   for method chaining;;d4,216;;b1,0;;mstring $args;;p">
</treenode>
<treenode node="setCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;148;5;171;;;;vpos;;vstatic;;r&#10;Definition&#10;    setCommand($command)&#10;&#10;Description&#10;      the command or full command string to execute, like &apos;gzip&apos; or &apos;gzip -d&apos;. You can still call addArg() to add more arguments to the command. If $escapeCommand was set to true, the command gets escaped through escapeshellcmd().&#10;&#10;Parameters:&#10;    string $command - the command or full command string to execute, like &apos;gzip&apos; or &apos;gzip -d&apos;&#10;&#10;Return:&#10;   for method chaining;;d4,149;;b1,0;;mstring $command;;p">
</treenode>
<treenode node="setOperation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f11;80;5;85;;;;vpos;;vCommand;;r&#10;Definition&#10;    setOperation($operation)&#10;&#10;Description&#10;      the operation to perform&#10;&#10;Parameters:&#10;    string $operation - the operation to perform&#10;&#10;Return:&#10;   the command instance for method chaining;;d4,81;;b1,0;;mstring $operation;;p">
</treenode>
<treenode node="setOperationArgument;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Command.php;f11;100;5;106;;;;vpos;;vCommand;;r&#10;Definition&#10;    setOperationArgument($value, $escape = false)&#10;&#10;Description&#10;      the operation argument&#10;&#10;Parameters:&#10;    string $value - the operation argument&#10;    bool $escape - whether to escape the operation argument&#10;&#10;Return:&#10;   the command instance for method chaining;;d4,101;;b1,0;;mstring $value;;pbool $escape;;p">
</treenode>
<treenode node="setOptions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;125;5;140;;;;vpos;;vstatic;;r&#10;Definition&#10;    setOptions($options)&#10;&#10;Description&#10;      array of name =&gt; value options that should be applied to the object You can also pass options that use a setter, e.g. you can pass a `fileName` option which will be passed to `setFileName()`.&#10;&#10;Parameters:&#10;    array $options - array of name =&gt; value options that should be applied to the object&#10;&#10;Return:&#10;   for method chaining;;d4,126;;b1,0;;marray $options;;p">
</treenode>
<treenode node="setStdIn;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\src\Command.php;f11;180;5;183;;;;vpos;;vstatic;;r&#10;Definition&#10;    setStdIn($stdIn)&#10;&#10;Description&#10;      If set, the string will be piped to the command via standard input. This enables the same functionality as piping on the command line. It can also be a resource like a file handle or a stream in which case its content will be piped into the command like an input redirection.&#10;&#10;Parameters:&#10;    string|resource $stdIn - If set, the string will be piped to the command via standard input&#10;&#10;Return:&#10;   for method chaining;;d37,180;;b1,0;;mstring|resource $stdIn;;p">
</treenode>
</treenode>
<treenode node="CommandTest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f0;3;1;249;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f0;3;1;110;;;;vpos;;vTestCase;;c;;r;;d0,4;;b0,0;;m">
<treenode node="getDocument1;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f14;91;5;94;;;;vpos;;v;;r;;d4,92;;b2,0;;m">
</treenode>
<treenode node="getDocument2;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f14;96;5;99;;;;vpos;;v;;r;;d4,97;;b2,0;;m">
</treenode>
<treenode node="getForm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f14;101;5;104;;;;vpos;;v;;r;;d4,102;;b2,0;;m">
</treenode>
<treenode node="getOutFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f14;106;5;109;;;;vpos;;v;;r;;d4,107;;b2,0;;m">
</treenode>
<treenode node="setUp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;5;5;9;;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f11;5;5;8;;;;vpos;;v;;r;;d4,6;;b1,0;;m">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f11;9;5;12;;;;vpos;;v;;r;;d4,10;;b1,0;;m">
</treenode>
<treenode node="testCanAddArguments;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;69;5;85;;;;vpos;;v;;r;;d4,70;;b1,0;;m">
</treenode>
<treenode node="testCanAddFiles;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f11;14;5;29;;;;vpos;;v;;r;;d4,15;;b1,0;;m">
</treenode>
<treenode node="testCanAddOptions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f11;31;5;45;;;;vpos;;v;;r;;d4,32;;b1,0;;m">
</treenode>
<treenode node="testCanAddPageRanges;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f11;64;5;89;;;;vpos;;v;;r;;d4,65;;b1,0;;m">
</treenode>
<treenode node="testCanCastToString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;160;5;166;;;;vpos;;v;;r;;d4,161;;b1,0;;m">
</treenode>
<treenode node="testCanDisableEscaping;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;94;5;105;;;;vpos;;v;;r;;d4,95;;b1,0;;m">
</treenode>
<treenode node="testCanNotRunEmptyCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;132;5;137;;;;vpos;;v;;r;;d4,133;;b1,0;;m">
</treenode>
<treenode node="testCanNotRunInvalidCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;149;5;159;;;;vpos;;v;;r;;d4,150;;b1,0;;m">
</treenode>
<treenode node="testCanNotRunInvalidCommandWithExec;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;195;5;206;;;;vpos;;v;;r;;d4,196;;b1,0;;m">
</treenode>
<treenode node="testCanNotRunNotExistantCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;138;5;148;;;;vpos;;v;;r;;d4,139;;b1,0;;m">
</treenode>
<treenode node="testCanNotRunNotExistantCommandWithExec;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;183;5;194;;;;vpos;;v;;r;;d4,184;;b1,0;;m">
</treenode>
<treenode node="testCanPassCommandOptionToConstructor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;18;5;25;;;;vpos;;v;;r;;d4,19;;b1,0;;m">
</treenode>
<treenode node="testCanPassCommandStringToConstructor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;12;5;17;;;;vpos;;v;;r;;d4,13;;b1,0;;m">
</treenode>
<treenode node="testCanPassOptionsToConstructor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;51;5;65;;;;vpos;;v;;r;;d4,52;;b1,0;;m">
</treenode>
<treenode node="testCanProvideProcDir;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;216;5;225;;;;vpos;;v;;r;;d4,217;;b1,0;;m">
</treenode>
<treenode node="testCanProvideProcEnvVars;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;209;5;215;;;;vpos;;v;;r;;d4,210;;b1,0;;m">
</treenode>
<treenode node="testCanResetArguments;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;86;5;93;;;;vpos;;v;;r;;d4,87;;b1,0;;m">
</treenode>
<treenode node="testCanRunCommandWithArguments;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;106;5;115;;;;vpos;;v;;r;;d4,107;;b1,0;;m">
</treenode>
<treenode node="testCanRunCommandWithStandardInput;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;226;5;234;;;;vpos;;v;;r;;d4,227;;b1,0;;m">
</treenode>
<treenode node="testCanRunCommandWithStandardInputStream;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;235;5;247;;;;vpos;;v;;r;;d4,236;;b1,0;;m">
</treenode>
<treenode node="testCanRunValidCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;118;5;131;;;;vpos;;v;;r;;d4,119;;b1,0;;m">
</treenode>
<treenode node="testCanRunValidCommandWithExec;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;169;5;182;;;;vpos;;v;;r;;d4,170;;b1,0;;m">
</treenode>
<treenode node="testCanSetAndGetOperationAndArgument;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\CommandTest.php;f11;47;5;62;;;;vpos;;v;;r;;d4,48;;b1,0;;m">
</treenode>
<treenode node="testCanSetCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;26;5;32;;;;vpos;;v;;r;;d4,27;;b1,0;;m">
</treenode>
<treenode node="testCanSetOptions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-shellcommand\tests\CommandTest.php;f11;35;5;50;;;;vpos;;v;;r;;d4,36;;b1,0;;m">
</treenode>
</treenode>
<treenode node="ComposerAutoloaderInit92a4c7f5ed6ade7e92ea181e78dcaef2;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\autoload_real.php;f0;4;1;51;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="getLoader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\autoload_real.php;f18;15;5;50;;;;vpos;;v;;r;;d4,16;;b1,5;;m">
</treenode>
<treenode node="loadClassLoader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\autoload_real.php;f18;8;5;13;;;;vpos;;v;;r;;d4,9;;b1,5;;mclass;;p">
</treenode>
</treenode>
<treenode node="ComposerStaticInit92a4c7f5ed6ade7e92ea181e78dcaef2;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\autoload_static.php;f0;6;1;40;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
<treenode node="getInitializer;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\autoload_static.php;f18;32;5;39;;;;vpos;;v;;r;;d4,33;;b1,5;;mloader;;p">
</treenode>
</treenode>
<treenode node="Controller;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\controller.php;f0;4;1;58;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\controller.php;f1;16;2;20;;;;vpos;;v;;r;;d1,17;;b0,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\controller.php;f8;53;2;57;;;;vpos;;v;;r;;d1,54;;b1,0;;m">
</treenode>
<treenode node="actionDelDocConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\controller.php;f1;27;2;51;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelDocConfirm($form, $get)&#10;&#10;Description&#10;     Displays document delete confirmation page.;;d1,28;;b0,0;;mform;;pget;;p">
</treenode>
</treenode>
<treenode node="Controller_AdmissionCampaign;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_AdmissionCampaign.php;f0;7;1;41;;;;vpos;;vController;;c;;r;;d0,8;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_AdmissionCampaign.php;f8;15;2;25;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;15;2;25;;;;vpos;;v;;r;;d1,16;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_AdmissionCampaign.php;f8;37;2;40;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;37;2;40;;;;vpos;;v;;r;;d1,38;;b1,0;;m">
</treenode>
<treenode node="actionAdmCampByUniversityJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_AdmissionCampaign.php;f8;32;2;35;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;32;2;35;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionAdmCampByUniversityJSON()&#10;&#10;Description&#10;     Prints admission campaigns by university JSON.;;d1,33;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_Application;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f0;9;1;80;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f0;12;1;129;;;;vpos;;vController;;c;;r;;d0,13;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;17;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f8;20;2;24;;;;vpos;;v;;r;;d1,21;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;75;2;79;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f8;124;2;128;;;;vpos;;v;;r;;d1,125;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;49;2;55;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f8;52;2;58;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays application add page.;;d1,53;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f8;94;2;104;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes application.;;d1,95;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f8;84;2;87;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to application delete confirm.;;d1,85;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f8;65;2;77;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows application specialities.;;d1,66;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;28;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f8;31;2;34;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays application page.;;d1,32;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;38;2;42;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f8;41;2;45;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets application page.;;d1,42;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;62;2;73;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Application.php;f8;111;2;122;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves application.;;d1,112;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_ApplicationSpec;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationPlaces.php;f0;9;1;87;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f0;11;1;183;;;;vpos;;vController;;c;;r;;d0,12;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationPlaces.php;f8;17;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;19;2;23;;;;vpos;;v;;r;;d1,20;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationPlaces.php;f8;82;2;86;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;178;2;182;;;;vpos;;v;;r;;d1,179;;b1,0;;m">
</treenode>
<treenode node="actionAddPlaces;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationPlaces.php;f8;28;2;38;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;40;2;50;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAddPlaces()&#10;&#10;Description&#10;     Displays application places add page.;;d1,41;;b1,0;;m">
</treenode>
<treenode node="actionCancel;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;30;2;33;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionCancel()&#10;&#10;Description&#10;     Cancels application spec page.;;d1,31;;b1,0;;m">
</treenode>
<treenode node="actionCancelPlaces;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;57;2;65;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionCancelPlaces()&#10;&#10;Description&#10;     Cancels application places add page.;;d1,58;;b1,0;;m">
</treenode>
<treenode node="actionChange;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;131;2;143;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionChange()&#10;&#10;Description&#10;     Changes application.;;d1,132;;b1,0;;m">
</treenode>
<treenode node="actionRecall;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;150;2;162;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionRecall()&#10;&#10;Description&#10;     Recalls application.;;d1,151;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationPlaces.php;f8;60;2;80;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;87;2;105;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves application spec.;;d1,88;;b1,0;;m">
</treenode>
<treenode node="actionSavePdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;169;2;176;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSavePdf()&#10;&#10;Description&#10;     Saves application spec as PDF.;;d1,170;;b1,0;;m">
</treenode>
<treenode node="actionSavePlaces;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationPlaces.php;f8;45;2;53;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;72;2;80;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSavePlaces()&#10;&#10;Description&#10;     Saves application spec places.;;d1,73;;b1,0;;m">
</treenode>
<treenode node="actionSend;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ApplicationSpec.php;f8;112;2;124;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSend()&#10;&#10;Description&#10;     Sends application.;;d1,113;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_DictDoctypes;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictDoctypes.php;f0;7;1;71;;;;vpos;;vController;;c;;r;;d0,8;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;15;2;25;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictDoctypes.php;f8;15;2;25;;;;vpos;;v;;r;;d1,16;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;37;2;40;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictDoctypes.php;f8;67;2;70;;;;vpos;;v;;r;;d1,68;;b1,0;;m">
</treenode>
<treenode node="actionDiplomasByEducCodeJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;32;2;35;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictDoctypes.php;f8;62;2;65;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionDiplomasByEducCodeJSON()&#10;&#10;Description&#10;     Prints education documents by education type code JSON.;;d1,63;;b1,0;;m">
</treenode>
<treenode node="actionPassportsForeignJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictDoctypes.php;f8;52;2;55;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionPassportsForeignJSON()&#10;&#10;Description&#10;     Prints foreign passports JSON.;;d1,53;;b1,0;;m">
</treenode>
<treenode node="actionPassportsJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictDoctypes.php;f8;32;2;35;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionPassportsJSON()&#10;&#10;Description&#10;     Prints passports JSON.;;d1,33;;b1,0;;m">
</treenode>
<treenode node="actionPassportsRussianJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictDoctypes.php;f8;42;2;45;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionPassportsRussianJSON()&#10;&#10;Description&#10;     Prints russian passports JSON.;;d1,43;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_DictForeignLangs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictForeignLangs.php;f0;7;1;42;;;;vpos;;vController;;c;;r;;d0,8;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictForeignLangs.php;f8;13;2;16;;;;vpos;;v;;r;;d1,14;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictForeignLangs.php;f8;38;2;41;;;;vpos;;v;;r;;d1,39;;b1,0;;m">
</treenode>
<treenode node="actionForeignLangsBsuJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictForeignLangs.php;f8;33;2;36;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionForeignLangsBsuJSON()&#10;&#10;Description&#10;     Prints BSU foreign languages JSON.;;d1,34;;b1,0;;m">
</treenode>
<treenode node="actionForeignLangsJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DictForeignLangs.php;f8;23;2;26;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionForeignLangsJSON()&#10;&#10;Description&#10;     Prints foreign languages JSON.;;d1,24;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_DictionaryManager;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictManager.php;f0;8;1;55;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictionaryManager.php;f0;8;1;55;;;;vpos;;vController;;c;;r;;d0,9;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictManager.php;f8;16;2;20;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictionaryManager.php;f8;16;2;20;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;16;2;20;;;;vpos;;v;;r;;d1,17;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictManager.php;f8;50;2;54;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictionaryManager.php;f8;50;2;54;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;50;2;54;;;;vpos;;v;;r;;d1,51;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictManager.php;f8;27;2;33;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictionaryManager.php;f8;27;2;33;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;27;2;33;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays dictionary manager page.;;d1,28;;b1,0;;m">
</treenode>
<treenode node="actionRenew;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictManager.php;f8;40;2;48;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_DictionaryManager.php;f8;40;2;48;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;40;2;48;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionRenew()&#10;&#10;Description&#10;     Renews dictionary.;;d1,41;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_DocsEduc;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_.php;f0;8;1;40;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f0;10;1;160;;;;vpos;;vController;;c;;r;;d0,11;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_.php;f8;16;2;20;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;17;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;17;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;19;2;40;;;;vpos;;v;;r;;d1,20;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_.php;f8;35;2;39;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;121;2;125;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;121;2;125;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;155;2;159;;;;vpos;;v;;r;;d1,156;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;49;2;55;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;49;2;55;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;68;2;74;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays education documents add page.;;d1,69;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;89;2;100;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;89;2;100;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;111;2;122;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes education document.;;d1,112;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;79;2;82;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;79;2;82;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;101;2;104;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to education document delete confirm.;;d1,102;;b1,0;;m">
</treenode>
<treenode node="actionDiplomasByUserCampaignJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;150;2;153;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionDiplomasByUserCampaignJSON()&#10;&#10;Description&#10;     Prints education documents by user campaign JSON.;;d1,151;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;62;2;72;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;62;2;72;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;81;2;94;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows education document.;;d1,82;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_.php;f8;27;2;33;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;28;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;28;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;47;2;50;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays education documents page.;;d1,48;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;38;2;42;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;38;2;42;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;57;2;61;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets education documents add page.;;d1,58;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_App.php;f8;107;2;119;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;107;2;119;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_DocsEduc.php;f8;129;2;143;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves education document.;;d1,130;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_EduclevelsDoctypes;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EduclevelsDoctypes.php;f0;9;1;115;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EduclevelsDoctypes.php;f8;17;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EduclevelsDoctypes.php;f8;110;2;114;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;110;2;114;;;;vpos;;v;;r;;d1,111;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EduclevelsDoctypes.php;f8;38;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;38;2;44;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays educlevels doctypes add page.;;d1,39;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EduclevelsDoctypes.php;f8;78;2;89;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;78;2;89;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes educlevels doctypes.;;d1,79;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EduclevelsDoctypes.php;f8;68;2;71;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;68;2;71;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to educlevels doctypes delete confirm.;;d1,69;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EduclevelsDoctypes.php;f8;51;2;61;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;51;2;61;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows educlevels doctypes.;;d1,52;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EduclevelsDoctypes.php;f8;28;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;28;2;31;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays educlevels doctypes page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_EduclevelsDoctypes.php;f8;96;2;108;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;96;2;108;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves educlevels doctypes.;;d1,97;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_EductypesDoctypes;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f0;9;1;115;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;110;2;114;;;;vpos;;v;;r;;d1,111;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;38;2;44;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays eductypes doctypes add page.;;d1,39;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;78;2;89;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes eductypes doctypes.;;d1,79;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;68;2;71;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to eductypes doctypes delete confirm.;;d1,69;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;51;2;61;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows eductypes doctypes.;;d1,52;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;28;2;31;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays eductypes doctypes page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;96;2;108;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves eductypes doctypes.;;d1,97;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_Ege;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f0;9;1;126;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f8;121;2;125;;;;vpos;;v;;r;;d1,122;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f8;49;2;55;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays ege add page.;;d1,50;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f8;89;2;100;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes ege.;;d1,90;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f8;79;2;82;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to ege document delete confirm.;;d1,80;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f8;62;2;72;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows ege disciplines.;;d1,63;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f8;28;2;31;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays ege page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f8;38;2;42;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets ege page.;;d1,39;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Ege.php;f8;107;2;119;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves ege.;;d1,108;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_EgeDisciplines;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f0;9;1;168;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;163;2;167;;;;vpos;;v;;r;;d1,164;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;61;2;70;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays ege disciplines add page.;;d1,62;;b1,0;;m">
</treenode>
<treenode node="actionCancel;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;153;2;161;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionCancel()&#10;&#10;Description&#10;     Cancels ege disciplines.;;d1,154;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;110;2;122;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes ege discipline.;;d1,111;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;100;2;103;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to ege discipline delete confirm.;;d1,101;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;77;2;93;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows ege discipline.;;d1,78;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;28;2;38;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays ege page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;45;2;54;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets ege disciplines page.;;d1,46;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_EgeDisciplines.php;f8;129;2;146;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves ege discipline.;;d1,130;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_IndAchiev;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f0;9;1;126;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;121;2;125;;;;vpos;;v;;r;;d1,122;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;49;2;55;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays education documents add page.;;d1,50;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;89;2;100;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes education document.;;d1,90;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;79;2;82;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to education document delete confirm.;;d1,80;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;62;2;72;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows education document.;;d1,63;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;28;2;31;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays education documents page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;38;2;42;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets education documents page.;;d1,39;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;107;2;119;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves education document.;;d1,108;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_IndAchievs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f0;9;1;126;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f0;9;1;137;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f8;17;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f8;121;2;125;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;132;2;136;;;;vpos;;v;;r;;d1,133;;b1,0;;m">
</treenode>
<treenode node="actionAdd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f8;49;2;55;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;49;2;55;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionAdd()&#10;&#10;Description&#10;     Displays individual achievments add page.;;d1,50;;b1,0;;m">
</treenode>
<treenode node="actionCancel;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;127;2;130;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionCancel()&#10;&#10;Description&#10;     Cancels individual achievment.;;d1,128;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f8;89;2;100;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;89;2;100;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes education document.;;d1,90;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f8;79;2;82;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;79;2;82;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Calls to individual achievment delete confirm.;;d1,80;;b1,0;;m">
</treenode>
<treenode node="actionEdit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f8;62;2;72;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;62;2;72;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEdit()&#10;&#10;Description&#10;     Shows individual achievment.;;d1,63;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f8;28;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;28;2;31;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays individual achievments page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f8;38;2;42;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;38;2;42;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets individual achievments add page.;;d1,39;;b1,0;;m">
</treenode>
<treenode node="actionSave;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchiev.php;f8;107;2;119;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_IndAchievs.php;f8;107;2;120;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSave()&#10;&#10;Description&#10;     Saves individual achievment.;;d1,108;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_Kladr;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f0;7;1;132;;;;vpos;;vController;;c;;r;;d0,8;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;15;2;26;;;;vpos;;v;;r;;d1,16;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;128;2;131;;;;vpos;;v;;r;;d1,129;;b1,0;;m">
</treenode>
<treenode node="actionAreaAllJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;43;2;46;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionAreaAllJSON()&#10;&#10;Description&#10;     Prints all areas JSON.;;d1,44;;b1,0;;m">
</treenode>
<treenode node="actionAreaByRegionJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;53;2;56;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionAreaByRegionJSON()&#10;&#10;Description&#10;     Prints areas by region JSON.;;d1,54;;b1,0;;m">
</treenode>
<treenode node="actionCityByRegionJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;63;2;66;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionCityByRegionJSON()&#10;&#10;Description&#10;     Prints cities by region JSON.;;d1,64;;b1,0;;m">
</treenode>
<treenode node="actionLocationByAreaJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;83;2;86;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionLocationByAreaJSON()&#10;&#10;Description&#10;     Prints locations by area JSON.;;d1,84;;b1,0;;m">
</treenode>
<treenode node="actionLocationByCityJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;93;2;96;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionLocationByCityJSON()&#10;&#10;Description&#10;     Prints locations by city JSON.;;d1,94;;b1,0;;m">
</treenode>
<treenode node="actionLocationByRegionJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;73;2;76;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionLocationByRegionJSON()&#10;&#10;Description&#10;     Prints locations by region JSON.;;d1,74;;b1,0;;m">
</treenode>
<treenode node="actionRegionAllJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;33;2;36;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionRegionAllJSON()&#10;&#10;Description&#10;     Prints all regions JSON.;;d1,34;;b1,0;;m">
</treenode>
<treenode node="actionStreetByCityJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;113;2;116;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionStreetByCityJSON()&#10;&#10;Description&#10;     Prints streets by city JSON.;;d1,114;;b1,0;;m">
</treenode>
<treenode node="actionStreetByLocationJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;123;2;126;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionStreetByLocationJSON()&#10;&#10;Description&#10;     Prints streets by location JSON.;;d1,124;;b1,0;;m">
</treenode>
<treenode node="actionStreetByRegionJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Kladr.php;f8;103;2;106;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionStreetByRegionJSON()&#10;&#10;Description&#10;     Prints streets by region JSON.;;d1,104;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_Login;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Login.php;f0;8;1;70;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Login.php;f0;8;1;70;;;;vpos;;vController;;c;;r;;d0,9;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;16;2;20;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;16;2;20;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_.php;f8;16;2;20;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Login.php;f8;16;2;20;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Login.php;f8;16;2;20;;;;vpos;;v;;r;;d1,17;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;65;2;69;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;65;2;69;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_.php;f8;65;2;69;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Login.php;f8;65;2;69;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Login.php;f8;65;2;69;;;;vpos;;v;;r;;d1,66;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;27;2;33;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;27;2;33;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_.php;f8;27;2;33;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Login.php;f8;27;2;33;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Login.php;f8;27;2;33;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays login page.;;d1,28;;b1,0;;m">
</treenode>
<treenode node="actionLogin;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;51;2;63;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;51;2;63;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_.php;f8;51;2;63;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Login.php;f8;51;2;63;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Login.php;f8;51;2;63;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionLogin()&#10;&#10;Description&#10;     Logs user in.;;d1,52;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\NewFile.php;f8;40;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\NewFile.php;f8;40;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_.php;f8;40;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Login.php;f8;40;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Login.php;f8;40;2;44;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets login page.;;d1,41;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_Main;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f0;9;1;90;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f0;12;1;138;;;;vpos;;vController;;c;;r;;d0,13;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f8;15;2;19;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f8;20;2;24;;;;vpos;;v;;r;;d1,21;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f8;85;2;89;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f8;133;2;137;;;;vpos;;v;;r;;d1,134;;b1,0;;m">
</treenode>
<treenode node="actionApplication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f1;118;2;121;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionApplication()&#10;&#10;Description&#10;     Calls to application.;;d1,119;;b0,0;;m">
</treenode>
<treenode node="actionDictManager;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f1;50;2;53;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionDictManager() : void&#10;&#10;Description&#10;     Calls to dictionary manager.;;d1,51;;b0,0;;m">
</treenode>
<treenode node="actionDocseduc;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f1;88;2;91;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDocseduc()&#10;&#10;Description&#10;     Calls to education docs.;;d1,89;;b0,0;;m">
</treenode>
<treenode node="actionEduclevelsDoctypes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f1;60;2;63;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionEduclevelsDoctypes() : void&#10;&#10;Description&#10;     Calls to educlevels doctypes.;;d1,61;;b0,0;;m">
</treenode>
<treenode node="actionEductypesDoctypes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f1;70;2;73;;;;vpos;;vvoid;;r&#10;Definition&#10;    actionEductypesDoctypes() : void&#10;&#10;Description&#10;     Calls to eductypes doctypes.;;d1,71;;b0,0;;m">
</treenode>
<treenode node="actionEge;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f1;98;2;101;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionEge()&#10;&#10;Description&#10;     Calls to ege.;;d1,99;;b0,0;;m">
</treenode>
<treenode node="actionHome;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f1;55;2;71;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionHome()&#10;&#10;Description&#10;     Returns home.;;d1,56;;b0,0;;m">
</treenode>
<treenode node="actionIndAchievs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f1;108;2;111;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndAchievs()&#10;&#10;Description&#10;     Calls to individual achievments.;;d1,109;;b0,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f1;26;2;43;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f1;31;2;48;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays main page.;;d1,32;;b0,0;;m">
</treenode>
<treenode node="actionLogout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\controllers\Controller_Main.php;f8;80;2;83;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f8;128;2;131;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionLogout()&#10;&#10;Description&#10;     Logs user out.;;d1,129;;b1,0;;m">
</treenode>
<treenode node="actionResume;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Main.php;f1;78;2;81;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionResume()&#10;&#10;Description&#10;     Calls to resume.;;d1,79;;b0,0;;m">
</treenode>
</treenode>
<treenode node="Controller_ResetPwd;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwd.php;f0;8;1;99;;;;vpos;;vController;;c;;r;;d0,9;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwd.php;f8;16;2;20;;;;vpos;;v;;r;;d1,17;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwd.php;f8;94;2;98;;;;vpos;;v;;r;;d1,95;;b1,0;;m">
</treenode>
<treenode node="actionCheckResetPwd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwd.php;f8;79;2;92;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionCheckResetPwd()&#10;&#10;Description&#10;     Check reset password token.;;d1,80;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwd.php;f8;27;2;36;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays reset password page.;;d1,28;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwd.php;f8;43;2;47;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets reset password page.;;d1,44;;b1,0;;m">
</treenode>
<treenode node="actionResetPwd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwd.php;f8;54;2;72;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionResetPwd()&#10;&#10;Description&#10;     Resets user password.;;d1,55;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_ResetPwdRequest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwdRequest.php;f0;9;1;71;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwdRequest.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwdRequest.php;f8;66;2;70;;;;vpos;;v;;r;;d1,67;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwdRequest.php;f8;28;2;34;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays reset password request page.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwdRequest.php;f8;41;2;45;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets reset password request page.;;d1,42;;b1,0;;m">
</treenode>
<treenode node="actionSendEmail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_ResetPwdRequest.php;f8;52;2;64;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSendEmail()&#10;&#10;Description&#10;     Sends email reset password request.;;d1,53;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_Resume;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Resume.php;f0;12;1;166;;;;vpos;;vController;;c;;r;;d0,13;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Resume.php;f8;21;2;27;;;;vpos;;v;;r;;d1,22;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Resume.php;f8;160;2;165;;;;vpos;;v;;r;;d1,161;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Resume.php;f8;34;2;70;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays resume page.;;d1,35;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Resume.php;f8;77;2;92;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets resume page.;;d1,78;;b1,0;;m">
</treenode>
<treenode node="actionResume;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Resume.php;f8;99;2;133;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionResume()&#10;&#10;Description&#10;     Makes resume changes.;;d1,100;;b1,0;;m">
</treenode>
<treenode node="actionSend;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Resume.php;f8;140;2;158;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSend()&#10;&#10;Description&#10;     Sends resume.;;d1,141;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_Scans;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Scans.php;f0;9;1;114;;;;vpos;;vController;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Scans.php;f8;17;2;21;;;;vpos;;v;;r;;d1,18;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Scans.php;f8;109;2;113;;;;vpos;;v;;r;;d1,110;;b1,0;;m">
</treenode>
<treenode node="actionDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Scans.php;f8;90;2;107;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDelete()&#10;&#10;Description&#10;     Deletes scan.;;d1,91;;b1,0;;m">
</treenode>
<treenode node="actionDeleteConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Scans.php;f8;56;2;83;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionDeleteConfirm()&#10;&#10;Description&#10;     Displays scan delete confirmation page.;;d1,57;;b1,0;;m">
</treenode>
<treenode node="actionShow;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Scans.php;f8;28;2;49;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionShow()&#10;&#10;Description&#10;     Shows scan.;;d1,29;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Controller_Signup;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Signup.php;f0;10;1;111;;;;vpos;;vController;;c;;r;;d0,11;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Signup.php;f8;18;2;22;;;;vpos;;v;;r;;d1,19;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Signup.php;f8;106;2;110;;;;vpos;;v;;r;;d1,107;;b1,0;;m">
</treenode>
<treenode node="actionActivation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Signup.php;f8;87;2;104;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionActivation()&#10;&#10;Description&#10;     Activates user account.;;d1,88;;b1,0;;m">
</treenode>
<treenode node="actionCaptcha;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Signup.php;f8;43;2;47;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionCaptcha()&#10;&#10;Description&#10;     Refreshes CAPTCHA.;;d1,44;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Signup.php;f8;29;2;36;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays signup page.;;d1,30;;b1,0;;m">
</treenode>
<treenode node="actionReset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Signup.php;f8;54;2;58;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionReset()&#10;&#10;Description&#10;     Resets signup page.;;d1,55;;b1,0;;m">
</treenode>
<treenode node="actionSignup;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\controllers\Controller_Signup.php;f8;65;2;80;;;;vpos;;vmixed;;r&#10;Definition&#10;    actionSignup()&#10;&#10;Description&#10;     Signs user up.;;d1,66;;b1,0;;m">
</treenode>
</treenode>
<treenode node="DataFields;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\DataFields.php;f0;14;1;165;;;;vpos;;vArrayObject;;c;;r&#10;Definition&#10;    class DataFields extends ArrayObject&#10;&#10;Description&#10;     This class is an array representation of the dump_data_fields output of pdftk.;;d0,15;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\DataFields.php;f11;26;5;32;;;;vpos;;v;;r&#10;Definition&#10;    __construct($input = null, $flags = 0, $iterator_class = &quot;ArrayIterator&quot;)&#10;&#10;Description&#10;     DataFields constructor.&#10;&#10;Parameters:&#10;    string $input&#10;    int $flags&#10;    string $iterator_class;;d4,27;;b1,0;;mstring $input;;pint $flags;;pstring $iterator_class;;p">
</treenode>
<treenode node="__toArray;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\DataFields.php;f11;45;5;48;;;;vpos;;varray;;r&#10;Definition&#10;    __toArray()&#10;&#10;Description&#10;     ;;d4,46;;b1,0;;m">
</treenode>
<treenode node="__toString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\DataFields.php;f11;37;5;40;;;;vpos;;vstring;;r&#10;Definition&#10;    __toString()&#10;&#10;Description&#10;     ;;d4,38;;b1,0;;m">
</treenode>
<treenode node="lineContinues;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\DataFields.php;f21;158;5;164;;;;vpos;;vbool;;r&#10;Definition&#10;    lineContinues($lines, $n, $key)&#10;&#10;Description&#10;     Checks whether the value for the given line number continues on the next line, i.e. is a multiline string.&#10;&#10;Parameters:&#10;    array $lines - all lines of the block&#10;    int $n - the 0-based index of the current line&#10;    string - the key for the value&#10;&#10;Return:&#10;   whether the value continues in line n + 1;;d4,159;;b2,5;;marray $lines;;pint $n;;pstring;;p">
</treenode>
<treenode node="parse;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\DataFields.php;f18;80;5;92;;;;vpos;;varray;;r&#10;Definition&#10;    parse($input)&#10;&#10;Description&#10;     Parse the output of dump_data_fields into an array.&#10;&#10;Parameters:&#10;     $input - the string to parse&#10;&#10;Return:&#10;   the parsed result;;d4,81;;b1,5;;m $input;;p">
</treenode>
<treenode node="parseBlock;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\DataFields.php;f18;107;5;135;;;;vpos;;varray;;r&#10;Definition&#10;    parseBlock($block)&#10;&#10;Description&#10;     Parses a block of this form:&#10;&#10;Parameters:&#10;    string $block - the block to parse&#10;&#10;Return:&#10;   the parsed block values indexed by respective names;;d4,108;;b1,5;;mstring $block;;p">
</treenode>
</treenode>
<treenode node="DataFieldsTest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\DataFieldsTest.php;f0;3;1;122;;;;vpos;;vTestCase;;c;;r;;d0,4;;b0,0;;m">
<treenode node="testDataFieldParsing;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\DataFieldsTest.php;f11;5;5;9;;;;vpos;;v;;r;;d4,6;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Db_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f0;6;1;328;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
<treenode node="__clone;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f12;37;5;39;;;;vpos;;vvoid;;r&#10;Definition&#10;    __clone()&#10;&#10;Description&#10;     Private clone method to prevent cloning of the instance of the Db_Helper instance.;;d4,38;;b3,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f11;18;2;29;;;;vpos;;vvoid;;r&#10;Definition&#10;    __construct()&#10;&#10;Description&#10;     Protected constructor to prevent creating a new instance of the Db_Helper via the &apos;new&apos; operator from outside of this class.;;d1,19;;b2,0;;m">
</treenode>
<treenode node="__wakeup;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f12;47;5;49;;;;vpos;;vvoid;;r&#10;Definition&#10;    __wakeup()&#10;&#10;Description&#10;     Private unserialize method to prevent unserializing of the Db_Helper instance.;;d4,48;;b3,0;;m">
</treenode>
<treenode node="checkHash;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f8;324;2;327;;;;vpos;;vboolean;;r&#10;Definition&#10;    checkHash($pwd, $hash)&#10;&#10;Description&#10;     Verifies string to HASH.;;d1,325;;b1,0;;mpwd;;phash;;p">
</treenode>
<treenode node="getHash;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f8;314;2;317;;;;vpos;;vstring;;r&#10;Definition&#10;    getHash($str)&#10;&#10;Description&#10;     Gets string HASH.;;d1,315;;b1,0;;mstr;;p">
</treenode>
<treenode node="getInstance;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f18;58;5;65;;;;vpos;;vDb_Helper;;r&#10;Definition&#10;    getInstance()&#10;&#10;Description&#10;     Returns the Db_Helper instance.&#10;&#10;Return:&#10;   instance;;d4,59;;b1,5;;m">
</treenode>
<treenode node="prepareInsert;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f8;72;2;115;;;;vpos;;varray;;r&#10;Definition&#10;    prepareInsert($table_name, $rules)&#10;&#10;Description&#10;     Prepares insert query.;;d1,73;;b1,0;;mtable_name;;prules;;p">
</treenode>
<treenode node="prepareUpdate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f8;122;2;149;;;;vpos;;varray;;r&#10;Definition&#10;    prepareUpdate($table_name, $rules)&#10;&#10;Description&#10;     Prepares update query.;;d1,123;;b1,0;;mtable_name;;prules;;p">
</treenode>
<treenode node="rowDelete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f8;288;2;307;;;;vpos;;vinteger;;r&#10;Definition&#10;    rowDelete($tables, $conds = null, $params = null)&#10;&#10;Description&#10;     Deletes table row.;;d1,289;;b1,0;;mtables;;pconds;;pparams;;p">
</treenode>
<treenode node="rowInsert;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f8;216;2;245;;;;vpos;;vinteger;;r&#10;Definition&#10;    rowInsert($fields, $tables, $conds, $params)&#10;&#10;Description&#10;     Inserts table row.;;d1,217;;b1,0;;mfields;;ptables;;pconds;;pparams;;p">
</treenode>
<treenode node="rowSelectAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f8;184;2;209;;;;vpos;;varray;;r&#10;Definition&#10;    rowSelectAll($fields, $tables, $conds = null, $params = null, $order = null, $desc = 0, $limit = 0)&#10;&#10;Description&#10;     Gets table row.;;d1,185;;b1,0;;mfields;;ptables;;pconds;;pparams;;porder;;pdesc;;plimit;;p">
</treenode>
<treenode node="rowSelectOne;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f8;156;2;177;;;;vpos;;varray;;r&#10;Definition&#10;    rowSelectOne($fields, $tables, $conds = null, $params = null)&#10;&#10;Description&#10;     Gets table row.;;d1,157;;b1,0;;mfields;;ptables;;pconds;;pparams;;p">
</treenode>
<treenode node="rowUpdate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\db_helper.php;f8;252;2;281;;;;vpos;;vboolean;;r&#10;Definition&#10;    rowUpdate($tables, $fields, $params, $conds = null)&#10;&#10;Description&#10;     Updates table row.;;d1,253;;b1,0;;mtables;;pfields;;pparams;;pconds;;p">
</treenode>
</treenode>
<treenode node="Encode_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f0;4;1;33;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="utf8ToLatin1;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;17;2;32;;;;vpos;;vstring;;r&#10;Definition&#10;    utf8ToLatin1($string)&#10;&#10;Description&#10;     Converts UTF-8 encoded string to Latin 1 (ISO-8859-1).&#10;&#10;Parameters:&#10;     $string;;d1,18;;b1,5;;m $string;;p">
</treenode>
</treenode>
<treenode node="Exception;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\Exception.php;f0;27;1;38;;;;vpos;;vException;;c;;r&#10;Definition&#10;    class Exception extends \Exception&#10;&#10;Description&#10;     PHPMailer exception handler.;;d0,28;;b0,0;;m">
<treenode node="errorMessage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\Exception.php;f11;34;5;37;;;;vpos;;vstring;;r&#10;Definition&#10;    errorMessage()&#10;&#10;Description&#10;     Prettify error message output.;;d4,35;;b1,0;;m">
</treenode>
</treenode>
<treenode node="FdfFile;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\FdfFile.php;f0;14;1;81;;;;vpos;;vFile;;c;;r&#10;Definition&#10;    class FdfFile extends File&#10;&#10;Description&#10;     FdfFile;;d0,15;;b0,0;;m">
<treenode node="FDF_FOOTER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\FdfFile.php;f9;23;20;23;;;;vpos;;v;;r&lt;&lt;&lt;FDF&#10;] &gt;&gt; &gt;&gt;&#10;endobj&#10;trailer&#10;&lt;&lt;/Root 1 0 R&gt;&gt;&#10;%%EOF&#10;FDF;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FDF_HEADER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\FdfFile.php;f9;17;20;17;;;;vpos;;v;;r&lt;&lt;&lt;FDF&#10;%FDF-1.2&#10;1 0 obj&lt;&lt;/FDF&lt;&lt; /Fields[&#10;FDF;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\FdfFile.php;f11;40;5;80;;;;vpos;;v;;r&#10;Definition&#10;    __construct($data, $suffix = null, $prefix = null, $directory = null, $encoding = &apos;UTF-8&apos;)&#10;&#10;Description&#10;     Constructor&#10;&#10;Parameters:&#10;    array $data - the form data as name =&gt; value&#10;    string|null $suffix - the optional suffix for the tmp file&#10;    string|null $suffix - the optional prefix for the tmp file&#10;    string|null $directory - directory where the file should be created&#10;    string|null $encoding - of the data;;d4,41;;b1,0;;marray $data;;pstring|null $suffix;;pstring|null $suffix;;pstring|null $directory;;pstring|null $encoding;;p">
</treenode>
</treenode>
<treenode node="FdfFileTest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\FdfFileTest.php;f0;3;1;24;;;;vpos;;vTestCase;;c;;r;;d0,4;;b0,0;;m">
<treenode node="testFdfFileCreation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\FdfFileTest.php;f11;5;5;23;;;;vpos;;v;;r;;d42,5;;b1,0;;m">
</treenode>
</treenode>
<treenode node="File;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\src\File.php;f0;12;1;129;;;;vpos;;v;;r&#10;Definition&#10;    class File&#10;&#10;Description&#10;     File;;d0,13;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\src\File.php;f11;33;5;50;;;;vpos;;v;;r&#10;Definition&#10;    __construct($content, $suffix = null, $prefix = null, $directory = null)&#10;&#10;Description&#10;     Constructor&#10;&#10;Parameters:&#10;    string $content - the tmp file content&#10;    string|null $suffix - the optional suffix for the tmp file&#10;    string|null $prefix - the optional prefix for the tmp file&#10;    string|null $directory - directory where the file should be created;;d4,34;;b1,0;;mstring $content;;pstring|null $suffix;;pstring|null $prefix;;pstring|null $directory;;p">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\src\File.php;f11;55;5;60;;;;vpos;;v;;r&#10;Definition&#10;    __destruct()&#10;&#10;Description&#10;     Delete tmp file on shutdown if `$delete` is `true`;;d4,56;;b1,0;;m">
</treenode>
<treenode node="__toString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\src\File.php;f11;125;5;128;;;;vpos;;vstring;;r&#10;Definition&#10;    __toString()&#10;&#10;Description&#10;      the full file name&#10;&#10;Return:&#10;   the full file name;;d4,126;;b1,0;;m">
</treenode>
<treenode node="getFileName;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\src\File.php;f11;103;5;106;;;;vpos;;vstring;;r&#10;Definition&#10;    getFileName()&#10;&#10;Description&#10;      the full file name&#10;&#10;Return:&#10;   the full file name;;d4,104;;b1,0;;m">
</treenode>
<treenode node="getTempDir;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\src\File.php;f18;111;5;120;;;;vpos;;vstring;;r&#10;Definition&#10;    getTempDir()&#10;&#10;Description&#10;      the path to the temp directory&#10;&#10;Return:&#10;   the path to the temp directory;;d4,112;;b1,5;;m">
</treenode>
<treenode node="saveAs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\src\File.php;f11;95;5;98;;;;vpos;;vbool;;r&#10;Definition&#10;    saveAs($name)&#10;&#10;Description&#10;      the name to save the file as&#10;&#10;Parameters:&#10;    string $name - the name to save the file as&#10;&#10;Return:&#10;   whether the file could be saved;;d4,96;;b1,0;;mstring $name;;p">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\src\File.php;f11;69;5;89;;;;vpos;;v;;r&#10;Definition&#10;    send($filename = null, $contentType, $inline = false)&#10;&#10;Description&#10;     Send tmp file to client, either inline or as download&#10;&#10;Parameters:&#10;    string|null $filename - the filename to send&#10;    string $contentType - the Content-Type header&#10;    bool $inline - whether to force inline display of the file, even if filename is present;;d4,70;;b1,0;;mstring|null $filename;;pstring $contentType;;pbool $inline;;p">
</treenode>
</treenode>
<treenode node="Files_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\files_helper.php;f0;4;1;52;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="getExtension;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\files_helper.php;f15;15;2;20;;;;vpos;;vstring;;r&#10;Definition&#10;    getExtension($file_name)&#10;&#10;Description&#10;     Gets file extension.;;d1,16;;b1,5;;mfile_name;;p">
</treenode>
<treenode node="getSize;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\files_helper.php;f15;27;2;51;;;;vpos;;vint;;r&#10;Definition&#10;    getSize($file_size, $size)&#10;&#10;Description&#10;     Gets file size.;;d1,28;;b1,5;;mfile_size;;psize;;p">
</treenode>
</treenode>
<treenode node="FileTest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\tests\FileTest.php;f0;3;1;93;;;;vpos;;vTestCase;;c;;r;;d0,4;;b0,0;;m">
<treenode node="testCanCastToFileName;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\tests\FileTest.php;f11;85;5;92;;;;vpos;;v;;r;;d4,86;;b1,0;;m">
</treenode>
<treenode node="testCanCreateFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\tests\FileTest.php;f11;5;5;16;;;;vpos;;v;;r;;d4,6;;b1,0;;m">
</treenode>
<treenode node="testCanCreateFileInDirectory;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\tests\FileTest.php;f11;37;5;48;;;;vpos;;v;;r;;d4,38;;b1,0;;m">
</treenode>
<treenode node="testCanCreateFileWithPrefix;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\tests\FileTest.php;f11;28;5;35;;;;vpos;;v;;r;;d4,29;;b1,0;;m">
</treenode>
<treenode node="testCanCreateFileWithSuffix;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\tests\FileTest.php;f11;18;5;26;;;;vpos;;v;;r;;d4,19;;b1,0;;m">
</treenode>
<treenode node="testCanKeepTempFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\tests\FileTest.php;f11;68;5;83;;;;vpos;;v;;r;;d4,69;;b1,0;;m">
</treenode>
<treenode node="testCanSaveFileAs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\mikehaertl\php-tmpfile\tests\FileTest.php;f11;50;5;66;;;;vpos;;v;;r;;d4,51;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Form_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f0;24;1;728;;;;vpos;;v;;r;;d0,25;;b0,0;;m">
<treenode node="setFormBegin;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;217;2;225;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormBegin($controller, $action, $id, $legend, $home = 0, $logo = null)&#10;&#10;Description&#10;     Creates form begin.;;d1,218;;b1,5;;mcontroller;;paction;;pid;;plegend;;phome;;plogo;;p">
</treenode>
<treenode node="setFormCaptcha;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;660;2;674;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormCaptcha($rules) : string&#10;&#10;Description&#10;     Creates form CAPTCHA.;;d1,661;;b1,5;;mrules;;p">
</treenode>
<treenode node="setFormCheckbox;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;350;2;363;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormCheckbox($rules) : string&#10;&#10;Description&#10;     Creates form checkbox.;;d1,351;;b1,5;;mrules;;p">
</treenode>
<treenode node="setFormEnd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;724;2;727;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormEnd() : string&#10;&#10;Description&#10;     Creates form end.;;d1,725;;b1,5;;m">
</treenode>
<treenode node="setFormFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f18;518;2;559;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormFile($rules) : string&#10;&#10;Description&#10;     Creates form file.;;d4,519;;b1,5;;mrules;;p">
</treenode>
<treenode node="setFormFileListDB;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f18;583;2;646;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormFileListDB($rules) : string&#10;&#10;Description&#10;     Creates form file list based on SQL-query.;;d4,584;;b1,5;;mrules;;p">
</treenode>
<treenode node="setFormHeaderSub;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;681;2;684;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormHeaderSub($header)&#10;&#10;Description&#10;     Creates form sub header.;;d1,682;;b1,5;;mheader;;p">
</treenode>
<treenode node="setFormInput;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;245;2;266;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormInput($rules) : string&#10;&#10;Description&#10;     Creates form input.;;d1,246;;b1,5;;mrules;;p">
</treenode>
<treenode node="setFormInputText;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;278;2;290;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormInputText($rules) : string&#10;&#10;Description&#10;     Creates form input text.;;d1,279;;b1,5;;mrules;;p">
</treenode>
<treenode node="setFormLabelStyle;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;696;2;717;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormLabelStyle($required, $required_style, $value) : array&#10;&#10;Description&#10;     Creates form label style.;;d1,697;;b1,5;;mrequired;;prequired_style;;pvalue;;p">
</treenode>
<treenode node="setFormRadio;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;308;2;335;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormRadio($rules) : string&#10;&#10;Description&#10;     Creates form radio.;;d1,309;;b1,5;;mrules;;p">
</treenode>
<treenode node="setFormSelectListBlank;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;374;2;386;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormSelectListBlank($rules) : string&#10;&#10;Description&#10;     Creates form select list blank.;;d1,375;;b1,5;;mrules;;p">
</treenode>
<treenode node="setFormSelectListDB;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;409;2;450;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormSelectListDB($rules) : string&#10;&#10;Description&#10;     Creates form select list based on SQL-query.;;d1,410;;b1,5;;mrules;;p">
</treenode>
<treenode node="setFormSelectListKladr;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f15;466;2;498;;;;vpos;;vstring;;r&#10;Definition&#10;    setFormSelectListKladr($rules) : string&#10;&#10;Description&#10;     Creates form select list KLADR.;;d1,467;;b1,5;;mrules;;p">
</treenode>
<treenode node="validate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\form_helper.php;f8;49;2;210;;;;vpos;;vboolean;;r&#10;Definition&#10;    validate($form, $rules)&#10;&#10;Description&#10;     Validates form.;;d1,50;;b1,0;;mform;;prules;;p">
</treenode>
</treenode>
<treenode node="HTML_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f0;6;1;246;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
<treenode node="setAlert;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;210;2;217;;;;vpos;;vstring;;r&#10;Definition&#10;    setAlert($msg, $class)&#10;&#10;Description&#10;     Creates alert.;;d1,211;;b1,5;;mmsg;;pclass;;p">
</treenode>
<treenode node="setButton;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;59;2;66;;;;vpos;;vstring;;r&#10;Definition&#10;    setButton($class, $id, $text)&#10;&#10;Description&#10;     Creates button.;;d1,60;;b1,5;;mclass;;pid;;ptext;;p">
</treenode>
<treenode node="setGridDB;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;141;2;203;;;;vpos;;vstring;;r&#10;Definition&#10;    setGridDB($rules)&#10;&#10;Description&#10;     Creates GRID from database.;;d1,142;;b1,5;;mrules;;p">
</treenode>
<treenode node="setHrefButton;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;87;2;94;;;;vpos;;vstring;;r&#10;Definition&#10;    setHrefButton($controller, $action, $class, $text)&#10;&#10;Description&#10;     Creates HREF as button.;;d1,88;;b1,5;;mcontroller;;paction;;pclass;;ptext;;p">
</treenode>
<treenode node="setHrefButtonIcon;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;101;2;108;;;;vpos;;vstring;;r&#10;Definition&#10;    setHrefButtonIcon($controller, $action, $class, $icon, $tooltip = null)&#10;&#10;Description&#10;     Creates HREF as icon button.;;d1,102;;b1,5;;mcontroller;;paction;;pclass;;picon;;ptooltip;;p">
</treenode>
<treenode node="setHrefText;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;73;2;80;;;;vpos;;vstring;;r&#10;Definition&#10;    setHrefText($controller, $action, $text)&#10;&#10;Description&#10;     Creates HREF as text.;;d1,74;;b1,5;;mcontroller;;paction;;ptext;;p">
</treenode>
<treenode node="setImageLOB;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;115;2;122;;;;vpos;;vstring;;r&#10;Definition&#10;    setImageLOB($type, $lob, $width = null, $height = null)&#10;&#10;Description&#10;     Creates image.;;d1,116;;b1,5;;mtype;;plob;;pwidth;;pheight;;p">
</treenode>
<treenode node="setInput;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;27;2;38;;;;vpos;;vstring;;r&#10;Definition&#10;    setInput($type, $class, $control, $help, $placeholder, $value)&#10;&#10;Description&#10;     Creates input field.;;d1,28;;b1,5;;mtype;;pclass;;pcontrol;;phelp;;pplaceholder;;pvalue;;p">
</treenode>
<treenode node="setInvalidFeedback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;224;2;231;;;;vpos;;vstring;;r&#10;Definition&#10;    setInvalidFeedback($err)&#10;&#10;Description&#10;     Creates invalid feedback.;;d1,225;;b1,5;;merr;;p">
</treenode>
<treenode node="setLabel;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;17;2;20;;;;vpos;;vstring;;r&#10;Definition&#10;    setLabel($class, $control, $label)&#10;&#10;Description&#10;     Creates label.;;d1,18;;b1,5;;mclass;;pcontrol;;plabel;;p">
</treenode>
<treenode node="setSubmit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;45;2;52;;;;vpos;;vstring;;r&#10;Definition&#10;    setSubmit($class, $id, $text)&#10;&#10;Description&#10;     Creates submit button.;;d1,46;;b1,5;;mclass;;pid;;ptext;;p">
</treenode>
<treenode node="setValidFeedback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\html_helper.php;f15;238;2;245;;;;vpos;;vstring;;r&#10;Definition&#10;    setValidFeedback($err, $msg)&#10;&#10;Description&#10;     Creates valid feedback.;;d1,239;;b1,5;;merr;;pmsg;;p">
</treenode>
</treenode>
<treenode node="Mail_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\mail_helper.php;f0;7;1;71;;;;vpos;;v;;r;;d0,8;;b0,0;;m">
<treenode node="sendEmail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\mail_helper.php;f8;18;2;70;;;;vpos;;vstring;;r&#10;Definition&#10;    sendEmail($to, $to_name, $subject, $body, $ccs = null, $bccs = null, $body_plain = null, $attachment = null, $attachment_name = null)&#10;&#10;Description&#10;     Sends email.;;d1,19;;b1,0;;mto;;pto_name;;psubject;;pbody;;pccs;;pbccs;;pbody_plain;;pattachment;;pattachment_name;;p">
</treenode>
</treenode>
<treenode node="Model;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\model.php;f0;9;1;231;;;;vpos;;v;;r;;d0,10;;b0,0;;m">
<treenode node="getForm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\model.php;f8;27;2;91;;;;vpos;;varray;;r&#10;Definition&#10;    getForm($rules, $post, $files = null)&#10;&#10;Description&#10;     Gets form data.;;d1,28;;b1,0;;mrules;;ppost;;pfiles;;p">
</treenode>
<treenode node="resetForm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\model.php;f8;159;2;184;;;;vpos;;varray;;r&#10;Definition&#10;    resetForm($vars, $form, $rules)&#10;&#10;Description&#10;     Resets form data.;;d1,160;;b1,0;;mvars;;pform;;prules;;p">
</treenode>
<treenode node="setForm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\model.php;f8;114;2;152;;;;vpos;;varray;;r&#10;Definition&#10;    setForm($rules, $row)&#10;&#10;Description&#10;     Sets form data.;;d1,115;;b1,0;;mrules;;prow;;p">
</treenode>
<treenode node="setFormError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\model.php;f8;224;2;230;;;;vpos;;varray;;r&#10;Definition&#10;    setFormError($form, $msg)&#10;&#10;Description&#10;     Sets form error.;;d1,225;;b1,0;;mform;;pmsg;;p">
</treenode>
<treenode node="setFormErrorField;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\model.php;f8;191;2;204;;;;vpos;;varray;;r&#10;Definition&#10;    setFormErrorField($form, $field, $msg, $global = 0)&#10;&#10;Description&#10;     Sets form field error.;;d1,192;;b1,0;;mform;;pfield;;pmsg;;pglobal;;p">
</treenode>
<treenode node="setFormErrorFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\model.php;f8;211;2;217;;;;vpos;;varray;;r&#10;Definition&#10;    setFormErrorFile($form, $file, $msg)&#10;&#10;Description&#10;     Sets form file error.;;d1,212;;b1,0;;mform;;pfile;;pmsg;;p">
</treenode>
<treenode node="validateForm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\model.php;f8;98;2;107;;;;vpos;;varrau;;r&#10;Definition&#10;    validateForm($form, $rules)&#10;&#10;Description&#10;     Validates form data.;;d1,99;;b1,0;;mform;;prules;;p">
</treenode>
</treenode>
<treenode node="Model_Address;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_.php;f0;11;1;57;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f0;15;1;249;;;;vpos;;vDb_Helper;;c;;r;;d0,16;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f6;21;17;21;;;;vpos;;v;;r&apos;address&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_FACT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_.php;f6;18;16;18;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_REG;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_.php;f6;17;15;17;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;14;15;14;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f6;23;15;23;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_RES;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;15;15;15;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f6;24;15;24;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_.php;f8;29;2;32;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;36;2;39;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f8;52;2;55;;;;vpos;;v;;r;;d1,53;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_.php;f8;53;2;56;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;198;2;201;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f8;245;2;248;;;;vpos;;v;;r;;d1,246;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;191;2;196;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f8;238;2;243;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all address data.;;d1,239;;b1,0;;m">
</treenode>
<treenode node="getByResumeType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;165;2;171;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f8;211;2;217;;;;vpos;;varray;;r&#10;Definition&#10;    getByResumeType()&#10;&#10;Description&#10;     Gets address by resume/type.;;d1,212;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;46;2;158;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f8;62;2;204;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Address rules.;;d1,63;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_.php;f8;39;2;51;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;178;2;184;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Address.php;f8;224;2;231;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves address data to database.;;d1,225;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_AdmissionCampaign;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_AdmissionCampaigns.php;f0;7;1;36;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_AdmissionCampaign.php;f0;7;1;39;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f0;6;1;277;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f6;12;17;12;;;;vpos;;v;;r&apos;admission_campaign&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;24;2;27;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;15;2;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_AdmissionCampaigns.php;f8;15;2;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictEductypes.php;f8;15;2;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;26;2;29;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_AdmissionCampaign.php;f8;15;2;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;25;2;28;;;;vpos;;v;;r;;d1,26;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;221;2;224;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;277;2;280;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;273;2;276;;;;vpos;;v;;r;;d1,274;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;121;2;128;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;177;2;184;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;173;2;180;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all admission campaign data.;;d1,174;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;135;2;138;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;191;2;194;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;187;2;190;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all admission campaigns.;;d1,188;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;87;2;90;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;89;2;92;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;82;2;85;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all admission campaigns.;;d1,83;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;125;2;131;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;118;2;124;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets admission campaign by code.;;d1,119;;b1,0;;m">
</treenode>
<treenode node="getById;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;112;2;118;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;105;2;111;;;;vpos;;varray;;r&#10;Definition&#10;    getById()&#10;&#10;Description&#10;     Gets admission campaign by ID.;;d1,106;;b1,0;;m">
</treenode>
<treenode node="getByUniversity;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;138;2;159;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;131;2;155;;;;vpos;;varray;;r&#10;Definition&#10;    getByUniversity()&#10;&#10;Description&#10;     Gets admission campaigns by university.;;d1,132;;b1,0;;m">
</treenode>
<treenode node="getByUniversityJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;25;2;34;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_AdmissionCampaigns.php;f8;25;2;35;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictEductypes.php;f8;25;2;35;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_AdmissionCampaign.php;f8;25;2;38;;;;vpos;;vJSON;;r&#10;Definition&#10;    getByUniversityJSON($university) : string&#10;&#10;Description&#10;     Gets admission campaigns by university JSON.;;d1,26;;b1,0;;muniversity;;p">
</treenode>
<treenode node="getOne;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;97;2;103;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;99;2;105;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;92;2;98;;;;vpos;;varray;;r&#10;Definition&#10;    getOne()&#10;&#10;Description&#10;     Gets one admission campaign.;;d1,93;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;145;2;219;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;201;2;275;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;197;2;271;;;;vpos;;varray;;r&#10;Definition&#10;    load($xml, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads admission campaigns.;;d1,198;;b1,0;;mxml;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;34;2;80;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;36;2;82;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;35;2;75;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Admission campaigns rules.;;d1,36;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;110;2;114;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;166;2;170;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_AdmissionCampaign.php;f8;162;2;166;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves admission campaign data to database.;;d1,163;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_Application;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f0;11;1;652;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Application.php;f0;17;1;220;;;;vpos;;vModel;;c;;r;;d0,18;;b0,0;;m">
<treenode node="STATUS_APPROVED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;30;25;30;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_APPROVED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;31;30;31;;;;vpos;;v;;r&apos;Принято&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_CHANGED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;36;24;36;;;;vpos;;v;;r5;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_CHANGED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;37;29;37;;;;vpos;;v;;r&apos;Изменено&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_CREATED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f6;26;21;26;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_CREATED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f6;27;26;27;;;;vpos;;v;;r&apos;Новое&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_RECALLED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;38;25;38;;;;vpos;;v;;r6;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_RECALLED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;39;30;39;;;;vpos;;v;;r&apos;Отозвано&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_REJECTED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;32;25;32;;;;vpos;;v;;r3;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_REJECTED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;33;30;33;;;;vpos;;v;;r&apos;Отклонено&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_SAVED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;34;22;34;;;;vpos;;v;;r4;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_SAVED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;35;27;35;;;;vpos;;v;;r&apos;Сохранено&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_SENDED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;28;23;28;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_SENDED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f9;29;28;29;;;;vpos;;v;;r&apos;Отправлено&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f6;17;17;17;;;;vpos;;v;;r&apos;application&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_CHANGE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f6;21;18;21;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_CHANGE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f6;22;23;22;;;;vpos;;v;;r&apos;Заявление на изменение документов&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_NEW;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f6;19;15;19;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_NEW_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f6;20;20;20;;;;vpos;;v;;r&apos;Заявление на приём документов&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_RECALL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f6;23;18;23;;;;vpos;;v;;r3;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_RECALL_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f6;24;23;24;;;;vpos;;v;;r&apos;Заявление на отзыв документов&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;62;2;65;;;;vpos;;v;;r;;d1,63;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;648;2;651;;;;vpos;;v;;r;;d1,649;;b1,0;;m">
</treenode>
<treenode node="changeActive;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;433;2;439;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeActive()&#10;&#10;Description&#10;     Changes application activity.;;d1,434;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;379;2;387;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all application data.;;d1,380;;b1,0;;m">
</treenode>
<treenode node="changeNumb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;394;2;400;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeNumb()&#10;&#10;Description&#10;     Changes application numb.;;d1,395;;b1,0;;m">
</treenode>
<treenode node="changeStatus;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;420;2;426;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeStatus()&#10;&#10;Description&#10;     Changes application status.;;d1,421;;b1,0;;m">
</treenode>
<treenode node="changeType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;407;2;413;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeType()&#10;&#10;Description&#10;     Changes application type.;;d1,408;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Application.php;f8;142;2;219;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks education document data.;;d1,143;;b1,0;;mform;;p">
</treenode>
<treenode node="checkCertificate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;632;2;646;;;;vpos;;vboolean;;r&#10;Definition&#10;    checkCertificate()&#10;&#10;Description&#10;     Checks certificate.;;d1,633;;b1,0;;m">
</treenode>
<treenode node="checkHighAfter;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;612;2;625;;;;vpos;;vboolean;;r&#10;Definition&#10;    checkHighAfter()&#10;&#10;Description&#10;     Checks high after.;;d1,613;;b1,0;;m">
</treenode>
<treenode node="checkMagistratureFirst;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;589;2;605;;;;vpos;;vboolean;;r&#10;Definition&#10;    checkMagistratureFirst()&#10;&#10;Description&#10;     Checks magistrature first.;;d1,590;;b1,0;;m">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;446;2;463;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes application.;;d1,447;;b1,0;;m">
</treenode>
<treenode node="copy;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;501;2;582;;;;vpos;;vinteger;;r&#10;Definition&#10;    copy($type = null)&#10;&#10;Description&#10;     Copies application.;;d1,502;;b1,0;;mtype;;p">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Application.php;f8;118;2;135;;;;vpos;;varray;;r&#10;Definition&#10;    delete($form)&#10;&#10;Description&#10;     Deletes application from database.;;d1,119;;b1,0;;mform;;p">
</treenode>
<treenode node="existsUserCampaign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;318;2;351;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsUserCampaign()&#10;&#10;Description&#10;     Checks if campaign exists for user.;;d1,319;;b1,0;;m">
</treenode>
<treenode node="generateNumb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;230;2;237;;;;vpos;;vstring;;r&#10;Definition&#10;    generateNumb()&#10;&#10;Description&#10;     Generates application numb.;;d1,231;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;269;2;272;;;;vpos;;varray;;r&#10;Definition&#10;    get()&#10;&#10;Description&#10;     Gets application by ID.;;d1,270;;b1,0;;m">
</treenode>
<treenode node="getByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;279;2;285;;;;vpos;;varray;;r&#10;Definition&#10;    getByUser()&#10;&#10;Description&#10;     Gets applications by user.;;d1,280;;b1,0;;m">
</treenode>
<treenode node="getByUserGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;244;2;262;;;;vpos;;varray;;r&#10;Definition&#10;    getByUserGrid()&#10;&#10;Description&#10;     Gets applications by user for GRID.;;d1,245;;b1,0;;m">
</treenode>
<treenode node="getSpec;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;292;2;311;;;;vpos;;varray;;r&#10;Definition&#10;    getSpec()&#10;&#10;Description&#10;     Gets application spec.;;d1,293;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;191;2;223;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Applications grid.;;d1,192;;b1,0;;m">
</treenode>
<treenode node="rollback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;470;2;494;;;;vpos;;vboolean;;r&#10;Definition&#10;    rollback()&#10;&#10;Description&#10;     Roolbacks application.;;d1,471;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;72;2;184;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Application.php;f8;28;2;65;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Application rules.;;d1,29;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Application.php;f8;358;2;372;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves application data to database.;;d1,359;;b1,0;;m">
</treenode>
<treenode node="showStatus;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Application.php;f15;91;2;111;;;;vpos;;vstring;;r&#10;Definition&#10;    showStatus($status)&#10;&#10;Description&#10;     Shows status.;;d1,92;;b1,5;;mstatus;;p">
</treenode>
<treenode node="showType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Application.php;f15;72;2;84;;;;vpos;;vstring;;r&#10;Definition&#10;    showType($type)&#10;&#10;Description&#10;     Shows type.;;d1,73;;b1,5;;mtype;;p">
</treenode>
</treenode>
<treenode node="Model_ApplicationAchievs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f0;6;1;165;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f6;12;17;12;;;;vpos;;v;;r&apos;application_achievs&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f8;22;2;25;;;;vpos;;v;;r;;d1,23;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f8;161;2;164;;;;vpos;;v;;r;;d1,162;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f8;140;2;147;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all application achievments data.;;d1,141;;b1,0;;m">
</treenode>
<treenode node="clearByApplication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f8;154;2;159;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearByApplication()&#10;&#10;Description&#10;     Removes application achievments by application.;;d1,155;;b1,0;;m">
</treenode>
<treenode node="getByApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f8;114;2;120;;;;vpos;;varray;;r&#10;Definition&#10;    getByApp()&#10;&#10;Description&#10;     Gets application achievments by application.;;d1,115;;b1,0;;m">
</treenode>
<treenode node="getGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f8;100;2;107;;;;vpos;;varray;;r&#10;Definition&#10;    getGrid()&#10;&#10;Description&#10;     Gets application achievments for GRID.;;d1,101;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f8;73;2;93;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Application achievments grid.;;d1,74;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f8;32;2;66;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Application achievments rules.;;d1,33;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationAchievs.php;f8;127;2;133;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves application achievments data to database.;;d1,128;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_ApplicationPlaces;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpecs.php;f0;9;1;79;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f0;6;1;635;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="FREE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f6;14;11;14;;;;vpos;;v;;r&apos;Бюджетная основа&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PAY;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f6;15;10;15;;;;vpos;;v;;r&apos;Полное возмещение затрат&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PURPOSE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f6;16;14;16;;;;vpos;;v;;r&apos;Целевой прием&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f6;12;17;12;;;;vpos;;v;;r&apos;application_places&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;23;2;26;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;27;2;30;;;;vpos;;v;;r;;d1,28;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;167;2;170;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;631;2;634;;;;vpos;;v;;r;;d1,632;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;146;2;153;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;504;2;511;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all application places data.;;d1,505;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpecs.php;f8;20;2;78;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;38;2;130;;;;vpos;;varray;;r&#10;Definition&#10;    check($post)&#10;&#10;Description&#10;     Checks application places data.;;d1,52;;b1,0;;mpost;;p">
</treenode>
<treenode node="checkPlaces;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f8;51;2;143;;;;vpos;;varray;;r&#10;Definition&#10;    checkPlaces($post)&#10;&#10;Description&#10;     Checks application places data.;;d1,52;;b1,0;;mpost;;p">
</treenode>
<treenode node="clearByApplication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;160;2;165;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;518;2;523;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearByApplication()&#10;&#10;Description&#10;     Removes application places by application.;;d1,519;;b1,0;;m">
</treenode>
<treenode node="CondsHighEducFirst;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;544;2;551;;;;vpos;;vstring;;r&#10;Definition&#10;    CondsHighEducFirst($pay) : string&#10;&#10;Description&#10;     Returns conditions for the first high education.;;d1,545;;b1,0;;mpay;;p">
</treenode>
<treenode node="CondsHighEducSecond;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;558;2;565;;;;vpos;;vstring;;r&#10;Definition&#10;    CondsHighEducSecond($pay) : string&#10;&#10;Description&#10;     Returns conditions for the second high education.;;d1,559;;b1,0;;mpay;;p">
</treenode>
<treenode node="CondsSpecial9Educ;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;530;2;537;;;;vpos;;vstring;;r&#10;Definition&#10;    CondsSpecial9Educ($pay) : string&#10;&#10;Description&#10;     Returns conditions for special education based on 9 classes.;;d1,531;;b1,0;;mpay;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f8;39;2;44;;;;vpos;;varray;;r&#10;Definition&#10;    get($id)&#10;&#10;Description&#10;     Gets application places from database.;;d1,40;;b1,0;;mid;;p">
</treenode>
<treenode node="getByAppForBachelorSpec;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;380;2;388;;;;vpos;;varray;;r&#10;Definition&#10;    getByAppForBachelorSpec()&#10;&#10;Description&#10;     Gets specialities for bachelor and specialist.;;d1,381;;b1,0;;m">
</treenode>
<treenode node="getByAppForMedicalA1;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;395;2;403;;;;vpos;;varray;;r&#10;Definition&#10;    getByAppForMedicalA1()&#10;&#10;Description&#10;     Gets specialities for medical certificate (A1 group).;;d1,396;;b1,0;;m">
</treenode>
<treenode node="getByAppForMedicalA2;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;410;2;423;;;;vpos;;varray;;r&#10;Definition&#10;    getByAppForMedicalA2()&#10;&#10;Description&#10;     Gets specialities for medical certificate (A2 group).;;d1,411;;b1,0;;m">
</treenode>
<treenode node="getByAppForMedicalB1;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;430;2;444;;;;vpos;;varray;;r&#10;Definition&#10;    getByAppForMedicalB1()&#10;&#10;Description&#10;     Gets specialities for medical certificate (B1 group).;;d1,431;;b1,0;;m">
</treenode>
<treenode node="getByAppForMedicalC1;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;451;2;469;;;;vpos;;varray;;r&#10;Definition&#10;    getByAppForMedicalC1()&#10;&#10;Description&#10;     Gets specialities for medical certificate (C1 group).;;d1,452;;b1,0;;m">
</treenode>
<treenode node="getByAppForPayedOnline;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;476;2;484;;;;vpos;;varray;;r&#10;Definition&#10;    getByAppForPayedOnline()&#10;&#10;Description&#10;     Gets specialities for payed online education.;;d1,477;;b1,0;;m">
</treenode>
<treenode node="getByUserGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;94;2;100;;;;vpos;;varray;;r&#10;Definition&#10;    getByUserGrid()&#10;&#10;Description&#10;     Gets application places for GRID.;;d1,95;;b1,0;;m">
</treenode>
<treenode node="getEduformFirstForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;261;2;271;;;;vpos;;varray;;r&#10;Definition&#10;    getEduformFirstForApp($pay)&#10;&#10;Description&#10;     Gets first high eduforms UNIQUE for application.;;d1,262;;b1,0;;mpay;;p">
</treenode>
<treenode node="getEduformSecondForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;346;2;356;;;;vpos;;varray;;r&#10;Definition&#10;    getEduformSecondForApp($pay)&#10;&#10;Description&#10;     Gets second high eduforms UNIQUE for application.;;d1,347;;b1,0;;mpay;;p">
</treenode>
<treenode node="getEduformSpecial9ForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;176;2;186;;;;vpos;;varray;;r&#10;Definition&#10;    getEduformSpecial9ForApp($pay)&#10;&#10;Description&#10;     Gets special eduforms based on 9 classes UNIQUE for application.;;d1,177;;b1,0;;mpay;;p">
</treenode>
<treenode node="getEdulevelFirstForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;278;2;288;;;;vpos;;varray;;r&#10;Definition&#10;    getEdulevelFirstForApp($pay)&#10;&#10;Description&#10;     Gets first high edulevels UNIQUE for application.;;d1,279;;b1,0;;mpay;;p">
</treenode>
<treenode node="getEdulevelSecondForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;363;2;373;;;;vpos;;varray;;r&#10;Definition&#10;    getEdulevelSecondForApp($pay)&#10;&#10;Description&#10;     Gets second high edulevels UNIQUE for application.;;d1,364;;b1,0;;mpay;;p">
</treenode>
<treenode node="getEdulevelSpecial9ForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;193;2;203;;;;vpos;;varray;;r&#10;Definition&#10;    getEdulevelSpecial9ForApp($pay)&#10;&#10;Description&#10;     Gets special edulevels based on 9 classes UNIQUE for application.;;d1,194;;b1,0;;mpay;;p">
</treenode>
<treenode node="getFinanceFirstForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;244;2;254;;;;vpos;;varray;;r&#10;Definition&#10;    getFinanceFirstForApp($pay)&#10;&#10;Description&#10;     Gets first high finances UNIQUE for application.;;d1,245;;b1,0;;mpay;;p">
</treenode>
<treenode node="getFinanceSecondForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;329;2;339;;;;vpos;;varray;;r&#10;Definition&#10;    getFinanceSecondForApp($pay)&#10;&#10;Description&#10;     Gets second high finances UNIQUE for application.;;d1,330;;b1,0;;mpay;;p">
</treenode>
<treenode node="getFinanceSpecial9ForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;159;2;169;;;;vpos;;varray;;r&#10;Definition&#10;    getFinanceSpecial9ForApp($pay)&#10;&#10;Description&#10;     Gets special finances based on 9 classes UNIQUE for application.;;d1,160;;b1,0;;mpay;;p">
</treenode>
<treenode node="getGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;94;2;100;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;99;2;105;;;;vpos;;varray;;r&#10;Definition&#10;    getGrid()&#10;&#10;Description&#10;     Gets application places for GRID.;;d1,100;;b1,0;;m">
</treenode>
<treenode node="getSpecialityFirstForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;227;2;237;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecialityFirstForApp($pay)&#10;&#10;Description&#10;     Gets first high specialities UNIQUE for application.;;d1,228;;b1,0;;mpay;;p">
</treenode>
<treenode node="getSpecialitySecondForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;312;2;322;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecialitySecondForApp($pay)&#10;&#10;Description&#10;     Gets second high specialities UNIQUE for application.;;d1,313;;b1,0;;mpay;;p">
</treenode>
<treenode node="getSpecialitySpecial9ForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;142;2;152;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecialitySpecial9ForApp($pay)&#10;&#10;Description&#10;     Gets special specialities based on 9 classes UNIQUE for application.;;d1,143;;b1,0;;mpay;;p">
</treenode>
<treenode node="getSpecsByApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;107;2;113;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;112;2;118;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecsByApp()&#10;&#10;Description&#10;     Gets specialities by application.;;d1,113;;b1,0;;m">
</treenode>
<treenode node="getSpecsFirstForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;210;2;220;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecsFirstForApp($pay)&#10;&#10;Description&#10;     Gets first high specialities for application.;;d1,211;;b1,0;;mpay;;p">
</treenode>
<treenode node="getSpecsForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;120;2;127;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecsForApp()&#10;&#10;Description&#10;     Gets specialities for application.;;d1,121;;b1,0;;m">
</treenode>
<treenode node="getSpecsSecondForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;295;2;305;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecsSecondForApp($pay)&#10;&#10;Description&#10;     Gets second high specialities for application.;;d1,296;;b1,0;;mpay;;p">
</treenode>
<treenode node="getSpecsSpecial9ForApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;125;2;135;;;;vpos;;varray;;r&#10;Definition&#10;    getSpecsSpecial9ForApp($pay)&#10;&#10;Description&#10;     Gets special specialities based on 9 classes for application.;;d1,126;;b1,0;;mpay;;p">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;80;2;87;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;84;2;92;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Application places grid.;;d1,85;;b1,0;;m">
</treenode>
<treenode node="ParamsHighEducFirst;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;594;2;607;;;;vpos;;varray;;r&#10;Definition&#10;    ParamsHighEducFirst($pay) : array&#10;&#10;Description&#10;     Returns parameters for the first high education.;;d1,595;;b1,0;;mpay;;p">
</treenode>
<treenode node="ParamsHighEducSecond;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;614;2;629;;;;vpos;;varray;;r&#10;Definition&#10;    ParamsHighEducSecond($pay) : array&#10;&#10;Description&#10;     Returns parameters for the second high education.;;d1,615;;b1,0;;mpay;;p">
</treenode>
<treenode node="ParamsSpecial9Educ;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;572;2;587;;;;vpos;;varray;;r&#10;Definition&#10;    ParamsSpecial9Educ($pay) : array&#10;&#10;Description&#10;     Returns parameters for special education based on 9 classes.;;d1,573;;b1,0;;mpay;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;28;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f8;29;2;32;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;33;2;73;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;37;2;77;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Application places rules.;;d1,38;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;134;2;139;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlaces.php;f8;491;2;497;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves application places data to database.;;d1,492;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_ApplicationPlacesExams;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f0;6;1;147;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f6;12;17;12;;;;vpos;;v;;r&apos;application_places_exams&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f8;23;2;26;;;;vpos;;v;;r;;d1,24;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f8;143;2;146;;;;vpos;;v;;r;;d1,144;;b1,0;;m">
</treenode>
<treenode node="changeTest;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f8;135;2;141;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeTest()&#10;&#10;Description&#10;     Changes testing scope.;;d1,136;;b1,0;;m">
</treenode>
<treenode node="getExamsByApplication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f8;107;2;115;;;;vpos;;varray;;r&#10;Definition&#10;    getExamsByApplication()&#10;&#10;Description&#10;     Gets exams by application.;;d1,108;;b1,0;;m">
</treenode>
<treenode node="getExamsByPlace;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f8;80;2;87;;;;vpos;;varray;;r&#10;Definition&#10;    getExamsByPlace()&#10;&#10;Description&#10;     Gets exams by place.;;d1,81;;b1,0;;m">
</treenode>
<treenode node="getExamsByPlaceFull;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f8;94;2;100;;;;vpos;;varray;;r&#10;Definition&#10;    getExamsByPlaceFull()&#10;&#10;Description&#10;     Gets full exams by place.;;d1,95;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f8;33;2;73;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Application places exams rules.;;d1,34;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationPlacesExams.php;f8;122;2;128;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves application places exams data to database.;;d1,123;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_ApplicationSpec;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f0;21;1;242;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f0;25;1;572;;;;vpos;;vModel;;c;;r;;d0,26;;b0,0;;m">
<treenode node="change;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;423;2;461;;;;vpos;;varray;;r&#10;Definition&#10;    change($form)&#10;&#10;Description&#10;     Changes application spec data.;;d1,424;;b1,0;;mform;;p">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f8;216;2;241;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;297;2;382;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks application spec data.;;d1,298;;b1,0;;mform;;p">
</treenode>
<treenode node="checkPlaces;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f8;117;2;209;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;167;2;290;;;;vpos;;varray;;r&#10;Definition&#10;    checkPlaces($post)&#10;&#10;Description&#10;     Checks application places data.;;d1,168;;b1,0;;mpost;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f8;42;2;47;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;91;2;96;;;;vpos;;varray;;r&#10;Definition&#10;    get($id)&#10;&#10;Description&#10;     Gets application spec data from database.;;d1,92;;b1,0;;mid;;p">
</treenode>
<treenode node="getExams;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f8;54;2;62;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;103;2;111;;;;vpos;;varray;;r&#10;Definition&#10;    getExams($form)&#10;&#10;Description&#10;     Gets application places exams.;;d1,104;;b1,0;;mform;;p">
</treenode>
<treenode node="getResumeForPdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;550;2;571;;;;vpos;;varray;;r&#10;Definition&#10;    getResumeForPdf() : array&#10;&#10;Description&#10;     Saves application spec data as PDF.;;d1,551;;b1,0;;m">
</treenode>
<treenode node="recall;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;468;2;506;;;;vpos;;varray;;r&#10;Definition&#10;    recall($form)&#10;&#10;Description&#10;     Recalls application spec data.;;d1,469;;b1,0;;mform;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f8;32;2;35;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;36;2;57;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Application spec rules.;;d1,37;;b1,0;;m">
</treenode>
<treenode node="savePdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;513;2;543;;;;vpos;;varray;;r&#10;Definition&#10;    savePdf($id)&#10;&#10;Description&#10;     Saves application spec data as PDF.;;d1,514;;b1,0;;mid;;p">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;389;2;416;;;;vpos;;varray;;r&#10;Definition&#10;    send($form)&#10;&#10;Description&#10;     Sends application spec data.;;d1,390;;b1,0;;mform;;p">
</treenode>
<treenode node="unsetScans;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationPlaces.php;f8;69;2;110;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;118;2;160;;;;vpos;;varray;;r&#10;Definition&#10;    unsetScans($form)&#10;&#10;Description&#10;     Unsets application spec files.;;d1,119;;b1,0;;mform;;p">
</treenode>
<treenode node="validateFormAdvanced;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ApplicationSpec.php;f8;64;2;84;;;;vpos;;varray;;r&#10;Definition&#10;    validateFormAdvanced($form, $id)&#10;&#10;Description&#10;     Validates resume advanced.;;d1,65;;b1,0;;mform;;pid;;p">
</treenode>
</treenode>
<treenode node="Model_ApplicationStatus;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationStatus.php;f0;7;1;143;;;;vpos;;vDb_Helper;;c;;r;;d0,8;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationStatus.php;f6;13;17;13;;;;vpos;;v;;r&apos;application_status&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationStatus.php;f8;25;2;28;;;;vpos;;v;;r;;d1,26;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationStatus.php;f8;139;2;142;;;;vpos;;v;;r;;d1,140;;b1,0;;m">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationStatus.php;f8;134;2;137;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes application log.;;d1,135;;b1,0;;m">
</treenode>
<treenode node="create;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationStatus.php;f8;102;2;115;;;;vpos;;vinteger;;r&#10;Definition&#10;    create()&#10;&#10;Description&#10;     Creates application status log data.;;d1,103;;b1,0;;m">
</treenode>
<treenode node="getLast;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationStatus.php;f8;88;2;95;;;;vpos;;vinteger;;r&#10;Definition&#10;    getLast()&#10;&#10;Description&#10;     Gets the last application status log data.;;d1,89;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationStatus.php;f8;35;2;81;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Application rules.;;d1,36;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ApplicationStatus.php;f8;122;2;127;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves application status log data to database.;;d1,123;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_Contacts;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f0;19;1;228;;;;vpos;;vDb_Helper;;c;;r;;d0,20;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f6;25;17;25;;;;vpos;;v;;r&apos;contacts&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TRANS_PHONE_HOME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f6;33;23;33;;;;vpos;;v;;r[&apos;(&apos; =&gt; &apos;&apos;, &apos;)&apos; =&gt; &apos;&apos;, &apos;-&apos; =&gt; &apos;&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TRANS_PHONE_MOBILE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f6;32;25;32;;;;vpos;;v;;r[&apos;+7&apos; =&gt; &apos;8&apos;, &apos;(&apos; =&gt; &apos;&apos;, &apos;)&apos; =&gt; &apos;&apos;, &apos; &apos; =&gt; &apos;&apos;, &apos;-&apos; =&gt; &apos;&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_EMAIL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f6;27;17;27;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_PHONE_ADD;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f6;30;21;30;;;;vpos;;v;;r3;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_PHONE_HOME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f6;29;22;29;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_PHONE_MOBILE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f6;28;24;28;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;46;2;49;;;;vpos;;v;;r;;d1,47;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;224;2;227;;;;vpos;;v;;r;;d1,225;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;189;2;202;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all contacts data.;;d1,190;;b1,0;;m">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;209;2;212;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes contact.;;d1,210;;b1,0;;m">
</treenode>
<treenode node="getEmailByResume;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;115;2;121;;;;vpos;;varray;;r&#10;Definition&#10;    getEmailByResume()&#10;&#10;Description&#10;     Gets email by resume.;;d1,116;;b1,0;;m">
</treenode>
<treenode node="getPhoneAddByResume;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;154;2;160;;;;vpos;;varray;;r&#10;Definition&#10;    getPhoneAddByResume()&#10;&#10;Description&#10;     Gets phone add by resume.;;d1,155;;b1,0;;m">
</treenode>
<treenode node="getPhoneHomeByResume;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;141;2;147;;;;vpos;;varray;;r&#10;Definition&#10;    getPhoneHomeByResume()&#10;&#10;Description&#10;     Gets phone home by resume.;;d1,142;;b1,0;;m">
</treenode>
<treenode node="getPhoneMobileByResume;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;128;2;134;;;;vpos;;varray;;r&#10;Definition&#10;    getPhoneMobileByResume()&#10;&#10;Description&#10;     Gets phone mobile by resume.;;d1,129;;b1,0;;m">
</treenode>
<treenode node="prettyPhoneMobile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f15;219;2;222;;;;vpos;;vstring;;r&#10;Definition&#10;    prettyPhoneMobile($phone_mobile)&#10;&#10;Description&#10;     Makes mobile phone pretty.;;d1,220;;b1,5;;mphone_mobile;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;56;2;108;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Contacts rules.;;d1,57;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Contacts.php;f8;167;2;182;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves contacts data to database.;;d1,168;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictCountries;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f0;6;1;342;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_countries&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;24;2;27;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;24;2;27;;;;vpos;;v;;r;;d1,25;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;338;2;341;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;338;2;341;;;;vpos;;v;;r;;d1,339;;b1,0;;m">
</treenode>
<treenode node="changeAlpha2;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;173;2;179;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;173;2;179;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAlpha2()&#10;&#10;Description&#10;     Changes code alpha2.;;d1,174;;b1,0;;m">
</treenode>
<treenode node="changeAlpha3;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;186;2;192;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;186;2;192;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAlpha3()&#10;&#10;Description&#10;     Changes code alpha3.;;d1,187;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;134;2;140;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;134;2;140;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes code.;;d1,135;;b1,0;;m">
</treenode>
<treenode node="changeFullName;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;160;2;166;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;160;2;166;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeFullName()&#10;&#10;Description&#10;     Changes fullname.;;d1,161;;b1,0;;m">
</treenode>
<treenode node="changeName;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;147;2;153;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;147;2;153;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeName()&#10;&#10;Description&#10;     Changes description.;;d1,148;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;199;2;202;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;199;2;202;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all countries.;;d1,200;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;87;2;90;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;87;2;90;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all countries.;;d1,88;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;97;2;103;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;97;2;103;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets country by code.;;d1,98;;b1,0;;m">
</treenode>
<treenode node="getByDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;110;2;116;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;110;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    getByDescription()&#10;&#10;Description&#10;     Gets country by description.;;d1,111;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;209;2;336;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;209;2;336;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads countries.;;d1,210;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;34;2;80;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;34;2;80;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Countries rules.;;d1,35;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;123;2;127;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictCountries.php;f8;123;2;127;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves country data to database.;;d1,124;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictDiscipline;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f0;6;1;204;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_discipline&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;23;2;26;;;;vpos;;v;;r;;d1,24;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;200;2;203;;;;vpos;;v;;r;;d1,201;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;128;2;131;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all disciplines.;;d1,129;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;80;2;83;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all disciplines.;;d1,81;;b1,0;;m">
</treenode>
<treenode node="getByCampaign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;104;2;110;;;;vpos;;varray;;r&#10;Definition&#10;    getByCampaign()&#10;&#10;Description&#10;     Gets disciplines by admission campaign.;;d1,105;;b1,0;;m">
</treenode>
<treenode node="getOne;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;90;2;97;;;;vpos;;varray;;r&#10;Definition&#10;    getOne()&#10;&#10;Description&#10;     Gets one discipline.;;d1,91;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;138;2;198;;;;vpos;;varray;;r&#10;Definition&#10;    load($xml, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads disciplines.;;d1,139;;b1,0;;mxml;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;33;2;73;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Dictionary discipline rules.;;d1,34;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDiscipline.php;f8;117;2;121;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves discipline data to database.;;d1,118;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictDocships;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f0;6;1;233;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_docships&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;23;2;26;;;;vpos;;v;;r;;d1,24;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;229;2;232;;;;vpos;;v;;r;;d1,230;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;109;2;114;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes document shipment code.;;d1,110;;b1,0;;m">
</treenode>
<treenode node="changeDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;121;2;126;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeDescription()&#10;&#10;Description&#10;     Changes document shipment description.;;d1,122;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;133;2;136;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all document shipments.;;d1,134;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;68;2;71;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all document shipment.;;d1,69;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;88;2;91;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets document shipment by code.;;d1,89;;b1,0;;m">
</treenode>
<treenode node="getByGuid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;78;2;81;;;;vpos;;varray;;r&#10;Definition&#10;    getByGuid()&#10;&#10;Description&#10;     Gets document shipment by GUID.;;d1,79;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;143;2;227;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads document shipments.;;d1,144;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;33;2;61;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Document shipment rules.;;d1,34;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDocships.php;f8;98;2;102;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves document shipment data to database.;;d1,99;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictDoctypes;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictEductypes.php;f0;7;1;35;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictDoctypes.php;f0;7;1;100;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f0;6;1;363;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_doctypes&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictEductypes.php;f8;15;2;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;15;2;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;25;2;28;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictDoctypes.php;f8;15;2;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;25;2;28;;;;vpos;;v;;r;;d1,26;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;357;2;360;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;359;2;362;;;;vpos;;v;;r;;d1,360;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;209;2;214;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;211;2;216;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes document type code.;;d1,212;;b1,0;;m">
</treenode>
<treenode node="changeDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;221;2;226;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;223;2;228;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeDescription()&#10;&#10;Description&#10;     Changes document type description.;;d1,224;;b1,0;;m">
</treenode>
<treenode node="changeIsfolder;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;185;2;190;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;187;2;192;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeIsfolder()&#10;&#10;Description&#10;     Changes document type isfolder.;;d1,188;;b1,0;;m">
</treenode>
<treenode node="changeParent;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;197;2;202;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;199;2;204;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeParent()&#10;&#10;Description&#10;     Changes document type parent.;;d1,200;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;233;2;236;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;235;2;238;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all document types.;;d1,236;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;82;2;85;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;82;2;85;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all document types.;;d1,83;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;92;2;95;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;92;2;95;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets document type by code.;;d1,93;;b1,0;;m">
</treenode>
<treenode node="getDiplomas;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;146;2;153;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;147;2;155;;;;vpos;;varray;;r&#10;Definition&#10;    getDiplomas()&#10;&#10;Description&#10;     Gets education documents.;;d1,148;;b1,0;;m">
</treenode>
<treenode node="getDiplomasByEducCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;160;2;167;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;162;2;169;;;;vpos;;varray;;r&#10;Definition&#10;    getDiplomasByEducCode()&#10;&#10;Description&#10;     Gets education documents by education type code.;;d1,163;;b1,0;;m">
</treenode>
<treenode node="getDiplomasByEducCodeJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictEductypes.php;f8;25;2;34;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;25;2;34;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictDoctypes.php;f8;82;2;99;;;;vpos;;vJSON;;r&#10;Definition&#10;    getDiplomasByEducCodeJSON($code_educ) : string&#10;&#10;Description&#10;     Gets education documents by education type code JSON.;;d1,83;;b1,0;;mcode_educ;;p">
</treenode>
<treenode node="getPassports;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;102;2;109;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;102;2;109;;;;vpos;;varray;;r&#10;Definition&#10;    getPassports()&#10;&#10;Description&#10;     Gets passports.;;d1,103;;b1,0;;m">
</treenode>
<treenode node="getPassportsForeign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;129;2;139;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;130;2;140;;;;vpos;;varray;;r&#10;Definition&#10;    getPassportsForeign()&#10;&#10;Description&#10;     Gets foreign passports.;;d1,131;;b1,0;;m">
</treenode>
<treenode node="getPassportsForeignJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictDoctypes.php;f8;63;2;75;;;;vpos;;vJSON;;r&#10;Definition&#10;    getPassportsForeignJSON() : string&#10;&#10;Description&#10;     Gets foreign passports JSON.;;d1,64;;b1,0;;m">
</treenode>
<treenode node="getPassportsJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictDoctypes.php;f8;25;2;37;;;;vpos;;vJSON;;r&#10;Definition&#10;    getPassportsJSON() : string&#10;&#10;Description&#10;     Gets passports JSON.;;d1,26;;b1,0;;m">
</treenode>
<treenode node="getPassportsRussia;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;116;2;122;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;116;2;123;;;;vpos;;varray;;r&#10;Definition&#10;    getPassportsRussia()&#10;&#10;Description&#10;     Gets russian passports.;;d1,117;;b1,0;;m">
</treenode>
<treenode node="getPassportsRussianJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictDoctypes.php;f8;44;2;56;;;;vpos;;vJSON;;r&#10;Definition&#10;    getPassportsRussianJSON() : string&#10;&#10;Description&#10;     Gets russian passports JSON.;;d1,45;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;243;2;355;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;245;2;357;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads document types.;;d1,246;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;35;2;75;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;35;2;75;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Document types rules.;;d1,36;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;174;2;178;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictDoctypes.php;f8;176;2;180;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves document type data to database.;;d1,177;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictEducforms;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f0;6;1;274;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f0;6;1;274;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_educforms&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;22;2;25;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;22;2;25;;;;vpos;;v;;r;;d1,23;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;270;2;273;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;270;2;273;;;;vpos;;v;;r;;d1,271;;b1,0;;m">
</treenode>
<treenode node="changeAbbr;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;148;2;153;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;148;2;153;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAbbr()&#10;&#10;Description&#10;     Changes education form abbr.;;d1,149;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;124;2;129;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;124;2;129;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes education form code.;;d1,125;;b1,0;;m">
</treenode>
<treenode node="changeDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;136;2;141;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;136;2;141;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeDescription()&#10;&#10;Description&#10;     Changes education form description.;;d1,137;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;160;2;163;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;160;2;163;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all education forms.;;d1,161;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;73;2;80;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;73;2;80;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all education forms.;;d1,74;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;100;2;106;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;100;2;106;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets education form by code.;;d1,101;;b1,0;;m">
</treenode>
<treenode node="getByGuid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;87;2;93;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;87;2;93;;;;vpos;;varray;;r&#10;Definition&#10;    getByGuid()&#10;&#10;Description&#10;     Gets education form by GUID.;;d1,88;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;170;2;268;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;170;2;268;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads education forms.;;d1,171;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;32;2;66;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;32;2;66;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Education forms rules.;;d1,33;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;113;2;117;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEducforms.php;f8;113;2;117;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves education form data to database.;;d1,114;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictEduclevels;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f0;6;1;340;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_educlevels&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;24;2;27;;;;vpos;;v;;r;;d1,25;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;336;2;339;;;;vpos;;v;;r;;d1,337;;b1,0;;m">
</treenode>
<treenode node="changeAbbr;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;186;2;191;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAbbr()&#10;&#10;Description&#10;     Changes education level abbr.;;d1,187;;b1,0;;m">
</treenode>
<treenode node="changeCateg;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;174;2;179;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCateg()&#10;&#10;Description&#10;     Changes education level categ.;;d1,175;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;138;2;143;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes education level code.;;d1,139;;b1,0;;m">
</treenode>
<treenode node="changeDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;150;2;155;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeDescription()&#10;&#10;Description&#10;     Changes education level description.;;d1,151;;b1,0;;m">
</treenode>
<treenode node="changeType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;162;2;167;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeType()&#10;&#10;Description&#10;     Changes education level type.;;d1,163;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;198;2;201;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all education levels.;;d1,199;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;87;2;94;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all education levels.;;d1,88;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;114;2;120;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets education level by code.;;d1,115;;b1,0;;m">
</treenode>
<treenode node="getByGuid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;101;2;107;;;;vpos;;varray;;r&#10;Definition&#10;    getByGuid()&#10;&#10;Description&#10;     Gets education level by GUID.;;d1,102;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;208;2;334;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads education levels.;;d1,209;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;34;2;80;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Education levels rules.;;d1,35;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEduclevels.php;f8;127;2;131;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves education level data to database.;;d1,128;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictEductypes;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f0;6;1;310;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="EDUCTYPES_DIPLOMA;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;22;24;22;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f6;22;24;22;;;;vpos;;v;;r[&apos;000000001&apos;, &apos;000000003&apos;, &apos;000000004&apos;, &apos;000000006&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_eductypes&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;26;2;29;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;26;2;29;;;;vpos;;v;;r;;d1,27;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;306;2;309;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;306;2;309;;;;vpos;;v;;r;;d1,307;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;158;2;163;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;158;2;163;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes education type code.;;d1,159;;b1,0;;m">
</treenode>
<treenode node="changeDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;170;2;175;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;170;2;175;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeDescription()&#10;&#10;Description&#10;     Changes education type description.;;d1,171;;b1,0;;m">
</treenode>
<treenode node="changeIsfolder;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;134;2;139;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;134;2;139;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeIsfolder()&#10;&#10;Description&#10;     Changes education type isfolder.;;d1,135;;b1,0;;m">
</treenode>
<treenode node="changeParent;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;146;2;151;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;146;2;151;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeParent()&#10;&#10;Description&#10;     Changes education type parent.;;d1,147;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;182;2;185;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;182;2;185;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all education types.;;d1,183;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;89;2;92;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;89;2;92;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all education types.;;d1,90;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;99;2;102;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;99;2;102;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets education type by code.;;d1,100;;b1,0;;m">
</treenode>
<treenode node="getEducs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;109;2;115;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;109;2;115;;;;vpos;;varray;;r&#10;Definition&#10;    getEducs()&#10;&#10;Description&#10;     Gets educations.;;d1,110;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;192;2;304;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;192;2;304;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads education types.;;d1,193;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;36;2;82;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;36;2;82;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Education types rules.;;d1,37;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;122;2;127;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEductypes.php;f8;122;2;127;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves education type data to database.;;d1,123;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictEge;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f0;6;1;116;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_ege&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;20;2;23;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;20;2;23;;;;vpos;;v;;r;;d1,21;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;112;2;115;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;112;2;115;;;;vpos;;v;;r;;d1,113;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;93;2;100;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;93;2;100;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all dictionary ege data.;;d1,94;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;107;2;110;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;107;2;110;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all dictionary ege.;;d1,108;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;59;2;62;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;59;2;62;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all dictionary ege.;;d1,60;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;69;2;75;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;69;2;75;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets dictionary ege by code.;;d1,70;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;30;2;52;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;30;2;52;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Dictionary ege rules.;;d1,31;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;82;2;86;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEge.php;f8;82;2;86;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves dictionary ege data to database.;;d1,83;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictEntranceExams;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEntrance.php;f0;6;1;40;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEntranceExams.php;f0;6;1;42;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEntrance.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEntranceExams.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_entrance_exams&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEntrance.php;f8;20;2;23;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEntranceExams.php;f8;20;2;23;;;;vpos;;v;;r;;d1,21;;b1,0;;m">
</treenode>
<treenode node="getByCampaignGroup;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEntrance.php;f8;30;2;39;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictEntranceExams.php;f8;30;2;41;;;;vpos;;varray;;r&#10;Definition&#10;    getByCampaignGroup()&#10;&#10;Description&#10;     Gets entrance exams by campaign/group.;;d1,31;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictForeignLangs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictForeignLangs.php;f0;7;1;49;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f0;6;1;340;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_foreign_langs&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;15;2;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;23;2;26;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictForeignLangs.php;f8;15;2;18;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;23;2;26;;;;vpos;;v;;r;;d1,24;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;293;2;296;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;336;2;339;;;;vpos;;v;;r;;d1,337;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;145;2;150;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;188;2;193;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes foreign language code.;;d1,189;;b1,0;;m">
</treenode>
<treenode node="changeDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;157;2;162;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;200;2;205;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeDescription()&#10;&#10;Description&#10;     Changes foreign language description.;;d1,201;;b1,0;;m">
</treenode>
<treenode node="changeIsfolder;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;121;2;126;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;164;2;169;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeIsfolder()&#10;&#10;Description&#10;     Changes foreign language isfolder.;;d1,165;;b1,0;;m">
</treenode>
<treenode node="changeParent;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;133;2;138;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;176;2;181;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeParent()&#10;&#10;Description&#10;     Changes foreign language parent.;;d1,177;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;169;2;172;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;212;2;215;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all foreign languages.;;d1,213;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;123;2;126;;;;vpos;;varray;;r&#10;Definition&#10;    get()&#10;&#10;Description&#10;     Gets foreign language by ID.;;d1,124;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;80;2;83;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;80;2;87;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all foreign languages.;;d1,81;;b1,0;;m">
</treenode>
<treenode node="getBsu;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;94;2;103;;;;vpos;;varray;;r&#10;Definition&#10;    getBsu()&#10;&#10;Description&#10;     Gets BSU foreign languages.;;d1,95;;b1,0;;m">
</treenode>
<treenode node="getBsuNot;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;110;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    getBsuNot()&#10;&#10;Description&#10;     Gets BSU not studied.;;d1,111;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;100;2;103;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;143;2;146;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets foreign language by code.;;d1,144;;b1,0;;m">
</treenode>
<treenode node="getByGuid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;90;2;93;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;133;2;136;;;;vpos;;varray;;r&#10;Definition&#10;    getByGuid()&#10;&#10;Description&#10;     Gets foreign language by GUID.;;d1,134;;b1,0;;m">
</treenode>
<treenode node="getForeignLangsBsuJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictForeignLangs.php;f8;40;2;48;;;;vpos;;vJSON;;r&#10;Definition&#10;    getForeignLangsBsuJSON() : string&#10;&#10;Description&#10;     Gets BSU foreign languages JSON.;;d1,41;;b1,0;;m">
</treenode>
<treenode node="getForeignLangsJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;25;2;33;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DictForeignLangs.php;f8;25;2;33;;;;vpos;;vJSON;;r&#10;Definition&#10;    getForeignLangsJSON() : string&#10;&#10;Description&#10;     Gets foreign languages JSON.;;d1,26;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;179;2;291;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;222;2;334;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads foreign languages.;;d1,223;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;33;2;73;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;33;2;73;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Foreign languages rules.;;d1,34;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;110;2;114;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictForeignLangs.php;f8;153;2;157;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves foreign language data to database.;;d1,154;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictIndAchievs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f0;6;1;350;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="IA_BSU;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f6;23;13;23;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f6;23;13;23;;;;vpos;;v;;r[&apos;000000002&apos;, &apos;000000003&apos;, &apos;000000004&apos;, &apos;000000005&apos;, &apos;000000010&apos;, &apos;000000015&apos;, &apos;000000017&apos;, &apos;000000022&apos;, &apos;000000023&apos;, &apos;000000031&apos;, &apos;000000032&apos;, &apos;000000035&apos;, &apos;000000039&apos;, &apos;000000040&apos;, &apos;000000041&apos;, &apos;000000042&apos;, &apos;000000044&apos;, &apos;000000045&apos;, &apos;000000046&apos;, &apos;000000047&apos;, &apos;000000048&apos;, &apos;000000049&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_ind_achievs&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;27;2;30;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;27;2;30;;;;vpos;;v;;r;;d1,28;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;346;2;349;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;346;2;349;;;;vpos;;v;;r;;d1,347;;b1,0;;m">
</treenode>
<treenode node="changeAbbr;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;183;2;188;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;183;2;188;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAbbr()&#10;&#10;Description&#10;     Changes individual achievment abbr.;;d1,184;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;147;2;152;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;147;2;152;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes individual achievment code.;;d1,148;;b1,0;;m">
</treenode>
<treenode node="changeConfirm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;195;2;200;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;195;2;200;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeConfirm()&#10;&#10;Description&#10;     Changes individual achievment confirm.;;d1,196;;b1,0;;m">
</treenode>
<treenode node="changeDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;159;2;164;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;159;2;164;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeDescription()&#10;&#10;Description&#10;     Changes individual achievment description.;;d1,160;;b1,0;;m">
</treenode>
<treenode node="changeNumb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;171;2;176;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;171;2;176;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeNumb()&#10;&#10;Description&#10;     Changes individual achievment numb.;;d1,172;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;207;2;210;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;207;2;210;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all individual achievments.;;d1,208;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;96;2;103;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;96;2;103;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all individual achievments.;;d1,97;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;123;2;129;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;123;2;129;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets individual achievment by code.;;d1,124;;b1,0;;m">
</treenode>
<treenode node="getByGuid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;110;2;116;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;110;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    getByGuid()&#10;&#10;Description&#10;     Gets individual achievment by GUID.;;d1,111;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;217;2;344;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;217;2;344;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads individual achievments.;;d1,218;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;37;2;89;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;37;2;89;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Individual achievments rules.;;d1,38;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievs.php;f8;136;2;140;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Educforms.php;f8;136;2;140;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves individual achievment data to database.;;d1,137;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictIndAchievsAc;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f0;6;1;213;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f0;6;1;213;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_ind_achievs_ac&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;21;2;24;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;21;2;24;;;;vpos;;v;;r;;d1,22;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;209;2;212;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;209;2;212;;;;vpos;;v;;r;;d1,210;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;115;2;122;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;115;2;122;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all IAbyAC data.;;d1,116;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;129;2;132;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;129;2;132;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all IAbyAC.;;d1,130;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;66;2;69;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;66;2;69;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all IAbyAC.;;d1,67;;b1,0;;m">
</treenode>
<treenode node="getByCampaign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;90;2;96;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;90;2;96;;;;vpos;;varray;;r&#10;Definition&#10;    getByCampaign()&#10;&#10;Description&#10;     Gets individual achievments by admission campaign.;;d1,91;;b1,0;;m">
</treenode>
<treenode node="getOne;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;76;2;83;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;76;2;83;;;;vpos;;varray;;r&#10;Definition&#10;    getOne()&#10;&#10;Description&#10;     Gets one IAbyAC.;;d1,77;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;139;2;207;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;139;2;207;;;;vpos;;varray;;r&#10;Definition&#10;    load($xml, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads IAbyAC.;;d1,140;;b1,0;;mxml;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;31;2;59;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;31;2;59;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     IAbyAC rules.;;d1,32;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Dict.php;f8;103;2;108;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictIndAchievsAc.php;f8;103;2;108;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves IAbyAC data to database.;;d1,104;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictionaryManager;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictManager.php;f0;6;1;46;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictManager.php;f0;10;1;63;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f0;6;1;53;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictionaryManager.php;f0;10;1;86;;;;vpos;;vModel;;c;;r;;d0,11;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f6;12;17;12;;;;vpos;;v;;r&apos;dictionary_manager&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_ODATA;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f6;14;17;14;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TYPE_WSDL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f6;15;16;15;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;17;2;20;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictManager.php;f8;17;2;20;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f8;21;2;24;;;;vpos;;v;;r;;d1,22;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;42;2;45;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictManager.php;f8;42;2;45;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f8;49;2;52;;;;vpos;;v;;r;;d1,50;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictManager.php;f8;27;2;30;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f8;31;2;34;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all dictionaries.;;d1,32;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictManager.php;f8;37;2;40;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets dictionary by code.;;d1,38;;b1,0;;m">
</treenode>
<treenode node="getById;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManager.php;f8;41;2;47;;;;vpos;;varray;;r&#10;Definition&#10;    getById()&#10;&#10;Description&#10;     Gets dictionary by id.;;d1,42;;b1,0;;m">
</treenode>
<treenode node="getDictsAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;27;2;30;;;;vpos;;varray;;r&#10;Definition&#10;    getDictsAll()&#10;&#10;Description&#10;     Gets all dictionaries.;;d1,28;;b1,0;;m">
</treenode>
<treenode node="getDictsByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;37;2;40;;;;vpos;;varray;;r&#10;Definition&#10;    getDictsByCode()&#10;&#10;Description&#10;     Gets dictionary by code.;;d1,38;;b1,0;;m">
</treenode>
<treenode node="renew;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictManager.php;f8;38;2;62;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;34;2;81;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictionaryManager.php;f8;38;2;85;;;;vpos;;varray;;r&#10;Definition&#10;    renew($form)&#10;&#10;Description&#10;     Renews dictionary manager data.;;d1,39;;b1,0;;mform;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictManager.php;f8;21;2;31;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;17;2;27;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_DictionaryManager.php;f8;21;2;31;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Dictionary manager rules.;;d1,22;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictionaryManagerLog;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManagerLog.php;f0;6;1;98;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManagerLog.php;f6;12;17;12;;;;vpos;;v;;r&apos;dictionary_manager_log&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManagerLog.php;f8;24;2;27;;;;vpos;;v;;r;;d1,25;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManagerLog.php;f8;94;2;97;;;;vpos;;v;;r;;d1,95;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManagerLog.php;f8;34;2;80;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Dictionary manager log rules.;;d1,35;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictionaryManagerLog.php;f8;87;2;92;;;;vpos;;vboolean;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves dictionary manager log data to database.;;d1,88;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictScans;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f0;6;1;67;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_scans&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;19;2;22;;;;vpos;;v;;r;;d1,20;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;63;2;66;;;;vpos;;v;;r;;d1,64;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;29;2;32;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all scans.;;d1,30;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;54;2;61;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets scan by code.;;d1,55;;b1,0;;m">
</treenode>
<treenode node="getByDocument;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictScans.php;f8;39;2;47;;;;vpos;;varray;;r&#10;Definition&#10;    getByDocument()&#10;&#10;Description&#10;     Gets scans by document.;;d1,40;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictSpeciality;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f0;6;1;410;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_speciality&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;40;2;43;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;40;2;43;;;;vpos;;v;;r;;d1,41;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;361;2;364;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;406;2;409;;;;vpos;;v;;r;;d1,407;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;239;2;252;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;284;2;297;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all speciality data.;;d1,285;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;259;2;262;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;304;2;307;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all specialities.;;d1,305;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;199;2;202;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;199;2;206;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all specialities.;;d1,200;;b1,0;;m">
</treenode>
<treenode node="getAllFirst;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;213;2;220;;;;vpos;;varray;;r&#10;Definition&#10;    getAllFirst()&#10;&#10;Description&#10;     Gets all specialities of the first education.;;d1,214;;b1,0;;m">
</treenode>
<treenode node="getAllSecond;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;227;2;234;;;;vpos;;varray;;r&#10;Definition&#10;    getAllSecond()&#10;&#10;Description&#10;     Gets all specialities of the second education.;;d1,228;;b1,0;;m">
</treenode>
<treenode node="getById;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;260;2;266;;;;vpos;;varray;;r&#10;Definition&#10;    getById()&#10;&#10;Description&#10;     Gets speciality by ID.;;d1,261;;b1,0;;m">
</treenode>
<treenode node="getOne;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;209;2;221;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;241;2;253;;;;vpos;;varray;;r&#10;Definition&#10;    getOne()&#10;&#10;Description&#10;     Gets one speciality.;;d1,242;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;269;2;359;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;314;2;404;;;;vpos;;varray;;r&#10;Definition&#10;    load($xml, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads specialities.;;d1,315;;b1,0;;mxml;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;50;2;192;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;50;2;192;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Dictionary speciality rules.;;d1,51;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;228;2;232;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictSpeciality.php;f8;273;2;277;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves speciality data to database.;;d1,274;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictTestingScopes;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f0;6;1;337;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_testing_scopes&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;23;2;26;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;23;2;26;;;;vpos;;v;;r;;d1,24;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;333;2;336;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;333;2;336;;;;vpos;;v;;r;;d1,334;;b1,0;;m">
</treenode>
<treenode node="changeCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;185;2;190;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;185;2;190;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeCode()&#10;&#10;Description&#10;     Changes testing scope code.;;d1,186;;b1,0;;m">
</treenode>
<treenode node="changeDescription;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;197;2;202;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;197;2;202;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeDescription()&#10;&#10;Description&#10;     Changes testing scope description.;;d1,198;;b1,0;;m">
</treenode>
<treenode node="changeIsfolder;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;161;2;166;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;161;2;166;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeIsfolder()&#10;&#10;Description&#10;     Changes testing scope isfolder.;;d1,162;;b1,0;;m">
</treenode>
<treenode node="changeParent;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;173;2;178;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;173;2;178;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeParent()&#10;&#10;Description&#10;     Changes testing scope parent.;;d1,174;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;209;2;212;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;209;2;212;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all testing scopes.;;d1,210;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;80;2;83;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;80;2;83;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all testing scopes.;;d1,81;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;100;2;103;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;100;2;103;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets testing scope by code.;;d1,101;;b1,0;;m">
</treenode>
<treenode node="getByGuid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;90;2;93;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;90;2;93;;;;vpos;;varray;;r&#10;Definition&#10;    getByGuid()&#10;&#10;Description&#10;     Gets testing scope by GUID.;;d1,91;;b1,0;;m">
</treenode>
<treenode node="getEge;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;110;2;116;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;110;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    getEge()&#10;&#10;Description&#10;     Gets EGE.;;d1,111;;b1,0;;m">
</treenode>
<treenode node="getEntranceExams;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;136;2;143;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;136;2;143;;;;vpos;;varray;;r&#10;Definition&#10;    getEntranceExams()&#10;&#10;Description&#10;     Gets entrance exams.;;d1,137;;b1,0;;m">
</treenode>
<treenode node="getExam;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;123;2;129;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;123;2;129;;;;vpos;;varray;;r&#10;Definition&#10;    getExam()&#10;&#10;Description&#10;     Gets EXAM.;;d1,124;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;219;2;331;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;219;2;331;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads testing scopes.;;d1,220;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;33;2;73;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;33;2;73;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Testing scopes rules.;;d1,34;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;150;2;154;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictTestingScopes.php;f8;150;2;154;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves testing scope data to database.;;d1,151;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DictUniversity;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f0;6;1;116;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f6;12;17;12;;;;vpos;;v;;r&apos;dict_university&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;20;2;23;;;;vpos;;v;;r;;d1,21;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;112;2;115;;;;vpos;;v;;r;;d1,113;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;93;2;100;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all dictionary university data.;;d1,94;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;107;2;110;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all dictionary university.;;d1,108;;b1,0;;m">
</treenode>
<treenode node="getAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;59;2;62;;;;vpos;;varray;;r&#10;Definition&#10;    getAll()&#10;&#10;Description&#10;     Gets all dictionary university.;;d1,60;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;69;2;75;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets dictionary university by code.;;d1,70;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;30;2;52;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Dictionary university rules.;;d1,31;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DictUniversity.php;f8;82;2;86;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves dictionary university data to database.;;d1,83;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_Docs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f0;6;1;40;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f6;12;17;12;;;;vpos;;v;;r&apos;docs&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;16;2;19;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f8;18;2;21;;;;vpos;;v;;r;;d1,19;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;34;2;37;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f8;36;2;39;;;;vpos;;v;;r;;d1,37;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;26;2;32;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Docs.php;f8;28;2;34;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets doc by code.;;d1,29;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_DocsEduc;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f0;6;1;372;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DocsEduc.php;f0;14;1;283;;;;vpos;;vModel;;c;;r;;d0,15;;b0,0;;m">
<treenode node="CLASSES_11;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f6;29;17;29;;;;vpos;;v;;r[&apos;000000026&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CLASSES_9;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f6;28;16;28;;;;vpos;;v;;r[&apos;000000088&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="HIGH_AFTER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f6;31;17;31;;;;vpos;;v;;r[&apos;000000022&apos;, &apos;000000023&apos;, &apos;000000024&apos;, &apos;000000025&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="HIGH_BEFORE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f6;30;18;30;;;;vpos;;v;;r[&apos;000000026&apos;, &apos;000000046&apos;, &apos;000000048&apos;, &apos;000000088&apos;];;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f6;12;17;12;;;;vpos;;v;;r&apos;docs_educ&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;35;2;38;;;;vpos;;v;;r;;d1,36;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;368;2;371;;;;vpos;;v;;r;;d1,369;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;348;2;353;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all education document data.;;d1,349;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DocsEduc.php;f8;187;2;262;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks education document data.;;d1,188;;b1,0;;mform;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;360;2;366;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes education document.;;d1,361;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DocsEduc.php;f8;153;2;162;;;;vpos;;vboolean;;r&#10;Definition&#10;    delete($form)&#10;&#10;Description&#10;     Deletes education document from database.;;d1,154;;b1,0;;mform;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;177;2;220;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DocsEduc.php;f8;141;2;146;;;;vpos;;varray;;r&#10;Definition&#10;    get($id)&#10;&#10;Description&#10;     Gets education document from database.;;d1,142;;b1,0;;mid;;p">
</treenode>
<treenode node="getByNumb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;290;2;304;;;;vpos;;varray;;r&#10;Definition&#10;    getByNumb()&#10;&#10;Description&#10;     Gets education document by series/numb.;;d1,291;;b1,0;;m">
</treenode>
<treenode node="getByNumbExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;311;2;327;;;;vpos;;varray;;r&#10;Definition&#10;    getByNumbExcept()&#10;&#10;Description&#10;     Gets education document by series/numb except this ID.;;d1,312;;b1,0;;m">
</treenode>
<treenode node="getByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;227;2;233;;;;vpos;;varray;;r&#10;Definition&#10;    getByUser()&#10;&#10;Description&#10;     Gets education documents by user.;;d1,228;;b1,0;;m">
</treenode>
<treenode node="getByUserGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;276;2;283;;;;vpos;;varray;;r&#10;Definition&#10;    getByUserGrid()&#10;&#10;Description&#10;     Gets education documents by user for GRID.;;d1,277;;b1,0;;m">
</treenode>
<treenode node="getByUserSl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;240;2;246;;;;vpos;;varray;;r&#10;Definition&#10;    getByUserSl()&#10;&#10;Description&#10;     Gets education documents by user for SelectList.;;d1,241;;b1,0;;m">
</treenode>
<treenode node="getByUserSlCampaign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;253;2;269;;;;vpos;;varray;;r&#10;Definition&#10;    getByUserSlCampaign($campaign_code)&#10;&#10;Description&#10;     Gets campaign education documents by user for SelectList.;;d1,254;;b1,0;;mcampaign_code;;p">
</treenode>
<treenode node="getDiplomasByUserCampaignJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DocsEduc.php;f8;269;2;282;;;;vpos;;vJSON;;r&#10;Definition&#10;    getDiplomasByUserCampaignJSON($campaign_code) : string&#10;&#10;Description&#10;     Gets education documents by user campaign JSON.;;d1,270;;b1,0;;mcampaign_code;;p">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;134;2;170;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Education documents grid.;;d1,135;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;45;2;127;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DocsEduc.php;f8;25;2;108;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Education documents rules.;;d1,26;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_DocsEduc.php;f8;334;2;341;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves education document data to database.;;d1,335;;b1,0;;m">
</treenode>
<treenode node="unsetScans;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DocsEduc.php;f8;169;2;180;;;;vpos;;varray;;r&#10;Definition&#10;    unsetScans($form)&#10;&#10;Description&#10;     Unsets education document files.;;d1,170;;b1,0;;mform;;p">
</treenode>
<treenode node="validateFormAdvanced;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_DocsEduc.php;f8;115;2;134;;;;vpos;;varray;;r&#10;Definition&#10;    validateFormAdvanced($form)&#10;&#10;Description&#10;     Validates education document advanced.;;d1,116;;b1,0;;mform;;p">
</treenode>
</treenode>
<treenode node="Model_EduclevelsDoctypes;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_EduclevelsDoctypes.php;f0;9;1;117;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f0;6;1;243;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f6;12;17;12;;;;vpos;;v;;r&apos;educlevels_doctypes&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;22;2;25;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;22;2;25;;;;vpos;;v;;r;;d1,23;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;217;2;220;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;239;2;242;;;;vpos;;v;;r;;d1,240;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;198;2;205;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;220;2;227;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all educlevels doctypes data.;;d1,221;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;76;2;116;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_EduclevelsDoctypes.php;f8;76;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks educlevels doctypes data.;;d1,77;;b1,0;;mform;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;212;2;215;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;234;2;237;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes educlevels doctypes.;;d1,235;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;60;2;69;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_EduclevelsDoctypes.php;f8;60;2;69;;;;vpos;;vboolean;;r&#10;Definition&#10;    delete($form)&#10;&#10;Description&#10;     Deletes educlevels doctypes from database.;;d1,61;;b1,0;;mform;;p">
</treenode>
<treenode node="exists;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;147;2;159;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;169;2;181;;;;vpos;;vboolean;;r&#10;Definition&#10;    exists()&#10;&#10;Description&#10;     Checks if educlevels doctypes exists.;;d1,170;;b1,0;;m">
</treenode>
<treenode node="existsExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;166;2;179;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;188;2;201;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsExcept()&#10;&#10;Description&#10;     Checks if educlevels doctypes exists except this ID.;;d1,189;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;104;2;127;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;48;2;53;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_EduclevelsDoctypes.php;f8;48;2;53;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;104;2;127;;;;vpos;;varray;;r&#10;Definition&#10;    get()&#10;&#10;Description&#10;     Gets educlevels doctypes by ID.;;d1,105;;b1,0;;m">
</treenode>
<treenode node="getGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;134;2;140;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;134;2;140;;;;vpos;;varray;;r&#10;Definition&#10;    getGrid()&#10;&#10;Description&#10;     Gets educlevels doctypes for GRID.;;d1,135;;b1,0;;m">
</treenode>
<treenode node="getPayByDocCampaign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;147;2;162;;;;vpos;;varray;;r&#10;Definition&#10;    getPayByDocCampaign($campaign, $docs_educ)&#10;&#10;Description&#10;     Gets pay by document campaign.;;d1,148;;b1,0;;mcampaign;;pdocs_educ;;p">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;73;2;97;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;73;2;97;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Educlevels doctypes grid.;;d1,74;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;32;2;66;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;20;2;41;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_EduclevelsDoctypes.php;f8;20;2;41;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;32;2;66;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Educlevels doctypes rules.;;d1,33;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;186;2;191;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EduclevelsDoctypes.php;f8;208;2;213;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves educlevels doctypes data to database.;;d1,209;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_EductypesDoctypes;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f0;6;1;210;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f0;9;1;116;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f0;6;1;210;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f6;12;17;12;;;;vpos;;v;;r&apos;eductypes_doctypes&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;21;2;24;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;21;2;24;;;;vpos;;v;;r;;d1,22;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;206;2;209;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;206;2;209;;;;vpos;;v;;r;;d1,207;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;187;2;194;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;187;2;194;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all eductypes doctypes data.;;d1,188;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;76;2;115;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks eductypes doctypes data.;;d1,77;;b1,0;;mform;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;201;2;204;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;201;2;204;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes eductypes doctypes.;;d1,202;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;60;2;69;;;;vpos;;vboolean;;r&#10;Definition&#10;    delete($form)&#10;&#10;Description&#10;     Deletes eductypes doctypes from database.;;d1,61;;b1,0;;mform;;p">
</treenode>
<treenode node="exists;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;136;2;148;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;136;2;148;;;;vpos;;vboolean;;r&#10;Definition&#10;    exists()&#10;&#10;Description&#10;     Checks if eductypes doctypes exists.;;d1,137;;b1,0;;m">
</treenode>
<treenode node="existsExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;155;2;168;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;155;2;168;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsExcept()&#10;&#10;Description&#10;     Checks if eductypes doctypes exists except this ID.;;d1,156;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;93;2;116;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;48;2;53;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;93;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    get()&#10;&#10;Description&#10;     Gets eductypes doctypes by ID.;;d1,94;;b1,0;;m">
</treenode>
<treenode node="getGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;123;2;129;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;123;2;129;;;;vpos;;varray;;r&#10;Definition&#10;    getGrid()&#10;&#10;Description&#10;     Gets eductypes doctypes for GRID.;;d1,124;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;66;2;86;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;66;2;86;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Eductypes doctypes grid.;;d1,67;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;31;2;59;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;20;2;41;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;31;2;59;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Eductypes doctypes rules.;;d1,32;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;175;2;180;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EductypesDoctypes.php;f8;175;2;180;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves eductypes doctypes data to database.;;d1,176;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_Ege;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Ege.php;f0;8;1;104;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f0;6;1;206;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f6;12;17;12;;;;vpos;;v;;r&apos;ege&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;24;2;27;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;23;2;26;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;23;2;26;;;;vpos;;v;;r;;d1,24;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;179;2;182;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;187;2;190;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;202;2;205;;;;vpos;;v;;r;;d1,203;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;162;2;167;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;170;2;175;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;172;2;177;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all ege data.;;d1,173;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;51;2;55;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_EgeDisciplines.php;f8;51;2;55;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Ege.php;f8;83;2;103;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks ege data.;;d1,84;;b1,0;;mform;;p">
</treenode>
<treenode node="checkByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;194;2;200;;;;vpos;;varray;;r&#10;Definition&#10;    checkByUser()&#10;&#10;Description&#10;     Checks ege by user.;;d1,195;;b1,0;;m">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;174;2;177;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;182;2;185;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;184;2;187;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes ege.;;d1,185;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;97;2;106;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Ege.php;f8;67;2;76;;;;vpos;;vboolean;;r&#10;Definition&#10;    delete($form)&#10;&#10;Description&#10;     Deletes ege from database.;;d1,68;;b1,0;;mform;;p">
</treenode>
<treenode node="existsRegyear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;138;2;150;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;139;2;151;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsRegyear()&#10;&#10;Description&#10;     Checks if reg_year exists.;;d1,140;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;85;2;90;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;102;2;105;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Ege.php;f8;55;2;60;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;103;2;106;;;;vpos;;varray;;r&#10;Definition&#10;    get()&#10;&#10;Description&#10;     Gets ege by ID.;;d1,104;;b1,0;;m">
</treenode>
<treenode node="getByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;123;2;129;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;112;2;118;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;113;2;119;;;;vpos;;varray;;r&#10;Definition&#10;    getByUser()&#10;&#10;Description&#10;     Gets ege by user.;;d1,114;;b1,0;;m">
</treenode>
<treenode node="getByUserGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;136;2;142;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;125;2;131;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;126;2;132;;;;vpos;;varray;;r&#10;Definition&#10;    getByUserGrid()&#10;&#10;Description&#10;     Gets ege by user for GRID.;;d1,127;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;87;2;94;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;80;2;95;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;80;2;96;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Ege grid.;;d1,81;;b1,0;;m">
</treenode>
<treenode node="grid_disciplines;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;101;2;116;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;101;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    grid_disciplines()&#10;&#10;Description&#10;     Ege disciplines grid.;;d1,99;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;34;2;80;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;17;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_EgeDisciplines.php;f8;17;2;44;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;33;2;73;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Ege.php;f8;19;2;33;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;33;2;73;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Ege rules.;;d1,34;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;149;2;155;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;157;2;163;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Ege.php;f8;158;2;165;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves ege data to database.;;d1,159;;b1,0;;m">
</treenode>
<treenode node="unsetScans;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;113;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    unsetScans($form)&#10;&#10;Description&#10;     Unsets education document files.;;d1,65;;b1,0;;mform;;p">
</treenode>
<treenode node="validateFormAdvanced;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Ege.php;f8;40;2;48;;;;vpos;;varray;;r&#10;Definition&#10;    validateFormAdvanced($form)&#10;&#10;Description&#10;     Validates resume advanced.;;d1,41;;b1,0;;mform;;p">
</treenode>
</treenode>
<treenode node="Model_EgeDisciplines;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f0;6;1;233;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_EgeDisciplines.php;f0;8;1;117;;;;vpos;;vModel;;c;;r;;d0,9;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f6;12;17;12;;;;vpos;;v;;r&apos;ege_disciplines&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;26;2;29;;;;vpos;;v;;r;;d1,27;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;229;2;232;;;;vpos;;v;;r;;d1,230;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;196;2;201;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all ege discipline data.;;d1,197;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_EgeDisciplines.php;f8;74;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks ege discipline data.;;d1,75;;b1,0;;mform;;p">
</treenode>
<treenode node="checkDiscipline;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;218;2;227;;;;vpos;;vboolean;;r&#10;Definition&#10;    checkDiscipline()&#10;&#10;Description&#10;     Checks discipline.;;d1,219;;b1,0;;m">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;208;2;211;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes ege discipline.;;d1,209;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_EgeDisciplines.php;f8;56;2;67;;;;vpos;;vboolean;;r&#10;Definition&#10;    delete($form)&#10;&#10;Description&#10;     Deletes ege discipline from database.;;d1,57;;b1,0;;mform;;p">
</treenode>
<treenode node="exists;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;143;2;155;;;;vpos;;vboolean;;r&#10;Definition&#10;    exists()&#10;&#10;Description&#10;     Checks if discipline exists.;;d1,144;;b1,0;;m">
</treenode>
<treenode node="existsExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;162;2;175;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsExcept()&#10;&#10;Description&#10;     Checks if discipline exists except this ID.;;d1,163;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;108;2;123;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_EgeDisciplines.php;f8;44;2;49;;;;vpos;;varray;;r&#10;Definition&#10;    get($id)&#10;&#10;Description&#10;     Gets ege discipline from database.;;d1,45;;b1,0;;mid;;p">
</treenode>
<treenode node="getGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;130;2;136;;;;vpos;;varray;;r&#10;Definition&#10;    getGrid()&#10;&#10;Description&#10;     Gets ege disciplines for GRID.;;d1,131;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;89;2;101;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Ege disciplines grid.;;d1,90;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;36;2;82;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_EgeDisciplines.php;f8;19;2;37;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Ege disciplines rules.;;d1,20;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_EgeDisciplines.php;f8;182;2;189;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves ege discipline data to database.;;d1,183;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_ForeignLangs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f0;6;1;180;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f0;6;1;191;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f6;12;17;12;;;;vpos;;v;;r&apos;foreign_langs&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;22;2;25;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;24;2;27;;;;vpos;;v;;r;;d1,25;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;176;2;179;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;187;2;190;;;;vpos;;v;;r;;d1,188;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;159;2;164;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;170;2;175;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all foreign language data.;;d1,171;;b1,0;;m">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;171;2;174;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;182;2;185;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes foreign language.;;d1,183;;b1,0;;m">
</treenode>
<treenode node="existsLang;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;127;2;139;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;137;2;149;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsLang()&#10;&#10;Description&#10;     Checks if lang exists.;;d1,138;;b1,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;91;2;94;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;87;2;90;;;;vpos;;varray;;r&#10;Definition&#10;    get()&#10;&#10;Description&#10;     Gets foreign languages by ID.;;d1,88;;b1,0;;m">
</treenode>
<treenode node="getByResume;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;97;2;103;;;;vpos;;varray;;r&#10;Definition&#10;    getByResume()&#10;&#10;Description&#10;     Gets foreign languages by resume.;;d1,98;;b1,0;;m">
</treenode>
<treenode node="getByResumeList;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;110;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    getByResumeList()&#10;&#10;Description&#10;     Gets foreign languages by resume for List.;;d1,111;;b1,0;;m">
</treenode>
<treenode node="getByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;101;2;107;;;;vpos;;varray;;r&#10;Definition&#10;    getByUser()&#10;&#10;Description&#10;     Gets foreign languages by user.;;d1,116;;b1,0;;m">
</treenode>
<treenode node="getByUserGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;114;2;120;;;;vpos;;varray;;r&#10;Definition&#10;    getByUserGrid()&#10;&#10;Description&#10;     Gets foreign languages by resume for GRID.;;d1,129;;b1,0;;m">
</treenode>
<treenode node="getFirstByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;123;2;130;;;;vpos;;varray;;r&#10;Definition&#10;    getFirstByUser()&#10;&#10;Description&#10;     Gets first foreign language by resume.;;d1,124;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;73;2;84;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Foreign languages grid.;;d1,88;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;32;2;66;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;34;2;80;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Foreign languages rules.;;d1,35;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLanguages.php;f8;146;2;152;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_ForeignLangs.php;f8;156;2;163;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves foreign language data to database.;;d1,157;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_IndAchiev;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f0;13;1;181;;;;vpos;;vModel;;c;;r;;d0,14;;b0,0;;m">
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;128;2;180;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks education document data.;;d1,129;;b1,0;;mform;;p">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;102;2;111;;;;vpos;;vboolean;;r&#10;Definition&#10;    delete($form)&#10;&#10;Description&#10;     Deletes education document from database.;;d1,103;;b1,0;;mform;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;90;2;95;;;;vpos;;varray;;r&#10;Definition&#10;    get($id)&#10;&#10;Description&#10;     Gets education document from database.;;d1,91;;b1,0;;mid;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;24;2;83;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Education documents rules.;;d1,25;;b1,0;;m">
</treenode>
<treenode node="unsetScans;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;118;2;121;;;;vpos;;varray;;r&#10;Definition&#10;    unsetScans($form)&#10;&#10;Description&#10;     Unsets education document files.;;d1,119;;b1,0;;mform;;p">
</treenode>
</treenode>
<treenode node="Model_IndAchievs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchiev.php;f0;12;1;160;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchievs.php;f0;12;1;172;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f0;6;1;291;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f6;12;17;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f6;12;17;12;;;;vpos;;v;;r&apos;ind_achievs&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;26;2;29;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;28;2;31;;;;vpos;;v;;r;;d1,29;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;243;2;246;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;287;2;290;;;;vpos;;v;;r;;d1,288;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;223;2;228;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;267;2;272;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all individual achievment data.;;d1,268;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchiev.php;f8;112;2;159;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchievs.php;f8;112;2;171;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks education document data.;;d1,113;;b1,0;;mform;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;235;2;241;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;279;2;285;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes individual achievment.;;d1,280;;b1,0;;m">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchiev.php;f8;86;2;95;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchievs.php;f8;86;2;95;;;;vpos;;vboolean;;r&#10;Definition&#10;    delete($form)&#10;&#10;Description&#10;     Deletes individual achievment from database.;;d1,87;;b1,0;;mform;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchiev.php;f8;74;2;79;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;135;2;154;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchievs.php;f8;74;2;79;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;138;2;157;;;;vpos;;varray;;r&#10;Definition&#10;    get()&#10;&#10;Description&#10;     Gets individual achievment by ID.;;d1,139;;b1,0;;m">
</treenode>
<treenode node="getByNumb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;187;2;203;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;205;2;221;;;;vpos;;varray;;r&#10;Definition&#10;    getByNumb()&#10;&#10;Description&#10;     Gets individual achievment by achiev_type/series/numb.;;d1,206;;b1,0;;m">
</treenode>
<treenode node="getByNumbExcept;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;228;2;246;;;;vpos;;varray;;r&#10;Definition&#10;    getByNumbExcept()&#10;&#10;Description&#10;     Gets individual achievment by achiev_type/series/numb except this ID.;;d1,229;;b1,0;;m">
</treenode>
<treenode node="getByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;161;2;167;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;164;2;170;;;;vpos;;varray;;r&#10;Definition&#10;    getByUser()&#10;&#10;Description&#10;     Gets individual achievments by user.;;d1,165;;b1,0;;m">
</treenode>
<treenode node="getByUserCampaign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;177;2;185;;;;vpos;;varray;;r&#10;Definition&#10;    getByUserCampaign()&#10;&#10;Description&#10;     Gets individual achievments by user/admission campaign.;;d1,178;;b1,0;;m">
</treenode>
<treenode node="getByUserGrid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;174;2;180;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;192;2;198;;;;vpos;;varray;;r&#10;Definition&#10;    getByUserGrid()&#10;&#10;Description&#10;     Gets individual achievments by user for GRID.;;d1,193;;b1,0;;m">
</treenode>
<treenode node="grid;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;101;2;128;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;103;2;131;;;;vpos;;varray;;r&#10;Definition&#10;    grid()&#10;&#10;Description&#10;     Individual achievments grid.;;d1,104;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchiev.php;f8;23;2;67;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;36;2;94;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchievs.php;f8;23;2;67;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;38;2;96;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Individual achievments rules.;;d1,39;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;210;2;216;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_IndAchievs.php;f8;253;2;260;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves individual achievment data to database.;;d1,254;;b1,0;;m">
</treenode>
<treenode node="unsetScans;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchiev.php;f8;102;2;105;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_IndAchievs.php;f8;102;2;105;;;;vpos;;varray;;r&#10;Definition&#10;    unsetScans($form)&#10;&#10;Description&#10;     Unsets individual achievment files.;;d1,103;;b1,0;;mform;;p">
</treenode>
</treenode>
<treenode node="Model_Kladr;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f0;6;1;245;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f0;7;1;343;;;;vpos;;vDb_Helper;;c;;r;;d0,8;;b0,0;;m">
<treenode node="AREA;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f6;13;11;13;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f6;14;11;14;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CITY;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f6;14;11;14;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f6;15;11;15;;;;vpos;;v;;r3;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LOCATION;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f6;15;15;15;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f6;16;15;16;;;;vpos;;v;;r4;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="REGION;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f6;12;13;12;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f6;13;13;13;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STREET;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f6;16;13;16;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f6;17;13;17;;;;vpos;;v;;r5;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;25;2;28;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;22;2;26;;;;vpos;;v;;r;;d1,23;;b1,0;;m">
</treenode>
<treenode node="getAreaByRegion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;65;2;79;;;;vpos;;varray;;r&#10;Definition&#10;    getAreaByRegion() : array&#10;&#10;Description&#10;     Gets areas by region.;;d1,66;;b1,0;;m">
</treenode>
<treenode node="getAreaByRegionJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;59;2;86;;;;vpos;;vJSON;;r&#10;Definition&#10;    getAreaByRegionJSON($region) : string&#10;&#10;Description&#10;     Gets areas by region JSON.;;d1,60;;b1,0;;mregion;;p">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;35;2;42;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode($code) : array&#10;&#10;Description&#10;     Gets kladr by code.;;d1,36;;b1,0;;mcode;;p">
</treenode>
<treenode node="getByLevelJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;33;2;52;;;;vpos;;vJSON;;r&#10;Definition&#10;    getByLevelJSON($level) : string&#10;&#10;Description&#10;     Gets kladrs by level JSON.;;d1,34;;b1,0;;mlevel;;p">
</treenode>
<treenode node="getCityByRegion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;86;2;101;;;;vpos;;varray;;r&#10;Definition&#10;    getCityByRegion() : array&#10;&#10;Description&#10;     Gets cities by region.;;d1,87;;b1,0;;m">
</treenode>
<treenode node="getCityByRegionJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;93;2;121;;;;vpos;;vJSON;;r&#10;Definition&#10;    getCityByRegionJSON($region) : string&#10;&#10;Description&#10;     Gets cities by region JSON.;;d1,94;;b1,0;;mregion;;p">
</treenode>
<treenode node="getLocationByArea;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;131;2;147;;;;vpos;;varray;;r&#10;Definition&#10;    getLocationByArea() : array&#10;&#10;Description&#10;     Gets locations by area.;;d1,132;;b1,0;;m">
</treenode>
<treenode node="getLocationByAreaJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;202;2;231;;;;vpos;;vJSON;;r&#10;Definition&#10;    getLocationByAreaJSON($area) : string&#10;&#10;Description&#10;     Gets locations by area JSON.;;d1,203;;b1,0;;marea;;p">
</treenode>
<treenode node="getLocationByCity;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;154;2;172;;;;vpos;;varray;;r&#10;Definition&#10;    getLocationByCity() : array&#10;&#10;Description&#10;     Gets locations by city.;;d1,155;;b1,0;;m">
</treenode>
<treenode node="getLocationByCityJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;164;2;195;;;;vpos;;vJSON;;r&#10;Definition&#10;    getLocationByCityJSON($city) : string&#10;&#10;Description&#10;     Gets locations by city JSON.;;d1,165;;b1,0;;mcity;;p">
</treenode>
<treenode node="getLocationByRegion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;108;2;124;;;;vpos;;varray;;r&#10;Definition&#10;    getLocationByRegion() : array&#10;&#10;Description&#10;     Gets locations by region.;;d1,109;;b1,0;;m">
</treenode>
<treenode node="getLocationByRegionJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;128;2;157;;;;vpos;;vJSON;;r&#10;Definition&#10;    getLocationByRegionJSON($region) : string&#10;&#10;Description&#10;     Gets locations by region JSON.;;d1,129;;b1,0;;mregion;;p">
</treenode>
<treenode node="getRegionAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;49;2;58;;;;vpos;;varray;;r&#10;Definition&#10;    getRegionAll() : array&#10;&#10;Description&#10;     Gets all regions.;;d1,50;;b1,0;;m">
</treenode>
<treenode node="getStreetByCity;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;203;2;219;;;;vpos;;varray;;r&#10;Definition&#10;    getStreetByCity() : array&#10;&#10;Description&#10;     Gets streets by city.;;d1,204;;b1,0;;m">
</treenode>
<treenode node="getStreetByCityJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;275;2;304;;;;vpos;;vJSON;;r&#10;Definition&#10;    getStreetByCityJSON($city) : string&#10;&#10;Description&#10;     Gets streets by city JSON.;;d1,276;;b1,0;;mcity;;p">
</treenode>
<treenode node="getStreetByLocation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;226;2;244;;;;vpos;;varray;;r&#10;Definition&#10;    getStreetByLocation() : array&#10;&#10;Description&#10;     Gets streets by location.;;d1,227;;b1,0;;m">
</treenode>
<treenode node="getStreetByLocationJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;311;2;342;;;;vpos;;vJSON;;r&#10;Definition&#10;    getStreetByLocationJSON($location) : string&#10;&#10;Description&#10;     Gets streets by location JSON.;;d1,312;;b1,0;;mlocation;;p">
</treenode>
<treenode node="getStreetByRegion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Kladr.php;f8;179;2;196;;;;vpos;;varray;;r&#10;Definition&#10;    getStreetByRegion() : array&#10;&#10;Description&#10;     Gets streets by region.;;d1,180;;b1,0;;m">
</treenode>
<treenode node="getStreetByRegionJSON;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Kladr.php;f8;238;2;268;;;;vpos;;vJSON;;r&#10;Definition&#10;    getStreetByRegionJSON($region) : string&#10;&#10;Description&#10;     Gets streets by region JSON.;;d1,239;;b1,0;;mregion;;p">
</treenode>
</treenode>
<treenode node="Model_KladrAbbrs;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f0;6;1;242;;;;vpos;;vDb_Helper;;c;;r;;d0,7;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f6;12;17;12;;;;vpos;;v;;r&apos;kladr_abbrs&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;21;2;24;;;;vpos;;v;;r;;d1,22;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;238;2;241;;;;vpos;;v;;r;;d1,239;;b1,0;;m">
</treenode>
<treenode node="changeAbbr;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;116;2;122;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAbbr()&#10;&#10;Description&#10;     Changes KLADR abbr abbr.;;d1,117;;b1,0;;m">
</treenode>
<treenode node="changeLevel;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;103;2;109;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeLevel()&#10;&#10;Description&#10;     Changes KLADR abbr level.;;d1,104;;b1,0;;m">
</treenode>
<treenode node="changeName;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;90;2;96;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeName()&#10;&#10;Description&#10;     Changes KLADR abbr name.;;d1,91;;b1,0;;m">
</treenode>
<treenode node="clearAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;129;2;132;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearAll()&#10;&#10;Description&#10;     Removes all KLADR abbrs.;;d1,130;;b1,0;;m">
</treenode>
<treenode node="getByCode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;66;2;72;;;;vpos;;varray;;r&#10;Definition&#10;    getByCode()&#10;&#10;Description&#10;     Gets KLADR abbr by code.;;d1,67;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;139;2;236;;;;vpos;;varray;;r&#10;Definition&#10;    load($properties, $id_dict, $dict_name, $clear_load)&#10;&#10;Description&#10;     Loads KLADR abbrs.;;d1,140;;b1,0;;mproperties;;pid_dict;;pdict_name;;pclear_load;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;31;2;59;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     KLADR abbrs rules.;;d1,32;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_KladrAbbrs.php;f8;79;2;83;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves KLADR abbr data to database.;;d1,80;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_Login;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Login.php;f0;8;1;84;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_Login.php;f0;8;1;101;;;;vpos;;vModel;;c;;r;;d0,9;;b0,0;;m">
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;45;2;98;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Login.php;f8;46;2;83;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_Login.php;f8;46;2;100;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks login data.;;d1,47;;b1,0;;mform;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\NewFile.php;f8;18;2;38;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;19;2;39;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Login.php;f8;19;2;39;;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_Login.php;f8;19;2;39;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Login rules.;;d1,20;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_Main;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_Main.php;f0;8;1;64;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Main.php;f0;8;1;81;;;;vpos;;vModel;;c;;r;;d0,9;;b0,0;;m">
<treenode node="checkUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_Main.php;f8;19;2;38;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Main.php;f8;19;2;55;;;;vpos;;vboolean;;r&#10;Definition&#10;    checkUser()&#10;&#10;Description&#10;     Checks user.;;d1,20;;b1,0;;m">
</treenode>
<treenode node="logout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\backend\models\Model_Main.php;f8;45;2;63;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Main.php;f8;62;2;80;;;;vpos;;vvoid;;r&#10;Definition&#10;    logout()&#10;&#10;Description&#10;     Logs user out.;;d1,63;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_Passport;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f0;10;1;171;;;;vpos;;vDb_Helper;;c;;r;;d0,11;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f6;16;17;16;;;;vpos;;v;;r&apos;passport&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f8;34;2;37;;;;vpos;;v;;r;;d1,35;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f8;167;2;170;;;;vpos;;v;;r;;d1,168;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f8;160;2;165;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all passport data.;;d1,161;;b1,0;;m">
</treenode>
<treenode node="getByResume;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f8;133;2;139;;;;vpos;;varray;;r&#10;Definition&#10;    getByResume()&#10;&#10;Description&#10;     Gets passport by resume.;;d1,134;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f8;44;2;126;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Passport rules.;;d1,45;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Passport.php;f8;146;2;153;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves passport data to database.;;d1,147;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_Personal;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f0;16;1;211;;;;vpos;;vDb_Helper;;c;;r;;d0,17;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f6;22;17;22;;;;vpos;;v;;r&apos;personal&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;41;2;44;;;;vpos;;v;;r;;d1,42;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;207;2;210;;;;vpos;;v;;r;;d1,208;;b1,0;;m">
</treenode>
<treenode node="changeAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;200;2;205;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeAll()&#10;&#10;Description&#10;     Changes all personal data.;;d1,201;;b1,0;;m">
</treenode>
<treenode node="getByResume;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;146;2;152;;;;vpos;;varray;;r&#10;Definition&#10;    getByResume()&#10;&#10;Description&#10;     Gets personal by resume.;;d1,147;;b1,0;;m">
</treenode>
<treenode node="getCitizenshipByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;172;2;179;;;;vpos;;varray;;r&#10;Definition&#10;    getCitizenshipByUser()&#10;&#10;Description&#10;     Gets citizenship by user.;;d1,173;;b1,0;;m">
</treenode>
<treenode node="getFioByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;159;2;165;;;;vpos;;varray;;r&#10;Definition&#10;    getFioByUser()&#10;&#10;Description&#10;     Gets FIO by user.;;d1,160;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;51;2;139;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Personal rules.;;d1,52;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Personal.php;f8;186;2;193;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves personal data to database.;;d1,187;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_ResetPwd;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ResetPwd.php;f0;8;1;72;;;;vpos;;vModel;;c;;r;;d0,9;;b0,0;;m">
<treenode node="resetPwd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ResetPwd.php;f8;46;2;71;;;;vpos;;varray;;r&#10;Definition&#10;    resetPwd($form)&#10;&#10;Description&#10;     Resets user password.;;d1,47;;b1,0;;mform;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ResetPwd.php;f8;19;2;39;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Reset password rules.;;d1,20;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Model_ResetPwdRequest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ResetPwdRequest.php;f0;9;1;75;;;;vpos;;vModel;;c;;r;;d0,10;;b0,0;;m">
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ResetPwdRequest.php;f8;20;2;32;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Reset password request rules.;;d1,21;;b1,0;;m">
</treenode>
<treenode node="sendEmail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_ResetPwdRequest.php;f8;39;2;74;;;;vpos;;varray;;r&#10;Definition&#10;    sendEmail($form)&#10;&#10;Description&#10;     Sets password token and sends confirmation email.;;d1,40;;b1,0;;mform;;p">
</treenode>
</treenode>
<treenode node="Model_Resume;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f0;26;1;1356;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f0;9;1;320;;;;vpos;;vDb_Helper;;c;;r;;d0,10;;b0,0;;m">
<treenode node="STATUS_APPROVED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f9;23;25;23;;;;vpos;;v;;r3;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_APPROVED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f9;24;30;24;;;;vpos;;v;;r&apos;Принята&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_CREATED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f6;17;21;17;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_CREATED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f6;18;26;18;;;;vpos;;v;;r&apos;Новая&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_REJECTED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f9;25;25;25;;;;vpos;;v;;r4;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_REJECTED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f9;26;30;26;;;;vpos;;v;;r&apos;Отклонена&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_SAVED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f6;19;19;19;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_SAVED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f6;20;24;20;;;;vpos;;v;;r&apos;Сохранена&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_SENDED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f9;21;23;21;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_SENDED_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f9;22;28;22;;;;vpos;;v;;r&apos;Отправлена&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f6;15;17;15;;;;vpos;;v;;r&apos;resume&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f8;40;2;43;;;;vpos;;v;;r;;d1,41;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f8;316;2;319;;;;vpos;;v;;r;;d1,317;;b1,0;;m">
</treenode>
<treenode node="changeApp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f8;294;2;301;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeApp()&#10;&#10;Description&#10;     Changes resume app.;;d1,295;;b1,0;;m">
</treenode>
<treenode node="changeStatus;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f8;270;2;287;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeStatus()&#10;&#10;Description&#10;     Changes resume status.;;d1,271;;b1,0;;m">
</treenode>
<treenode node="check;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;858;2;1330;;;;vpos;;varray;;r&#10;Definition&#10;    check($form)&#10;&#10;Description&#10;     Checks resume data.;;d1,859;;b1,0;;mform;;p">
</treenode>
<treenode node="checkByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f8;308;2;314;;;;vpos;;vboolean;;r&#10;Definition&#10;    checkByUser()&#10;&#10;Description&#10;     Checks resume by user.;;d1,309;;b1,0;;m">
</treenode>
<treenode node="checkCertificateBirth;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;844;2;851;;;;vpos;;varray;;r&#10;Definition&#10;    checkCertificateBirth($form)&#10;&#10;Description&#10;     Checks birth certificate files.;;d1,845;;b1,0;;mform;;p">
</treenode>
<treenode node="checkIdForeign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;808;2;819;;;;vpos;;varray;;r&#10;Definition&#10;    checkIdForeign($form)&#10;&#10;Description&#10;     Checks id foreign files.;;d1,809;;b1,0;;mform;;p">
</treenode>
<treenode node="checkIdRussian;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;780;2;787;;;;vpos;;varray;;r&#10;Definition&#10;    checkIdRussian($form)&#10;&#10;Description&#10;     Checks id russian files.;;d1,781;;b1,0;;mform;;p">
</treenode>
<treenode node="checkPassportForeign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;794;2;801;;;;vpos;;varray;;r&#10;Definition&#10;    checkPassportForeign($form)&#10;&#10;Description&#10;     Checks passport foreign files.;;d1,795;;b1,0;;mform;;p">
</treenode>
<treenode node="checkPassportRussian;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;762;2;773;;;;vpos;;varray;;r&#10;Definition&#10;    checkPassportRussian($form)&#10;&#10;Description&#10;     Checks passport russian files.;;d1,763;;b1,0;;mform;;p">
</treenode>
<treenode node="checkResidencyForeign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;826;2;837;;;;vpos;;varray;;r&#10;Definition&#10;    checkResidencyForeign($form)&#10;&#10;Description&#10;     Checks residency foreign files.;;d1,827;;b1,0;;mform;;p">
</treenode>
<treenode node="getAddressReg;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;591;2;617;;;;vpos;;varray;;r&#10;Definition&#10;    getAddressReg($form)&#10;&#10;Description&#10;     Gets registration address.;;d1,592;;b1,0;;mform;;p">
</treenode>
<treenode node="getAddressRes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;624;2;650;;;;vpos;;varray;;r&#10;Definition&#10;    getAddressRes($form)&#10;&#10;Description&#10;     Gets residential address.;;d1,625;;b1,0;;mform;;p">
</treenode>
<treenode node="getByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f8;115;2;234;;;;vpos;;varray;;r&#10;Definition&#10;    getByUser()&#10;&#10;Description&#10;     Gets resume by user.;;d1,116;;b1,0;;m">
</treenode>
<treenode node="getForeignLangs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;692;2;702;;;;vpos;;varray;;r&#10;Definition&#10;    getForeignLangs($form)&#10;&#10;Description&#10;     Gets foreign languages.;;d1,693;;b1,0;;mform;;p">
</treenode>
<treenode node="getStatusByUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f8;241;2;247;;;;vpos;;varray;;r&#10;Definition&#10;    getStatusByUser()&#10;&#10;Description&#10;     Gets status by user.;;d1,242;;b1,0;;m">
</treenode>
<treenode node="resetAddressReg;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;553;2;565;;;;vpos;;varray;;r&#10;Definition&#10;    resetAddressReg($form)&#10;&#10;Description&#10;     Resets registration address.;;d1,554;;b1,0;;mform;;p">
</treenode>
<treenode node="resetAddressRes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;572;2;584;;;;vpos;;varray;;r&#10;Definition&#10;    resetAddressRes($form)&#10;&#10;Description&#10;     Resets residential address.;;d1,573;;b1,0;;mform;;p">
</treenode>
<treenode node="resetForeignLangs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;675;2;685;;;;vpos;;varray;;r&#10;Definition&#10;    resetForeignLangs($form)&#10;&#10;Description&#10;     Resets foreign languages.;;d1,676;;b1,0;;mform;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;37;2;280;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f8;50;2;108;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Contacts rules.;;d1,51;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Resume.php;f8;254;2;263;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves resume data to database.;;d1,255;;b1,0;;m">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;1337;2;1355;;;;vpos;;varray;;r&#10;Definition&#10;    send($form)&#10;&#10;Description&#10;     Sends resume data.;;d1,1338;;b1,0;;mform;;p">
</treenode>
<treenode node="setAddressReg;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;483;2;511;;;;vpos;;varray;;r&#10;Definition&#10;    setAddressReg($form)&#10;&#10;Description&#10;     Sets registration address.;;d1,484;;b1,0;;mform;;p">
</treenode>
<treenode node="setAddressRes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;518;2;546;;;;vpos;;varray;;r&#10;Definition&#10;    setAddressRes($form)&#10;&#10;Description&#10;     Sets residential address.;;d1,519;;b1,0;;mform;;p">
</treenode>
<treenode node="setForeignLangs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;657;2;668;;;;vpos;;varray;;r&#10;Definition&#10;    setForeignLangs($form)&#10;&#10;Description&#10;     Sets foreign languages.;;d1,658;;b1,0;;mform;;p">
</treenode>
<treenode node="showStatus;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f15;287;2;303;;;;vpos;;vstring;;r&#10;Definition&#10;    showStatus($status)&#10;&#10;Description&#10;     Shows status.;;d1,288;;b1,5;;mstatus;;p">
</treenode>
<treenode node="unsetScans;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;709;2;755;;;;vpos;;varray;;r&#10;Definition&#10;    unsetScans($form)&#10;&#10;Description&#10;     Unsets resume files.;;d1,710;;b1,0;;mform;;p">
</treenode>
<treenode node="validateAgreement;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;337;2;343;;;;vpos;;varray;;r&#10;Definition&#10;    validateAgreement($form)&#10;&#10;Description&#10;     Validates agreement.;;d1,338;;b1,0;;mform;;p">
</treenode>
<treenode node="validateFormAdvanced;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;310;2;330;;;;vpos;;varray;;r&#10;Definition&#10;    validateFormAdvanced($form)&#10;&#10;Description&#10;     Validates resume advanced.;;d1,311;;b1,0;;mform;;p">
</treenode>
<treenode node="validatePassport;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;350;2;433;;;;vpos;;varray;;r&#10;Definition&#10;    validatePassport($form)&#10;&#10;Description&#10;     Validates passport.;;d1,351;;b1,0;;mform;;p">
</treenode>
<treenode node="validatePassportOld;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Resume.php;f8;440;2;476;;;;vpos;;varray;;r&#10;Definition&#10;    validatePassportOld($form)&#10;&#10;Description&#10;     Validates old passport.;;d1,441;;b1,0;;mform;;p">
</treenode>
</treenode>
<treenode node="Model_Scans;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f0;6;1;242;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Scans.php;f0;11;1;193;;;;vpos;;vModel;;c;;r;;d0,12;;b0,0;;m">
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f6;12;17;12;;;;vpos;;v;;r&apos;scans&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;23;2;26;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;27;2;30;;;;vpos;;v;;r;;d1,28;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;53;2;56;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;238;2;241;;;;vpos;;v;;r;;d1,239;;b1,0;;m">
</treenode>
<treenode node="clear;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;46;2;51;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;206;2;211;;;;vpos;;vinteger;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Removes scan.;;d1,207;;b1,0;;m">
</treenode>
<treenode node="clearbyDoc;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;218;2;236;;;;vpos;;vinteger;;r&#10;Definition&#10;    clearbyDoc($doc_code)&#10;&#10;Description&#10;     Removes scans by document.;;d1,219;;b1,0;;mdoc_code;;p">
</treenode>
<treenode node="createRules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Scans.php;f15;22;2;50;;;;vpos;;varray;;r&#10;Definition&#10;    createRules($doc_code)&#10;&#10;Description&#10;     Creates scan rules.;;d1,23;;b1,5;;mdoc_code;;p">
</treenode>
<treenode node="delete;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;17;2;21;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Scans.php;f8;183;2;192;;;;vpos;;vboolean;;r&#10;Definition&#10;    delete($form)&#10;&#10;Description&#10;     Deletes scan from database.;;d1,184;;b1,0;;mform;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;108;2;111;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Scans.php;f8;57;2;62;;;;vpos;;vboolean;;r&#10;Definition&#10;    get($form)&#10;&#10;Description&#10;     Gets scans from database.;;d1,58;;b1,0;;mform;;p">
</treenode>
<treenode node="getByDoc;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;118;2;125;;;;vpos;;varray;;r&#10;Definition&#10;    getByDoc()&#10;&#10;Description&#10;     Gets scan by document.;;d1,119;;b1,0;;m">
</treenode>
<treenode node="getByDocrow;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;148;2;155;;;;vpos;;varray;;r&#10;Definition&#10;    getByDocrow($doc_code)&#10;&#10;Description&#10;     Gets scans by document row.;;d1,149;;b1,0;;mdoc_code;;p">
</treenode>
<treenode node="getByDocrowFull;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;162;2;186;;;;vpos;;varray;;r&#10;Definition&#10;    getByDocrowFull($doc_code, $id_row)&#10;&#10;Description&#10;     Gets scans by document row FULL.;;d1,163;;b1,0;;mdoc_code;;pid_row;;p">
</treenode>
<treenode node="getByDocScan;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;132;2;141;;;;vpos;;varray;;r&#10;Definition&#10;    getByDocScan($doc_code, $doc_id, $scan_code)&#10;&#10;Description&#10;     Gets scan by document/scan.;;d1,133;;b1,0;;mdoc_code;;pdoc_id;;pscan_code;;p">
</treenode>
<treenode node="push;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Scans.php;f15;69;2;116;;;;vpos;;varray;;r&#10;Definition&#10;    push($doc_code, $scan_code, $form)&#10;&#10;Description&#10;     Pushes scan.;;d1,70;;b1,5;;mdoc_code;;pscan_code;;pform;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;37;2;101;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Scans rules.;;d1,38;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\NewFile.php;f8;33;2;39;;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_Scans.php;f8;193;2;199;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves scan data to database.;;d1,194;;b1,0;;m">
</treenode>
<treenode node="unpush;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Scans.php;f15;123;2;141;;;;vpos;;varray;;r&#10;Definition&#10;    unpush($doc_code, $scan_code, $form)&#10;&#10;Description&#10;     Unpushes scan.;;d1,124;;b1,5;;mdoc_code;;pscan_code;;pform;;p">
</treenode>
<treenode node="unsets;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Scans.php;f15;148;2;176;;;;vpos;;varray;;r&#10;Definition&#10;    unsets($doc_code, $form)&#10;&#10;Description&#10;     Unsets scans.;;d1,149;;b1,5;;mdoc_code;;pform;;p">
</treenode>
</treenode>
<treenode node="Model_Signup;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Signup.php;f0;9;1;153;;;;vpos;;vModel;;c;;r;;d0,10;;b0,0;;m">
<treenode node="activate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;117;2;136;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Signup.php;f8;133;2;152;;;;vpos;;vboolean;;r&#10;Definition&#10;    activate($activation, $email)&#10;&#10;Description&#10;     Activates user account.;;d1,134;;b1,0;;mactivation;;pemail;;p">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;17;2;64;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Signup.php;f8;20;2;67;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     Signup rules.;;d1,21;;b1,0;;m">
</treenode>
<treenode node="signup;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\NewFile.php;f8;71;2;110;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\models\Model_Signup.php;f8;74;2;126;;;;vpos;;varray;;r&#10;Definition&#10;    signup($form)&#10;&#10;Description&#10;     Saves user data.;;d1,75;;b1,0;;mform;;p">
</treenode>
</treenode>
<treenode node="Model_User;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f0;16;1;273;;;;vpos;;vDb_Helper;;c;;r;;d0,17;;b0,0;;m">
<treenode node="ROLE_ADMIN;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f6;26;17;26;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ROLE_GUEST;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f6;24;17;24;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ROLE_MANAGER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f6;25;19;25;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_ACTIVE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f9;29;23;29;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_DELETED;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f9;30;24;30;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_NOTACTIVE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f6;28;23;28;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TABLE_NAME;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f6;22;17;22;;;;vpos;;v;;r&apos;user&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;44;2;47;;;;vpos;;v;;r;;d1,45;;b1,0;;m">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;269;2;272;;;;vpos;;v;;r;;d1,270;;b1,0;;m">
</treenode>
<treenode node="changePwd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;216;2;223;;;;vpos;;vboolean;;r&#10;Definition&#10;    changePwd()&#10;&#10;Description&#10;     Changes user password.;;d1,217;;b1,0;;m">
</treenode>
<treenode node="changePwdToken;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;202;2;209;;;;vpos;;vboolean;;r&#10;Definition&#10;    changePwdToken()&#10;&#10;Description&#10;     Changes user password token.;;d1,203;;b1,0;;m">
</treenode>
<treenode node="changeStatus;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;188;2;195;;;;vpos;;vboolean;;r&#10;Definition&#10;    changeStatus()&#10;&#10;Description&#10;     Changes user status.;;d1,189;;b1,0;;m">
</treenode>
<treenode node="existsEmail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;160;2;168;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsEmail()&#10;&#10;Description&#10;     Checks if email exists.;;d1,161;;b1,0;;m">
</treenode>
<treenode node="existsUsername;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;145;2;153;;;;vpos;;vboolean;;r&#10;Definition&#10;    existsUsername()&#10;&#10;Description&#10;     Checks if username exists.;;d1,146;;b1,0;;m">
</treenode>
<treenode node="getByEmail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;135;2;138;;;;vpos;;varray;;r&#10;Definition&#10;    getByEmail()&#10;&#10;Description&#10;     Gets user by email.;;d1,136;;b1,0;;m">
</treenode>
<treenode node="getByUsername;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;125;2;128;;;;vpos;;varray;;r&#10;Definition&#10;    getByUsername()&#10;&#10;Description&#10;     Gets user by name.;;d1,126;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;54;2;118;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;     User rules.;;d1,55;;b1,0;;m">
</treenode>
<treenode node="save;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;175;2;181;;;;vpos;;vinteger;;r&#10;Definition&#10;    save()&#10;&#10;Description&#10;     Saves user data to database.;;d1,176;;b1,0;;m">
</treenode>
<treenode node="setUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;230;2;253;;;;vpos;;vvoid;;r&#10;Definition&#10;    setUser()&#10;&#10;Description&#10;     Sets user session.;;d1,231;;b1,0;;m">
</treenode>
<treenode node="unsetUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\common\models\Model_User.php;f8;260;2;267;;;;vpos;;vvoid;;r&#10;Definition&#10;    unsetUser()&#10;&#10;Description&#10;     Unsets user session.;;d1,261;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Pdf;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f0;16;1;601;;;;vpos;;v;;r&#10;Definition&#10;    class Pdf&#10;&#10;Description&#10;     Pdf;;d0,17;;b0,0;;m">
<treenode node="TMP_PREFIX;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f9;19;20;19;;;;vpos;;v;;r&apos;tmp_php_pdftk_&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;81;5;98;;;;vpos;;v;;r&#10;Definition&#10;    __construct($pdf = null, $options = array())&#10;&#10;Description&#10;      a pdf filename or Pdf instance or an array of filenames/instances indexed by a handle. The array values can also be arrays of the form array($filename, $password) if some files are password protected.&#10;&#10;Parameters:&#10;    string|Pdf|array $pdf - a pdf filename or Pdf instance or an array of filenames/instances indexed by a handle&#10;    array $options - Options to pass to set on the Command instance, e;;d4,82;;b1,0;;mstring|Pdf|array $pdf;;parray $options;;p">
</treenode>
<treenode node="addFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;107;5;123;;;;vpos;;vPdf;;r&#10;Definition&#10;    addFile($name, $handle = null, $password = null)&#10;&#10;Description&#10;      the PDF filename or Pdf instance to add for processing&#10;&#10;Parameters:&#10;    string|Pdf $name - the PDF filename or Pdf instance to add for processing&#10;    string|null $handle - one or more uppercase letters A&#10;    string|null $password - the owner (or user) password if any&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,108;;b1,0;;mstring|Pdf $name;;pstring|null $handle;;pstring|null $password;;p">
</treenode>
<treenode node="allow;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;358;5;363;;;;vpos;;vPdf;;r&#10;Definition&#10;    allow($permissions = null)&#10;&#10;Description&#10;     Set PDF permissions&#10;&#10;Parameters:&#10;    string|null $permissions - list of space separated permissions or null for none&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,359;;b1,0;;mstring|null $permissions;;p">
</treenode>
<treenode node="background;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;254;5;261;;;;vpos;;vPdf;;r&#10;Definition&#10;    background($file)&#10;&#10;Description&#10;     Apply a PDF as watermark to the background of a single PDF file.&#10;&#10;Parameters:&#10;    string $file - name of the background PDF file&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,255;;b1,0;;mstring $file;;p">
</treenode>
<treenode node="burst;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;197;5;203;;;;vpos;;vbool;;r&#10;Definition&#10;    burst($filepattern = null)&#10;&#10;Description&#10;     Split the PDF document into pages&#10;&#10;Parameters:&#10;    string|null $filepattern - the output name in sprintf format or null for default &apos;pg_%04d&#10;&#10;Return:&#10;   whether the burst operation was successful;;d4,198;;b1,0;;mstring|null $filepattern;;p">
</treenode>
<treenode node="cat;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;151;5;157;;;;vpos;;vPdf;;r&#10;Definition&#10;    cat($start, $end = null, $handle = null, $qualifier = null, $rotation = null)&#10;&#10;Description&#10;     Assemble (catenate) pages from the input files.&#10;&#10;Parameters:&#10;    int|string|array $start - the start page number or an array of page numbers&#10;    int|string|null $end - the end page number or null for single page (or list if $start is an array)&#10;    string|null $handle - the handle of the file to use&#10;    string|null $qualifier - the page number qualifier, either &apos;even&apos; or &apos;odd&apos; or null for none&#10;    string $rotation - the rotation to apply to the pages&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,152;;b1,0;;mint|string|array $start;;pint|string|null $end;;pstring|null $handle;;pstring|null $qualifier;;pstring $rotation;;p">
</treenode>
<treenode node="compress;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;383;5;388;;;;vpos;;vPdf;;r&#10;Definition&#10;    compress($compress = true)&#10;&#10;Description&#10;     Restore/remove compression&#10;&#10;Parameters:&#10;    bool $compress - whether to restore (default) or remove the compression&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,384;;b1,0;;mbool $compress;;p">
</treenode>
<treenode node="constrainSingleFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f14;579;5;584;;;;vpos;;v;;r&#10;Definition&#10;    constrainSingleFile()&#10;&#10;Description&#10;     Make sure, that only one file is present;;d4,580;;b2,0;;m">
</treenode>
<treenode node="dropXfa;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;429;5;434;;;;vpos;;vPdf;;r&#10;Definition&#10;    dropXfa()&#10;&#10;Description&#10;     Drop XFA data from forms created with newer Acrobat.&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,430;;b1,0;;m">
</treenode>
<treenode node="dropXmp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;445;5;450;;;;vpos;;vPdf;;r&#10;Definition&#10;    dropXmp()&#10;&#10;Description&#10;     Drop XMP meta data&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,446;;b1,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;555;5;574;;;;vpos;;vbool;;r&#10;Definition&#10;    execute()&#10;&#10;Description&#10;     Execute the pdftk command and store the output file to a temporary location or $this-&gt;_output if set. You should probably never call this method unless you only need a temporary PDF file as result.&#10;&#10;Return:&#10;   whether the command was executed successfully;;d4,556;;b1,0;;m">
</treenode>
<treenode node="fillForm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;229;5;244;;;;vpos;;vPdf;;r&#10;Definition&#10;    fillForm($data, $encoding = &apos;UTF-8&apos;, $dropXfa = true, $format = &apos;xfdf&apos;)&#10;&#10;Description&#10;     Fill a PDF form&#10;&#10;Parameters:&#10;    string|array $data - either a XFDF/FDF filename or an array with form field data (name =&gt; value)&#10;    string $encoding - the encoding of the data&#10;    bool $dropXfa - whether to drop XFA forms (see dropXfa())&#10;    string $format - the file format to use for form filling when passing an array in `$data`&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,230;;b1,0;;mstring|array $data;;pstring $encoding;;pbool $dropXfa;;pstring $format;;p">
</treenode>
<treenode node="flatten;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;370;5;375;;;;vpos;;vPdf;;r&#10;Definition&#10;    flatten()&#10;&#10;Description&#10;     Flatten the PDF form fields values into a single PDF file.&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,371;;b1,0;;m">
</treenode>
<treenode node="generateFdfFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;211;5;217;;;;vpos;;vbool;;r&#10;Definition&#10;    generateFdfFile($name)&#10;&#10;Description&#10;     Generate the FDF file for a single PDF file.&#10;&#10;Parameters:&#10;    string $name - name of the FDF file&#10;&#10;Return:&#10;   whether the pdf is generated successful;;d4,212;;b1,0;;mstring $name;;p">
</treenode>
<treenode node="getCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;523;5;529;;;;vpos;;vCommand;;r&#10;Definition&#10;    getCommand()&#10;&#10;Description&#10;      the command instance that executes pdftk&#10;&#10;Return:&#10;   the command instance that executes pdftk;;d4,524;;b1,0;;m">
</treenode>
<treenode node="getData;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;316;5;329;;;;vpos;;vstring;;r&#10;Definition&#10;    getData($utf8 = true)&#10;&#10;Description&#10;      whether to dump the data UTF-8 encoded. Default is true.&#10;&#10;Parameters:&#10;    bool $utf8 - whether to dump the data UTF-8 encoded&#10;&#10;Return:&#10;   |bool meta data about the PDF or false on failure;;d4,317;;b1,0;;mbool $utf8;;p">
</treenode>
<treenode node="getDataFields;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;335;5;348;;;;vpos;;vDataFields;;r&#10;Definition&#10;    getDataFields($utf8 = true)&#10;&#10;Description&#10;      whether to dump the data UTF-8 encoded. Default is true.&#10;&#10;Parameters:&#10;    bool $utf8 - whether to dump the data UTF-8 encoded&#10;&#10;Return:&#10;   |bool data about the PDF form fields or false on failure;;d4,336;;b1,0;;mbool $utf8;;p">
</treenode>
<treenode node="getError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;545;5;548;;;;vpos;;vstring;;r&#10;Definition&#10;    getError()&#10;&#10;Description&#10;      the error message or an empty string if none&#10;&#10;Return:&#10;   the error message or an empty string if none;;d4,546;;b1,0;;m">
</treenode>
<treenode node="getTmpFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;534;5;540;;;;vpos;;vFile;;r&#10;Definition&#10;    getTmpFile()&#10;&#10;Description&#10;      the temporary output file instance&#10;&#10;Return:&#10;   the temporary output file instance;;d4,535;;b1,0;;m">
</treenode>
<treenode node="keepId;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;397;5;402;;;;vpos;;vPdf;;r&#10;Definition&#10;    keepId($id = &apos;first&apos;)&#10;&#10;Description&#10;     When combining multiple PDFs, use either the first or last ID in the output. If not called, a new ID is created.&#10;&#10;Parameters:&#10;    string $id - , either &apos;first&apos; (default) or &apos;last&apos;&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,398;;b1,0;;mstring $id;;p">
</treenode>
<treenode node="multiBackground;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;271;5;277;;;;vpos;;vPdf;;r&#10;Definition&#10;    multiBackground($file)&#10;&#10;Description&#10;     Apply multiple PDF pages as watermark to the corresponding pages of a single PDF file.&#10;&#10;Parameters:&#10;    string $file - name of the background PDF file&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,272;;b1,0;;mstring $file;;p">
</treenode>
<treenode node="multiStamp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;304;5;310;;;;vpos;;vPdf;;r&#10;Definition&#10;    multiStamp($file)&#10;&#10;Description&#10;     Add multiple pages from $file as overlay to the corresponding pages of a single PDF file.&#10;&#10;Parameters:&#10;    string $file - name of the PDF file to add as overlay&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,305;;b1,0;;mstring $file;;p">
</treenode>
<treenode node="needAppearances;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;413;5;418;;;;vpos;;vPdf;;r&#10;Definition&#10;    needAppearances()&#10;&#10;Description&#10;     Set need_appearances flag in PDF&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,414;;b1,0;;m">
</treenode>
<treenode node="nextHandle;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f14;589;5;600;;;;vpos;;vstring;;r&#10;Definition&#10;    nextHandle()&#10;&#10;Description&#10;      the next handle in the series A, B, C, ... Z, AA, AB...&#10;&#10;Return:&#10;   the next handle in the series A, B, C, ;;d4,590;;b2,0;;m">
</treenode>
<treenode node="passwordEncryption;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;478;5;483;;;;vpos;;vPdf;;r&#10;Definition&#10;    passwordEncryption($strength = 128)&#10;&#10;Description&#10;      the password encryption strength. Default is 128&#10;&#10;Parameters:&#10;    int $strength - the password encryption strength&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,479;;b1,0;;mint $strength;;p">
</treenode>
<treenode node="saveAs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;491;5;502;;;;vpos;;vbool;;r&#10;Definition&#10;    saveAs($name)&#10;&#10;Description&#10;     Execute the operation and save the output file&#10;&#10;Parameters:&#10;    string $name - of output file&#10;&#10;Return:&#10;   whether the PDF could be processed and saved;;d4,492;;b1,0;;mstring $name;;p">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;511;5;518;;;;vpos;;vbool;;r&#10;Definition&#10;    send($filename=null,$inline=false)&#10;&#10;Description&#10;     Send PDF to client, either inline or as download (triggers PDF creation)&#10;&#10;Parameters:&#10;    string|null $filename - the filename to send&#10;    bool $inline - whether to force inline display of the PDF, even if filename is present&#10;&#10;Return:&#10;   whether PDF was created successfully;;d4,512;;b1,0;;mstring|null $filename;;pbool $inline;;p">
</treenode>
<treenode node="setPassword;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;456;5;461;;;;vpos;;vPdf;;r&#10;Definition&#10;    setPassword($password)&#10;&#10;Description&#10;      the owner password to set on the output PDF&#10;&#10;Parameters:&#10;    string $password - the owner password to set on the output PDF&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,457;;b1,0;;mstring $password;;p">
</treenode>
<treenode node="setUserPassword;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;467;5;472;;;;vpos;;vPdf;;r&#10;Definition&#10;    setUserPassword($password)&#10;&#10;Description&#10;      the user password to set on the output PDF&#10;&#10;Parameters:&#10;    string $password - the user password to set on the output PDF&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,468;;b1,0;;mstring $password;;p">
</treenode>
<treenode node="shuffle;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;182;5;188;;;;vpos;;vPdf;;r&#10;Definition&#10;    shuffle($start, $end = null, $handle = null, $qualifier = null, $rotation = null)&#10;&#10;Description&#10;     Shuffle pages from the input files.&#10;&#10;Parameters:&#10;    string $handle - the handle of the input file to use&#10;    int|array $start - the start page number or an array of page numbers&#10;    int|null $end - the end page number or null for single page (or list if $start is an array)&#10;    string|null $qualifier - the page number qualifier, either &apos;even&apos; or &apos;odd&apos; or null for none&#10;    string $rotation - the rotation to apply to the pages&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,183;;b1,0;;mstring $handle;;pint|array $start;;pint|null $end;;pstring|null $qualifier;;pstring $rotation;;p">
</treenode>
<treenode node="stamp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\Pdf.php;f11;287;5;294;;;;vpos;;vPdf;;r&#10;Definition&#10;    stamp($file)&#10;&#10;Description&#10;     Add $file as overlay to a single PDF file.&#10;&#10;Parameters:&#10;    string $file - name of the PDF file to add as overlay&#10;&#10;Return:&#10;   the pdf instance for method chaining;;d4,288;;b1,0;;mstring $file;;p">
</treenode>
</treenode>
<treenode node="PDF_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\pdf_helper.php;f0;6;1;31;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
<treenode node="PDF_PASSWORD;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\pdf_helper.php;f6;12;19;12;;;;vpos;;v;;r&apos;nopainnotrain&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="create;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\pdf_helper.php;f15;19;2;30;;;;vpos;;vnothing;;r&#10;Definition&#10;    create($data, $layout, $output)&#10;&#10;Description&#10;     Creates PDF.;;d1,20;;b1,5;;mdata;;playout;;poutput;;p">
</treenode>
</treenode>
<treenode node="PdfTest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f0;4;1;704;;;;vpos;;vTestCase;;c;;r;;d0,5;;b0,0;;m">
<treenode node="getDocument1;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f14;554;5;557;;;;vpos;;v;;r;;d4,555;;b2,0;;m">
</treenode>
<treenode node="getDocument2;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f14;559;5;562;;;;vpos;;v;;r;;d4,560;;b2,0;;m">
</treenode>
<treenode node="getFdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f14;576;5;580;;;;vpos;;v;;r;;d4,577;;b2,0;;m">
</treenode>
<treenode node="getFilledForm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f14;570;5;574;;;;vpos;;v;;r;;d4,571;;b2,0;;m">
</treenode>
<treenode node="getForm;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f14;564;5;568;;;;vpos;;v;;r;;d4,565;;b2,0;;m">
</treenode>
<treenode node="getOutFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f14;582;5;586;;;;vpos;;v;;r;;d4,583;;b2,0;;m">
</treenode>
<treenode node="setUp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;6;5;9;;;;vpos;;v;;r;;d4,7;;b1,0;;m">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;10;5;13;;;;vpos;;v;;r;;d4,11;;b1,0;;m">
</treenode>
<treenode node="testCanAddFiles;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;114;5;131;;;;vpos;;v;;r;;d4,115;;b1,0;;m">
</treenode>
<treenode node="testCanBurstWithFilePattern;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;241;5;256;;;;vpos;;v;;r;;d4,242;;b1,0;;m">
</treenode>
<treenode node="testCanBurstWithoutPattern;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;224;5;239;;;;vpos;;v;;r;;d4,225;;b1,0;;m">
</treenode>
<treenode node="testCanCatFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;150;5;170;;;;vpos;;v;;r;;d4,151;;b1,0;;m">
</treenode>
<treenode node="testCanCatFiles;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;172;5;196;;;;vpos;;v;;r;;d4,173;;b1,0;;m">
</treenode>
<treenode node="testCanCompress;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;417;5;429;;;;vpos;;v;;r;;d4,418;;b1,0;;m">
</treenode>
<treenode node="testCanCreateFdfFileFromPdf;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;258;5;266;;;;vpos;;v;;r;;d4,259;;b1,0;;m">
</treenode>
<treenode node="testCanDropXfa;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;473;5;485;;;;vpos;;v;;r;;d4,474;;b1,0;;m">
</treenode>
<treenode node="testCanFillFormFromData;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;268;5;293;;;;vpos;;v;;r;;d4,269;;b1,0;;m">
</treenode>
<treenode node="testCanFillFormFromFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;295;5;313;;;;vpos;;v;;r;;d4,296;;b1,0;;m">
</treenode>
<treenode node="testCanFlatten;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;403;5;415;;;;vpos;;v;;r;;d4,404;;b1,0;;m">
</treenode>
<treenode node="testCanGetData;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;531;5;539;;;;vpos;;v;;r;;d4,532;;b1,0;;m">
</treenode>
<treenode node="testCanGetDataFields;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;541;5;552;;;;vpos;;v;;r;;d4,542;;b1,0;;m">
</treenode>
<treenode node="testCanKeepFinalId;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;459;5;471;;;;vpos;;v;;r;;d4,460;;b1,0;;m">
</treenode>
<treenode node="testCanKeepFirstId;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;445;5;457;;;;vpos;;v;;r;;d4,446;;b1,0;;m">
</treenode>
<treenode node="testCanMultiStamp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;360;5;373;;;;vpos;;v;;r;;d4,361;;b1,0;;m">
</treenode>
<treenode node="testCanPassDocumentsToConstructor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;49;5;64;;;;vpos;;v;;r;;d4,50;;b1,0;;m">
</treenode>
<treenode node="testCanPassDocumentsWithPasswordToConstructor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;95;5;113;;;;vpos;;v;;r;;d4,96;;b1,0;;m">
</treenode>
<treenode node="testCanPassDocumentToConstructor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;17;5;28;;;;vpos;;v;;r;;d4,18;;b1,0;;m">
</treenode>
<treenode node="testCanPassPdfInstancesToConstructor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;65;5;94;;;;vpos;;v;;r;;d4,66;;b1,0;;m">
</treenode>
<treenode node="testCanPassPdfInstanceToConstructor;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;29;5;48;;;;vpos;;v;;r;;d4,30;;b1,0;;m">
</treenode>
<treenode node="testCanPerformEmptyOperation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;133;5;148;;;;vpos;;v;;r;;d4,134;;b1,0;;m">
</treenode>
<treenode node="testCanRemovePermissions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;375;5;387;;;;vpos;;v;;r;;d4,376;;b1,0;;m">
</treenode>
<treenode node="testCanSetBackground;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;315;5;328;;;;vpos;;v;;r;;d4,316;;b1,0;;m">
</treenode>
<treenode node="testCanSetMultiBackground;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;330;5;343;;;;vpos;;v;;r;;d4,331;;b1,0;;m">
</treenode>
<treenode node="testCanSetPasswords;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;487;5;500;;;;vpos;;v;;r;;d4,488;;b1,0;;m">
</treenode>
<treenode node="testCanSetPermissions;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;389;5;401;;;;vpos;;v;;r;;d4,390;;b1,0;;m">
</treenode>
<treenode node="testCanShuffleFiles;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;198;5;222;;;;vpos;;v;;r;;d4,199;;b1,0;;m">
</treenode>
<treenode node="testCanStamp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;345;5;358;;;;vpos;;v;;r;;d4,346;;b1,0;;m">
</treenode>
<treenode node="testCanUncompress;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;431;5;443;;;;vpos;;v;;r;;d4,432;;b1,0;;m">
</treenode>
<treenode node="testSet128BitEncryption;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;502;5;514;;;;vpos;;v;;r;;d4,503;;b1,0;;m">
</treenode>
<treenode node="testSet40BitEncryption;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\PdfTest.php;f11;516;5;528;;;;vpos;;v;;r;;d4,517;;b1,0;;m">
</treenode>
</treenode>
<treenode node="phpCAS;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f0;277;1;1860;;;;vpos;;v;;r&#10;Definition&#10;    class phpCAS&#10;&#10;Description&#10;     The phpCAS class is a simple container for the phpCAS library. It provides CAS authentication for web applications written in PHP.;;d0,278;;b0,0;;m">
<treenode node="_validateClientExists;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f19;1830;5;1835;;;;vpos;;vvoid;;r&#10;Definition&#10;    _validateClientExists()&#10;&#10;Description&#10;     Checks if a client already exists;;d4,1831;;b3,5;;m">
</treenode>
<treenode node="_validateProxyExists;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f19;1844;5;1849;;;;vpos;;vvoid;;r&#10;Definition&#10;    _validateProxyExists()&#10;&#10;Description&#10;     Checks of a proxy client aready exists;;d4,1845;;b3,5;;m">
</treenode>
<treenode node="addRebroadcastHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1809;5;1821;;;;vpos;;vvoid;;r&#10;Definition&#10;    addRebroadcastHeader($header)&#10;&#10;Description&#10;     This method is used to add header parameters when rebroadcasting pgtIou/pgtId or logoutRequest.&#10;&#10;Parameters:&#10;    String $header - Header to send when rebroadcasting;;d4,1810;;b1,5;;mString $header;;p">
</treenode>
<treenode node="addRebroadcastNode;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1786;5;1799;;;;vpos;;vvoid;;r&#10;Definition&#10;    addRebroadcastNode($rebroadcastNodeUrl)&#10;&#10;Description&#10;     Add a pgtIou/pgtId and logoutRequest rebroadcast node.&#10;&#10;Parameters:&#10;    string $rebroadcastNodeUrl - The rebroadcast node URL;;d4,1787;;b1,5;;mstring $rebroadcastNodeUrl;;p">
</treenode>
<treenode node="allowProxyChain;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1744;5;1756;;;;vpos;;vvoid;;r&#10;Definition&#10;    allowProxyChain(CAS_ProxyChain_Interface $proxy_chain)&#10;&#10;Description&#10;     If you want your service to be proxied you have to enable it (default disabled) and define an accepable list of proxies that are allowed to proxy your service.&#10;&#10;Parameters:&#10;    CAS_ProxyChain_Interface $proxy_chain - A proxy-chain that will be;;d4,1745;;b1,5;;mCAS_ProxyChain_Interface $proxy_chain;;p">
</treenode>
<treenode node="checkAuthentication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1072;5;1084;;;;vpos;;vtrue;;r&#10;Definition&#10;    checkAuthentication()&#10;&#10;Description&#10;     This method is called to check if the user is already authenticated locally or has a global cas session. A already existing cas session is determined by a cas gateway call.(cas login call without any interactive prompt)&#10;&#10;Return:&#10;   when the user is authenticated, false when a previous;;d4,1073;;b1,5;;m">
</treenode>
<treenode node="client;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;337;5;364;;;;vpos;;va;;r&#10;Definition&#10;    client($server_version, $server_hostname,&#10;        $server_port, $server_uri, $changeSessionID = true&#10;    )&#10;&#10;Description&#10;     phpCAS client initializer.&#10;&#10;Parameters:&#10;    string $server_version - the version of the CAS server&#10;    string $server_hostname - the hostname of the CAS server&#10;    string $server_port - the port the CAS server is running on&#10;    string $server_uri - the URI the CAS server is responding on&#10;    bool $changeSessionID - Allow phpCAS to change the session_id (Single&#10;&#10;Return:&#10;   newly created CAS_Client object;;d6,339;;b1,5;;mstring $server_version;;pstring $server_hostname;;pstring $server_port;;pstring $server_uri;;pbool $changeSessionID;;p">
</treenode>
<treenode node="error;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;542;5;569;;;;vpos;;vvoid;;r&#10;Definition&#10;    error($msg)&#10;&#10;Description&#10;     This method is used by interface methods to print an error and where the function was originally called from.&#10;&#10;Parameters:&#10;    string $msg - the message to print;;d4,543;;b1,5;;mstring $msg;;p">
</treenode>
<treenode node="forceAuthentication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1093;5;1111;;;;vpos;;vbool;;r&#10;Definition&#10;    forceAuthentication()&#10;&#10;Description&#10;     This method is called to force authentication if the user was not already authenticated. If the user is not authenticated, halt by redirecting to the CAS server.&#10;&#10;Return:&#10;   Authentication;;d4,1094;;b1,5;;m">
</treenode>
<treenode node="getAttribute;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1252;5;1261;;;;vpos;;vmixed;;r&#10;Definition&#10;    getAttribute($key)&#10;&#10;Description&#10;     Answer an attribute for the authenticated user.&#10;&#10;Parameters:&#10;    string $key - attribute name&#10;&#10;Return:&#10;   string for a single value or an array if multiple values exist;;d4,1253;;b1,5;;mstring $key;;p">
</treenode>
<treenode node="getAttributes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1193;5;1202;;;;vpos;;varray;;r&#10;Definition&#10;    getAttributes()&#10;&#10;Description&#10;     Answer attributes about the authenticated user.;;d4,1194;;b1,5;;m">
</treenode>
<treenode node="getProxiedService;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;863;5;876;;;;vpos;;vCAS_ProxiedService;;r&#10;Definition&#10;    getProxiedService ($type)&#10;&#10;Description&#10;     Answer a proxy-authenticated service handler.&#10;&#10;Parameters:&#10;    string $type - The service type;;d4,864;;b1,5;;mstring $type;;p">
</treenode>
<treenode node="getProxies;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1767;5;1772;;;;vpos;;varray;;r&#10;Definition&#10;    getProxies ()&#10;&#10;Description&#10;     Answer an array of proxies that are sitting in front of this application. This method will only return a non-empty array if we have received and validated a Proxy Ticket.;;d4,1768;;b1,5;;m">
</treenode>
<treenode node="getServerLoginURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1284;5;1289;;;;vpos;;vthe;;r&#10;Definition&#10;    getServerLoginURL()&#10;&#10;Description&#10;     This method returns the URL to be used to login. or phpCAS::isAuthenticated().&#10;&#10;Return:&#10;   login name of the authenticated user;;d4,1285;;b1,5;;m">
</treenode>
<treenode node="getServerLogoutURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1392;5;1397;;;;vpos;;vthe;;r&#10;Definition&#10;    getServerLogoutURL()&#10;&#10;Description&#10;     This method returns the URL to be used to login. or phpCAS::isAuthenticated().&#10;&#10;Return:&#10;   login name of the authenticated user;;d4,1393;;b1,5;;m">
</treenode>
<treenode node="getServiceURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1584;5;1588;;;;vpos;;vstring;;r&#10;Definition&#10;    getServiceURL()&#10;&#10;Description&#10;     Get the URL that is set as the CAS service parameter.&#10;&#10;Return:&#10;   Service Url;;d4,1585;;b1,5;;m">
</treenode>
<treenode node="getUser;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1174;5;1183;;;;vpos;;vstring;;r&#10;Definition&#10;    getUser()&#10;&#10;Description&#10;     This method returns the CAS user&apos;s login name.&#10;&#10;Return:&#10;   the login name of the authenticated user;;d4,1175;;b1,5;;m">
</treenode>
<treenode node="getVerbose;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;495;5;498;;;;vpos;;vboot;;r&#10;Definition&#10;    getVerbose()&#10;&#10;Description&#10;     Show is verbose mode is on&#10;&#10;Return:&#10;   verbose;;d4,496;;b1,5;;m">
</treenode>
<treenode node="getVersion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;713;5;716;;;;vpos;;vthe;;r&#10;Definition&#10;    getVersion()&#10;&#10;Description&#10;     This method returns the phpCAS version.&#10;&#10;Return:&#10;   phpCAS version;;d4,714;;b1,5;;m">
</treenode>
<treenode node="handleLogoutRequests;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1271;5;1276;;;;vpos;;vvoid;;r&#10;Definition&#10;    handleLogoutRequests($check_client = true, $allowed_clients = false)&#10;&#10;Description&#10;     Handle logout requests.&#10;&#10;Parameters:&#10;    bool $check_client - additional safety check&#10;    array $allowed_clients - array of allowed clients;;d4,1272;;b1,5;;mbool $check_client;;parray $allowed_clients;;p">
</treenode>
<treenode node="hasAttribute;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1232;5;1241;;;;vpos;;vbool;;r&#10;Definition&#10;    hasAttribute($key)&#10;&#10;Description&#10;     Answer true if an attribute exists for the authenticated user.&#10;&#10;Parameters:&#10;    string $key - attribute name;;d4,1233;;b1,5;;mstring $key;;p">
</treenode>
<treenode node="hasAttributes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1212;5;1221;;;;vpos;;vbool;;r&#10;Definition&#10;    hasAttributes()&#10;&#10;Description&#10;     Answer true if there are attributes for the authenticated user.;;d4,1213;;b1,5;;m">
</treenode>
<treenode node="initializeProxiedService;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;890;5;899;;;;vpos;;vvoid;;r&#10;Definition&#10;    initializeProxiedService (CAS_ProxiedService $proxiedService)&#10;&#10;Description&#10;     Initialize a proxied-service handler with the proxy-ticket it should use.&#10;&#10;Parameters:&#10;    CAS_ProxiedService $proxiedService - Proxied Service Handler;;d4,891;;b1,5;;mCAS_ProxiedService $proxiedService;;p">
</treenode>
<treenode node="isAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1138;5;1151;;;;vpos;;vtrue;;r&#10;Definition&#10;    isAuthenticated()&#10;&#10;Description&#10;     This method is called to check if the user is authenticated (previously or by tickets given in the URL).&#10;&#10;Return:&#10;   when the user is authenticated;;d4,1139;;b1,5;;m">
</treenode>
<treenode node="isInitialized;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;415;5;418;;;;vpos;;vbool;;r&#10;Definition&#10;    isInitialized ()&#10;&#10;Description&#10;     Answer whether or not the client or proxy has been initialized;;d4,416;;b1,5;;m">
</treenode>
<treenode node="isSessionAuthenticated;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1160;5;1165;;;;vpos;;vbool;;r&#10;Definition&#10;    isSessionAuthenticated()&#10;&#10;Description&#10;     Checks whether authenticated based on $_SESSION. Useful to avoid server calls.&#10;&#10;Return:&#10;   true if authenticated, false otherwise;;d4,1161;;b1,5;;m">
</treenode>
<treenode node="log;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;508;5;531;;;;vpos;;vvoid;;r&#10;Definition&#10;    log($str)&#10;&#10;Description&#10;     Logs a string in debug mode.&#10;&#10;Parameters:&#10;    string $str - the string to write;;d4,509;;b1,5;;mstring $str;;p">
</treenode>
<treenode node="logout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1429;5;1452;;;;vpos;;vvoid;;r&#10;Definition&#10;    logout($params = &quot;&quot;)&#10;&#10;Description&#10;     This method is used to logout from CAS.&#10;&#10;Parameters:&#10;    string $params - an array that contains the optional url and;;d4,1430;;b1,5;;mstring $params;;p">
</treenode>
<treenode node="logoutWithRedirectService;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1462;5;1473;;;;vpos;;vvoid;;r&#10;Definition&#10;    logoutWithRedirectService($service)&#10;&#10;Description&#10;     This method is used to logout from CAS. Halts by redirecting to the CAS server.&#10;&#10;Parameters:&#10;    string $service - a URL that will be transmitted to the CAS server;;d4,1463;;b1,5;;mstring $service;;p">
</treenode>
<treenode node="logoutWithRedirectServiceAndUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1512;5;1532;;;;vpos;;vvoid;;r&#10;Definition&#10;    logoutWithRedirectServiceAndUrl($service, $url)&#10;&#10;Description&#10;     This method is used to logout from CAS. Halts by redirecting to the CAS server.&#10;&#10;Parameters:&#10;    string $service - a URL that will be transmitted to the CAS server&#10;    string $url - a URL that will be transmitted to the CAS server;;d4,1513;;b1,5;;mstring $service;;pstring $url;;p">
</treenode>
<treenode node="logoutWithUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1485;5;1498;;;;vpos;;vvoid;;r&#10;Definition&#10;    logoutWithUrl($url)&#10;&#10;Description&#10;     This method is used to logout from CAS. Halts by redirecting to the CAS server.&#10;&#10;Parameters:&#10;    string $url - a URL that will be transmitted to the CAS server;;d4,1486;;b1,5;;mstring $url;;p">
</treenode>
<treenode node="proxy;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;381;5;408;;;;vpos;;va;;r&#10;Definition&#10;    proxy($server_version, $server_hostname,&#10;        $server_port, $server_uri, $changeSessionID = true&#10;    )&#10;&#10;Description&#10;     phpCAS proxy initializer.&#10;&#10;Parameters:&#10;    string $server_version - the version of the CAS server&#10;    string $server_hostname - the hostname of the CAS server&#10;    string $server_port - the port the CAS server is running on&#10;    string $server_uri - the URI the CAS server is responding on&#10;    bool $changeSessionID - Allow phpCAS to change the session_id (Single&#10;&#10;Return:&#10;   newly created CAS_Client object;;d6,383;;b1,5;;mstring $server_version;;pstring $server_hostname;;pstring $server_port;;pstring $server_uri;;pbool $changeSessionID;;p">
</treenode>
<treenode node="renewAuthentication;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1118;5;1130;;;;vpos;;vvoid;;r&#10;Definition&#10;    renewAuthentication()&#10;&#10;Description&#10;     This method is called to renew the authentication.;;d4,1119;;b1,5;;m">
</treenode>
<treenode node="retrievePT;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1599;5;1608;;;;vpos;;vstring;;r&#10;Definition&#10;    retrievePT($target_service, &amp; $err_code, &amp; $err_msg)&#10;&#10;Description&#10;     Retrieve a Proxy Ticket from the CAS server.&#10;&#10;Parameters:&#10;    string $target_service - Url string of service to proxy&#10;    string - &amp;$err_code      error code&#10;    string - &amp;$err_msg       error message&#10;&#10;Return:&#10;   Proxy Ticket;;d4,1600;;b1,5;;mstring $target_service;;pstring;;pstring;;p">
</treenode>
<treenode node="serviceMail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;950;5;963;;;;vpos;;vobject;;r&#10;Definition&#10;    serviceMail($url, $service, $flags, &amp; $err_code, &amp; $err_msg, &amp; $pt)&#10;&#10;Description&#10;     This method is used to access an IMAP/POP3/NNTP service.&#10;&#10;Parameters:&#10;    string $url - a string giving the URL of the service,&#10;    string $service - a string giving for CAS retrieve Proxy ticket&#10;    string $flags - options given to imap_open()&#10;    string - &amp;$err_code an error code Possible values are&#10;    string - &amp;$err_msg  an error message on failure&#10;    string - &amp;$pt       the Proxy Ticket (PT) retrieved from the CAS&#10;&#10;Return:&#10;   IMAP stream on success, false otherwise (in this later;;d4,951;;b1,5;;mstring $url;;pstring $service;;pstring $flags;;pstring;;pstring;;pstring;;p">
</treenode>
<treenode node="serviceWeb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;916;5;929;;;;vpos;;vbool;;r&#10;Definition&#10;    serviceWeb($url, &amp; $err_code, &amp; $output)&#10;&#10;Description&#10;     This method is used to access an HTTP[S] service.&#10;&#10;Parameters:&#10;    string $url - the service to access&#10;    string - &amp;$err_code an error code Possible values are&#10;    string - &amp;$output   the output of the service (also used to give an&#10;&#10;Return:&#10;   true on success, false otherwise (in this later case,;;d4,917;;b1,5;;mstring $url;;pstring;;pstring;;p">
</treenode>
<treenode node="setCacheTimesForAuthRecheck;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;985;5;994;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCacheTimesForAuthRecheck($n)&#10;&#10;Description&#10;     Set the times authentication will be cached before really accessing the CAS server in gateway mode: - -1: check only once, and then never again (until you pree login) - 0: always check - n: check every &quot;n&quot; time&#10;&#10;Parameters:&#10;    int $n - an integer;;d4,986;;b1,5;;mint $n;;p">
</treenode>
<treenode node="setCasAttributeParserCallback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1008;5;1013;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCasAttributeParserCallback($function, array $additionalArgs = array())&#10;&#10;Description&#10;     Set a callback function to be run when receiving CAS attributes&#10;&#10;Parameters:&#10;    string $function - Callback function&#10;    array $additionalArgs - optional array of arguments;;d4,1009;;b1,5;;mstring $function;;parray $additionalArgs;;p">
</treenode>
<treenode node="setCasClient;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1856;5;1859;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCasClient(\CAS_Client $client)&#10;&#10;Description&#10;     For testing purposes, use this method to set the client to a test double;;d4,1857;;b1,5;;mclient;;p">
</treenode>
<treenode node="setCasServerCACert;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1619;5;1631;;;;vpos;;vvoid;;r&#10;Definition&#10;    setCasServerCACert($cert, $validate_cn = true)&#10;&#10;Description&#10;     Set the certificate of the CAS server CA and if the CN should be properly verified.&#10;&#10;Parameters:&#10;    string $cert - CA certificate file name&#10;    bool $validate_cn - Validate CN in certificate (default true);;d4,1620;;b1,5;;mstring $cert;;pbool $validate_cn;;p">
</treenode>
<treenode node="setDebug;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;438;5;469;;;;vpos;;vvoid;;r&#10;Definition&#10;    setDebug($filename = &apos;&apos;)&#10;&#10;Description&#10;     Set/unset debug mode&#10;&#10;Parameters:&#10;    string $filename - the name of the file used for logging, or false;;d4,439;;b1,5;;mstring $filename;;p">
</treenode>
<treenode node="setExtraCurlOption;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1678;5;1685;;;;vpos;;vvoid;;r&#10;Definition&#10;    setExtraCurlOption($key, $value)&#10;&#10;Description&#10;     Change CURL options. CURL is used to connect through HTTPS to CAS server&#10;&#10;Parameters:&#10;    string $key - the option key&#10;    string $value - the value to set;;d4,1679;;b1,5;;mstring $key;;pstring $value;;p">
</treenode>
<treenode node="setFixedCallbackURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1543;5;1555;;;;vpos;;vvoid;;r&#10;Definition&#10;    setFixedCallbackURL($url = &apos;&apos;)&#10;&#10;Description&#10;     Set the fixed URL that will be used by the CAS server to transmit the PGT. When this method is not called, a phpCAS script uses its own URL for the callback.&#10;&#10;Parameters:&#10;    string $url - the URL;;d4,1544;;b1,5;;mstring $url;;p">
</treenode>
<treenode node="setFixedServiceURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1565;5;1577;;;;vpos;;vvoid;;r&#10;Definition&#10;    setFixedServiceURL($url)&#10;&#10;Description&#10;     Set the fixed URL that will be set as the CAS service parameter. When this method is not called, a phpCAS script uses its own URL.&#10;&#10;Parameters:&#10;    string $url - the URL;;d4,1566;;b1,5;;mstring $url;;p">
</treenode>
<treenode node="setHTMLFooter;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;752;5;761;;;;vpos;;vvoid;;r&#10;Definition&#10;    setHTMLFooter($footer)&#10;&#10;Description&#10;     This method sets the HTML footer used for all outputs.&#10;&#10;Parameters:&#10;    string $footer - the HTML footer;;d4,753;;b1,5;;mstring $footer;;p">
</treenode>
<treenode node="setHTMLHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;734;5;743;;;;vpos;;vvoid;;r&#10;Definition&#10;    setHTMLHeader($header)&#10;&#10;Description&#10;     This method sets the HTML header used for all outputs.&#10;&#10;Parameters:&#10;    string $header - the HTML header;;d4,735;;b1,5;;mstring $header;;p">
</treenode>
<treenode node="setLang;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;688;5;697;;;;vpos;;vvoid;;r&#10;Definition&#10;    setLang($lang)&#10;&#10;Description&#10;     This method is used to set the language used by phpCAS.&#10;&#10;Parameters:&#10;    string $lang - string representing the language;;d4,689;;b1,5;;mstring $lang;;p">
</treenode>
<treenode node="setNoCasServerValidation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1638;5;1646;;;;vpos;;vvoid;;r&#10;Definition&#10;    setNoCasServerValidation()&#10;&#10;Description&#10;     Set no SSL validation for the CAS server.;;d4,1639;;b1,5;;m">
</treenode>
<treenode node="setNoClearTicketsFromUrl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1658;5;1665;;;;vpos;;vvoid;;r&#10;Definition&#10;    setNoClearTicketsFromUrl()&#10;&#10;Description&#10;     Disable the removal of a CAS-Ticket from the URL when authenticating DISABLING POSES A SECURITY RISK: We normally remove the ticket by an additional redirect as a security precaution to prevent a ticket in the HTTP_REFERRER or be carried over in the URL parameter;;d4,1659;;b1,5;;m">
</treenode>
<treenode node="setPGTStorage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;780;5;791;;;;vpos;;vvoid;;r&#10;Definition&#10;    setPGTStorage($storage)&#10;&#10;Description&#10;     This method can be used to set a custom PGT storage object.&#10;&#10;Parameters:&#10;    CAS_PGTStorage $storage - a PGT storage object that inherits from the;;d4,781;;b1,5;;mCAS_PGTStorage $storage;;p">
</treenode>
<treenode node="setPGTStorageDb;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;810;5;822;;;;vpos;;vvoid;;r&#10;Definition&#10;    setPGTStorageDb($dsn_or_pdo, $username=&apos;&apos;,&#10;        $password=&apos;&apos;, $table=&apos;&apos;, $driver_options=null&#10;    )&#10;&#10;Description&#10;     This method is used to tell phpCAS to store the response of the CAS server to PGT requests in a database.&#10;&#10;Parameters:&#10;    string $dsn_or_pdo - a dsn string to use for creating a PDO&#10;    string $username - the username to use when connecting to the&#10;    string $password - the password to use when connecting to the&#10;    string $table - the table to use for storing and retrieving&#10;    string $driver_options - any driver options to use when connecting;;d6,812;;b1,5;;mstring $dsn_or_pdo;;pstring $username;;pstring $password;;pstring $table;;pstring $driver_options;;p">
</treenode>
<treenode node="setPGTStorageFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;832;5;843;;;;vpos;;vvoid;;r&#10;Definition&#10;    setPGTStorageFile($path = &apos;&apos;)&#10;&#10;Description&#10;     This method is used to tell phpCAS to store the response of the CAS server to PGT requests onto the filesystem.&#10;&#10;Parameters:&#10;    string $path - the path where the PGT&apos;s should be stored;;d4,833;;b1,5;;mstring $path;;p">
</treenode>
<treenode node="setPostAuthenticateCallback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1034;5;1039;;;;vpos;;vvoid;;r&#10;Definition&#10;    setPostAuthenticateCallback ($function, array $additionalArgs = array())&#10;&#10;Description&#10;     Set a callback function to be run when a user authenticates.&#10;&#10;Parameters:&#10;    string $function - Callback function&#10;    array $additionalArgs - optional array of arguments;;d4,1035;;b1,5;;mstring $function;;parray $additionalArgs;;p">
</treenode>
<treenode node="setServerLoginURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1299;5;1311;;;;vpos;;vvoid;;r&#10;Definition&#10;    setServerLoginURL($url = &apos;&apos;)&#10;&#10;Description&#10;     Set the login URL of the CAS server.&#10;&#10;Parameters:&#10;    string $url - the login URL;;d4,1300;;b1,5;;mstring $url;;p">
</treenode>
<treenode node="setServerLogoutURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1407;5;1419;;;;vpos;;vvoid;;r&#10;Definition&#10;    setServerLogoutURL($url = &apos;&apos;)&#10;&#10;Description&#10;     Set the logout URL of the CAS server.&#10;&#10;Parameters:&#10;    string $url - the logout URL;;d4,1408;;b1,5;;mstring $url;;p">
</treenode>
<treenode node="setServerProxyValidateURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1351;5;1363;;;;vpos;;vvoid;;r&#10;Definition&#10;    setServerProxyValidateURL($url = &apos;&apos;)&#10;&#10;Description&#10;     Set the proxyValidate URL of the CAS server. Used for all CAS versions of proxy URL validations Examples: CAS 1.0 http://www.exemple.com/ CAS 2.0 http://www.exemple.com/proxyValidate CAS 3.0 http://www.exemple.com/p3/proxyValidate&#10;&#10;Parameters:&#10;    string $url - the proxyValidate URL;;d4,1352;;b1,5;;mstring $url;;p">
</treenode>
<treenode node="setServerSamlValidateURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1372;5;1384;;;;vpos;;vvoid;;r&#10;Definition&#10;    setServerSamlValidateURL($url = &apos;&apos;)&#10;&#10;Description&#10;     Set the samlValidate URL of the CAS server.&#10;&#10;Parameters:&#10;    string $url - the samlValidate URL;;d4,1373;;b1,5;;mstring $url;;p">
</treenode>
<treenode node="setServerServiceValidateURL;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1325;5;1337;;;;vpos;;vvoid;;r&#10;Definition&#10;    setServerServiceValidateURL($url = &apos;&apos;)&#10;&#10;Description&#10;     Set the serviceValidate URL of the CAS server. Used for all CAS versions of URL validations. Examples: CAS 1.0 http://www.exemple.com/validate CAS 2.0 http://www.exemple.com/validateURL CAS 3.0 http://www.exemple.com/p3/serviceValidate&#10;&#10;Parameters:&#10;    string $url - the serviceValidate URL;;d4,1326;;b1,5;;mstring $url;;p">
</treenode>
<treenode node="setSessionIdSalt;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f19;1701;6;1706;;;;vpos;;vvoid;;r&#10;Definition&#10;    setSessionIdSalt($salt)&#10;&#10;Description&#10;     Set a salt/seed for the session-id hash to make it harder to guess.&#10;&#10;Parameters:&#10;    string $salt - The salt to combine with the session ticket;;d52,1701;;b1,5;;mstring $salt;;p">
</treenode>
<treenode node="setSingleSignoutCallback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;1055;5;1060;;;;vpos;;vvoid;;r&#10;Definition&#10;    setSingleSignoutCallback ($function, array $additionalArgs = array())&#10;&#10;Description&#10;     Set a callback function to be run when a single-signout request is received. The callback function will be passed a $logoutTicket as its first parameter, followed by any $additionalArgs you pass. The $logoutTicket parameter is an opaque string that can be used to map a session-id to the logout request in order to support single-signout in applications that manage their own sessions (rather than letting phpCAS start and destroy the session).&#10;&#10;Parameters:&#10;    string $function - Callback function&#10;    array $additionalArgs - optional array of arguments;;d4,1056;;b1,5;;mstring $function;;parray $additionalArgs;;p">
</treenode>
<treenode node="setVerbose;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;480;5;487;;;;vpos;;vvoid;;r&#10;Definition&#10;    setVerbose($verbose)&#10;&#10;Description&#10;     Enable verbose errors messages in the website output This is a security relevant since internal status info may leak an may help an attacker. Default is therefore false&#10;&#10;Parameters:&#10;    bool $verbose - enable verbose output;;d4,481;;b1,5;;mbool $verbose;;p">
</treenode>
<treenode node="trace;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;578;5;582;;;;vpos;;vvoid;;r&#10;Definition&#10;    trace($str)&#10;&#10;Description&#10;     This method is used to log something in debug mode.&#10;&#10;Parameters:&#10;    string $str - string to log;;d4,579;;b1,5;;mstring $str;;p">
</treenode>
<treenode node="traceBegin;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;590;5;627;;;;vpos;;vvoid;;r&#10;Definition&#10;    traceBegin()&#10;&#10;Description&#10;     This method is used to indicate the start of the execution of a function in debug mode.;;d4,591;;b1,5;;m">
</treenode>
<treenode node="traceEnd;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;637;5;653;;;;vpos;;vvoid;;r&#10;Definition&#10;    traceEnd($res = &apos;&apos;)&#10;&#10;Description&#10;     This method is used to indicate the end of the execution of a function in debug mode.&#10;&#10;Parameters:&#10;    string $res - the result of the function;;d4,638;;b1,5;;mstring $res;;p">
</treenode>
<treenode node="traceExit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f18;660;5;667;;;;vpos;;vvoid;;r&#10;Definition&#10;    traceExit()&#10;&#10;Description&#10;     This method is used to indicate the end of the execution of the program;;d4,661;;b1,5;;m">
</treenode>
</treenode>
<treenode node="PHPMailer;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f0;30;1;4419;;;;vpos;;v;;r&#10;Definition&#10;    class PHPMailer&#10;&#10;Description&#10;     PHPMailer - PHP email creation and transport class.;;d0,31;;b0,0;;m">
<treenode node="MAX_LINE_LENGTH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f9;706;25;706;;;;vposint;;v;;r998;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STD_LINE_LENGTH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f9;716;25;716;;;;vposint;;v;;r76;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STOP_CONTINUE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f9;685;23;685;;;;vposint;;v;;r1;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STOP_CRITICAL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f9;692;23;692;;;;vposint;;v;;r2;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STOP_MESSAGE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f9;678;22;678;;;;vposint;;v;;r0;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="VERSION;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f9;671;17;671;;;;vposstring;;v;;r&apos;6.0.3&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;723;5;730;;;;vpos;;v;;r&#10;Definition&#10;    __construct($exceptions = null)&#10;&#10;Description&#10;     Constructor.&#10;&#10;Parameters:&#10;    bool $exceptions - Should we throw external exceptions?;;d4,724;;b1,0;;mbool $exceptions;;p">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;735;5;739;;;;vpos;;v;;r&#10;Definition&#10;    __destruct()&#10;&#10;Description&#10;     Destructor.;;d4,736;;b1,0;;m">
</treenode>
<treenode node="_mime_types;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;3817;5;3938;;;;vpos;;vstring;;r&#10;Definition&#10;    _mime_types($ext = &apos;&apos;)&#10;&#10;Description&#10;     Get the MIME type for a file extension.&#10;&#10;Parameters:&#10;    string $ext - File extension&#10;&#10;Return:&#10;   MIME type of file;;d4,3818;;b1,5;;mstring $ext;;p">
</treenode>
<treenode node="addAddress;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;899;5;902;;;;vpos;;vbool;;r&#10;Definition&#10;    addAddress($address, $name = &apos;&apos;)&#10;&#10;Description&#10;     Add a &quot;To&quot; address.&#10;&#10;Parameters:&#10;    string $address - The email address to send to&#10;    string $name&#10;&#10;Return:&#10;   true on success, false if address already used or invalid in some way;;d4,900;;b1,0;;mstring $address;;pstring $name;;p">
</treenode>
<treenode node="addAnAddress;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;1012;5;1055;;;;vpos;;vbool;;r&#10;Definition&#10;    addAnAddress($kind, $address, $name = &apos;&apos;)&#10;&#10;Description&#10;     Add an address to one of the recipient arrays or to the ReplyTo array. Addresses that have been added already return false, but do not throw exceptions.&#10;&#10;Parameters:&#10;    string $kind - One of &apos;to&apos;, &apos;cc&apos;, &apos;bcc&apos;, or &apos;ReplyTo&apos;&#10;    string $address - The email address to send, resp&#10;    string $name&#10;&#10;Return:&#10;   true on success, false if address already used or invalid in some way;;d4,1013;;b2,0;;mstring $kind;;pstring $address;;pstring $name;;p">
</treenode>
<treenode node="addAttachment;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2756;5;2794;;;;vpos;;vbool;;r&#10;Definition&#10;    addAttachment($path, $name = &apos;&apos;, $encoding = &apos;base64&apos;, $type = &apos;&apos;, $disposition = &apos;attachment&apos;)&#10;&#10;Description&#10;     Add an attachment from a path on the filesystem. Never use a user-supplied path to a file! Returns false if the file could not be found or read.&#10;&#10;Parameters:&#10;    string $path - Path to the attachment&#10;    string $name - Overrides the attachment name&#10;    string $encoding - File encoding (see $Encoding)&#10;    string $type - File extension (MIME) type&#10;    string $disposition - Disposition to use;;d4,2757;;b1,0;;mstring $path;;pstring $name;;pstring $encoding;;pstring $type;;pstring $disposition;;p">
</treenode>
<treenode node="addBCC;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;925;5;928;;;;vpos;;vbool;;r&#10;Definition&#10;    addBCC($address, $name = &apos;&apos;)&#10;&#10;Description&#10;     Add a &quot;BCC&quot; address.&#10;&#10;Parameters:&#10;    string $address - The email address to send to&#10;    string $name&#10;&#10;Return:&#10;   true on success, false if address already used or invalid in some way;;d4,926;;b1,0;;mstring $address;;pstring $name;;p">
</treenode>
<treenode node="addCC;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;912;5;915;;;;vpos;;vbool;;r&#10;Definition&#10;    addCC($address, $name = &apos;&apos;)&#10;&#10;Description&#10;     Add a &quot;CC&quot; address.&#10;&#10;Parameters:&#10;    string $address - The email address to send to&#10;    string $name&#10;&#10;Return:&#10;   true on success, false if address already used or invalid in some way;;d4,913;;b1,0;;mstring $address;;pstring $name;;p">
</treenode>
<treenode node="addCustomHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3652;5;3660;;;;vpos;;v;;r&#10;Definition&#10;    addCustomHeader($name, $value = null)&#10;&#10;Description&#10;     Add a custom header. $name value can be overloaded to contain both header name and value (name:value).&#10;&#10;Parameters:&#10;    string $name - Custom header name&#10;    string|null $value - Header value;;d4,3653;;b1,0;;mstring $name;;pstring|null $value;;p">
</treenode>
<treenode node="addEmbeddedImage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3280;5;3311;;;;vpos;;vbool;;r&#10;Definition&#10;    addEmbeddedImage($path, $cid, $name = &apos;&apos;, $encoding = &apos;base64&apos;, $type = &apos;&apos;, $disposition = &apos;inline&apos;)&#10;&#10;Description&#10;     Add an embedded (inline) attachment from a file. This can include images, sounds, and just about any other document type. These differ from &apos;regular&apos; attachments in that they are intended to be displayed inline with the message, not just attached for download. This is used in HTML messages that embed the images the HTML refers to using the $cid value. Never use a user-supplied path to a file!&#10;&#10;Parameters:&#10;    string $path - Path to the attachment&#10;    string $cid - Content ID of the attachment;s Use this to reference&#10;    string $name - Overrides the attachment name&#10;    string $encoding - File encoding (see $Encoding)&#10;    string $type - File MIME type&#10;    string $disposition - Disposition to use&#10;&#10;Return:&#10;   True on successfully adding an attachment;;d4,3281;;b1,0;;mstring $path;;pstring $cid;;pstring $name;;pstring $encoding;;pstring $type;;pstring $disposition;;p">
</treenode>
<treenode node="addOrEnqueueAnAddress;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;957;5;998;;;;vpos;;vbool;;r&#10;Definition&#10;    addOrEnqueueAnAddress($kind, $address, $name)&#10;&#10;Description&#10;     Add an address to one of the recipient arrays or to the ReplyTo array. Because PHPMailer can&apos;t validate addresses with an IDN without knowing the PHPMailer::$CharSet (that can still be modified after calling this function), addition of such addresses is delayed until send(). Addresses that have been added already return false, but do not throw exceptions.&#10;&#10;Parameters:&#10;    string $kind - One of &apos;to&apos;, &apos;cc&apos;, &apos;bcc&apos;, or &apos;ReplyTo&apos;&#10;    string $address - The email address to send, resp&#10;    string $name&#10;&#10;Return:&#10;   true on success, false if address already used or invalid in some way;;d4,958;;b2,0;;mstring $kind;;pstring $address;;pstring $name;;p">
</treenode>
<treenode node="addrAppend;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2041;5;2049;;;;vpos;;vstring;;r&#10;Definition&#10;    addrAppend($type, $addr)&#10;&#10;Description&#10;     Create recipient headers.&#10;&#10;Parameters:&#10;    string $type&#10;    array $addr - An array of recipients,;;d4,2042;;b1,0;;mstring $type;;parray $addr;;p">
</treenode>
<treenode node="addReplyTo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;938;5;941;;;;vpos;;vbool;;r&#10;Definition&#10;    addReplyTo($address, $name = &apos;&apos;)&#10;&#10;Description&#10;     Add a &quot;Reply-To&quot; address.&#10;&#10;Parameters:&#10;    string $address - The email address to reply to&#10;    string $name&#10;&#10;Return:&#10;   true on success, false if address already used or invalid in some way;;d4,939;;b1,0;;mstring $address;;pstring $name;;p">
</treenode>
<treenode node="addrFormat;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2059;5;2068;;;;vpos;;vstring;;r&#10;Definition&#10;    addrFormat($addr)&#10;&#10;Description&#10;     Format an address for use in a message header.&#10;&#10;Parameters:&#10;    array $addr - A 2-element indexed array, element 0 containing an address, element 1 containing a name like;;d4,2060;;b1,0;;marray $addr;;p">
</treenode>
<treenode node="addStringAttachment;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3237;5;3259;;;;vpos;;v;;r&#10;Definition&#10;    addStringAttachment(&#10;        $string,&#10;        $filename,&#10;        $encoding = &apos;base64&apos;,&#10;        $type = &apos;&apos;,&#10;        $disposition = &apos;attachment&apos;&#10;    )&#10;&#10;Description&#10;     Add a string or binary attachment (non-filesystem). This method can be used to attach ascii or binary data, such as a BLOB record from a database.&#10;&#10;Parameters:&#10;    string $string - String attachment data&#10;    string $filename - Name of the attachment&#10;    string $encoding - File encoding (see $Encoding)&#10;    string $type - File extension (MIME) type&#10;    string $disposition - Disposition to use;;d6,3243;;b1,0;;mstring $string;;pstring $filename;;pstring $encoding;;pstring $type;;pstring $disposition;;p">
</treenode>
<treenode node="addStringEmbeddedImage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3330;5;3356;;;;vpos;;vbool;;r&#10;Definition&#10;    addStringEmbeddedImage(&#10;        $string,&#10;        $cid,&#10;        $name = &apos;&apos;,&#10;        $encoding = &apos;base64&apos;,&#10;        $type = &apos;&apos;,&#10;        $disposition = &apos;inline&apos;&#10;    )&#10;&#10;Description&#10;     Add an embedded stringified attachment. This can include images, sounds, and just about any other document type. If your filename doesn&apos;t contain an extension, be sure to set the $type to an appropriate MIME type.&#10;&#10;Parameters:&#10;    string $string - The attachment binary data&#10;    string $cid - Content ID of the attachment;s Use this to reference&#10;    string $name - A filename for the attachment&#10;    string $encoding - File encoding (see $Encoding), defaults to &apos;base64&apos;&#10;    string $type - MIME type - will be used in preference to any automatically derived type&#10;    string $disposition - Disposition to use&#10;&#10;Return:&#10;   True on successfully adding an attachment;;d6,3337;;b1,0;;mstring $string;;pstring $cid;;pstring $name;;pstring $encoding;;pstring $type;;pstring $disposition;;p">
</treenode>
<treenode node="alternativeExists;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3413;5;3416;;;;vpos;;vbool;;r&#10;Definition&#10;    alternativeExists()&#10;&#10;Description&#10;     Check if this message has an alternative body set.;;d4,3414;;b1,0;;m">
</treenode>
<treenode node="attachAll;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;2815;5;2925;;;;vpos;;vstring;;r&#10;Definition&#10;    attachAll($disposition_type, $boundary)&#10;&#10;Description&#10;     Attach all file, string, and binary attachments to the message. Returns an empty string on failure.&#10;&#10;Parameters:&#10;    string $disposition_type&#10;    string $boundary;;d4,2816;;b2,0;;mstring $disposition_type;;pstring $boundary;;p">
</treenode>
<treenode node="attachmentExists;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3397;5;3406;;;;vpos;;vbool;;r&#10;Definition&#10;    attachmentExists()&#10;&#10;Description&#10;     Check if an attachment (non-inline) is present.;;d4,3398;;b1,0;;m">
</treenode>
<treenode node="base64EncodeWrapMB;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3127;5;3157;;;;vpos;;vstring;;r&#10;Definition&#10;    base64EncodeWrapMB($str, $linebreak = null)&#10;&#10;Description&#10;     Encode and wrap long multibyte strings for mail headers without breaking lines within a character. Adapted from a function by paravoid.&#10;&#10;Parameters:&#10;    string $str - multi-byte text to wrap encode&#10;    string $linebreak - string to use as linefeed/end-of-line;;d4,3128;;b1,0;;mstring $str;;pstring $linebreak;;p">
</treenode>
<treenode node="cidExists;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;3365;5;3374;;;;vpos;;vbool;;r&#10;Definition&#10;    cidExists($cid)&#10;&#10;Description&#10;     Check if an embedded attachment is present with this cid.&#10;&#10;Parameters:&#10;    string $cid;;d4,3366;;b2,0;;mstring $cid;;p">
</treenode>
<treenode node="clearAddresses;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3436;5;3443;;;;vpos;;v;;r&#10;Definition&#10;    clearAddresses()&#10;&#10;Description&#10;     Clear all To recipients.;;d4,3437;;b1,0;;m">
</treenode>
<treenode node="clearAllRecipients;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3481;5;3488;;;;vpos;;v;;r&#10;Definition&#10;    clearAllRecipients()&#10;&#10;Description&#10;     Clear all recipient types.;;d4,3482;;b1,0;;m">
</treenode>
<treenode node="clearAttachments;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3493;5;3496;;;;vpos;;v;;r&#10;Definition&#10;    clearAttachments()&#10;&#10;Description&#10;     Clear all filesystem, string, and binary attachments.;;d4,3494;;b1,0;;m">
</treenode>
<treenode node="clearBCCs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3460;5;3467;;;;vpos;;v;;r&#10;Definition&#10;    clearBCCs()&#10;&#10;Description&#10;     Clear all BCC recipients.;;d4,3461;;b1,0;;m">
</treenode>
<treenode node="clearCCs;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3448;5;3455;;;;vpos;;v;;r&#10;Definition&#10;    clearCCs()&#10;&#10;Description&#10;     Clear all CC recipients.;;d4,3449;;b1,0;;m">
</treenode>
<treenode node="clearCustomHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3501;5;3504;;;;vpos;;v;;r&#10;Definition&#10;    clearCustomHeaders()&#10;&#10;Description&#10;     Clear all custom headers.;;d4,3502;;b1,0;;m">
</treenode>
<treenode node="clearQueuedAddresses;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3423;5;3431;;;;vpos;;v;;r&#10;Definition&#10;    clearQueuedAddresses($kind)&#10;&#10;Description&#10;     Clear queued addresses of given kind.&#10;&#10;Parameters:&#10;    string $kind - &apos;to&apos;, &apos;cc&apos;, or &apos;bcc&apos;;;d4,3424;;b1,0;;mstring $kind;;p">
</treenode>
<treenode node="clearReplyTos;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3472;5;3476;;;;vpos;;v;;r&#10;Definition&#10;    clearReplyTos()&#10;&#10;Description&#10;     Clear all ReplyTo recipients.;;d4,3473;;b1,0;;m">
</treenode>
<treenode node="createBody;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2435;5;2645;;;;vpos;;vstring;;r&#10;Definition&#10;    createBody()&#10;&#10;Description&#10;     Assemble the message body. Returns an empty string on failure.&#10;&#10;Return:&#10;   The assembled message body;;d4,2436;;b1,0;;m">
</treenode>
<treenode node="createHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2250;5;2338;;;;vpos;;vstring;;r&#10;Definition&#10;    createHeader()&#10;&#10;Description&#10;     Assemble message headers.&#10;&#10;Return:&#10;   The assembled headers;;d4,2251;;b1,0;;m">
</treenode>
<treenode node="DKIM_Add;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4240;5;4311;;;;vpos;;vstring;;r&#10;Definition&#10;    DKIM_Add($headers_line, $subject, $body)&#10;&#10;Description&#10;     Create the DKIM header and body in a new message header.&#10;&#10;Parameters:&#10;    string $headers_line - Header lines&#10;    string $subject - Subject&#10;    string $body - Body;;d4,4241;;b1,0;;mstring $headers_line;;pstring $subject;;pstring $body;;p">
</treenode>
<treenode node="DKIM_BodyC;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4219;5;4229;;;;vpos;;vstring;;r&#10;Definition&#10;    DKIM_BodyC($body)&#10;&#10;Description&#10;     Generate a DKIM canonicalization body. Uses the &apos;simple&apos; algorithm from RFC6376 section 3.4.3. Canonicalized bodies should *always* use CRLF, regardless of mailer setting.&#10;&#10;Parameters:&#10;    string $body - Message Body;;d4,4220;;b1,0;;mstring $body;;p">
</treenode>
<treenode node="DKIM_HeaderC;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4177;5;4206;;;;vpos;;vstring;;r&#10;Definition&#10;    DKIM_HeaderC($signHeader)&#10;&#10;Description&#10;     Generate a DKIM canonicalization header. Uses the &apos;relaxed&apos; algorithm from RFC6376 section 3.4.2. Canonicalized headers should *always* use CRLF, regardless of mailer setting.&#10;&#10;Parameters:&#10;    string $signHeader - Header;;d4,4178;;b1,0;;mstring $signHeader;;p">
</treenode>
<treenode node="DKIM_QP;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4114;5;4128;;;;vpos;;vstring;;r&#10;Definition&#10;    DKIM_QP($txt)&#10;&#10;Description&#10;     Quoted-Printable-encode a DKIM header.&#10;&#10;Parameters:&#10;    string $txt;;d4,4115;;b1,0;;mstring $txt;;p">
</treenode>
<treenode node="DKIM_Sign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4139;5;4164;;;;vpos;;vstring;;r&#10;Definition&#10;    DKIM_Sign($signHeader)&#10;&#10;Description&#10;     Generate a DKIM signature.&#10;&#10;Parameters:&#10;    string $signHeader&#10;&#10;Return:&#10;   The DKIM signature value;;d4,4140;;b1,0;;mstring $signHeader;;p">
</treenode>
<treenode node="doCallback;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;4393;5;4398;;;;vpos;;v;;r&#10;Definition&#10;    doCallback($isSent, $to, $cc, $bcc, $subject, $body, $from, $extra)&#10;&#10;Description&#10;     Perform a callback.&#10;&#10;Parameters:&#10;    bool $isSent&#10;    array $to&#10;    array $cc&#10;    array $bcc&#10;    string $subject&#10;    string $body&#10;    string $from&#10;    array $extra;;d4,4394;;b2,0;;mbool $isSent;;parray $to;;parray $cc;;parray $bcc;;pstring $subject;;pstring $body;;pstring $from;;parray $extra;;p">
</treenode>
<treenode node="edebug;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;782;5;829;;;;vpos;;v;;r&#10;Definition&#10;    edebug($str)&#10;&#10;Description&#10;     Output debugging info via user-defined method. Only generates output if SMTP debug output is enabled ( see SMTP::$do_debug).&#10;&#10;Parameters:&#10;    string $str;;d4,783;;b2,0;;mstring $str;;p">
</treenode>
<treenode node="encodeFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;2938;5;2956;;;;vpos;;vstring;;r&#10;Definition&#10;    encodeFile($path, $encoding = &apos;base64&apos;)&#10;&#10;Description&#10;     Encode a file attachment in requested format. Returns an empty string on failure.&#10;&#10;Parameters:&#10;    string $path - The full path to the file&#10;    string $encoding - The encoding to use;s one of &apos;base64&apos;, &apos;7bit&apos;, &apos;8bit&apos;, &apos;binary&apos;, &apos;quoted-printable&apos;;;d4,2939;;b2,0;;mstring $path;;pstring $encoding;;p">
</treenode>
<treenode node="encodeHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3010;5;3084;;;;vpos;;vstring;;r&#10;Definition&#10;    encodeHeader($str, $position = &apos;text&apos;)&#10;&#10;Description&#10;     Encode a header value (not including its label) optimally. Picks shortest of Q, B, or none. Result includes folding if needed. See RFC822 definitions for phrase, comment and text positions.&#10;&#10;Parameters:&#10;    string $str - The header value to encode&#10;    string $position - What context the string will be used in;;d4,3011;;b1,0;;mstring $str;;pstring $position;;p">
</treenode>
<treenode node="encodeQ;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3182;5;3224;;;;vpos;;vstring;;r&#10;Definition&#10;    encodeQ($str, $position = &apos;text&apos;)&#10;&#10;Description&#10;     Encode a string using Q encoding.&#10;&#10;Parameters:&#10;    string $str - the text to encode&#10;    string $position - Where the text is going to be used, see the RFC for what that means;;d4,3183;;b1,0;;mstring $str;;pstring $position;;p">
</treenode>
<treenode node="encodeQP;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3167;5;3170;;;;vpos;;vstring;;r&#10;Definition&#10;    encodeQP($string)&#10;&#10;Description&#10;     Encode a string in quoted-printable format. According to RFC2045 section 6.7.&#10;&#10;Parameters:&#10;    string $string - The text to encode;;d4,3168;;b1,0;;mstring $string;;p">
</treenode>
<treenode node="encodeString;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2967;5;2998;;;;vpos;;vstring;;r&#10;Definition&#10;    encodeString($str, $encoding = &apos;base64&apos;)&#10;&#10;Description&#10;     Encode a string in requested format. Returns an empty string on failure.&#10;&#10;Parameters:&#10;    string $str - The text to encode&#10;    string $encoding - The encoding to use;s one of &apos;base64&apos;, &apos;7bit&apos;, &apos;8bit&apos;, &apos;binary&apos;, &apos;quoted-printable;;d4,2968;;b1,0;;mstring $str;;pstring $encoding;;p">
</treenode>
<treenode node="endBoundary;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;2688;5;2691;;;;vpos;;vstring;;r&#10;Definition&#10;    endBoundary($boundary)&#10;&#10;Description&#10;     Return the end of a message boundary.&#10;&#10;Parameters:&#10;    string $boundary;;d4,2689;;b2,0;;mstring $boundary;;p">
</treenode>
<treenode node="filenameToType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;3948;5;3958;;;;vpos;;vstring;;r&#10;Definition&#10;    filenameToType($filename)&#10;&#10;Description&#10;     Map a file name to a MIME type. Defaults to &apos;application/octet-stream&apos;, i.e.. arbitrary binary data.&#10;&#10;Parameters:&#10;    string $filename - A file name or full path, does not need to exist as a file;;d4,3949;;b1,5;;mstring $filename;;p">
</treenode>
<treenode node="generateId;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;2411;5;2425;;;;vpos;;vstring;;r&#10;Definition&#10;    generateId()&#10;&#10;Description&#10;     Create a unique ID to use for boundaries.;;d4,2412;;b2,0;;m">
</treenode>
<treenode node="getAllRecipientAddresses;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4376;5;4379;;;;vpos;;varray;;r&#10;Definition&#10;    getAllRecipientAddresses()&#10;&#10;Description&#10;     Allows for public read access to &apos;all_recipients&apos; property. Before the send() call, queued addresses (i.e. with IDN) are not yet included.;;d4,4377;;b1,0;;m">
</treenode>
<treenode node="getAttachments;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2801;5;2804;;;;vpos;;varray;;r&#10;Definition&#10;    getAttachments()&#10;&#10;Description&#10;     Return the array of attachments.;;d4,2802;;b1,0;;m">
</treenode>
<treenode node="getBccAddresses;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4354;5;4357;;;;vpos;;varray;;r&#10;Definition&#10;    getBccAddresses()&#10;&#10;Description&#10;     Allows for public read access to &apos;bcc&apos; property. Before the send() call, queued addresses (i.e. with IDN) are not yet included.;;d4,4355;;b1,0;;m">
</treenode>
<treenode node="getBoundary;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;2657;5;2679;;;;vpos;;vstring;;r&#10;Definition&#10;    getBoundary($boundary, $charSet, $contentType, $encoding)&#10;&#10;Description&#10;     Return the start of a message boundary.&#10;&#10;Parameters:&#10;    string $boundary&#10;    string $charSet&#10;    string $contentType&#10;    string $encoding;;d4,2658;;b2,0;;mstring $boundary;;pstring $charSet;;pstring $contentType;;pstring $encoding;;p">
</treenode>
<treenode node="getCcAddresses;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4343;5;4346;;;;vpos;;varray;;r&#10;Definition&#10;    getCcAddresses()&#10;&#10;Description&#10;     Allows for public read access to &apos;cc&apos; property. Before the send() call, queued addresses (i.e. with IDN) are not yet included.;;d4,4344;;b1,0;;m">
</treenode>
<treenode node="getCustomHeaders;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3667;5;3670;;;;vpos;;varray;;r&#10;Definition&#10;    getCustomHeaders()&#10;&#10;Description&#10;     Returns all custom headers.;;d4,3668;;b1,0;;m">
</treenode>
<treenode node="getLastMessageID;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1166;5;1169;;;;vpos;;vstring;;r&#10;Definition&#10;    getLastMessageID()&#10;&#10;Description&#10;     Return the Message-ID header of the last email. Technically this is the value from the last time the headers were created, but it&apos;s also the message ID of the last sent message except in pathological cases.;;d4,1167;;b1,0;;m">
</treenode>
<treenode node="getLE;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;4076;5;4079;;;;vpos;;vstring;;r&#10;Definition&#10;    getLE()&#10;&#10;Description&#10;     Return the current line break format string.;;d4,4077;;b1,5;;m">
</treenode>
<treenode node="getMailMIME;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2345;5;2390;;;;vpos;;vstring;;r&#10;Definition&#10;    getMailMIME()&#10;&#10;Description&#10;     Get the message MIME type headers.;;d4,2346;;b1,0;;m">
</treenode>
<treenode node="getOAuth;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4405;5;4408;;;;vpos;;vOAuth;;r&#10;Definition&#10;    getOAuth()&#10;&#10;Description&#10;     Get the OAuth instance.;;d4,4406;;b1,0;;m">
</treenode>
<treenode node="getReplyToAddresses;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4365;5;4368;;;;vpos;;varray;;r&#10;Definition&#10;    getReplyToAddresses()&#10;&#10;Description&#10;     Allows for public read access to &apos;ReplyTo&apos; property. Before the send() call, queued addresses (i.e. with IDN) are not yet included.;;d4,4366;;b1,0;;m">
</treenode>
<treenode node="getSentMIMEMessage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2401;5;2404;;;;vpos;;vstring;;r&#10;Definition&#10;    getSentMIMEMessage()&#10;&#10;Description&#10;     Returns the whole MIME message. Includes complete headers and body. Only valid post preSend().;;d4,2402;;b1,0;;m">
</treenode>
<treenode node="getSMTPInstance;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1683;5;1690;;;;vpos;;vSMTP;;r&#10;Definition&#10;    getSMTPInstance()&#10;&#10;Description&#10;     Get an instance to use for SMTP operations. Override this function to load your own SMTP implementation, or set one with setSMTPInstance.;;d4,1684;;b1,0;;m">
</treenode>
<treenode node="getToAddresses;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4332;5;4335;;;;vpos;;varray;;r&#10;Definition&#10;    getToAddresses()&#10;&#10;Description&#10;     Allows for public read access to &apos;to&apos; property. Before the send() call, queued addresses (i.e. with IDN) are not yet included.;;d4,4333;;b1,0;;m">
</treenode>
<treenode node="getTranslations;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2025;5;2028;;;;vpos;;varray;;r&#10;Definition&#10;    getTranslations()&#10;&#10;Description&#10;     Get the array of strings for the current language.;;d4,2026;;b1,0;;m">
</treenode>
<treenode node="has8bitChars;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3110;5;3113;;;;vpos;;vbool;;r&#10;Definition&#10;    has8bitChars($text)&#10;&#10;Description&#10;     Does a string contain any 8-bit chars (in any charset)?&#10;&#10;Parameters:&#10;    string $text;;d4,3111;;b1,0;;mstring $text;;p">
</treenode>
<treenode node="hasLineLongerThanMax;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;4321;5;4324;;;;vpos;;vbool;;r&#10;Definition&#10;    hasLineLongerThanMax($str)&#10;&#10;Description&#10;     Detect if a string contains a line longer than the maximum line length allowed by RFC 2822 section 2.1.1.&#10;&#10;Parameters:&#10;    string $str;;d4,4322;;b1,5;;mstring $str;;p">
</treenode>
<treenode node="hasMultiBytes;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3093;5;3101;;;;vpos;;vbool;;r&#10;Definition&#10;    hasMultiBytes($str)&#10;&#10;Description&#10;     Check if a string contains multi-byte characters.&#10;&#10;Parameters:&#10;    string $str - multi-byte text to wrap encode;;d4,3094;;b1,0;;mstring $str;;p">
</treenode>
<treenode node="headerLine;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2724;5;2727;;;;vpos;;vstring;;r&#10;Definition&#10;    headerLine($name, $value)&#10;&#10;Description&#10;     Format a header line.&#10;&#10;Parameters:&#10;    string $name&#10;    string|int $value;;d4,2725;;b1,0;;mstring $name;;pstring|int $value;;p">
</treenode>
<treenode node="html2text;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3797;5;3808;;;;vpos;;vstring;;r&#10;Definition&#10;    html2text($html, $advanced = false)&#10;&#10;Description&#10;     Convert an HTML string into plain text. This is used by msgHTML(). Note - older versions of this function used a bundled advanced converter which was removed for license reasons in #232. Example usage:&#10;&#10;Parameters:&#10;    string $html - The HTML text to convert&#10;    bool|callable $advanced - Any boolean value to use the internal converter,;;d4,3798;;b1,0;;mstring $html;;pbool|callable $advanced;;p">
</treenode>
<treenode node="idnSupported;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;1261;5;1264;;;;vpos;;vbool;;r&#10;Definition&#10;    idnSupported()&#10;&#10;Description&#10;     Tells whether IDNs (Internationalized Domain Names) are supported or not. This requires the `intl` and `mbstring` PHP extensions.&#10;&#10;Return:&#10;   `true` if required functions for IDN support are present;;d4,1262;;b1,5;;m">
</treenode>
<treenode node="inlineImageExists;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3381;5;3390;;;;vpos;;vbool;;r&#10;Definition&#10;    inlineImageExists()&#10;&#10;Description&#10;     Check if an inline attachment is present.;;d4,3382;;b1,0;;m">
</treenode>
<treenode node="isError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3639;5;3642;;;;vpos;;vbool;;r&#10;Definition&#10;    isError()&#10;&#10;Description&#10;     Check if an error occurred.&#10;&#10;Return:&#10;   True if an error did occur;;d4,3640;;b1,0;;m">
</treenode>
<treenode node="isHTML;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;836;5;843;;;;vpos;;v;;r&#10;Definition&#10;    isHTML($isHtml = true)&#10;&#10;Description&#10;     Sets message type to HTML or plain.&#10;&#10;Parameters:&#10;    bool $isHtml - True for HTML mode;;d4,837;;b1,0;;mbool $isHtml;;p">
</treenode>
<treenode node="isMail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;856;5;859;;;;vpos;;v;;r&#10;Definition&#10;    isMail()&#10;&#10;Description&#10;     Send messages using PHP&apos;s mail() function.;;d4,857;;b1,0;;m">
</treenode>
<treenode node="isQmail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;879;5;889;;;;vpos;;v;;r&#10;Definition&#10;    isQmail()&#10;&#10;Description&#10;     Send messages using qmail.;;d4,880;;b1,0;;m">
</treenode>
<treenode node="isSendmail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;864;5;874;;;;vpos;;v;;r&#10;Definition&#10;    isSendmail()&#10;&#10;Description&#10;     Send messages using $Sendmail.;;d4,865;;b1,0;;m">
</treenode>
<treenode node="isShellSafe;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f21;1593;5;1616;;;;vpos;;vbool;;r&#10;Definition&#10;    isShellSafe($string)&#10;&#10;Description&#10;     Fix CVE-2016-10033 and CVE-2016-10045 by disallowing potentially unsafe shell characters. Note that escapeshellarg and escapeshellcmd are inadequate for our purposes, especially on Windows.&#10;&#10;Parameters:&#10;    string $string - The string to be validated;;d4,1594;;b2,5;;mstring $string;;p">
</treenode>
<treenode node="isSMTP;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;848;5;851;;;;vpos;;v;;r&#10;Definition&#10;    isSMTP()&#10;&#10;Description&#10;     Send messages using SMTP.;;d4,849;;b1,0;;m">
</treenode>
<treenode node="isValidHost;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;3579;5;3604;;;;vpos;;vbool;;r&#10;Definition&#10;    isValidHost($host)&#10;&#10;Description&#10;     Validate whether a string contains a valid value to use as a hostname or IP address. IPv6 addresses must include [], e.g. `[::1]`, not just `::1`.&#10;&#10;Parameters:&#10;    string $host - The host name or IP address to check;;d4,3580;;b1,5;;mstring $host;;p">
</treenode>
<treenode node="lang;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;3613;5;3632;;;;vpos;;vstring;;r&#10;Definition&#10;    lang($key)&#10;&#10;Description&#10;     Get an error message in the current language.&#10;&#10;Parameters:&#10;    string $key;;d4,3614;;b2,0;;mstring $key;;p">
</treenode>
<treenode node="mailPassthru;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f12;755;5;771;;;;vpos;;vbool;;r&#10;Definition&#10;    mailPassthru($to, $subject, $body, $header, $params)&#10;&#10;Description&#10;     Call mail() in a safe_mode-aware fashion. Also, unless sendmail_path points to sendmail (or something that claims to be sendmail), don&apos;t pass params (not a perfect fix, but it will do).&#10;&#10;Parameters:&#10;    string $to - To&#10;    string $subject - Subject&#10;    string $body - Message Body&#10;    string $header - Additional Header(s)&#10;    string|null $params - Params;;d4,756;;b3,0;;mstring $to;;pstring $subject;;pstring $body;;pstring $header;;pstring|null $params;;p">
</treenode>
<treenode node="mailSend;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;1630;5;1674;;;;vpos;;vbool;;r&#10;Definition&#10;    mailSend($header, $body)&#10;&#10;Description&#10;     Send mail using the PHP mail() function.&#10;&#10;Parameters:&#10;    string $header - The message headers&#10;    string $body - The message body;;d4,1631;;b2,0;;mstring $header;;pstring $body;;p">
</treenode>
<treenode node="mb_pathinfo;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;3972;5;4006;;;;vpos;;vstring;;r&#10;Definition&#10;    mb_pathinfo($path, $options = null)&#10;&#10;Description&#10;     Multi-byte-safe pathinfo replacement. Drop-in replacement for pathinfo(), but multibyte- and cross-platform-safe.&#10;&#10;Parameters:&#10;    string $path - A filename or path, does not need to exist as a file&#10;    int|string $options - Either a PATHINFO_* constant,&#10;&#10;Return:&#10;   |array;;d4,3973;;b1,5;;mstring $path;;pint|string $options;;p">
</treenode>
<treenode node="msgHTML;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;3690;5;3772;;;;vpos;;vstring;;r&#10;Definition&#10;    msgHTML($message, $basedir = &apos;&apos;, $advanced = false)&#10;&#10;Description&#10;     Create a message body from an HTML string. Automatically inlines images and creates a plain-text version by converting the HTML, overwriting any existing values in Body and AltBody. Do not source $message content from user input! $basedir is prepended when handling relative URLs, e.g. &lt;img src=&quot;/images/a.png&quot;&gt; and must not be empty will look for an image file in $basedir/images/a.png and convert it to inline. If you don&apos;t provide a $basedir, relative paths will be left untouched (and thus probably break in email) Converts data-uri images into embedded attachments. If you don&apos;t want to apply these transformations to your HTML, just set Body and AltBody directly.&#10;&#10;Parameters:&#10;    string $message - HTML message string&#10;    string $basedir - Absolute path to a base directory to prepend to relative paths to images&#10;    bool|callable $advanced - Whether to use the internal HTML to text converter&#10;&#10;Return:&#10;   $message The transformed message Body;;d4,3691;;b1,0;;mstring $message;;pstring $basedir;;pbool|callable $advanced;;p">
</treenode>
<treenode node="normalizeBreaks;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;4056;5;4069;;;;vpos;;vstring;;r&#10;Definition&#10;    normalizeBreaks($text, $breaktype = null)&#10;&#10;Description&#10;     Normalize line breaks in a string. Converts UNIX LF, Mac CR and Windows CRLF line breaks into a single line break format. Defaults to CRLF (for message bodies) and preserves consecutive breaks.&#10;&#10;Parameters:&#10;    string $text&#10;    string $breaktype - What kind of line break to use;s defaults to static::$LE;;d4,4057;;b1,5;;mstring $text;;pstring $breaktype;;p">
</treenode>
<treenode node="parseAddresses;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;1070;5;1114;;;;vpos;;varray;;r&#10;Definition&#10;    parseAddresses($addrstr, $useimap = true)&#10;&#10;Description&#10;     Parse and validate a string containing one or more RFC822-style comma-separated email addresses of the form &quot;display name &lt;address&gt;&quot; into an array of name/address pairs. Uses the imap_rfc822_parse_adrlist function if the IMAP extension is available. Note that quotes in the name part are removed.&#10;&#10;Parameters:&#10;    string $addrstr - The address list string&#10;    bool $useimap - Whether to use the IMAP extension to parse the list;;d4,1071;;b1,5;;mstring $addrstr;;pbool $useimap;;p">
</treenode>
<treenode node="postSend;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1471;5;1500;;;;vpos;;vbool;;r&#10;Definition&#10;    postSend()&#10;&#10;Description&#10;     Actually send a message via the selected mechanism.;;d4,1472;;b1,0;;m">
</treenode>
<treenode node="preSend;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1338;5;1462;;;;vpos;;vbool;;r&#10;Definition&#10;    preSend()&#10;&#10;Description&#10;     Prepare a message for sending.;;d4,1339;;b1,0;;m">
</treenode>
<treenode node="punyencodeAddress;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1280;5;1302;;;;vpos;;vstring;;r&#10;Definition&#10;    punyencodeAddress($address)&#10;&#10;Description&#10;     Converts IDN in given email address to its ASCII form, also known as punycode, if possible. Important: Address must be passed in same encoding as currently set in PHPMailer::$CharSet. This function silently returns unmodified address if: - No conversion is necessary (i.e. domain name is not an IDN, or is already in ASCII form) - Conversion to punycode is impossible (e.g. required PHP functions are not available) or fails for any reason (e.g. domain contains characters not allowed in an IDN).&#10;&#10;Parameters:&#10;    string $address - The email address to convert&#10;&#10;Return:&#10;   The encoded address in ASCII form;;d4,1281;;b1,0;;mstring $address;;p">
</treenode>
<treenode node="rfcDate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;3537;5;3544;;;;vpos;;vstring;;r&#10;Definition&#10;    rfcDate()&#10;&#10;Description&#10;     Return an RFC 822 formatted date.;;d4,3538;;b1,5;;m">
</treenode>
<treenode node="secureHeader;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4041;5;4044;;;;vpos;;vstring;;r&#10;Definition&#10;    secureHeader($str)&#10;&#10;Description&#10;     Strip newlines to prevent header injection.&#10;&#10;Parameters:&#10;    string $str;;d4,4042;;b1,0;;mstring $str;;p">
</treenode>
<treenode node="send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1312;5;1329;;;;vpos;;vbool;;r&#10;Definition&#10;    send()&#10;&#10;Description&#10;     Create a message and send it. Uses the sending method specified by $Mailer.&#10;&#10;Return:&#10;   false on error - See the ErrorInfo property for details of the error;;d4,1313;;b1,0;;m">
</treenode>
<treenode node="sendmailSend;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;1514;5;1581;;;;vpos;;vbool;;r&#10;Definition&#10;    sendmailSend($header, $body)&#10;&#10;Description&#10;     Send mail using the $Sendmail program.&#10;&#10;Parameters:&#10;    string $header - The message headers&#10;    string $body - The message body;;d4,1515;;b2,0;;mstring $header;;pstring $body;;p">
</treenode>
<treenode node="serverHostname;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;3552;5;3569;;;;vpos;;vstring;;r&#10;Definition&#10;    serverHostname()&#10;&#10;Description&#10;     Get the server hostname. Returns &apos;localhost.localdomain&apos; if unknown.;;d4,3553;;b2,0;;m">
</treenode>
<treenode node="set;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4022;5;4032;;;;vpos;;vbool;;r&#10;Definition&#10;    set($name, $value = &apos;&apos;)&#10;&#10;Description&#10;     Set or reset instance properties. You should avoid this function - it&apos;s more verbose, less efficient, more error-prone and harder to debug than setting properties directly. Usage Example: `$mail-&gt;set(&apos;SMTPSecure&apos;, &apos;tls&apos;);s` is the same as: `$mail-&gt;SMTPSecure = &apos;tls&apos;;s`.&#10;&#10;Parameters:&#10;    string $name - The property name to set&#10;    mixed $value - The value to set the property to;;d4,4023;;b1,0;;mstring $name;;pmixed $value;;p">
</treenode>
<treenode node="setError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;3511;5;3530;;;;vpos;;v;;r&#10;Definition&#10;    setError($msg)&#10;&#10;Description&#10;     Add an error message to the error container.&#10;&#10;Parameters:&#10;    string $msg;;d4,3512;;b2,0;;mstring $msg;;p">
</treenode>
<treenode node="setFrom;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1127;5;1156;;;;vpos;;vbool;;r&#10;Definition&#10;    setFrom($address, $name = &apos;&apos;, $auto = true)&#10;&#10;Description&#10;     Set the From and FromName properties.&#10;&#10;Parameters:&#10;    string $address&#10;    string $name&#10;    bool $auto - Whether to also set the Sender address, defaults to true;;d4,1128;;b1,0;;mstring $address;;pstring $name;;pbool $auto;;p">
</treenode>
<treenode node="setLanguage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1956;5;2018;;;;vpos;;vbool;;r&#10;Definition&#10;    setLanguage($langcode = &apos;en&apos;, $lang_path = &apos;&apos;)&#10;&#10;Description&#10;     Set the language for error messages. Returns false if it cannot load the language file. The default language is English.&#10;&#10;Parameters:&#10;    string $langcode - ISO 639-1 2-character language code (e&#10;    string $lang_path - Path to the language file directory, with trailing separator (slash);;d4,1957;;b1,0;;mstring $langcode;;pstring $lang_path;;p">
</treenode>
<treenode node="setLE;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f21;4086;5;4089;;;;vpos;;v;;r&#10;Definition&#10;    setLE($le)&#10;&#10;Description&#10;     Set the line break format string, e.g. &quot;\r\n&quot;.&#10;&#10;Parameters:&#10;    string $le;;d4,4087;;b2,5;;mstring $le;;p">
</treenode>
<treenode node="setMessageType;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;2697;5;2714;;;;vpos;;v;;r&#10;Definition&#10;    setMessageType()&#10;&#10;Description&#10;     Set the message type. PHPMailer only supports some preset message types, not arbitrary MIME structures.;;d4,2698;;b2,0;;m">
</treenode>
<treenode node="setOAuth;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4415;5;4418;;;;vpos;;v;;r&#10;Definition&#10;    setOAuth(OAuth $oauth)&#10;&#10;Description&#10;     Set an OAuth instance.&#10;&#10;Parameters:&#10;    OAuth $oauth;;d4,4416;;b1,0;;mOAuth $oauth;;p">
</treenode>
<treenode node="setSMTPInstance;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1699;5;1704;;;;vpos;;vSMTP;;r&#10;Definition&#10;    setSMTPInstance(SMTP $smtp)&#10;&#10;Description&#10;     Provide an instance to use for SMTP operations.&#10;&#10;Parameters:&#10;    SMTP $smtp;;d4,1700;;b1,0;;mSMTP $smtp;;p">
</treenode>
<treenode node="setWordWrap;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2226;5;2243;;;;vpos;;v;;r&#10;Definition&#10;    setWordWrap()&#10;&#10;Description&#10;     Apply word wrapping to the message body. Wraps the message body to the number of chars set in the WordWrap property. You should only do this to plain-text bodies as wrapping HTML tags may break them. This is called automatically by createBody(), so you don&apos;t need to call it yourself.;;d4,2227;;b1,0;;m">
</treenode>
<treenode node="sign;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;4099;5;4105;;;;vpos;;v;;r&#10;Definition&#10;    sign($cert_filename, $key_filename, $key_pass, $extracerts_filename = &apos;&apos;)&#10;&#10;Description&#10;     Set the public and private key files and password for S/MIME signing.&#10;&#10;Parameters:&#10;    string $cert_filename&#10;    string $key_filename&#10;    string $key_pass - Password for private key&#10;    string $extracerts_filename - Optional path to chain certificate;;d4,4100;;b1,0;;mstring $cert_filename;;pstring $key_filename;;pstring $key_pass;;pstring $extracerts_filename;;p">
</treenode>
<treenode node="smtpClose;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1936;5;1944;;;;vpos;;v;;r&#10;Definition&#10;    smtpClose()&#10;&#10;Description&#10;     Close the active SMTP session if one exists.;;d4,1937;;b1,0;;m">
</treenode>
<treenode node="smtpConnect;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;1808;5;1931;;;;vpos;;vbool;;r&#10;Definition&#10;    smtpConnect($options = null)&#10;&#10;Description&#10;     Initiate a connection to an SMTP server. Returns false if the operation failed.&#10;&#10;Parameters:&#10;    array $options - An array of options compatible with stream_context_create();;d4,1809;;b1,0;;marray $options;;p">
</treenode>
<treenode node="smtpSend;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f14;1721;5;1794;;;;vpos;;vbool;;r&#10;Definition&#10;    smtpSend($header, $body)&#10;&#10;Description&#10;     Send mail via SMTP. Returns false if there is a bad MAIL FROM, RCPT, or DATA input.&#10;&#10;Parameters:&#10;    string $header - The message headers&#10;    string $body - The message body;;d4,1722;;b2,0;;mstring $header;;pstring $body;;p">
</treenode>
<treenode node="textLine;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2736;5;2739;;;;vpos;;vstring;;r&#10;Definition&#10;    textLine($value)&#10;&#10;Description&#10;     Return a formatted mail line.&#10;&#10;Parameters:&#10;    string $value;;d4,2737;;b1,0;;mstring $value;;p">
</treenode>
<treenode node="utf8CharBoundary;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2182;5;2218;;;;vpos;;vint;;r&#10;Definition&#10;    utf8CharBoundary($encodedText, $maxLength)&#10;&#10;Description&#10;     Find the last character boundary prior to $maxLength in a utf-8 quoted-printable encoded string. Original written by Colin Brown.&#10;&#10;Parameters:&#10;    string $encodedText - utf-8 QP text&#10;    int $maxLength - Find the last character boundary prior to this length;;d4,2183;;b1,0;;mstring $encodedText;;pint $maxLength;;p">
</treenode>
<treenode node="validateAddress;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f18;1195;5;1253;;;;vpos;;vbool;;r&#10;Definition&#10;    validateAddress($address, $patternselect = null)&#10;&#10;Description&#10;     Check that a string looks like an email address. Validation patterns supported: * `auto` Pick best pattern automatically;s * `pcre8` Use the squiloople.com pattern, requires PCRE &gt; 8.0;s * `pcre` Use old PCRE implementation;s * `php` Use PHP built-in FILTER_VALIDATE_EMAIL;s * `html5` Use the pattern given by the HTML5 spec for &apos;email&apos; type form input elements. * `noregex` Don&apos;t use a regex: super fast, really dumb. Alternatively you may pass in a callable to inject your own validator, for example:&#10;&#10;Parameters:&#10;    string $address - The email address to check&#10;    string|callable $patternselect - Which pattern to use;;d4,1196;;b1,5;;mstring $address;;pstring|callable $patternselect;;p">
</treenode>
<treenode node="wrapText;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\PHPMailer.php;f11;2082;5;2170;;;;vpos;;vstring;;r&#10;Definition&#10;    wrapText($message, $length, $qp_mode = false)&#10;&#10;Description&#10;     Word-wrap message. For use with mailers that do not automatically perform wrapping and for quoted-printable encoded messages. Original written by philippe.&#10;&#10;Parameters:&#10;    string $message - The message to wrap&#10;    int $length - The line length to wrap to&#10;    bool $qp_mode - Whether to run in Quoted-Printable mode;;d4,2083;;b1,0;;mstring $message;;pint $length;;pbool $qp_mode;;p">
</treenode>
</treenode>
<treenode node="Routing;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\routing.php;f0;4;1;69;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="ErrorPage404;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\routing.php;f8;62;5;68;;;;vpos;;v;;r;;d1,63;;b0,5;;m">
</treenode>
<treenode node="execute;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\routing.php;f8;10;2;60;;;;vpos;;v;;r;;d1,11;;b0,5;;m">
</treenode>
</treenode>
<treenode node="SMTP;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f0;29;1;1324;;;;vpos;;v;;r&#10;Definition&#10;    class SMTP&#10;&#10;Description&#10;     PHPMailer RFC821 SMTP email transport class. Implements RFC 821 SMTP commands and provides some utility methods for sending mail to an SMTP server.;;d0,30;;b0,0;;m">
<treenode node="DEBUG_CLIENT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f9;67;22;67;;;;vpos;;v;;r&#10;Description&#10;     Debug level to show client -&gt; server messages.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DEBUG_CONNECTION;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f9;77;26;77;;;;vpos;;v;;r&#10;Description&#10;     Debug level to show connection status, client -&gt; server and server -&gt; client messages.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DEBUG_LOWLEVEL;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f9;82;24;82;;;;vpos;;v;;r&#10;Description&#10;     Debug level to show all messages.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DEBUG_OFF;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f9;62;19;62;;;;vpos;;v;;r&#10;Description&#10;     Debug level for no output.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DEBUG_SERVER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f9;72;22;72;;;;vpos;;v;;r&#10;Description&#10;     Debug level to show client -&gt; server and server -&gt; client messages.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DEFAULT_PORT;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f9;50;22;50;;;;vposint;;v;;r25;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LE;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f9;43;12;43;;;;vposstring;;v;;r&quot;\r\n&quot;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MAX_LINE_LENGTH;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f9;57;25;57;;;;vposint;;v;;r998;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="VERSION;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f9;36;17;36;;;;vposstring;;v;;r&apos;6.0.3&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="authenticate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;423;5;542;;;;vpos;;vbool;;r&#10;Definition&#10;    authenticate(&#10;        $username,&#10;        $password,&#10;        $authtype = null,&#10;        $OAuth = null&#10;    )&#10;&#10;Description&#10;     Perform SMTP authentication. Must be run after hello().&#10;&#10;Parameters:&#10;    string $username - The user name&#10;    string $password - The password&#10;    string $authtype - The auth type (CRAM-MD5, PLAIN, LOGIN, XOAUTH2)&#10;    OAuth $OAuth - An optional OAuth instance for XOAUTH2 authentication&#10;&#10;Return:&#10;   True if successfully authenticated;;d6,428;;b1,0;;mstring $username;;pstring $password;;pstring $authtype;;pOAuth $OAuth;;p">
</treenode>
<treenode node="client_send;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1011;5;1026;;;;vpos;;vint;;r&#10;Definition&#10;    client_send($data, $command = &apos;&apos;)&#10;&#10;Description&#10;     Send raw data to the server.&#10;&#10;Parameters:&#10;    string $data - The data to send&#10;    string $command - Optionally, the command this is part of, used only for controlling debug output&#10;&#10;Return:&#10;   |bool The number of bytes sent to the server or false on error;;d4,1012;;b1,0;;mstring $data;;pstring $command;;p">
</treenode>
<treenode node="close;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;613;5;624;;;;vpos;;v;;r&#10;Definition&#10;    close()&#10;&#10;Description&#10;     Close the socket and clean up the state of the class. Don&apos;t use this function without first trying to use QUIT.;;d4,614;;b1,0;;m">
</treenode>
<treenode node="connect;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;287;5;375;;;;vpos;;vbool;;r&#10;Definition&#10;    connect($host, $port = null, $timeout = 30, $options = [])&#10;&#10;Description&#10;     Connect to an SMTP server.&#10;&#10;Parameters:&#10;    string $host - SMTP server IP or host name&#10;    int $port - The port number to connect to&#10;    int $timeout - How long to wait for the connection to open&#10;    array $options - An array of options for stream_context_create();;d4,288;;b1,0;;mstring $host;;pint $port;;pint $timeout;;parray $options;;p">
</treenode>
<treenode node="connected;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;586;5;605;;;;vpos;;vbool;;r&#10;Definition&#10;    connected()&#10;&#10;Description&#10;     Check connection state.&#10;&#10;Return:&#10;   True if connected;;d4,587;;b1,0;;m">
</treenode>
<treenode node="data;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;639;5;718;;;;vpos;;vbool;;r&#10;Definition&#10;    data($msg_data)&#10;&#10;Description&#10;     Send an SMTP DATA command. Issues a data command and sends the msg_data to the server, finializing the mail transaction. $msg_data is the message that is to be send with the headers. Each header needs to be on a single line followed by a &lt;CRLF&gt; with the message headers and the message body being separated by an additional &lt;CRLF&gt;. Implements RFC 821: DATA &lt;CRLF&gt;.&#10;&#10;Parameters:&#10;    string $msg_data - Message data to send;;d4,640;;b1,0;;mstring $msg_data;;p">
</treenode>
<treenode node="edebug;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f14;228;5;275;;;;vpos;;v;;r&#10;Definition&#10;    edebug($str, $level = 0)&#10;&#10;Description&#10;     Output debugging info via a user-selected method.&#10;&#10;Parameters:&#10;    string $str - Debug string to output&#10;    int $level - The debug level of this message;s see DEBUG_* constants;;d4,229;;b2,0;;mstring $str;;pint $level;;p">
</treenode>
<treenode node="errorHandler;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f14;1269;5;1281;;;;vpos;;v;;r&#10;Definition&#10;    errorHandler($errno, $errmsg, $errfile = &apos;&apos;, $errline = 0)&#10;&#10;Description&#10;     Reports an error number and string.&#10;&#10;Parameters:&#10;    int $errno - The error number returned by PHP&#10;    string $errmsg - The error message returned by PHP&#10;    string $errfile - The file the error occurred in&#10;    int $errline - The line number the error occurred on;;d4,1270;;b2,0;;mint $errno;;pstring $errmsg;;pstring $errfile;;pint $errline;;p">
</treenode>
<treenode node="get_lines;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f14;1107;5;1161;;;;vpos;;vstring;;r&#10;Definition&#10;    get_lines()&#10;&#10;Description&#10;     Read the SMTP server&apos;s response. Either before eof or socket timeout occurs on the operation. With SMTP we can tell if we have more lines to read if the 4th character is &apos;-&apos; symbol. If it is a space then we don&apos;t need to read anything else.;;d4,1108;;b2,0;;m">
</treenode>
<treenode node="getDebugLevel;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1236;5;1239;;;;vpos;;vint;;r&#10;Definition&#10;    getDebugLevel()&#10;&#10;Description&#10;     Get debug output level.;;d4,1237;;b1,0;;m">
</treenode>
<treenode node="getDebugOutput;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1216;5;1219;;;;vpos;;vstring;;r&#10;Definition&#10;    getDebugOutput()&#10;&#10;Description&#10;     Get debug output method.;;d4,1217;;b1,0;;m">
</treenode>
<treenode node="getError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1033;5;1036;;;;vpos;;varray;;r&#10;Definition&#10;    getError()&#10;&#10;Description&#10;     Get the latest error.;;d4,1034;;b1,0;;m">
</treenode>
<treenode node="getLastReply;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1093;5;1096;;;;vpos;;vstring;;r&#10;Definition&#10;    getLastReply()&#10;&#10;Description&#10;     Get the last reply from the server.;;d4,1094;;b1,0;;m">
</treenode>
<treenode node="getLastTransactionID;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1320;5;1323;;;;vpos;;vbool;;r&#10;Definition&#10;    getLastTransactionID()&#10;&#10;Description&#10;     Get the queue/transaction ID of the last SMTP transaction If no reply has been received yet, it will return null. If no pattern was matched, it will return false.&#10;&#10;Return:&#10;   |null|string;;d4,1321;;b1,0;;m">
</treenode>
<treenode node="getServerExt;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1065;5;1086;;;;vpos;;vmixed;;r&#10;Definition&#10;    getServerExt($name)&#10;&#10;Description&#10;     Get metadata about the SMTP server from its HELO/EHLO response. The method works in three ways, dependent on argument value and current state: 1. HELO/EHLO has not been sent - returns null and populates $this-&gt;error. 2. HELO has been sent - $name == &apos;HELO&apos;: returns server name $name == &apos;EHLO&apos;: returns boolean false $name == any other string: returns null and populates $this-&gt;error 3. EHLO has been sent - $name == &apos;HELO&apos;|&apos;EHLO&apos;: returns the server name $name == any other string: if extension $name exists, returns True or its options (e.g. AUTH mechanisms supported). Otherwise returns False.&#10;&#10;Parameters:&#10;    string $name - Name of SMTP extension or &apos;HELO&apos;|&apos;EHLO&apos;;;d4,1066;;b1,0;;mstring $name;;p">
</treenode>
<treenode node="getServerExtList;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1043;5;1046;;;;vpos;;varray;;r&#10;Definition&#10;    getServerExtList()&#10;&#10;Description&#10;     Get SMTP extensions available on the server.&#10;&#10;Return:&#10;   |null;;d4,1044;;b1,0;;m">
</treenode>
<treenode node="getTimeout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1256;5;1259;;;;vpos;;vint;;r&#10;Definition&#10;    getTimeout()&#10;&#10;Description&#10;     Get SMTP timeout.;;d4,1257;;b1,0;;m">
</treenode>
<treenode node="getVerp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1178;5;1181;;;;vpos;;vbool;;r&#10;Definition&#10;    getVerp()&#10;&#10;Description&#10;     Get VERP address generation mode.;;d4,1179;;b1,0;;m">
</treenode>
<treenode node="hello;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;731;5;735;;;;vpos;;vbool;;r&#10;Definition&#10;    hello($host = &apos;&apos;)&#10;&#10;Description&#10;     Send an SMTP HELO or EHLO command. Used to identify the sending server to the receiving server. This makes sure that client and server are in a known state. Implements RFC 821: HELO &lt;SP&gt; &lt;domain&gt; &lt;CRLF&gt; and RFC 2821 EHLO.&#10;&#10;Parameters:&#10;    string $host - The host name or IP to connect to;;d4,732;;b1,0;;mstring $host;;p">
</treenode>
<treenode node="hmac;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f14;554;5;579;;;;vpos;;vstring;;r&#10;Definition&#10;    hmac($data, $key)&#10;&#10;Description&#10;     Calculate an MD5 HMAC hash. Works like hash_hmac(&apos;md5&apos;, $data, $key) in case that function is not available.&#10;&#10;Parameters:&#10;    string $data - The data to hash&#10;    string $key - The key to hash with;;d4,555;;b2,0;;mstring $data;;pstring $key;;p">
</treenode>
<treenode node="mail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;815;5;824;;;;vpos;;vbool;;r&#10;Definition&#10;    mail($from)&#10;&#10;Description&#10;     Send an SMTP MAIL command. Starts a mail transaction from the email address specified in $from. Returns true if successful or false otherwise. If True the mail transaction is started and then one or more recipient commands may be called followed by a data command. Implements RFC 821: MAIL &lt;SP&gt; FROM:&lt;reverse-path&gt; &lt;CRLF&gt;.&#10;&#10;Parameters:&#10;    string $from - Source address of this message;;d4,816;;b1,0;;mstring $from;;p">
</treenode>
<treenode node="noop;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;981;5;984;;;;vpos;;vbool;;r&#10;Definition&#10;    noop()&#10;&#10;Description&#10;     Send an SMTP NOOP command. Used to keep keep-alives alive, doesn&apos;t actually do anything.;;d4,982;;b1,0;;m">
</treenode>
<treenode node="parseHelloFields;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f14;767;5;801;;;;vpos;;v;;r&#10;Definition&#10;    parseHelloFields($type)&#10;&#10;Description&#10;     Parse a reply to HELO/EHLO command to discover server extensions. In case of HELO, the only parameter that can be discovered is a server name.&#10;&#10;Parameters:&#10;    string $type - `HELO` or `EHLO`;;d4,768;;b2,0;;mstring $type;;p">
</treenode>
<treenode node="quit;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;835;5;845;;;;vpos;;vbool;;r&#10;Definition&#10;    quit($close_on_error = true)&#10;&#10;Description&#10;     Send an SMTP QUIT command. Closes the socket if there is no error or the $close_on_error argument is true. Implements from RFC 821: QUIT &lt;CRLF&gt;.&#10;&#10;Parameters:&#10;    bool $close_on_error - Should the connection close if an error occurs?;;d4,836;;b1,0;;mbool $close_on_error;;p">
</treenode>
<treenode node="recipient;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;857;5;864;;;;vpos;;vbool;;r&#10;Definition&#10;    recipient($address)&#10;&#10;Description&#10;     Send an SMTP RCPT command. Sets the TO argument to $toaddr. Returns true if the recipient was accepted false if it was rejected. Implements from RFC 821: RCPT &lt;SP&gt; TO:&lt;forward-path&gt; &lt;CRLF&gt;.&#10;&#10;Parameters:&#10;    string $address - The address the message is being sent to;;d4,858;;b1,0;;mstring $address;;p">
</treenode>
<treenode node="recordLastTransactionID;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f14;1292;5;1309;;;;vpos;;vbool;;r&#10;Definition&#10;    recordLastTransactionID()&#10;&#10;Description&#10;     Extract and return the ID of the last SMTP transaction based on a list of patterns provided in SMTP::$smtp_transaction_id_patterns. Relies on the host providing the ID in response to a DATA command. If no reply has been received yet, it will return null. If no pattern was matched, it will return false.&#10;&#10;Return:&#10;   |null|string;;d4,1293;;b2,0;;m">
</treenode>
<treenode node="reset;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;873;5;876;;;;vpos;;vbool;;r&#10;Definition&#10;    reset()&#10;&#10;Description&#10;     Send an SMTP RSET command. Abort any transaction that is currently in progress. Implements RFC 821: RSET &lt;CRLF&gt;.&#10;&#10;Return:&#10;   True on success;;d4,874;;b1,0;;m">
</treenode>
<treenode node="sendAndMail;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;958;5;961;;;;vpos;;vbool;;r&#10;Definition&#10;    sendAndMail($from)&#10;&#10;Description&#10;     Send an SMTP SAML command. Starts a mail transaction from the email address specified in $from. Returns true if successful or false otherwise. If True the mail transaction is started and then one or more recipient commands may be called followed by a data command. This command will send the message to the users terminal if they are logged in and send them an email. Implements RFC 821: SAML &lt;SP&gt; FROM:&lt;reverse-path&gt; &lt;CRLF&gt;.&#10;&#10;Parameters:&#10;    string $from - The address the message is from;;d4,959;;b1,0;;mstring $from;;p">
</treenode>
<treenode node="sendCommand;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f14;887;5;942;;;;vpos;;vbool;;r&#10;Definition&#10;    sendCommand($command, $commandstring, $expect)&#10;&#10;Description&#10;     Send a command to an SMTP server and check its return code.&#10;&#10;Parameters:&#10;    string $command - The command name - not sent to the server&#10;    string $commandstring - The actual command to send&#10;    int|array $expect - One or more expected integer success codes&#10;&#10;Return:&#10;   True on success;;d4,888;;b2,0;;mstring $command;;pstring $commandstring;;pint|array $expect;;p">
</treenode>
<treenode node="sendHello;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f14;748;5;759;;;;vpos;;vbool;;r&#10;Definition&#10;    sendHello($hello, $host)&#10;&#10;Description&#10;     Send an SMTP HELO or EHLO command. Low-level implementation used by hello().&#10;&#10;Parameters:&#10;    string $hello - The HELO string&#10;    string $host - The hostname to say we are;;d4,749;;b2,0;;mstring $hello;;pstring $host;;p">
</treenode>
<treenode node="setDebugLevel;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1226;5;1229;;;;vpos;;v;;r&#10;Definition&#10;    setDebugLevel($level = 0)&#10;&#10;Description&#10;     Set debug output level.&#10;&#10;Parameters:&#10;    int $level;;d4,1227;;b1,0;;mint $level;;p">
</treenode>
<treenode node="setDebugOutput;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1206;5;1209;;;;vpos;;v;;r&#10;Definition&#10;    setDebugOutput($method = &apos;echo&apos;)&#10;&#10;Description&#10;     Set debug output method.&#10;&#10;Parameters:&#10;    string|callable $method - The name of the mechanism to use for debugging output, or a callable to handle it;;d4,1207;;b1,0;;mstring|callable $method;;p">
</treenode>
<treenode node="setError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f14;1191;5;1199;;;;vpos;;v;;r&#10;Definition&#10;    setError($message, $detail = &apos;&apos;, $smtp_code = &apos;&apos;, $smtp_code_ex = &apos;&apos;)&#10;&#10;Description&#10;     Set error messages and codes.&#10;&#10;Parameters:&#10;    string $message - The error message&#10;    string $detail - Further detail on the error&#10;    string $smtp_code - An associated SMTP error code&#10;    string $smtp_code_ex - Extended SMTP code;;d4,1192;;b2,0;;mstring $message;;pstring $detail;;pstring $smtp_code;;pstring $smtp_code_ex;;p">
</treenode>
<treenode node="setTimeout;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1246;5;1249;;;;vpos;;v;;r&#10;Definition&#10;    setTimeout($timeout = 0)&#10;&#10;Description&#10;     Set SMTP timeout.&#10;&#10;Parameters:&#10;    int $timeout - The timeout duration in seconds;;d4,1247;;b1,0;;mint $timeout;;p">
</treenode>
<treenode node="setVerp;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;1168;5;1171;;;;vpos;;v;;r&#10;Definition&#10;    setVerp($enabled = false)&#10;&#10;Description&#10;     Enable or disable VERP address generation.&#10;&#10;Parameters:&#10;    bool $enabled;;d4,1169;;b1,0;;mbool $enabled;;p">
</treenode>
<treenode node="startTLS;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;382;5;408;;;;vpos;;vbool;;r&#10;Definition&#10;    startTLS()&#10;&#10;Description&#10;     Initiate a TLS (encrypted) session.;;d4,383;;b1,0;;m">
</treenode>
<treenode node="turn;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;995;5;1001;;;;vpos;;vbool;;r&#10;Definition&#10;    turn()&#10;&#10;Description&#10;     Send an SMTP TURN command. This is an optional command for SMTP that this class does not support. This method is here to make the RFC821 Definition complete for this class and _may_ be implemented in future. Implements from RFC 821: TURN &lt;CRLF&gt;.;;d4,996;;b1,0;;m">
</treenode>
<treenode node="verify;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\PHPMailer\src\SMTP.php;f11;970;5;973;;;;vpos;;vbool;;r&#10;Definition&#10;    verify($name)&#10;&#10;Description&#10;     Send an SMTP VRFY command.&#10;&#10;Parameters:&#10;    string $name - The name to verify;;d4,971;;b1,0;;mstring $name;;p">
</treenode>
</treenode>
<treenode node="SOAP_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\soap_helper.php;f0;4;1;40;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="loadWsdl;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;15;2;39;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\soap_helper.php;f15;15;2;39;;;;vpos;;vxml;;r&#10;Definition&#10;    loadWsdl($wsdl, $method, $username = null, $password = null)&#10;&#10;Description&#10;     Loads XML from WSDL.;;d1,16;;b1,5;;mwsdl;;pmethod;;pusername;;ppassword;;p">
</treenode>
</treenode>
<treenode node="UploadException;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\exceptions\NewFile.php;f0;4;1;42;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\exceptions\upload_exception.php;f0;4;1;41;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\exceptions\upload_exceptions.php;f0;4;1;41;;;;vpos;;vException;;c;;r;;d0,5;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\exceptions\NewFile.php;f11;6;5;9;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\exceptions\upload_exception.php;f11;6;5;9;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\exceptions\upload_exceptions.php;f11;6;5;9;;;;vpos;;v;;r;;d39,6;;b1,0;;mcode;;p">
</treenode>
<treenode node="codeToMessage;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\exceptions\NewFile.php;f12;11;5;41;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\exceptions\upload_exception.php;f12;11;5;40;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\exceptions\upload_exceptions.php;f12;11;5;40;;;;vpos;;v;;r;;d4,12;;b3,0;;mcode;;p">
</treenode>
</treenode>
<treenode node="View;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\view.php;f0;4;1;21;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="generate;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\view.php;f8;17;2;20;;;;vpos;;vmixed;;r&#10;Definition&#10;    generate($content_view, $layout_view, $title, $data = null)&#10;&#10;Description&#10;     Generates web page.;;d1,18;;b1,0;;mcontent_view;;playout_view;;ptitle;;pdata;;p">
</treenode>
</treenode>
<treenode node="XfdfFile;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\XfdfFile.php;f0;15;1;108;;;;vpos;;vFile;;c;;r&#10;Definition&#10;    class XfdfFile extends File&#10;&#10;Description&#10;     XfdfFile;;d0,16;;b0,0;;m">
<treenode node="XFDF_FOOTER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\XfdfFile.php;f9;25;21;25;;;;vpos;;v;;r&lt;&lt;&lt;FDF&#10;&lt;/fields&gt;&#10;&lt;/xfdf&gt;&#10;FDF;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="XFDF_HEADER;PHP:PHP Word;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\XfdfFile.php;f9;18;21;18;;;;vpos;;v;;r&lt;&lt;&lt;FDF&#10;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;xfdf xmlns=&quot;http://ns.adobe.com/xfdf/&quot; xml:space=&quot;preserve&quot;&gt;&#10;&lt;fields&gt;&#10;FDF;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\XfdfFile.php;f11;39;5;87;;;;vpos;;v;;r&#10;Definition&#10;    __construct($data, $suffix = null, $prefix = null, $directory = null, $encoding = &apos;UTF-8&apos;)&#10;&#10;Description&#10;     Constructor&#10;&#10;Parameters:&#10;    array $data - the form data as name =&gt; value&#10;    string|null $suffix - the optional suffix for the tmp file&#10;    string|null $suffix - the optional prefix for the tmp file&#10;    string|null $directory - directory where the file should be created&#10;    string|null $encoding - of the data;;d4,40;;b1,0;;marray $data;;pstring|null $suffix;;pstring|null $suffix;;pstring|null $directory;;pstring|null $encoding;;p">
</treenode>
<treenode node="writeFields;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\src\XfdfFile.php;f14;96;5;107;;;;vpos;;v;;r&#10;Definition&#10;    writeFields($fp, $fields)&#10;&#10;Description&#10;     Write the fields to the given filepointer&#10;&#10;Parameters:&#10;    int $fp&#10;    mixed[] $fields - an array of field values;;d4,97;;b2,0;;mint $fp;;pmixed[] $fields;;p">
</treenode>
</treenode>
<treenode node="XfdfFileTest;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\XfdfFileTest.php;f0;3;1;28;;;;vpos;;vTestCase;;c;;r;;d0,4;;b0,0;;m">
<treenode node="testXfdfFileCreation;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\tests\XfdfFileTest.php;f11;5;5;27;;;;vpos;;v;;r;;d43,5;;b1,0;;m">
</treenode>
</treenode>
<treenode node="XML_Helper;PHP:Class Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\xml_helper.php;f0;4;1;61;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="getProperties;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;45;5;56;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\xml_helper.php;f15;49;5;60;;;;vpos;;varray;;r&#10;Definition&#10;    getProperties($xml)&#10;&#10;Description&#10;     Gets properties from XML.;;d4,50;;b1,5;;mxml;;p">
</treenode>
<treenode node="loadXml;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\NewFile.php;f15;15;2;38;;C:\wamp\wamp64\www\vhost_portalbsu\application\core\helpers\xml_helper.php;f15;15;2;42;;;;vpos;;vxml;;r&#10;Definition&#10;    loadXml($server, $file, $filter = null, $username = null, $password = null)&#10;&#10;Description&#10;     Loads XML from URL.;;d1,16;;b1,5;;mserver;;pfile;;pfilter;;pusername;;ppassword;;p">
</treenode>
</treenode>
<treenode node="CAS_autoload;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS\Autoload.php;f0;23;1;73;;;;vpos;;vbool;;r&#10;Definition&#10;    CAS_autoload($class)&#10;&#10;Description&#10;     Autoload a class&#10;&#10;Parameters:&#10;    string $class - Classname to load;;d0,24;;b0,0;;mstring $class;;p">
</treenode>
<treenode node="getRegion;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\views\ajax\NewFile.php;f0;4;1;11;;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\web\ajax\NewFile.php;f0;4;1;11;;;;vpos;;v;;r;;d26,72;;b0,0;;mcode;;p">
</treenode>
<treenode node="gettmpdir;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\cas\source\CAS.php;f0;247;1;252;;;;vpos;;v;;r&#10;Definition&#10;    gettmpdir()&#10;&#10;Description&#10;     The default directory for the debug file under Unix.;;d21,247;;b0,0;;m">
</treenode>
<treenode node="includeFile;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\vendors\php-pdftk\vendor\composer\ClassLoader.php;f0;441;1;444;;;;vpos;;v;;r&#10;Definition&#10;    includeFile($file)&#10;&#10;Description&#10;     Scope isolated include.;;d0,442;;b0,0;;mfile;;p">
</treenode>
<treenode node="stepError;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\views\main.php;f1;135;2;140;;;;vpos;;v;;r;;d1,136;;b0,0;;mrequired;;p">
</treenode>
<treenode node="stepSuccess;PHP:Function Name;C:\wamp\wamp64\www\vhost_portalbsu\application\frontend\views\main.php;f1;124;2;134;;;;vpos;;v;;r;;d1,125;;b0,0;;mcount_msg;;pcount;;p">
</treenode>
</phptree>
</codestructure>